{"version":3,"sources":["/@back@/wsp/views/item/itemImg.tsx"],"names":["BaseElement","BASIS","installSrcViewFileDrop","REG","DOM","JSX","DOMSH","WSP","ImgSize","SRC","ItemImg","[object Object]","init","this","reg","findReg","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","env","_pending","appendChild","createElement","label","img","src","getStreamUrl","transform","hidden","onerror","ev","findHost","showMainDisplayTag","setCustomMsg","onload","size","î","newInit","place","eventsMgr","on","msg","srcRef","longDesc","getStreamStampedUrl","wsp","itemType","getMainStreamSrcUri","srcDt","show","setHidden","registerSkin","customElements","define"],"mappings":"OAAQA,YAAaC,UAA+B;OAChCC,2BAAuB;OAC7BC,QAAI;OAEVC,IAAKC,QAAI;OACTC,UAAM;OACYC,QAAI;OACtBC,YAAwB;OACxBC,QAAI;OAiBN,MAAOC,gBAAgBV,YAO5BW,YAAYC,MACXC,KAAKC,IAAMD,KAAKE,QAAQH;AACxB,MAAMI,GAAKH,KAAKI,aAAaX,MAAMY;AACnCL,KAAKM,oBAAoBN,KAAKO,UAAWR;AACzCV,uBAAuBW,KAAKC,IAAKD;AACjC,MAAMQ,IAAMR,KAAKC,IAAIO;AACrBR,KAAKS,SAAWN,GAAGO,YAAYlB,IAAAmB,cAAA,QAAA,CAAOC,MAAM;AAC5CZ,KAAKa,IAAMrB,IAAAmB,cAAA,MAAA,CAAKG,IAAKd,KAAKe,aAAaf,KAAKC,IAAIO,IAAKT,KAAKiB,WAAYC,OAAO;AAC7EjB,KAAKa,IAAIK,QAAU,SAAkCC,IACpD1B,MAAM2B,SAAkBpB,MAAMqB,mBAAmB;AACjD5B,MAAM2B,SAAkBpB,MAAMS,SAASa,aAAa,mBAAoB;AAEzEtB,KAAKa,IAAIU,OAAS,SAAkCJ,IACnD1B,MAAM2B,SAAkBpB,MAAMqB,mBAAmB;AACjD5B,MAAM2B,SAAkBpB,MAAMS,SAASa,aAAa;AAGrD,GAAIvB,KAAKyB,KAAMrB,GAAGO,YAAYlB,IAAAmB,cAAChB,QAAO,CAAA8B,IAAIrC,MAAMsC,QAAQ3B,KAAKyB,KAAMxB,KAAKC,MAAOD,KAAKa;KAC/EV,GAAGO,YAAYV,KAAKa;AAEzBb,KAAKqB,mBAAmB;AAGxBb,IAAImB,MAAMC,UAAUC,GAAG,eAAiBC,MACvC,GAAIlC,IAAImC,OAAOvB,IAAIwB,YAAcpC,IAAImC,OAAOD,KAAM,CACjD9B,KAAKqB,mBAAmB;AACxBrB,KAAKa,IAAIC,IAAMd,KAAKe,aAAaf,KAAKC,IAAIO,IAAKT,KAAKiB,cAKvDlB,aAAaU,IAAiBQ,WAC7B,OAAOtB,IAAIuC,oBAAoBzB,IAAI0B,IAAK1B,IAAI2B,SAASC,oBAAoB5B,IAAIwB,UAAWxB,IAAIwB,SAASK,MAAOrB,WAGnGlB,mBAAmBwC,MAC5B/C,IAAIgD,UAAUvC,KAAKS,SAAU6B;AAC7B/C,IAAIgD,UAAUvC,KAAKa,KAAMyB,OAK3BhD,IAAIW,IAAIuC,aAAa,eAAgB,EAAsB;AAqC3DC,eAAeC,OAAO,eAAgB7C","sourcesContent":["import {BaseElement, BASIS, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {IItemUiEnv, installSrcViewFileDrop} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JWspUriChangeMsg, WSP} from \"lib/wsp/wsp\";\nimport {ImgSize, OImgSizeConfig} from \"back/wsp/widgets/imgSize\";\nimport {SRC} from \"lib/wsp/src\";\n\n/**\n * View d'un item sous forme d'une image.\n *\n * Config attributes:\n */\nexport interface OItemImgInit extends OSkinableInit {\n\treg?: IReg<IItemUiEnv>\n\ttransform?: string,\n\tsize: OImgSizeConfig\n}\n\nexport interface ItemImg extends BaseElement {\n\tinitialize(init: OItemImgInit): this;\n}\n\nexport class ItemImg extends BaseElement implements IView {\n\treg: IReg<IItemUiEnv>;\n\n\timg: HTMLImageElement;\n\n\tprotected _pending: MsgLabel;\n\n\t_initialize(init: OItemImgInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tinstallSrcViewFileDrop(this.reg, this);\n\t\tconst env = this.reg.env;\n\t\tthis._pending = sr.appendChild(<c-msg label=\"...\"/>) as MsgLabel;\n\t\tthis.img = <img src={this.getStreamUrl(this.reg.env, init.transform)} hidden=\"true\"/> as HTMLImageElement;\n\t\tthis.img.onerror = function (this: HTMLImageElement, ev: Event) {\n\t\t\tDOMSH.findHost<ItemImg>(this).showMainDisplayTag(false);\n\t\t\tDOMSH.findHost<ItemImg>(this)._pending.setCustomMsg(\"Non disponible\", \"error\");\n\t\t};\n\t\tthis.img.onload = function (this: HTMLImageElement, ev: Event) {\n\t\t\tDOMSH.findHost<ItemImg>(this).showMainDisplayTag(true);\n\t\t\tDOMSH.findHost<ItemImg>(this)._pending.setCustomMsg(null);\n\t\t};\n\n\t\tif (init.size) sr.appendChild(<ImgSize î={BASIS.newInit(init.size, this.reg)}>{this.img}</ImgSize>);\n\t\telse sr.appendChild(this.img);\n\n\t\tthis.showMainDisplayTag(false);\n\n\t\t// Listener sur les changements de la ressource\n\t\tenv.place.eventsMgr.on(\"wspUriChange\", (msg: JWspUriChangeMsg) => {\n\t\t\tif (SRC.srcRef(env.longDesc) === SRC.srcRef(msg)) {\n\t\t\t\tthis.showMainDisplayTag(false);\n\t\t\t\tthis.img.src = this.getStreamUrl(this.reg.env, init.transform);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetStreamUrl(env: IItemUiEnv, transform: string) {\n\t\treturn WSP.getStreamStampedUrl(env.wsp, env.itemType.getMainStreamSrcUri(env.longDesc), env.longDesc.srcDt, transform)\n\t}\n\n\tprotected showMainDisplayTag(show: boolean) {\n\t\tDOM.setHidden(this._pending, show);\n\t\tDOM.setHidden(this.img, !show);\n\t}\n}\n\n\nREG.reg.registerSkin(\"wsp-item-img\", 1, /* language=CSS */ `\n\t:host {\n\t  display: flex;\n\t  min-height: 0;\n\t  min-width: 0;\n\t  flex: 1;\n\t  flex-direction: column;\n\t  justify-content: center;\n\t  padding: 1px;\n  }\n\n  :host > img {\n\t  width: fit-content;\n\t  height: fit-content;\n\t  max-width: 100%;\n\t  max-height: 100%;\n\t  object-fit: contain;\n\t  align-self: center;\n  }\n\n  img {\n\t  background-image: linear-gradient(to right, rgba(192, 192, 192, 0.75), rgba(192, 192, 192, 0.75)),\n\t  linear-gradient(to right, black 50%, white 50%),\n\t  linear-gradient(to bottom, black 50%, white 50%);\n\t  background-blend-mode: normal, difference, normal;\n\t  background-size: 1em 1em;\n\t}\n\n\twsp-imgsize {\n\t\tflex: 1;\n\t}\n\n  c-msg {\n\t  flex: 0 0 auto;\n  }\n`);\n\ncustomElements.define(\"wsp-item-img\", ItemImg);\n"]}