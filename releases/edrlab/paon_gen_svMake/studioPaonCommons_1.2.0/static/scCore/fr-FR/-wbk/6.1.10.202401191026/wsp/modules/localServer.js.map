{"version":3,"sources":["/@back@/wsp/modules/localServer.tsx"],"names":["REG","WSP","SRC","SrcAction","Desk","GenAction","LabelAsyncArea","DOM","JSX","WspArea","BaseElement","FileSystemPath","MsgLabel","MxFormElement","DOMSH","IO","ERROR","POPUP","refUriFromShortDescCtx","wsp","ctx","shortDesc","shortDescs","itemType","wspMetaUi","getItemType","itModel","getMainStreamSrcUri","srcUri","URI_ROOT","externalEditor","setLabel","setVisible","env","reg","electron","universe","config","local","backEnd","setGroup","setExecute","async","srcFilePath","fetchFilePath","uiRoot","window","postMessage","type","path","location","origin","revealInFs","copyLocalPath","navigator","clipboard","writeText","showNotifInfo","emitter","RevealGenAction","[object Object]","id","super","this","_label","_icon","_description","_hideForStatuses","genInfo","localPathPub","isVisible","ev","uiContext","WspFolderContentInputArea","setDescription","name","infoWspProvider","fetchInfoWspProvider","wspServer","inputFile","createElement","InputLocalPath","î","directory","canEditPath","defaultPath","defaultContentPath","inputElt","placeholder","title","WspFolderContentArea","asSubField","_infoWspField","areaCtx","Object","assign","buildControlLabel","elt","buildBody","addClass","style","marginInlineStart","infoWsp","infoWspError","label","ellipsis","class","level","WspFolderGenArea","initLocalServerReg","addToList","LEVELAUTH_CLIENT","init","_params","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","appendChild","oninput","onInputChange","setAttrBool","_inputBtn","ui-context","icon","onclick","onSelectPath","call","_initializeForm","value","_value","disabled","val","self","findHost","selectReply","sendMessage","log","msg","paths","length","_refresh","multiple","split","Array","isArray","join","parent","root","indeterminate","registerSkin","customElements","define"],"mappings":"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","sourcesContent":["import {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {IWspUiEnv, Wsp, WSP} from \"lib/wsp/wsp\";\nimport {SRC} from \"lib/wsp/src\";\nimport {SrcAction} from \"back/wsp/actions/srcActions\";\nimport {IShortDescCtx} from \"lib/wsp/item\";\nimport {Desk} from \"lib/commons/desk\";\nimport {IChainEnv} from \"lib/wsp/chain\";\nimport {IPubCtx} from \"lib/wsp/wspMetaUi\";\nimport {GenAction} from \"back/wsp/views/gen/genActions\";\nimport {IControlLabelContext, LabelAsyncArea} from \"lib/commons/areas\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {WspArea} from \"back/wsp/dialogs/wspPropsAreas\";\nimport {BaseElement, FileSystemPath, MsgLabel, OMsgLabelInit} from \"back/commons/basis\";\nimport {MxFormElement, OFormElementInit} from \"lib/commons/forms\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IO} from \"lib/commons/io/io\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {POPUP} from \"back/commons/widgets/popups\";\n\nfunction refUriFromShortDescCtx(wsp: Wsp, ctx: IShortDescCtx): string {\n\tlet shortDesc = ctx.shortDescs[0];\n\tif (shortDesc) {\n\t\tconst itemType = wsp.wspMetaUi.getItemType(shortDesc.itModel);\n\t\treturn itemType.getMainStreamSrcUri(shortDesc) || shortDesc.srcUri;\n\t} else {\n\t\treturn SRC.URI_ROOT;\n\t}\n}\nconst externalEditor = new SrcAction<IShortDescCtx>()\n\t.setLabel(\"Ouvrir dans l'éditeur par défaut du système\")\n\t.setVisible((ctx) => {\n\t\tconst {env} = ctx.reg;\n\t\treturn Desk.electron && env.universe.config.local && env.wsp.backEnd == 'fs';\n\t})\n\t.setGroup(\"explorer\")\n\t.setExecute(async function (this: SrcAction<IShortDescCtx>, ctx) {\n\t\tconst {env} = ctx.reg;\n\t\tconst srcFilePath = await WSP.fetchFilePath(env.wsp, env.uiRoot, refUriFromShortDescCtx(env.wsp, ctx));\n\t\twindow.postMessage({type: \"client:modules:localServer:open\", path: srcFilePath}, location.origin);\n\t});\n\n\nconst revealInFs = new SrcAction<IShortDescCtx>()\n\t.setLabel(\"Révéler dans le système de fichiers\")\n\t.setVisible((ctx) => {\n\t\tconst {env} = ctx.reg;\n\t\treturn Desk.electron && env.universe.config.local && env.wsp.backEnd == 'fs';\n\t})\n\t.setGroup(\"explorer\")\n\t.setExecute(async function (this: SrcAction<IShortDescCtx>, ctx) {\n\t\tconst {env} = ctx.reg;\n\t\tconst srcFilePath = await WSP.fetchFilePath(env.wsp, env.uiRoot, refUriFromShortDescCtx(env.wsp, ctx));\n\t\twindow.postMessage({type: \"client:modules:localServer:reveal\", path: srcFilePath}, location.origin);\n\t});\n\nconst copyLocalPath = new SrcAction<IShortDescCtx>()\n\t.setLabel(\"Copier le chemin du système de fichiers\")\n\t.setVisible((ctx) => {\n\t\tconst {env} = ctx.reg;\n\t\treturn env.universe.config.local && env.wsp.backEnd == 'fs';\n\t})\n\t.setGroup(\"clipboard\")\n\t.setExecute(async function (this: SrcAction<IShortDescCtx>, ctx) {\n\t\tconst {env} = ctx.reg;\n\t\tconst srcFilePath = await WSP.fetchFilePath(env.wsp, env.uiRoot, refUriFromShortDescCtx(env.wsp, ctx));\n\t\tawait navigator.clipboard.writeText(srcFilePath);\n\t\tPOPUP.showNotifInfo(\"Le chemin du fichier a été copié dans le presse-papier.\", ctx.emitter);\n\t});\n\n/** Gen : action \"révéler */\nclass RevealGenAction extends GenAction {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"reveal\");\n\t\tthis._label = \"Révéler\";\n\t\tthis._icon = \"/@skin@/wsp/views/generators/reveal.svg\";\n\t\tthis._description = Desk.electron ? \"Révéler dans le système de fichier\" : \"Copier le chemin du répertoire de génération dans le presse-papier\";\n\t\tthis._hideForStatuses = \"null\";//failed,\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\treturn ctx.genInfo.localPathPub && ctx.reg.env.universe.config.local && super.isVisible(ctx);\n\t}\n\n\texecute(ctx: IPubCtx, ev?: Event): any | 'noPreventDefault' {\n\t\tif (Desk.electron)\n\t\t\twindow.postMessage({type: \"client:modules:localServer:reveal\", path: ctx.genInfo.localPathPub}, location.origin);\n\t\telse{\n\t\t\tnavigator.clipboard.writeText(ctx.genInfo.localPathPub);\n\t\t\tPOPUP.showNotifInfo(\"Le chemin de génération a été copié dans le presse-papier.\", ctx.uiContext)\n\t\t}\n\t}\n}\n\n/**\n * WSP FS create : specif du répertoire des contenus de l'atelier\n */\n\nclass WspFolderContentInputArea extends LabelAsyncArea<IControlLabelContext & IRegPointer<IChainEnv>> {\n\n\tconstructor() {\n\t\tsuper(\"folderContent\");\n\t\tthis.setLabel(\"Contenus\");\n\t\tthis.setDescription(\"Répertoire des contenus de l'atelier\");\n\t}\n\n\tisVisible(ctx: IControlLabelContext & IRegPointer<IChainEnv>): boolean {\n\t\treturn ctx.reg.env.universe.config.local && ctx.reg.env.universe.config.backEnd == 'fs' && super.isVisible(ctx);\n\t}\n\n\tasync _loadControl(ctx: IControlLabelContext & IRegPointer<IChainEnv>, name: string): Promise<HTMLElement> {\n\t\tconst infoWspProvider = await WSP.fetchInfoWspProvider(ctx.reg.env.universe.wspServer);\n\t\tconst inputFile = <InputLocalPath î={{\n\t\t\tname,\n\t\t\tdirectory: true,\n\t\t\tcanEditPath: null,\n\t\t\tdefaultPath: infoWspProvider.defaultContentPath,\n\t\t} as OInputLocalPath}/> as InputLocalPath;\n\t\tinputFile.inputElt.placeholder = \"Chemin par défaut\";\n\t\tinputFile.inputElt.title = infoWspProvider.defaultContentPath;\n\t\treturn inputFile;\n\t}\n\n}\n\n/** WSP FS : affichage du répertoire des contenus de l'atelier */\nclass WspFolderContentArea extends WspArea {\n\tprotected _infoWspField: 'content' | 'gen';\n\n\tconstructor(id = 'content', protected asSubField = false) {\n\t\tsuper(id);\n\t\tthis.setLabel(\"Contenus\");\n\t\tthis.setDescription(\"Répertoire des contenus de l'atelier\");\n\t\tthis._infoWspField = 'content';\n\t}\n\n\tisVisible(ctx: IRegPointer<IWspUiEnv>): boolean {\n\t\treturn ctx.reg.env.universe.config.local && ctx.reg.env.wsp.backEnd == 'fs' && super.isVisible(ctx);\n\t}\n\n\tbuildBody(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>): HTMLElement {\n\t\tconst areaCtx: IControlLabelContext & IRegPointer<IWspUiEnv> = Object.assign({}, ctx, {buildControlLabel: !this.asSubField});\n\t\tconst elt = super.buildBody(areaCtx);\n\t\tif (this.asSubField) {\n\t\t\tDOM.addClass(elt, \"allCols\");\n\t\t\telt.style.marginInlineStart = '2em';\n\t\t}\n\t\treturn elt;\n\t}\n\n\t_buildControl(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>, name: string): HTMLElement {\n\t\tlet infoWsp = ctx.reg.env.wsp ? (ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError) : null;\n\t\tif (infoWsp && infoWsp[this._infoWspField]) return <FileSystemPath î={{\n\t\t\tlabel: infoWsp[this._infoWspField],\n\t\t\tellipsis: !this.asSubField,\n\t\t\ttype: \"dir\",\n\t\t}} class={this.asSubField ? 'small' : null}/>\n\t\telse\n\t\t\treturn <MsgLabel î={{label: \"Information non disponible\", level: \"info\"} as OMsgLabelInit}/> as MsgLabel;\n\t}\n\n}\n\nclass WspFolderGenArea extends WspFolderContentArea {\n\n\tconstructor(id = 'gen', protected asSubField = false) {\n\t\tsuper(id, asSubField);\n\t\tthis.setLabel(\"Générations\");\n\t\tthis.setDescription(\"Répertoire de génération de l'atelier\");\n\t\tthis._infoWspField = 'gen';\n\t}\n\n\tisVisible(ctx: IRegPointer<IWspUiEnv>): boolean {\n\t\treturn ctx.reg.env.universe.config.local && super.isVisible(ctx);\n\t}\n}\n\n\n/**\n * Init du registre spécifique au univers chain \"local\"\n * \t\tinit du registre **métier** de l'univers\n */\nexport function initLocalServerReg(reg: IReg<IChainEnv>) {\n\t/** srcNode - explorer */\n\tif(Desk.electron) {\n\t\treg.addToList(\"actions:wsp:shortDesc\", \"externalEditor\", REG.LEVELAUTH_CLIENT, externalEditor, 100);\n\t\treg.addToList(\"actions:itemFolder:shortDesc\", \"externalEditor\", REG.LEVELAUTH_CLIENT, externalEditor, 100);\n\t\treg.addToList(\"actions:wsp:shortDesc\", \"revealInFs\", REG.LEVELAUTH_CLIENT, revealInFs, 100);\n\t\treg.addToList(\"actions:itemFolder:shortDesc\", \"revealInFs\", REG.LEVELAUTH_CLIENT, revealInFs, 100);\n\t}\n\treg.addToList(\"actions:wsp:shortDesc\", \"copyLocalPath\", REG.LEVELAUTH_CLIENT, copyLocalPath, 100);\n\treg.addToList(\"actions:itemFolder:shortDesc\", \"copyLocalPath\", REG.LEVELAUTH_CLIENT, copyLocalPath, 100);\n\n\n\t/** Gen */\n\treg.addToList(\"actions:gen\", \"reveal\", 1, new RevealGenAction(), 30);\n\n\t/** Wsps */\n\tREG.reg.addToList('wspProps:create:fs', 'localPaths', 1, new WspFolderContentInputArea(), 21);\n\tREG.reg.addToList('wspProps:edit:fs:infos', 'folderContent', 1, new WspFolderContentArea(), 21);\n\tREG.reg.addToList('wspProps:edit:fs:infos', 'folderGen', 1, new WspFolderGenArea(), 22);\n\n\tREG.reg.addToList('wspProps:remove:fs', 'folderContent', 1, new WspFolderContentArea(null, true), 12);\n\tREG.reg.addToList('wspProps:remove:commons', 'folderGen', 1, new WspFolderGenArea(null, true), 22);\n\n}\n\n/**\n * Input pour retourner un chemin local en interrogeant le client Electron\n */\nexport interface OInputLocalPath extends OFormElementInit {\n\t/** Sélection de répertoire au lieu de fichier */\n\tdirectory?: boolean;\n\t/** Sélection multiple */\n\tmultiple?: boolean;\n\t/** Extension autorisée  {@see https://www.electronjs.org/docs/api/structures/file-filter}*/\n\tfilters: { name: string, extensions: string[]}[];\n\t/** Chemin de base utilisé pour initialiser le widget de sélection en cas d'absence de value */\n\tdefaultPath?: string;\n\t/** Edition libre du path dans la zone input :\n\t * \t\tpar défaut, false sur electron, true autrement\n\t */\n\tcanEditPath?: boolean|null;\n}\n\nexport class InputLocalPath extends MxFormElement(BaseElement) {\n\tprotected _params: OInputLocalPath;\n\tprotected reg: IReg<any>;\n\n\tpublic inputElt: HTMLInputElement;\n\n\tprotected _inputBtn?: Button;\n\n\tprotected _value: string | string[];\n\n\t_initialize(init: OInputLocalPath) {\n\t\tthis._params = init;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.inputElt = sr.appendChild(<input type=\"text\" name=\"customInputPath\" oninput={this.onInputChange}/>) as HTMLInputElement;\n\t\tDOM.setAttrBool(this.inputElt, \"readonly\", this._params.canEditPath==null ? Desk.electron : this._params.canEditPath);\n\t\tif(Desk.electron) this._inputBtn = sr.appendChild(<c-button ui-context=\"bar\" icon={this._params.directory ? '/@skin@/commons/icons/choiceLocalDir.svg' : '/@skin@/commons/icons/choiceLocalFile.svg'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={this._params.directory ? 'Choisir un répertoire...' : 'Choisir un fichier...'} onclick={this.onSelectPath}/>) as Button;\n\n\t\tthis.onInputChange.call(this.inputElt);\n\t\tthis._initializeForm(init);\n\t}\n\n\tget value(): string | string[] {\n\t\treturn this._value;\n\t}\n\n\tset value(path: string | string[]) {\n\t\tthis._value = path;\n\t}\n\n\tget disabled(): boolean {\n\t\treturn super.disabled;\n\t}\n\n\tset disabled(val) {\n\t\tthis.inputElt.disabled = val;\n\t\tif(this._inputBtn) this._inputBtn.disabled = val;\n\t\tsuper.disabled = val;\n\t}\n\n\tasync onSelectPath(this: HTMLButtonElement) {\n\t\tconst self = DOMSH.findHost<InputLocalPath>(this);\n\n\t\tconst selectReply = await IO.sendMessage(Object.assign({ type: \"client:modules:localServer:selectPath\" }, self._params), location.origin, 0);\n\t\tif (selectReply.type == 'error') ERROR.log(selectReply.msg);\n\t\telse {\n\t\t\tif (!selectReply.paths) return;\n\n\t\t\telse if (selectReply.paths.length == 1) self._value = selectReply.paths[0];\n\t\t\telse self._value = selectReply.paths;\n\n\t\t\tself._refresh();\n\t\t}\n\t}\n\n\tonInputChange(this: HTMLInputElement) {\n\t\tconst self = DOMSH.findHost<InputLocalPath>(this);\n\n\t\tif (!this.value) self._value = null;\n\t\telse if (self._params.multiple) self._value = this.value.split(',');\n\t\telse self._value = this.value;\n\t}\n\n\tprotected _refresh() {\n\t\tif (!this._value) this.inputElt.value = \"\";\n\t\telse if (Array.isArray(this._value)) this.inputElt.value = this._value.join(',');\n\t\telse this.inputElt.value = this._value;\n\t}\n\n\textractJson(parent: Dict<any>): boolean {\n\t\tif (!this.name) return false;\n\t\tthis.value = parent[this.name];\n\t}\n\n\tfillJson(parent: any, root: any): void {\n\t\tif (!this.name || this.indeterminate) return;\n\t\tparent[this.name] = this.value;\n\t}\n}\n\nREG.reg.registerSkin(\"c-input-local-path\", 1, /* language=CSS */`\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: row;\n\t}\n\t\t\n\tinput[type=text] {\n\t\tflex:1;\n\t\tmin-width: 0;\n\t  background-color: var(--form-bgcolor);\n\t  color: var(--form-color);\n\t  border: 1px solid var(--border-color);\n\t  text-overflow: ellipsis;\n\t\tmargin: 0 .5em 0 0;\n\t}\n\t\n\tinput:disabled {\n\t  background-color: transparent;\n  }\n\n  input:invalid{\n\t  border-color: var(--error-color);\n  }\n\n  input[readonly] {\n\t  background-color: transparent;\n\t  border: none;\n\t  cursor: auto;\n  }\n`);\n\ncustomElements.define(\"c-input-local-path\", InputLocalPath);"]}