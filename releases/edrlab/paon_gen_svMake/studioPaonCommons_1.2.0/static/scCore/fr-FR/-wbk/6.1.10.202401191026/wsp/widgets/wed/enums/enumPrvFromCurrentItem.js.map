{"version":3,"sources":["/@back@/wsp/widgets/wed/enums/enumPrvFromCurrentItem.tsx"],"names":["DOM","BoxEnumEntry","WedEnumProvider","EWspChangesEvts","EventMgr","SRC","XA","async","jslibAsyncInit","jsEndPoint","elt","reg","registerSvc","tpl","widget","wedMgr","wedlet","cache","getDatasForModel","enumPrv","EnumPrvFromCurrentItem","[object Object]","super","this","onEnumChange","initing","init","itemSrcUri","_a","env","longDesc","srcUri","itemLongDesc","doc","docHolder","getDocument","msgItemUndef","getAttribute","hasAttribute","contextualXpathBlackListExpEnabled","createExpression","prefix","lookupNamespaceURI","contextualXpathBlackListExpVisible","xslUrl","itemType","datas","wspResUrl","resolve","xsl","fetchDom","xslt","XSLTProcessor","importStylesheet","e","console","error","transform","place","_wspUriChange","msg","from","wspCd","wsp","code","type","r","isSubUriOrEqual","u","resetActions","emit","eventsMgr","on","_needReset","listeners","removeListener","_actions","setEnabled","setLabel","undefined","dom","clearParameters","entry","setParameter","transformToDocument","buildActions","documentElement","key","currentBlackListValuesVisible","has","currentBlackListValuesEnabled","filter","makeEnum","refreshBlackListValues","getActions","action","getAction","ctx","override","buttonNode","classList","add","noVirtualWedlet","isVirtual","wedParent","findDomContainer","wedAnchor","res","evaluate","XPathResult","ORDERED_NODE_ITERATOR_TYPE","clear","Set","n","iterateNext","textContent"],"mappings":"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","sourcesContent":["import {IReg} from 'lib/commons/registry';\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IWspUiEnv, JWspUriChangeMsg} from \"lib/wsp/wsp\";\nimport {IAction} from \"lib/commons/actions\";\nimport {IEndPoint} from \"lib/commons/io/io\";\nimport {BoxEnumEntry, IBoxEnumEltWedlet, IBoxEnumProvider, WedEnumProvider} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {EWspChangesEvts, IWspXmlHouse, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {JSrcFields, SRC} from \"lib/wsp/src\";\nimport {XA} from \"lib/commons/xml/xAddr\";\n\n/**\n * Appelé au chargement dans le WED :\n * <jslib src=\":back:wsp/widgets/wed/enums/enumPrvFromCurrentItem.js\"/>\n * Déclare un svc 'wsp-wed-enumprv-currentItem'\n * qui doit être déclaré dans le widget Wed. Exemple :\n * <box-input-enum\n * \t\tenumSvc=\"wsp-wed-enumprv-currentItem\" transform?=\"\"\n * \t\txslUrl?=\"\" msgItemUndef=\"\" contextualXpathBlackListExpVisible?=\"./title\" contextualXpathBlackListExpEnabled?=\"./title\"/>\n */\nexport async function jslibAsyncInit(jsEndPoint: IEndPoint, elt: Element, reg: IReg<any>) {\n\treg.registerSvc('wsp-wed-enumprv-currentItem', 1, (tpl: Element, widget: IBoxEnumEltWedlet) => {\n\t\tconst wedMgr = widget.wedlet.wedMgr;\n\t\tconst cache = wedMgr.getDatasForModel(tpl);\n\t\tlet enumPrv: EnumPrvFromCurrentItem = cache['wsp-wed-enumprv-currentItem'];\n\t\tif (!enumPrv) {\n\t\t\tenumPrv = new EnumPrvFromCurrentItem(tpl, wedMgr);\n\t\t\tcache['wsp-wed-enumprv-currentItem'] = enumPrv;\n\t\t}\n\t\treturn enumPrv;\n\t});\n}\n\n/**\n * Fournisseur d'enum issu d'un item\n * <xxx transform?=\"\" xslUrl?=\"\"  msgItemUndef=\"\" contextualXpathBlackListExpVisible?=\"./title\" contextualXpathBlackListExpEnabled?=\"./title\"/>\n */\nexport class EnumPrvFromCurrentItem extends WedEnumProvider implements IBoxEnumProvider {\n\tonEnumChange = new EventMgr<() => void>();\n\tprotected initing: Promise<void>;\n\tprotected reg: IReg<IWspUiEnv & IItemUiEnv>;\n\tprotected msgItemUndef: string;\n\tprotected transform?: string;\n\tprotected xslUrl?: IEndPoint;\n\t/** Si null chargement de la xsl en erreur*/\n\tprotected xslt?: XSLTProcessor | null;\n\tprotected contextualXpathBlackListExpVisible?: XPathExpression;\n\tprotected contextualXpathBlackListExpEnabled?: XPathExpression;\n\tprotected currentBlackListValuesVisible?: Set<String>;\n\tprotected currentBlackListValuesEnabled?: Set<String>;\n\n\tget itemSrcUri(): string {\n\t\treturn this.wedMgr?.reg.env.longDesc.srcUri\n\t}\n\n\tget itemLongDesc(): JSrcFields {\n\t\treturn this.wedMgr?.reg.env.longDesc;\n\t}\n\n\tconstructor(tpl: Element, protected wedMgr: WedMgr) {\n\t\tsuper(null);\n\t\tthis.reg = wedMgr.reg;\n\t\tthis.initing = this.init(tpl);\n\t}\n\n\tasync init(tpl: Element) {\n\t\ttry {\n\n\t\t\t//XPath\n\t\t\tconst doc = this.wedMgr.docHolder.getDocument();\n\t\t\tthis.msgItemUndef = tpl.getAttribute(\"msgItemUndef\") || \"L'item spécifiant les valeurs n'est pas défini\";\n\t\t\tif (tpl.hasAttribute(\"contextualXpathBlackListExpEnabled\")) this.contextualXpathBlackListExpEnabled = doc.createExpression(tpl.getAttribute(\"contextualXpathBlackListExpEnabled\"), (prefix) => DOM.lookupNamespaceURI(doc, prefix));\n\t\t\tif (tpl.hasAttribute(\"contextualXpathBlackListExpVisible\")) this.contextualXpathBlackListExpVisible = doc.createExpression(tpl.getAttribute(\"contextualXpathBlackListExpVisible\"), (prefix) => DOM.lookupNamespaceURI(doc, prefix));\n\n\t\t\t// Xsl\n\t\t\tif (tpl.hasAttribute(\"xslUrl\")) {\n\t\t\t\tthis.xslUrl = this.reg.env.itemType.datas.wspResUrl.resolve(tpl.getAttribute(\"xslUrl\"));\n\t\t\t\ttry {\n\t\t\t\t\tconst xsl = await this.xslUrl.fetchDom();\n\t\t\t\t\tthis.xslt = new XSLTProcessor();\n\t\t\t\t\tthis.xslt.importStylesheet(xsl);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthis.xslt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.transform = tpl.getAttribute('transform');\n\n\t\t\t// Listener sur les changements de l'item pointé\n\t\t\tconst place = this.reg.env.place;\n\t\t\tthis._wspUriChange = (msg: JWspUriChangeMsg, from) => {\n\t\t\t\tif (msg.wspCd !== this.reg.env.wsp.code) return;\n\t\t\t\tif ((msg.type === EWspChangesEvts.r && SRC.isSubUriOrEqual(msg.srcUri, this.itemSrcUri))\n\t\t\t\t\t|| (msg.type === EWspChangesEvts.u && this.itemSrcUri === msg.srcUri)) {\n\t\t\t\t\tif (this.resetActions()) this.onEnumChange.emit();\n\t\t\t\t}\n\t\t\t}\n\t\t\tplace.eventsMgr.on(\"wspUriChange\", this._wspUriChange);\n\n\t\t\tthis._needReset = () => {if (this.resetActions()) this.onEnumChange.emit()}\n\t\t\tplace.eventsMgr.on(\"wspLiveStateChange\", this._needReset);\n\t\t\tplace.eventsMgr.on(\"onConnectionRenewed\", this._needReset);\n\n\t\t\t//Cleanup sur fermeture éditeur.\n\t\t\tthis.wedMgr.listeners.on(\"killEditor\", () => {\n\t\t\t\tconst place = this.reg.env.place;\n\t\t\t\tplace.eventsMgr.removeListener(\"wspUriChange\", this._wspUriChange);\n\t\t\t\tplace.eventsMgr.removeListener(\"wspLiveStateChange\", this._needReset);\n\t\t\t\tplace.eventsMgr.removeListener(\"onConnectionRenewed\", this._needReset);\n\t\t\t});\n\n\t\t\tif (this._actions) {\n\t\t\t\t// Chargement prématuré d'attente => refresh\n\t\t\t\tthis.resetActions();\n\t\t\t\tthis.onEnumChange.emit();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.initing = null; //fin de l'init\n\t\t}\n\t}\n\n\tprotected _wspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') => void;\n\tprotected _needReset: () => void;\n\n\tmakeEnum() {\n\t\tif (this.xslt === null) {\n\t\t\t// xsl configurée mais echec à sa construction.\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Chargement du composant en erreur\")];\n\t\t\treturn;\n\t\t} else if (this.xslt === undefined) {\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Chargement en cours...\")];\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tlet dom = this.wedMgr.docHolder.getDocument();\n\t\t\tif (this.xslt) {\n\t\t\t\tthis.xslt.clearParameters();\n\t\t\t\tfor (const entry in this.itemLongDesc) {\n\t\t\t\t\tthis.xslt.setParameter(\"\", `item.${entry}`, (this.itemLongDesc as any)[entry]);\n\t\t\t\t}\n\t\t\t\tdom = this.xslt.transformToDocument(dom);\n\t\t\t}\n\t\t\tthis._actions = dom ? WedEnumProvider.buildActions(dom.documentElement, this) : [];\n\t\t} catch (e) {\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Construction de l'énumération en erreur\")];\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tisKeyVisible(key: string | null): boolean {\n\t\tif (this.currentBlackListValuesVisible?.has(key)) return false;\n\t\treturn true;\n\t}\n\n\tisKeyEnabled(key: string | null): boolean {\n\t\tif (this.currentBlackListValuesEnabled?.has(key)) return false;\n\t\treturn true;\n\t}\n\n\t/** Retourne true si un reset a eu lieu */\n\tprotected resetActions(): boolean {\n\t\tif (this._actions) {\n\t\t\tthis._actions = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetActions(widget: IBoxEnumEltWedlet, filter?: string): IAction<IBoxEnumEltWedlet>[] | Promise<IAction<IBoxEnumEltWedlet>[]> {\n\t\tthis.makeEnum();\n\t\tthis.refreshBlackListValues(widget);\n\t\treturn super.getActions(widget, filter);\n\t}\n\n\tgetAction(key: string, widget: IBoxEnumEltWedlet): IAction<IBoxEnumEltWedlet> | null | Promise<IAction<IBoxEnumEltWedlet> | null> {\n\t\tif (!this._actions) this.makeEnum();\n\t\tthis.refreshBlackListValues(widget);\n\t\tconst action = super.getAction(key, widget);\n\t\tif (action) return action;\n\t\t// FIXME : remonter une vraie erreur wed\n\t\tif (!action && key) return new BoxEnumEntry(null).setEnabled(false).setLabel((ctx) => `Valeur indéterminée : '${key}'`).override(\"initButtonNode\", (buttonNode: Element, ctx: Element) => {\n\t\t\tbuttonNode.classList.add(\"error\");\n\t\t});\n\t}\n\n\tprotected refreshBlackListValues(widget: IBoxEnumEltWedlet): void {\n\t\tif (this.contextualXpathBlackListExpEnabled || this.contextualXpathBlackListExpVisible) {\n\t\t\tconst wedMgr = widget.wedlet.wedMgr;\n\t\t\tlet noVirtualWedlet = widget.wedlet;\n\t\t\twhile (noVirtualWedlet?.isVirtual()) noVirtualWedlet = noVirtualWedlet.wedParent;\n\t\t\tconst from = noVirtualWedlet ? XA.findDomContainer(noVirtualWedlet.wedAnchor, wedMgr.docHolder.getDocument()) : wedMgr.docHolder.getDocument();\n\t\t\tif (this.contextualXpathBlackListExpEnabled) {\n\t\t\t\tconst res = this.contextualXpathBlackListExpEnabled.evaluate(from, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n\t\t\t\tif (this.currentBlackListValuesEnabled)\n\t\t\t\t\tthis.currentBlackListValuesEnabled.clear();\n\t\t\t\telse this.currentBlackListValuesEnabled = new Set<string>();\n\t\t\t\tfor (let n = res.iterateNext(); n; n = res.iterateNext()) this.currentBlackListValuesEnabled.add(n.textContent);\n\t\t\t}\n\t\t\tif (this.contextualXpathBlackListExpVisible) {\n\t\t\t\tconst res = this.contextualXpathBlackListExpVisible.evaluate(from, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n\t\t\t\tif (this.currentBlackListValuesVisible)\n\t\t\t\t\tthis.currentBlackListValuesVisible.clear();\n\t\t\t\telse this.currentBlackListValuesVisible = new Set<string>();\n\t\t\t\tfor (let n = res.iterateNext(); n; n = res.iterateNext()) this.currentBlackListValuesVisible.add(n.textContent);\n\t\t\t}\n\t\t}\n\t}\n}"]}