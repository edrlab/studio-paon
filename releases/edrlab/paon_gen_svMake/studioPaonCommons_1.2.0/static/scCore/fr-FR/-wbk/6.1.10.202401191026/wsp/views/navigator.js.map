{"version":3,"sources":["/@back@/wsp/views/navigator.tsx"],"names":["BASIS","BaseAreaViewAsync","REG","SpaceTreeDataSearch","ACTION","InfoCurrentItem","InfoHighlighItemSgn","InfoReqCurrentItem","ITEM","GridColTreeDef","DOM","JSX","SearchItems","SearchOr","SearchStatus","Grid","DOMSH","CellBuilderSrcIconCodeTitle","redrawSrcLine","ActionBtn","LANG","Navigator","[object Object]","this","shortDescs","emitter","grid","me","srcUri","_currentSrcUri","invalidateRows","rowKey","datas","findRowKeyBySrcUri","setSelectedRows","getOffset","srcUris","map","filter","ensureRowVisible","fetchSearchStart","init","super","_initialize","wsp","reg","env","infoBroker","itemHandlingReact","emptyTree","fields","getShortDescFields","facets","buildFacets","NavigatorFacetText","NavigatorDatas","initNavDatas","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","facetRoot","appendChild","createElement","id","navigatorBtns","Ã®","title","icon","uiContext","onclick","ev","doSearch","colDefs","primaryCol","setFlex","setMinWidth","setCellBuilder","wspMetaUi","srcUriItemsSortFn","secondaryCols","push","initialize","selType","columnDefs","dataHolder","hideHeaders","lineDrawer","skinOver","skinScroll","noResizableCol","emptyBody","lastError","undefined","label","level","defaultAction","defaultActionCtx","setAttrBool","Object","defineProperty","get","actions","actionContext","rect","getSelRect","addEventListener","spaceTree","findHost","getSelectedDatas","matches","dispatchEvent","CustomEvent","detail","bubbles","composed","linesNode","setAttribute","setShortDescTransferToDragSession","resetShortDescTransferToDragSession","accelKeyMgr","handleKeyboardEvent","hasAttribute","mergeLists","extractAttr","split","injectSepByGroup","getPref","focusActionables","buildButtons","_a","place","eventsMgr","on","_onUriChangeLstn","onUriChange","bind","buildUiFacets","lastDatas","area","getId","msg","from","connectedCallback","_highlightSgn","_assigned","req","dispatchInfo","setCurrentItem","addConsumer","removeConsumer","closed","removeListener","info","sgnPattern","assigned","row","line","parentLastDatas","buildLastDatas","ld","keys","length","registerSkin","customElements","define","nav","hideItemFolderContent","initSpTrDataSearch","code","wspCd","node","shouldHideEntry","deleteRowKey","refreshRowKey","NavigatorFacetBase","stamp","initSkin","select","asXml","f","dataKey","itemsExp","excludeTildeRoot","excludeAirItems","max","toString","afterUri","beforeEndFolder","buildReq","afterSrcUri","folderUri","path","initRoot","skin","root","Array","isArray","sk","installSkin","ser","toDom","getCriterions","findFlatParentElt","elt","append","class","buildTextInput","txt","textInput","value","trim","type","spellCheck","onchange","onChange","oninput","getTextCriterion","v","toLowerCase","regexp","escape4RegexpFuzzy","NavigatorFacetItState","showWarning","showValid","showTextFilter","buildErrorInput","errorCheck","checked","err","warningCheck","warn","_b","validCheck","valid","ctn","searchCrit","min","_c","pushIfDefined","FACET_itStates","initFacet","FACET_itProblems","FACET_itErrors"],"mappings":"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","sourcesContent":["import {BaseElement, BASIS} from \"back/commons/basis\";\nimport {BaseAreaViewAsync, IView, OBaseAreaViewInit} from \"lib/commons/views\";\nimport {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {IWspUiEnv, JWspUriChangeMsg, Wsp} from \"lib/wsp/wsp\";\nimport {ESrcField, JSrcFieldsTree, srcRef, srcUri} from \"lib/wsp/src\";\nimport {ISpaceTreeCtx, ISpaceTreeReq, SpaceTree, SpaceTreeDataSearch} from \"back/wsp/views/spaceTree\";\nimport {ILastDatasBuilder, JLastDatas} from \"lib/commons/lastDatas\";\nimport {AccelKeyMgr, ACTION, IAccelKeyMgrPointer, IAction} from \"lib/commons/actions\";\nimport {InfoCurrentItem, InfoHighlighItemSgn, InfoReqCurrentItem, IShortDescCtx, ITEM} from \"lib/wsp/item\";\nimport {GridColTreeDef} from \"back/commons/widgets/tree\";\nimport {GridColDef, IGrid, IGridDataRow, IGridLineDrawer} from \"back/commons/widgets/grid-core\";\nimport {IInfo, IInfoBroker, IInfoConsumer} from \"lib/commons/infos\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {ISearchCrit, SearchItems, SearchOr, SearchStatus} from \"lib/wsp/search\";\nimport {IActionable, IContextMenuActions, IFocusActionables} from \"back/commons/actionables\";\nimport {Grid} from \"back/commons/widgets/grid-tags\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {CellBuilderSrcIconCodeTitle, redrawSrcLine} from \"back/wsp/widgets/srcGridColumns\";\nimport {GridDataHolderJsonArray} from \"back/commons/widgets/grid-libs\";\nimport {ActionBtn, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {LANG} from \"lib/commons/lang\";\nimport {IWspXmlHouse, WspsLivePlace} from \"lib/wsp/wspsLive\";\n\n/**\n *\n */\nexport interface Navigator extends BaseElement, IView {\n\tinitialize(init: ONavigatorInit): this\n}\n\nexport interface ONavigatorInit extends OBaseAreaViewInit<IRegPointer<IWspUiEnv>> {\n\n\t/**\n\t * Construction du gestionnaire des facettes, responsable de construire la requete au server.\n\t * Par dÃ©faut, un NavigatorFacetText gÃ©nÃ©rique sera construit.\n\t */\n\tbuildFacets?: (nav: Navigator, fields: ESrcField[]) => Promise<INavigatorFacets>\n\n\t/** RedÃ©finition de la colonne primaire. */\n\tprimaryCol?: GridColTreeDef\n\n\t/** Colonnes secondaires Ã  ajouter du grid. */\n\tsecondaryCols?: GridColDef[]\n\n\t/** Actions associÃ©es aux items sÃ©lectionnÃ©s (toolbar et menu contextuel). */\n\tactions?: IAction<IShortDescCtx>[];\n\n\t/** Action excutÃ©e au double-click ou sur les frappes entrÃ©e ou espace. */\n\tdefaultAction?: IAction<ISpaceTreeCtx>\n\n\t/** Racourcis claviers Ã  capter sur la sel courante. */\n\taccelKeyMgr?: AccelKeyMgr<ISpaceTreeCtx>;\n\n\t/** RÃ©agira aux infos issues de ce broker (item courant, highlight d'items selon signature) */\n\titemHandlingReact?: IInfoBroker\n\n\t/** Contenu de la zone principale lorsque la liste est vide. */\n\temptyTree?: (navigator: Navigator) => Node\n\n\t/** LastDatas transfÃ©rÃ©s Ã  ONavigatorInit.buildFacets() */\n\tlastDatas?: JLastDatas\n}\n\n/** Gestionnaire des facettes et constructeur de la requete. */\nexport interface INavigatorFacets extends ISpaceTreeReq, ILastDatasBuilder {\n\n\t/**\n\t * Construction graphique des facettes\n\t * - Les facettes doivent Ãªtre ajoutÃ©es Ã  nav.facetRoot\n\t * - La construction des facettes DOIT intÃ©grer nav.navigatorBtns (1, voire 2 boutons) dans nav.facetRoot\n\t */\n\tbuildUiFacets: (nav: Navigator, lastDatas: JLastDatas | null) => void\n}\n\nexport class Navigator extends BaseAreaViewAsync<IRegPointer<IWspUiEnv>> implements IInfoConsumer, IGridLineDrawer, ILastDatasBuilder, IFocusActionables<IShortDescCtx>, IAccelKeyMgrPointer<IShortDescCtx> {\n\n\treg: IReg<IWspUiEnv>;\n\twsp: Wsp;\n\n\tfacets: INavigatorFacets;\n\n\tfacetRoot: HTMLElement;\n\tnavigatorBtns: HTMLElement;\n\tgrid: Grid;\n\tdatas: NavigatorDatas;\n\n\tinfoBroker: IInfoBroker;\n\n\taccelKeyMgr?: AccelKeyMgr<IShortDescCtx>;\n\n\t/** SÃ©lection en cours */\n\tshortDescs: JSrcFieldsTree[] = [];\n\n\tget emitter() {return this.grid} //on pointe le noeud focusable.\n\tget me() {return this} // Astuce pour retrouver le SpaceTree quand l'actionContext a Ã©tÃ© surchargÃ©.\n\n\t/** boutons Ã  afficher dans la focusToolbar. */\n\tfocusActionables?: IActionable<IShortDescCtx>[];\n\n\t/** Actions associÃ©es aux items sÃ©lectionnÃ©s (mÃ©moire pour le menuContextuel). */\n\tactions?: IAction<IShortDescCtx>[];\n\n\temptyTree: (navigator: Navigator) => Node;\n\n\tsetCurrentItem(srcUri: srcUri | null) {\n\t\tthis._currentSrcUri = srcUri;\n\t\tthis.grid.invalidateRows();\n\t\t//A voir: != de explorateur, veut-on bouger ce scroll, pas top si on est en train de passer les items en revue ?\n\t\t//if (this._currentSrcUri) this.ensureRowVisible(this._currentSrcUri);\n\t}\n\n\tasync selectSrcUri(srcUri: srcUri): Promise<boolean> {\n\t\t//if (!await this.datas.fetchSrcUri(srcUri)) return false; attention, potentiellement couteux\n\t\tconst rowKey = this.datas.findRowKeyBySrcUri(srcUri);\n\t\tif (rowKey) this.grid.setSelectedRows(this.datas.getOffset(rowKey));\n\t\treturn rowKey != null;\n\t}\n\n\tasync selectSrcUris(srcUris: srcUri[]): Promise<void> {\n\t\t//await this.datas.fetchSrcUris(srcUris); attention, potentiellement couteux\n\t\tthis.grid.setSelectedRows(\n\t\t\tsrcUris.map((srcUri) => this.datas.findRowKeyBySrcUri(srcUri))\n\t\t\t\t.filter((rowKey) => rowKey != null)\n\t\t\t\t.map((rowKey) => this.datas.getOffset(rowKey))\n\t\t);\n\t}\n\n\tasync ensureRowVisible(srcUri: srcUri): Promise<boolean> {\n\t\t//if (!await this.datas.fetchSrcUri(srcUri)) return false; Non, potentiellement trop couteux.\n\t\tconst rowKey = this.datas.findRowKeyBySrcUri(srcUri);\n\t\tif (rowKey) this.grid.ensureRowVisible(this.datas.getOffset(rowKey));\n\t\treturn rowKey != null;\n\t}\n\n\tdoSearch(): Promise<void> {\n\t\treturn this.datas.fetchSearchStart(true);\n\t}\n\n\tprotected async _initialize(init: ONavigatorInit): Promise<void> {\n\t\tsuper._initialize(init); //init : reg, area, areaContext\n\t\tthis.wsp = this.reg.env.wsp;\n\t\tthis.infoBroker = init.itemHandlingReact;\n\t\tthis.emptyTree = init.emptyTree;\n\n\t\tconst fields = this.wsp.getShortDescFields();\n\t\tthis.facets = init.buildFacets ? await init.buildFacets(this, fields) : new NavigatorFacetText(fields);\n\t\tthis.datas = new NavigatorDatas(this.reg).initNavDatas(this);\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tthis.facetRoot = sr.appendChild(<div id=\"facetRoot\"/>);\n\n\t\tthis.navigatorBtns = <c-button Ã®={{reg: this.reg, title: \"Rafraichir la liste\", icon: \"/@skin@/commons/icons/refresh.svg\", uiContext: \"bar\"} as OButtonInit} onclick={(ev: MouseEvent) => {this.doSearch()}}/>;\n\n\t\tconst colDefs: GridColDef[] = [init.primaryCol || new GridColTreeDef('srcTree')\n\t\t\t.setFlex('1rem', 1, 1).setMinWidth('55px')\n\t\t\t.setCellBuilder(new CellBuilderSrcIconCodeTitle(this.reg, this.wsp.wspMetaUi, false, this.wsp.srcUriItemsSortFn))];\n\t\tif (init.secondaryCols) colDefs.push(...init.secondaryCols);\n\n\t\tthis.grid = sr.appendChild(new Grid().initialize({\n\t\t\tselType: 'multi',\n\t\t\tcolumnDefs: colDefs,\n\t\t\tdataHolder: this.datas,\n\t\t\thideHeaders: true,\n\t\t\tlineDrawer: this.infoBroker ? this : null,\n\t\t\tskinOver: 'wsp-navigator/grid',\n\t\t\tskinScroll: 'scroll/small',\n\t\t\tnoResizableCol: true,\n\t\t\t//autoSelOnFocus: 'first', NON pb pour executer des actions (CrÃ©er un item, ...) sur la racine.\n\t\t\temptyBody: (): Node => {\n\t\t\t\tif (this.datas.lastError === undefined) {\n\t\t\t\t\treturn <c-msg label=\"Chargement...\" level=\"info\"/>\n\t\t\t\t} else if (this.datas.lastError === null) {\n\t\t\t\t\treturn this.emptyTree ? this.emptyTree(this) : <c-msg label=\"Aucun item ne correspond Ã  vos critÃ¨res\" level=\"info\"/>\n\t\t\t\t} else {\n\t\t\t\t\treturn <c-msg label=\"AccÃ¨s au serveur impossible\" level=\"error\"/>\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultAction: init.defaultAction,\n\t\t\tdefaultActionCtx: this\n\t\t}));\n\n\t\tif (init.secondaryCols) DOM.setAttrBool(this.grid, \"data-has-secondary-cols\", true);\n\n\t\t//Impl IContextMenuActionsPointer<IShortDescCtx> sur le grid\n\t\tObject.defineProperty(this.grid, \"ctxMenuActions\", {\n\t\t\tget: (): IContextMenuActions<IShortDescCtx> | null => {return {actions: this.actions, actionContext: this, rect: this.grid.getSelRect()}}\n\t\t});\n\n\t\tthis.grid.addEventListener('grid-select', function (this: IGrid, ev: Event) {\n\t\t\tconst spaceTree = DOMSH.findHost<SpaceTree>(this);\n\t\t\tspaceTree.shortDescs = (this.dataHolder as GridDataHolderJsonArray<JSrcFieldsTree>).getSelectedDatas();\n\t\t\t//console.log(\"spaceTree.shortDescs::::\", spaceTree.shortDescs);\n\t\t\tif (this.matches(':focus')) this.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: spaceTree, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis.grid.addEventListener('focus', function (this: IGrid, ev: Event) {\n\t\t\tthis.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: DOMSH.findHost(this) as SpaceTree, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis.grid.linesNode.setAttribute(\"draggable\", \"true\");\n\t\tthis.grid.linesNode.addEventListener('dragstart', function (ev: DragEvent) {\n\t\t\t//console.log(ev);\n\t\t\tITEM.setShortDescTransferToDragSession(DOMSH.findHost<SpaceTree>(DOMSH.findHost<IGrid>(this)), ev, 'build');\n\t\t});\n\t\tthis.grid.linesNode.addEventListener('dragend', ITEM.resetShortDescTransferToDragSession);\n\n\t\tif (init.accelKeyMgr) {\n\t\t\tthis.accelKeyMgr = init.accelKeyMgr;\n\t\t\tthis.grid.addEventListener('keydown', (ev: KeyboardEvent) => {\n\t\t\t\tthis.accelKeyMgr.handleKeyboardEvent(ev, this);\n\t\t\t});\n\t\t}\n\n\t\tlet actions = init.actions;\n\t\tif (!actions && this.hasAttribute(\"actions\")) actions = this.reg.mergeLists(...BASIS.extractAttr(this, 'actions').split(' '));\n\t\tif (actions) {\n\t\t\tactions = ACTION.injectSepByGroup(actions, this.reg.getPref(\"groupOrder.wsp.shortDesc\", \"\"), this);\n\t\t\tthis.actions = actions;\n\t\t\tthis.focusActionables = ActionBtn.buildButtons(actions, this, 'bar');\n\t\t}\n\n\t\t//\n\t\tthis.reg.env.place?.eventsMgr.on(\"wspUriChange\", (this._onUriChangeLstn = this.onUriChange.bind(this)));\n\n\t\tthis.facets.buildUiFacets(this, init.lastDatas ? init.lastDatas[init.area.getId()] : null);\n\t\tthis.datas.fetchSearchStart();\n\t}\n\n\tonUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') {\n\t\tthis.datas.onUriChange(msg, from);\n\t}\n\n\tprotected _onUriChangeLstn: (msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') => void;\n\n\tconnectedCallback() {\n\t\tsuper.connectedCallback();\n\t\tif (this.infoBroker) {\n\t\t\tthis._highlightSgn = null;\n\t\t\tthis._assigned = null;\n\t\t\tconst req = new InfoReqCurrentItem();\n\t\t\tthis.infoBroker.dispatchInfo(req, this);\n\t\t\tthis.setCurrentItem(req.srcUri || null);\n\t\t\tthis.infoBroker.addConsumer(this);\n\t\t}\n\t}\n\n\tdiconnectedCallback() {\n\t\tif (this.infoBroker) this.infoBroker.removeConsumer(this);\n\t}\n\n\tonViewHidden(closed: boolean) {\n\t\tif (closed) this.reg.env.place?.eventsMgr.removeListener(\"wspUriChange\", this._onUriChangeLstn);\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (info instanceof InfoCurrentItem) {\n\t\t\tthis.setCurrentItem(info.srcUri);\n\t\t} else if (info instanceof InfoHighlighItemSgn) {\n\t\t\tthis._highlightSgn = info.sgnPattern;\n\t\t\tthis._assigned = info.assigned;\n\t\t\tthis.grid.invalidateRows();\n\t\t}\n\t}\n\n\t/** */\n\tredrawLine(row: IGridDataRow, line: HTMLElement): void {\n\t\tredrawSrcLine(this.wsp, row.rowKey, line, this._currentSrcUri, this._highlightSgn, this._assigned);\n\t}\n\n\t_currentSrcUri: srcUri;\n\tprotected _highlightSgn: RegExp;\n\tprotected _assigned: srcRef;\n\n\tbuildLastDatas(parentLastDatas: JLastDatas) {\n\t\tif (this.facets?.buildLastDatas) {\n\t\t\tconst ld = {};\n\t\t\tthis.facets.buildLastDatas(ld);\n\t\t\tif (Object.keys(ld).length > 0) parentLastDatas[this.area.getId()] = ld;\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin('wsp-navigator', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tposition: relative;\n\t}\n\n\tc-grid {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tborder-top: 1px solid var(--border-color);\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n`);\n\nREG.reg.registerSkin('wsp-navigator/grid', 1, /* language=CSS */ `\n\t.highlight {\n\t\tbackground-color: var(--row-highlight-bgcolor);\n\t}\n\n\t.assigned {\n\t\tbackground-color: var(--row-assigned-bgcolor);\n\t}\n\n\t/** RÃ©servation de la largeur de background-image pour qu'il n'y ait pas de superposition avec les secondary-cols */\n\t:host([data-has-secondary-cols]) .line {\n\t\tpadding-inline-end: .8rem;\n\t}\n\n\t.current {\n\t\tbackground-position: right;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-image: var(--row-current-img-end);\n\t\tbackground-color: var(--row-current-bgcolor);\n\t}\n\n\t.icon {\n\t\tfilter: var(--filter);\n\t}\n`);\n\ncustomElements.define('wsp-navigator', Navigator);\n\n\nclass NavigatorDatas extends SpaceTreeDataSearch {\n\tinitNavDatas(nav: Navigator): this {\n\t\tthis.hideItemFolderContent = true;\n\t\tthis.initSpTrDataSearch(nav.facets, 30, 50);\n\t\treturn this;\n\t}\n\n\tonUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') {\n\t\tif (this.wsp.code !== msg.wspCd) return;\n\t\tconst node = this.findRowKeyBySrcUri(msg.srcUri);\n\t\tif (node) {\n\t\t\tif (this.shouldHideEntry(msg, node)) {\n\t\t\t\tthis.deleteRowKey(node);\n\t\t\t} else {\n\t\t\t\tthis.refreshRowKey(node);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nexport class NavigatorFacetBase implements INavigatorFacets {\n\n\tskin: string | string[];\n\n\t/** Balise select de la requete. */\n\tprotected select: Element;\n\n\t/** 1er criterion de la requete (fils de la balise where). */\n\tprotected itemsExp: SearchItems;\n\n\t/** A incrÃ©menter Ã  chaque chgt de facette. */\n\tstamp: number = 0;\n\n\tconstructor(fields: ESrcField[]) {\n\t\tthis.initSkin();\n\t\tthis.select = JSX.asXml(() => <select>{fields.map((f) => JSX.asXml(() => <column dataKey={f}/>))}</select>);\n\t\tthis.itemsExp = new SearchItems().excludeTildeRoot().excludeAirItems(false);\n\t}\n\n\n\tprotected initSkin() {}\n\n\tgetStartReq(max: number): string {\n\t\tthis.select.setAttribute(\"max\", max.toString());\n\t\tthis.itemsExp.afterUri = null;\n\t\tthis.itemsExp.beforeEndFolder = null;\n\t\treturn this.buildReq();\n\t}\n\n\tgetNextReq(afterSrcUri: srcUri, max: number): string {\n\t\tthis.select.setAttribute(\"max\", max.toString());\n\t\tthis.itemsExp.afterUri = afterSrcUri;\n\t\tthis.itemsExp.beforeEndFolder = null;\n\t\treturn this.buildReq();\n\t}\n\n\tgetReplaceFolderReq(folderUri: srcUri, max: number): string {\n\t\tthis.select.setAttribute(\"max\", max.toString());\n\t\tconst path = folderUri + '/';\n\t\tthis.itemsExp.afterUri = path;\n\t\tthis.itemsExp.beforeEndFolder = path;\n\t\treturn this.buildReq();\n\t}\n\n\t/** A surcharger pour construire les facettes. */\n\tbuildUiFacets(nav: Navigator, lastDatas: JLastDatas | null) {\n\t\tthis.initRoot(nav).appendChild(nav.navigatorBtns);\n\t}\n\n\tprotected initRoot(nav: Navigator): Node & ParentNode {\n\t\tif (this.skin) {\n\t\t\tconst root = nav.facetRoot;\n\t\t\tconst reg = nav.reg;\n\t\t\tconst sr = root.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\t\tif (Array.isArray(this.skin)) {\n\t\t\t\tfor (const sk of this.skin) reg.installSkin(sk, sr);\n\t\t\t} else {\n\t\t\t\treg.installSkin(this.skin, sr);\n\t\t\t}\n\t\t\treturn sr;\n\t\t}\n\t\treturn nav.facetRoot;\n\t}\n\n\t/** A surcharger pour construire les critÃ¨rions Xml issus des facettes. */\n\tprotected getCriterions(): Element | Element[] | undefined {return undefined}\n\n\tprotected buildReq() {\n\t\treturn DOM.ser(JSX.asXml(() => <request>{this.select}\n\t\t\t<where>{this.itemsExp.toDom()}{this.getCriterions()}</where>\n\t\t</request>));\n\t}\n\n\t/** A appeler suite Ã  tout changement de widget pour relancer la requete. */\n\tprotected onChange(this: HTMLInputElement, ev: Event) {\n\t\tconst nav = DOMSH.findFlatParentElt(this, null, (elt): elt is Navigator => elt instanceof Navigator);\n\t\t(nav.facets as NavigatorFacetBase).stamp++;\n\t\tnav.datas.fetchSearchStart(true);\n\t}\n\n\tgetStamp(): any {return this.stamp}\n\n\tisSameStamp(stamp: any): boolean {return stamp === this.stamp}\n}\n\nexport class NavigatorFacetText extends NavigatorFacetBase {\n\n\ttextInput: HTMLInputElement;\n\n\tprotected initSkin() {\n\t\tthis.skin = \"wsp-navigator/facetText\";\n\t}\n\n\tbuildUiFacets(nav: Navigator, lastDatas: JLastDatas | null) {\n\t\tthis.initRoot(nav).append(\n\t\t\t<div class=\"h\">{this.buildTextInput(nav, lastDatas)}{nav.navigatorBtns}</div>\n\t\t);\n\t}\n\n\tbuildLastDatas(parentLastDatas: JLastDatas) {\n\t\tconst txt = this.textInput?.value.trim();\n\t\tif (txt) (parentLastDatas as JLDFacetText).txt = txt;\n\t}\n\n\tprotected buildTextInput(nav: Navigator, lastDatas: JLDFacetText | null): HTMLElement {\n\t\tthis.textInput = <input type=\"search\" spellCheck=\"false\" onchange={this.onChange} oninput={this.onChange} value={lastDatas?.txt}/> as HTMLInputElement;\n\t\treturn <label id=\"txt\">{this.textInput}</label>;\n\t}\n\n\tprotected getCriterions(): Element | Element[] | undefined {\n\t\treturn this.getTextCriterion();\n\t}\n\n\tprotected getTextCriterion(): Element | undefined {\n\t\tif (!this.textInput) return undefined;\n\t\tconst v = this.textInput.value.trim().toLowerCase();\n\t\tif (!v) return undefined;\n\t\treturn JSX.asXml(() => <exp type=\"ItemCodeOrTitle\" regexp={`(?i).*${LANG.escape4RegexpFuzzy(v)}.*`}/>)\n\t}\n}\n\ninterface JLDFacetText {\n\ttxt?: string\n}\n\n\nREG.reg.registerSkin('wsp-navigator/facetText', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t:focus {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t.v {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t.h {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t#txt {\n\t\tbackground: 0.1em / 1em no-repeat url(/@skin@/commons/icons/filter.svg) var(--form-search-bgcolor);\n\t\tpadding-inline-start: 1.2em;\n\t}\n\n\tinput[type=search] {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\tpadding: 2px;\n\t\tbackground: var(--form-bgcolor);\n\t\tcolor: var(--form-color);\n\t\tborder: none;\n\t\twidth: 100%;\n\t\tfont-size: inherit;\n\t}\n`);\n\nexport class NavigatorFacetItState extends NavigatorFacetText {\n\n\tshowWarning: boolean\n\tshowValid: boolean\n\tshowTextFilter: boolean\n\n\tprotected errorCheck: HTMLInputElement;\n\tprotected warningCheck: HTMLInputElement;\n\tprotected validCheck: HTMLInputElement;\n\n\tinitFacet(showWarning: boolean, showValid: boolean, showTextFilter: boolean): this {\n\t\tthis.showWarning = showWarning;\n\t\tthis.showValid = showValid;\n\t\tthis.showTextFilter = showTextFilter;\n\t\treturn this;\n\t}\n\n\tprotected initSkin() {\n\t\tthis.skin = [\"wsp-navigator/facetText\", \"wsp-navigator/facetItSate\"];\n\t}\n\n\tbuildUiFacets(nav: Navigator, lastDatas: JLastDatas | null) {\n\t\tconst root = this.initRoot(nav);\n\t\troot.appendChild(<div id=\"itStatesCtn\">{this.buildErrorInput(nav, lastDatas)}{nav.navigatorBtns}</div>);\n\t\tif (this.showTextFilter) root.appendChild(this.buildTextInput(nav, lastDatas));\n\t}\n\n\tbuildLastDatas(parentLastDatas: JLastDatas) {\n\t\tsuper.buildLastDatas(parentLastDatas);\n\t\tif (!this.errorCheck.checked) (parentLastDatas as JLDFacetItSt).err = false;\n\t\tif (!this.warningCheck?.checked) (parentLastDatas as JLDFacetItSt).warn = false;\n\t\tif (this.validCheck?.checked) (parentLastDatas as JLDFacetItSt).valid = true;\n\t}\n\n\tprotected buildErrorInput(nav: Navigator, lastDatas: JLDFacetItSt | null): HTMLElement | undefined {\n\t\tthis.errorCheck = <input id=\"error\" type=\"checkbox\" onchange={this.onChange} checked={lastDatas?.err === false ? undefined : \"\"}/> as HTMLInputElement;\n\t\tif (!this.showWarning && !this.showValid) {\n\t\t\tthis.errorCheck.checked = true;\n\t\t\treturn <div id=\"itState\"/>;\n\t\t}\n\t\tif (this.showWarning) this.warningCheck = <input id=\"warning\" type=\"checkbox\" onchange={this.onChange} checked={lastDatas?.warn === false ? undefined : \"\"}/> as HTMLInputElement;\n\t\tif (this.showValid) this.validCheck = <input id=\"valid\" type=\"checkbox\" onchange={this.onChange} checked={lastDatas?.valid ? \"\" : undefined}/> as HTMLInputElement;\n\t\tconst ctn = <div id=\"itState\"><label class=\"h\" id=\"error\">{this.errorCheck}Erreur</label></div>;\n\t\tif (this.warningCheck) ctn.appendChild(<label class=\"h\" id=\"warning\">{this.warningCheck}Alerte</label>);\n\t\tif (this.validCheck) ctn.appendChild(<label class=\"h\" id=\"valid\">{this.validCheck}Valide</label>);\n\t\treturn ctn;\n\t}\n\n\tprotected getCriterions(): Element | Element[] | undefined {\n\t\tlet searchCrit: ISearchCrit;\n\t\tconst min = this.validCheck?.checked ? 1 : this.warningCheck?.checked ? 2 : this.errorCheck.checked ? 3 : 99;\n\t\tif (min >= 3) {\n\t\t\tsearchCrit = new SearchStatus(min, min);\n\t\t} else {\n\t\t\tconst max = this.errorCheck.checked ? 3 : this.warningCheck?.checked ? 2 : 1;\n\t\t\tif (min === 1 && max === 3) {\n\t\t\t\t//cas particulier Error + Valid => exclure wanring\n\t\t\t\tsearchCrit = new SearchOr(new SearchStatus(min, min), new SearchStatus(max, max));\n\t\t\t} else {\n\t\t\t\tsearchCrit = new SearchStatus(min, max);\n\t\t\t}\n\t\t}\n\t\treturn LANG.pushIfDefined([searchCrit.toDom()], this.getTextCriterion());\n\t}\n}\n\ninterface JLDFacetItSt {\n\terr?: boolean\n\twarn?: boolean\n\tvalid?: boolean\n}\n\n\nREG.reg.registerSkin('wsp-navigator/facetItSate', 1, /* language=CSS */ `\n\t#itStatesCtn, #itState {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t}\n\n\t#itState {\n\t\tflex-wrap: wrap;\n\t}\n\n\t#itState > label {\n\t\tmargin-inline-end: .5em;\n\t\twhite-space: nowrap;\n\t}\n\n\t#error {\n\t\tcolor: var(--error-color);\n\t}\n\n\t#warning {\n\t\tcolor: var(--warning-color);\n\t}\n\n\t#valid {\n\t\tcolor: var(--valid-color);\n\t}\n\n\t#txt {\n\t\tflex: 0;\n\t}\n`);\n\n/** Tous les states error, warning, valid + text filter. */\nexport const FACET_itStates = (nav: Navigator, fields: ESrcField[]) => new NavigatorFacetItState(fields).initFacet(true, true, true);\n\n/** Items en erreur ou warnings, sans text filter. */\nexport const FACET_itProblems = (nav: Navigator, fields: ESrcField[]) => new NavigatorFacetItState(fields).initFacet(true, false, false);\n\n/** Items en erreur, sans text filter. */\nexport const FACET_itErrors = (nav: Navigator, fields: ESrcField[]) => new NavigatorFacetItState(fields).initFacet(false, false, false);"]}