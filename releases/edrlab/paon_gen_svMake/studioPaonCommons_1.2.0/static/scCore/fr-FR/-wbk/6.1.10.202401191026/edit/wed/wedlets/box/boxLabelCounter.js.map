{"version":3,"sources":["/@back@/edit/wed/wedlets/box/boxLabelCounter.ts"],"names":["WEDLET","BoxLabel","DOM","BoxLabelCounter","[object Object]","tpl","wedlet","this","labelAdjuster","labelAdjust","bind","model","buildReplace","wedParent","addCustomAdjust","val","classList","toggle","isVirtual","label","getAttribute","pos","replace","toString","window","customElements","define","labelBuilder","parent","counter","visitWedletChildren","Infinity","w","nodeName","nodeType","findNext","element","shadowRoot","n","textContent","VISITOPTIONS_includeVirtuals"],"mappings":"OAA8CA,WAAO;OAC7CC,aAAS;OAGTC,QAAI;OAoBN,MAAOC,wBAAwBF,SAIpCG,gBAAgBC,IAAsCC,QACrDC,KAAKD,OAASA;AACdC,KAAKF,IAAMA;AACX,IAAKA,IAAIG,cAAe,CACvBH,IAAIG,cAAgBC,YAAYC,KAAKL,IAAKC,OAAOK,MAAOJ,KAAKK,aAAaP,MAE1EC,OAAOO,UAAwBC,gBAAgBT,IAAIG,eAGrDJ,iBAAiBW,KAChBR,KAAKS,UAAUC,OAAO,UAAWV,KAAKD,OAAOY,aAGpCd,aAAaC,KACtB,MAAMc,MAAQd,IAAIe,aAAa;AAC/B,OAAQC,KAAwBF,MAAMG,QAAQ,QAASD,IAAIE,aAK7DC,OAAOC,eAAeC,OAAO,oBAAqBvB;AAOlD,SAASM,YAAyCE,MAAqBgB,aAAuCC,QAC7G,IAAIC,QAAU;AACdD,OAAOE,oBAAoB,EAAGC,SAAWC,IACxC,GAAIA,EAAErB,MAAMsB,WAAatB,MAAMsB,UAAYD,EAAErB,MAAMuB,WAAavB,MAAMuB,SAAU,CAC/EL;AACA3B,IAAIiC,SAASH,EAAEI,QAAQC,WAAY,KAAOC,IACzC,GAAIA,aAAanC,iBAAmBmC,EAAEjC,MAAQE,KAAM,CACnD+B,EAAEC,YAAcZ,aAAaE;AAC7B,OAAO,KAER,OAAO,UAGP7B,OAAOwC","sourcesContent":["import {IChildWedlet, IParentWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {BoxLabel} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {BoxWedlet} from \"back/edit/wed/wedlets/box/box\";\nimport {IWedletModel} from \"back/edit/wed/wedCore\";\nimport {DOM} from \"lib/commons/xml/dom\";\nimport {IWedletSingleElt} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {IJmlNode} from \"lib/commons/xml/jml\";\n\n/**\n * Affichage d'un label intégrant un compteur de la position de cet élement dans son contexte parent.\n * La position est calculée par rapport aux frères précédents du même modèle de wedlet.\n *\n * <wed:bind eltName=\"x:y\" wedlet=\"Box\">\n *  <box-ctn>\n *    <style>...</style>\n *    <div class=\"head\">\n *      <box-label-counter label=\"Choix {#}\"/>\n *    </div>\n *    <div class=\"body\">\n *      <wed:children/>\n *    </div>\n *  </box-ctn>\n * </wed:bind>\n */\nexport class BoxLabelCounter extends BoxLabel {\n\n\ttpl: ILabelAdjusterPointer;\n\n\tconfigWedletElt(tpl: Element & ILabelAdjusterPointer, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet;\n\t\tthis.tpl = tpl;\n\t\tif (!tpl.labelAdjuster) {\n\t\t\ttpl.labelAdjuster = labelAdjust.bind(tpl, wedlet.model, this.buildReplace(tpl));\n\t\t}\n\t\t(wedlet.wedParent as BoxWedlet).addCustomAdjust(tpl.labelAdjuster);\n\t}\n\n\trefreshBindValue(val: IJmlNode) {\n\t\tthis.classList.toggle(\"virtual\", this.wedlet.isVirtual());\n\t}\n\n\tprotected buildReplace(tpl: Element): (pos: number) => string {\n\t\tconst label = tpl.getAttribute(\"label\");\n\t\treturn (pos: number) => {return label.replace(/({#})/, pos.toString())}\n\t}\n\n}\n\nwindow.customElements.define(\"box-label-counter\", BoxLabelCounter);\n\ninterface ILabelAdjusterPointer extends Element {\n\tlabelAdjuster?: (w: BoxWedlet) => void\n}\n\n/** Appelé à chaque changement dans le contexte parent. */\nfunction labelAdjust(this: ILabelAdjusterPointer, model: IWedletModel, labelBuilder: (pos: number) => string, parent: BoxWedlet & IParentWedlet) {\n\tlet counter = 0;\n\tparent.visitWedletChildren(0, Infinity, (w: IChildWedlet & IWedletSingleElt) => {\n\t\tif (w.model.nodeName === model.nodeName && w.model.nodeType === model.nodeType) {\n\t\t\tcounter++;\n\t\t\tDOM.findNext(w.element.shadowRoot, null, (n: Node): n is Node => {\n\t\t\t\tif (n instanceof BoxLabelCounter && n.tpl === this) {\n\t\t\t\t\tn.textContent = labelBuilder(counter);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t}, WEDLET.VISITOPTIONS_includeVirtuals);\n}"]}