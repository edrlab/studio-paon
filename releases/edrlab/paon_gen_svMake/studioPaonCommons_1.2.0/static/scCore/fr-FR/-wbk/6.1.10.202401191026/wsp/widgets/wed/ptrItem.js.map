{"version":3,"sources":["/@back@/wsp/widgets/wed/ptrItem.tsx"],"names":["BarActions","AgEltBoxSelection","AgEltBoxInsertDrawerBox","AgEltBoxInputAnnotable","removeAnnots","EWedletEditMode","EWedletEditModeLabel","WEDLET","WedletActionCtx","SrcPointer","SrcPointerCreateItem","SrcPointerDblClick","SrcPointerFastSelect","REG","ITEM","SRC","WED","WedletModelBase","SPTE","SpTeSourceUrlWedlet","WSP","DOM","ENodeType","POPUP","ACTION","ActionHackCtx","FocusItem","ShortDescCopy","XA","ERROR","EWspChangesEvts","LANG","CDM","BoxPtrItem","wedMgr","this","wedlet","focusActionables","actionContext","WedPtrItemCtx","[object Object]","tpl","hasAttribute","selMode","getAttribute","val","children","super","setSrcRef","_pendingSrcRef","_pendingFields","isVirtual","srcRef","fields","docHolder","isAvailable","insertDatasFromDisplay","newBatch","setAttr","wedAnchor","doBatch","chars","msg","mode","readOnly","write","readStatic","_srcRefSub","sgnPattern","struct","getStruct","buildVirtualPath","_a","itSgnPattern","subSgnPattern","subItSgnPattern","annot","ptr","initialize","reg","config","tplOver","otherValue","ev","KeyboardEvent","key","ctxMenuActions","find","actions","a","getId","execute","dispatchEvent","CustomEvent","bubbles","composed","preventDefault","stopPropagation","ACTIONS","ACCELKEYS","actionsLists","groupOrderPref","force_ctxMenuActions","BoxPtrItemBlock","init","findReg","defaultAction","getSvc","defaultActionSvc","SINGLETON","accelKeysLists","skinOver","classList","contains","tplSvc","tplOverSvc","dispatchHighlight","showStatus","_initialize","buildInitFromAtts","parse","registerSkin","window","customElements","define","BoxPtrItemInline","skin","Action4SrcPointer","ctx","focusedElt","addAction","action","accelKey","addToList","setLabel","ACTIONS_TXT","ACCELKEYS_TXT","TxtPtrItem","txtElement","parentElement","txtRoot","WedTxtPtrItemCtx","before","onRefreshCycle","txtElt","append","sgnPatternFromTxtElement","focusBar","_focusBar","undefined","datas","getDatasForModel","model","ctxActions","length","txtMenuActions","concat","mergeLists","injectSepByGroup","getPref","tabIndex","connectedCallback","addEventListener","onFocus","bind","onBlur","contentEditable","shortDescs","accelKeyMgr","infoBroker","emitter","TxtPtrItemBlock","editAction","TxtPtrItemInline","subItemSgn","path","push","wedAttributes","_b","SpTeSourceItemModel","initModel","nodeType","attribute","Error","transform","parent","SpTeSourceItemWedlet","registerWedletModel","txt","spteElt","findSpTeForkedWedlet","spTeViews","spteSource","setUrl","wspCd","env","wsp","code","_listenItem","place","eventsMgr","on","listenItem","refreshUrl","removeListener","shortDesc","fetchShortDesc","itModel","srcSt","document","wasDiscarded","srcUri","wspMetaUi","getItemType","getMainStreamSrcUri","getStreamUrl","url","from","in","type","u","r","SpTeStreamItemModel","SpTeStreamItemWedlet","currentRootMsg","currentMsgsStack","noCleanup","metas","universe","waveformUrl","duration","startsWith","props","fetchJson","e","log","resp","httpFrames","web","fetchSvc","remoteContentFacet","ok","fetchStreamText","wedEditor","report","setWaveformUrl","setDurationProp","ptrItemTagsDefined","Promise","resolve","WspDataTransferWedAnalyzer","dataTrsf","pasteCtx","cache","shortDescsTrsf","getShortDescsTransferFromExternal","targetSrcType","canCreate","rootNode","extractDatasNow","imps","house","schemaDom","tryPasteLinks","defImps","tryPasteDefault","getShortDescsTransferFromDataTransfer","shortDescTrsf","getShortDescsTransferFromDragSession","isImport","srcRefs","server","universeUrl","showNotifInfo","originalLinks"],"mappings":"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","sourcesContent":["import {IActionable, IContextMenuActions} from \"back/commons/actionables\";\nimport {BarActions} from \"back/commons/widgets/bars\";\nimport {AgEltBoxSelection, IEltBoxSelection} from \"back/edit/wed/features/boxSel\";\nimport {IWedFocusBarPointer} from \"back/edit/wed/features/commonBar\";\nimport {AgEltBoxInsertDrawerBox} from \"back/edit/wed/features/insMgr\";\nimport {IDataTransferWedAnalyzer, IWedMgrPointer, WedMgr} from \"back/edit/wed/wedEditor\";\nimport {AgEltBoxInputAnnotable, IBoxInputDiffMaker, removeAnnots} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {TxtElement} from \"back/edit/wed/wedlets/txt/txtTags\";\nimport {EWedletEditMode, EWedletEditModeLabel, IChildWedlet, IElementWedlet, IParentWedlet, IWedlet, IWedletActionCtx, WEDLET, WedletActionCtx} from \"back/edit/wed/wedlets/wedlet\";\nimport {OItemPointerInit, SrcPointer, SrcPointerCreateItem, SrcPointerDblClick, SrcPointerFastSelect} from \"back/wsp/widgets/srcDrawer\";\nimport {IPtrItemRule} from \"back/wsp/widgets/wed/schemaMetaWsp\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IJmlNode, IJmlSubSet} from \"lib/commons/xml/jml\";\nimport {IXmlMsg} from \"lib/edit/ot/xmlHouse\";\nimport {IShortDescCtx, ITEM, srcRefSub} from \"lib/wsp/item\";\nimport {JSrcFields, SRC, srcRef} from \"lib/wsp/src\";\nimport {WED, WedletModelBase} from \"back/edit/wed/wedCore\";\nimport {IEltSpTeSource, SPTE, SpTeSourceUrlWedlet} from \"back/edit/wed/wedlets/spte/spte\";\nimport {IWspUiEnv, JWspUriChangeMsg, WSP, wspCd} from \"lib/wsp/wsp\";\nimport {DOM, ENodeType} from \"lib/commons/xml/dom\";\nimport {ISkImporter, OSkImportDatas, OSkPasteContext} from \"lib/edit/schema/schemaMeta\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {ITxtRootContext, TxtRoot} from \"back/edit/wed/wedlets/txt/txt\";\nimport {AccelKeyMgr, Action, ACTION, ActionHackCtx, IAction} from \"lib/commons/actions\";\nimport {IInfoBroker} from \"lib/commons/infos\";\nimport {FocusItem, ShortDescCopy} from \"back/wsp/actions/srcActions\";\nimport {IRefreshHook} from \"lib/commons/utils/signboard\";\nimport {XA} from \"lib/commons/xml/xAddr\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IDiffAnnotValue} from \"lib/edit/schema/diff\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {EWspChangesEvts, IWspXmlHouse, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {LANG} from \"lib/commons/lang\";\nimport {CDM} from \"lib/commons/utils/cdm\";\n\nexport class BoxPtrItem extends SrcPointer implements IElementWedlet, IWedFocusBarPointer, IEltBoxSelection, IBoxInputDiffMaker {\n\n\twedlet: IWedlet;\n\n\tselMode: 'box' | 'input' | 'caret';\n\n\tget wedMgr(): WedMgr {return this.wedlet.wedMgr}\n\n\t/** Optimisation */\n\tprotected _pendingSrcRef: srcRef;\n\tprotected _pendingFields: JSrcFields;\n\n\t/** Sera implémenté par AgEltBoxSelection. */\n\t\t// @ts-ignore\n\tctxMenuActions: IContextMenuActions<IWedletActionCtx & IShortDescCtx>;\n\n\t/** On privillégie la IWedFocusBarPointer.focusBar du wed. */\n\tget focusActionables(): IActionable<IShortDescCtx>[] {return null}\n\n\t/**\n\t * Pour l'obtention du bon contexte dans l'impl générique de focusBar fournit par AgEltBoxSelection()\n\t * et dans SrcPointer. */\n\tget actionContext(): WedPtrItemCtx {return new WedPtrItemCtx(this)}\n\n\t/**\n\t * Configuration d'un élément du wedlet à partir de son template issu du fichier wed.\n\t */\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet): void {\n\t\tthis.wedlet = wedlet;\n\t\tif (this.hasAttribute(\"sel-mode\")) this.selMode = this.getAttribute(\"sel-mode\") as 'box' | 'input' | 'caret';\n\t}\n\n\t/**\n\t * @param val IJmlNode pour les éléments, textes, comment; string pour la valeur d'un attribut.\n\t * @param children utilisé uniquement par les élements des wedlets terminaux assumant la représentation de toute la descendance.\n\t */\n\trefreshBindValue(val: IJmlNode | string, children?: IJmlSubSet): void {\n\t\tsuper.setSrcRef(val as srcRef, val === this._pendingSrcRef ? this._pendingFields : null);\n\t\tif (this.wedlet.isVirtual()) removeAnnots(this);\n\t}\n\n\t/** Appel par les actions en écriture. */\n\tsetSrcRef(srcRef: srcRefSub, fields?: JSrcFields): void | Promise<void> {\n\t\t//super.setSrcRef(srcRef, fields); non !\n\t\tthis._pendingSrcRef = srcRef;\n\t\tthis._pendingFields = fields; //pour optimisation évite une requete au serveur.\n\t\ttry {\n\t\t\tconst docHolder = this.wedlet.wedMgr.docHolder;\n\t\t\tif (!docHolder.isAvailable) return; //house déconnectée entre temps.\n\t\t\tif (this.wedlet.isVirtual()) {\n\t\t\t\tWEDLET.insertDatasFromDisplay(this.wedlet, null, srcRef);\n\t\t\t} else {\n\t\t\t\tdocHolder.newBatch().setAttr(this.wedlet.wedAnchor, srcRef).doBatch();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis._pendingSrcRef = null;\n\t\t\tthis._pendingFields = null;\n\t\t}\n\t}\n\n\treplaceChars(chars: string, msg: IXmlMsg): void {\n\t\tsuper.setSrcRef(chars);\n\t}\n\n\tsetEditMode(mode: EWedletEditMode) {\n\t\tthis.readOnly = mode !== EWedletEditMode.write;\n\t\tDOM.setAttr(this, \"tabindex\", mode < EWedletEditMode.readStatic ? '0' : null);\n\t\tDOM.setAttr(this, \"edit-mode\", EWedletEditModeLabel[mode]);\n\t}\n\n\tisEmpty(): boolean {return this._srcRefSub != null}\n\n\tget sgnPattern(): RegExp {\n\t\tconst docHolder = this.wedlet.wedMgr.docHolder;\n\t\tif (!docHolder) return null;\n\t\tconst struct = docHolder.getStruct(this.wedlet.wedAnchor, WEDLET.buildVirtualPath(this.wedlet));\n\t\t//console.log(\"struct.itSgnPattern::::\", struct ? (struct as IPtrItemRule).itSgnPattern : null);\n\t\treturn (struct as IPtrItemRule)?.itSgnPattern;\n\t}\n\n\tget subSgnPattern(): RegExp {\n\t\tconst docHolder = this.wedlet.wedMgr.docHolder;\n\t\tif (!docHolder) return null;\n\t\tconst struct = docHolder.getStruct(this.wedlet.wedAnchor, WEDLET.buildVirtualPath(this.wedlet));\n\t\t//console.log(\"struct.itSgnPattern::::\", struct ? (struct as IPtrItemRule).itSgnPattern : null);\n\t\treturn (struct as IPtrItemRule)?.subItSgnPattern;\n\t}\n\n\tmakeInputForDiff(annot: IDiffAnnotValue): HTMLElement {\n\t\tconst ptr = new SrcPointer().initialize({reg: this.reg, readOnly: true, tpl: this.config.tpl, tplOver: this.config.tplOver});\n\t\tptr.setSrcRef(annot.otherValue);\n\t\treturn ptr;\n\t}\n\n\thandleEventFromContainer(ev: KeyboardEvent | MouseEvent) {\n\t\tif (!(ev instanceof KeyboardEvent) || ev.key === ' ' || ev.key === 'Enter') {\n\t\t\tif (!this.readOnly) {\n\t\t\t\tconst ctxMenuActions = this.ctxMenuActions;\n\t\t\t\tconst find = ctxMenuActions.actions.find((a) => a.getId() === \"fastSelect\");\n\t\t\t\tif (find) find.execute(ctxMenuActions.actionContext, ev);\n\t\t\t\telse {\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"c-contextmenu\", {bubbles: true, composed: true}));\n\t\t\t\t}\n\t\t\t}\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\t\t}\n\t}\n}\n\nconst ACTIONS = [\"actions:wsp:wed:ptr-item\"];\nconst ACCELKEYS = [\"accelkeys:wsp:wed:ptr-item\"];\n\nAgEltBoxInsertDrawerBox(AgEltBoxSelection(AgEltBoxInputAnnotable(BoxPtrItem), {selMode: 'input', actionsLists: ACTIONS, groupOrderPref: \"groupOrder.wsp.shortDesc\", force_ctxMenuActions: true}));\n\nexport class BoxPtrItemBlock extends BoxPtrItem implements IEltBoxSelection {\n\tprivate defaultActionSvc?: string;\n\n\tprotected _initialize(init: OItemPointerInit) {\n\t\tif (!this.reg) this.reg = this.findReg(init);\n\t\tif (!(\"defaultAction\" in init)) init.defaultAction = this.reg.getSvc(this.defaultActionSvc || \"ptrItemDblClick\", SrcPointerDblClick.SINGLETON);\n\t\tif (!(\"actionsLists\" in init)) init.actionsLists = ACTIONS;\n\t\tif (!(\"accelKeysLists\" in init)) init.accelKeysLists = ACCELKEYS;\n\t\tif (!init.skinOver) init.skinOver = 'box-ptritem';\n\t\tif (this.classList.contains(\"compact\")) {\n\t\t\tif (!init.tplSvc) init.tplSvc = \"wedItemBlockCompact\";\n\t\t\tif (!init.tplOverSvc) init.tplOverSvc = \"wedItemBlockOverCompact\";\n\t\t} else {\n\t\t\tif (!init.tplSvc) init.tplSvc = \"wedItemBlock\";\n\t\t\tif (!init.tplOverSvc) init.tplOverSvc = \"wedItemBlockOver\";\n\t\t}\n\t\tif (!(\"dispatchHighlight\" in init)) init.dispatchHighlight = true;\n\t\tif (!(\"showStatus\" in init)) init.showStatus = true;\n\t\tsuper._initialize(init);\n\t}\n\n\tbuildInitFromAtts(init?: OItemPointerInit): OItemPointerInit {\n\t\tinit = super.buildInitFromAtts(init);\n\t\tif (this.hasAttribute('tplSvc')) init.tplSvc = this.getAttribute('tplSvc');\n\t\tif (this.hasAttribute('tplOverSvc')) init.tplOverSvc = this.getAttribute('tplOverSvc');\n\t\tif (this.hasAttribute('defaultActionSvc')) this.defaultActionSvc = this.getAttribute('defaultActionSvc');\n\t\tif (this.hasAttribute('actionsLists')) {\n\t\t\tconst actionsLists = CDM.parse(this.getAttribute('actionsLists'));\n\t\t\tinit.actionsLists = typeof actionsLists === \"string\" ? [actionsLists] : actionsLists;\n\t\t}\n\t\tif (this.hasAttribute('accelKeysLists')) {\n\t\t\tconst accelKeysLists = CDM.parse(this.getAttribute('accelKeysLists'));\n\t\t\tinit.accelKeysLists = typeof accelKeysLists === \"string\" ? [accelKeysLists] : accelKeysLists;\n\t\t}\n\t\tif (this.hasAttribute('dispatchHighlight')) init.dispatchHighlight = this.getAttribute('dispatchHighlight') === 'true';\n\t\tif (this.hasAttribute('showStatus')) init.showStatus = this.getAttribute('dispatchHighlight') === 'true';\n\t\treturn init;\n\t}\n}\n\nREG.reg.registerSkin('box-ptritem', 1, /* language=CSS */ `\n\t:host {\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\talign-self: flex-start;\n\t\tpadding-inline-end: 0;\n\t}\n\n\t:host(.previewLast) .itemPreview {\n\t\torder: 9999;\n\t}\n\n\t:host(:focus) {\n\t\toutline: var(--edit-input-focus);\n\t}\n\n\twed-diff-mark {\n\t\tleft: -5px;\n\t}\n`);\n\nwindow.customElements.define(\"box-ptritem\", BoxPtrItemBlock);\n\nexport class BoxPtrItemInline extends BoxPtrItem implements IEltBoxSelection {\n\tprivate defaultActionSvc?: string;\n\n\tprotected _initialize(init: OItemPointerInit) {\n\t\tif (!init.skin) init.skin = 'wsp-src-drawer-inline';\n\t\tif (!init.skinOver) init.skinOver = 'box-ptritem';\n\t\tif (!this.reg) this.reg = this.findReg(init);\n\t\tif (!(\"defaultAction\" in init)) init.defaultAction = this.reg.getSvc(this.defaultActionSvc || \"ptrItemDblClick\", SrcPointerDblClick.SINGLETON);\n\t\tif (!(\"actionsLists\" in init)) init.actionsLists = ACTIONS;\n\t\tif (!(\"accelKeysLists\" in init)) init.accelKeysLists = ACCELKEYS;\n\t\tif (!init.tplSvc) init.tplSvc = \"wedItemInline\";\n\t\tif (!init.tplOverSvc) init.tplOverSvc = \"wedItemInlineOver\";\n\t\tif (!(\"dispatchHighlight\" in init)) init.dispatchHighlight = true;\n\t\tif (!(\"showStatus\" in init)) init.showStatus = true;\n\t\tsuper._initialize(init);\n\t}\n\n\tbuildInitFromAtts(init?: OItemPointerInit): OItemPointerInit {\n\t\tinit = super.buildInitFromAtts(init);\n\t\tif (this.hasAttribute('tplSvc')) init.tplSvc = this.getAttribute('tplSvc');\n\t\tif (this.hasAttribute('tplOverSvc')) init.tplOverSvc = this.getAttribute('tplOverSvc');\n\t\tif (this.hasAttribute('defaultActionSvc')) this.defaultActionSvc = this.getAttribute('defaultActionSvc');\n\t\tif (this.hasAttribute('actionsLists')) {\n\t\t\tconst actionsLists = CDM.parse(this.getAttribute('actionsLists'));\n\t\t\tinit.actionsLists = typeof actionsLists === \"string\" ? [actionsLists] : actionsLists;\n\t\t}\n\t\tif (this.hasAttribute('accelKeysLists')) {\n\t\t\tconst accelKeysLists = CDM.parse(this.getAttribute('accelKeysLists'));\n\t\t\tinit.accelKeysLists = typeof accelKeysLists === \"string\" ? [accelKeysLists] : accelKeysLists;\n\t\t}\n\t\tif (this.hasAttribute('dispatchHighlight')) init.dispatchHighlight = this.getAttribute('dispatchHighlight') === 'true';\n\t\tif (this.hasAttribute('showStatus')) init.showStatus = this.getAttribute('dispatchHighlight') === 'true';\n\t\treturn init;\n\t}\n}\n\nwindow.customElements.define(\"box-ptritem-inline\", BoxPtrItemInline);\n\n\n//*************************** Actions ******************************\n\n\nexport class Action4SrcPointer extends ActionHackCtx<IWedletActionCtx, SrcPointer> {\n\twrapCtx(ctx: IWedletActionCtx): SrcPointer {\n\t\treturn ctx.focusedElt as SrcPointer;\n\t}\n}\n\nfunction addAction(action: IAction<IWedletActionCtx>, ...accelKey: string[]) {\n\tREG.reg.addToList(\"actions:wsp:wed:ptr-item\", action.getId(), 1, action);\n\tREG.reg.addToList(\"actions:wsp:wed:txt-ptr-item\", action.getId(), 1, action);\n\tif (accelKey) for (const a of accelKey) {\n\t\tREG.reg.addToList(\"accelkeys:wsp:wed:ptr-item\", a, 1, action);\n\t\t//REG.reg.addToList(\"accelkeys:wsp:wed:txt-ptr-item\", accelKey, 1, action);//FIXME affiché mais pas pris en compte : events clavier gérés par le textRoot !\n\t}\n}\n\naddAction(new Action4SrcPointer(new FocusItem()), \"F3\");\naddAction(new Action4SrcPointer(SrcPointerFastSelect.SINGLETON), \"F4\", \"Enter\", \" \");\naddAction(new Action4SrcPointer(new SrcPointerCreateItem()));\n\n// Non, ajouté par la récupération de toutes les actions du TxtRoot.\n// REG.reg.addToList(\"actions:wsp:wed:txt-ptr-item\", \"openMetaDialog\", 1,\n// \tnew OpenMetaDialog().setLabel(\"Afficher/éditer les propriétés...\").setIcon(\"/@skin@/edit/wed/txt/showMeta.svg\")\n// );\n\nREG.reg.addToList(\"accelkeys:wsp:wed:ptr-item\", \"c-accel\", 1, new Action4SrcPointer(ShortDescCopy.SINGLETON));\n//Dans le text (accelkeys:wsp:wed:txt-ptr-item) ctrl+C copie le fragment inline, ie le tag lien avec ses metas.\n//Donc on ajoute une action dans le menu \"Copier le lien\".\nREG.reg.addToList(\"actions:wsp:wed:txt-ptr-item\", \"copyLink\", 1, new Action4SrcPointer(new ShortDescCopy().setLabel(\"Copier le lien\")));\n\n\n//*************************** Txt ******************************\n\nconst ACTIONS_TXT = [\"actions:wsp:wed:txt-ptr-item\"];\nconst ACCELKEYS_TXT = [\"accelkeys:wsp:wed:txt-ptr-item\"];\n\nexport class TxtPtrItem extends SrcPointer implements IWedMgrPointer, IWedFocusBarPointer, IRefreshHook {\n\n\t/** Action dédition du lien. */\n\teditAction?: IAction<IShortDescCtx>\n\n\t/** Optimisation */\n\tprotected _pendingSrcRef: srcRef;\n\tprotected _pendingFields: JSrcFields;\n\n\tget txtElement(): TxtElement {return this.parentElement as TxtElement}\n\n\tget wedMgr(): WedMgr {return this.txtElement.wedMgr}\n\n\tget txtRoot(): TxtRoot {return this.txtElement.txtRoot}\n\n\taccelKeyMgr: AccelKeyMgr<WedTxtPtrItemCtx>;\n\n\tget actionContext(): WedTxtPtrItemCtx {return new WedTxtPtrItemCtx(this)}\n\n\tonRefreshCycle(before: boolean): 'stop' | void {return this.txtRoot.onRefreshCycle(before)}\n\n\tinitSrcRef(srcRef: srcRef) {\n\t\tsuper.setSrcRef(srcRef);\n\t}\n\n\t/** Appel par les actions en écriture. */\n\tsetSrcRef(srcRef: srcRefSub, fields?: JSrcFields): void | Promise<void> {\n\t\t//super.setSrcRef(srcRef, fields); non !\n\t\tconst txtElt = this.txtElement;\n\t\tthis._pendingSrcRef = srcRef;\n\t\tthis._pendingFields = fields; //pour optimisation évite une requete au serveur.\n\t\ttry {\n\t\t\tconst docHolder = txtElt.wedMgr.docHolder;\n\t\t\tif (!docHolder.isAvailable) return; //house déconnectée entre temps.\n\t\t\tdocHolder.newBatch().setAttr(XA.append(txtElt.wedAnchor, \"sc:refUri\"), srcRef).doBatch();\n\t\t} finally {\n\t\t\tthis._pendingSrcRef = null;\n\t\t\tthis._pendingFields = null;\n\t\t}\n\t}\n\n\tget sgnPattern(): RegExp {\n\t\treturn sgnPatternFromTxtElement(this.txtElement);\n\t}\n\n\tget subSgnPattern(): RegExp {\n\t\treturn sgnPatternFromTxtElement(this.txtElement, true);\n\t}\n\n\t/** On privillégie la focusBar du wed. */\n\tget focusActionables(): IActionable<IShortDescCtx>[] {return null}\n\n\tget focusBar(): BarActions<IWedletActionCtx> {\n\t\tif (this._focusBar === undefined) {\n\t\t\tconst txtElt = this.txtElement;\n\t\t\tconst wedMgr = txtElt.wedMgr;\n\t\t\tconst datas = wedMgr.getDatasForModel(txtElt.model) as IWedFocusBarPointer;\n\t\t\tif (\"focusBar\" in datas) {\n\t\t\t\tthis._focusBar = datas.focusBar;\n\t\t\t} else {\n\t\t\t\tconst ctxActions = this.ctxMenuActions as IContextMenuActions<IWedletActionCtx & IShortDescCtx>;\n\t\t\t\tif (!ctxActions || !ctxActions.actions || ctxActions.actions.length === 0) {\n\t\t\t\t\tthis._focusBar = datas.focusBar = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis._focusBar = datas.focusBar = new BarActions<IWedletActionCtx>().initialize({\n\t\t\t\t\t\tactions: ctxActions.actions,\n\t\t\t\t\t\tactionContext: new WedTxtPtrItemCtx()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._focusBar.actionContext.focusedElt = this;\n\t\treturn this._focusBar;\n\t}\n\n\t/** Interne, cache du focusBar construit. */\n\t_focusBar?: BarActions<IWedletActionCtx> | null;\n\n\tget ctxMenuActions(): IContextMenuActions<IShortDescCtx> {\n\t\tconst txtMenuActions = this.txtRoot.ctxMenuActions as IContextMenuActions<WedTxtPtrItemCtx>;\n\t\tconst ctx = new WedTxtPtrItemCtx(this);\n\t\tlet actions = txtMenuActions.actions.concat(...this.reg.mergeLists<IAction<WedTxtPtrItemCtx>>(...this.actionsLists));\n\t\tactions = ACTION.injectSepByGroup(actions, this.reg.getPref(\"groupOrder.wsp.shortDesc\", \"\"), ctx);\n\t\treturn actions && actions.length > 0 ? {actions, actionContext: ctx} : null;\n\t}\n\n\tprotected _initDispatchHighlight(init: OItemPointerInit) {\n\t\t//Le focus est porté par le TxtElement parent, pas par ce TxtPtrItem.\n\t\tthis.tabIndex = -1;\n\t}\n\n\tconnectedCallback() {\n\t\tsuper.connectedCallback();\n\t\tif (this.config.dispatchHighlight) {\n\t\t\tconst txtElt = this.txtElement;\n\t\t\ttxtElt.addEventListener('focus', this.onFocus.bind(this));\n\t\t\ttxtElt.addEventListener('blur', this.onBlur.bind(this));\n\t\t}\n\t}\n\n\t// @ts-ignore\n\tget readOnly(): boolean {return this.txtRoot.contentEditable !== 'true'}\n\n\t// disconnectedCallback() {\n\t// \tsuper.disconnectedCallback();\n\t// \t//XXX removeEventListener focus et blur ? Pas utile actuellement.\n\t// }\n\n}\n\nclass WedPtrItemCtx extends WedletActionCtx implements IShortDescCtx {\n\tfocusedElt: BoxPtrItem;\n\n\tget shortDescs(): JSrcFields[] {return this.focusedElt.shortDescs}\n\n\tget accelKeyMgr(): AccelKeyMgr<IShortDescCtx> {return this.focusedElt.accelKeyMgr}\n\n\tget reg(): IReg<IWspUiEnv> {return this.focusedElt.reg}\n\n\tget infoBroker(): IInfoBroker {return this.focusedElt.infoBroker}\n\n\t/** Ui d'appel, idéalement focusable pour reselection après dialogue. */\n\tget emitter(): HTMLElement {return this.focusedElt}\n}\n\nclass WedTxtPtrItemCtx extends WedletActionCtx implements ITxtRootContext, IShortDescCtx {\n\tfocusedElt: TxtPtrItem;\n\n\tget txtRoot(): TxtRoot {return this.focusedElt.txtRoot}\n\n\tget accelKeyMgr(): AccelKeyMgr<ITxtRootContext> {return this.focusedElt.accelKeyMgr}\n\n\tonRefreshCycle(before: boolean): 'stop' | void {return this.focusedElt.onRefreshCycle(before)}\n\n\tget shortDescs(): JSrcFields[] {return this.focusedElt.shortDescs}\n\n\tget reg(): IReg<IWspUiEnv> {return this.focusedElt.reg}\n\n\tget infoBroker(): IInfoBroker {return this.focusedElt.infoBroker}\n\n\t/** Ui d'appel, idéalement focusable pour reselection après dialogue. */\n\tget emitter(): HTMLElement {return this.focusedElt}\n}\n\n/** TxtBlock */\nexport class TxtPtrItemBlock extends TxtPtrItem {\n\tprotected _initialize(init: OItemPointerInit) {\n\t\tif (!this.reg) this.reg = this.findReg(init);\n\t\tinit.defaultAction = this.reg.getSvc(\"ptrItemDblClick\", SrcPointerDblClick.SINGLETON);\n\t\tinit.actionsLists = ACTIONS_TXT;\n\t\tinit.accelKeysLists = ACCELKEYS_TXT;\n\t\tinit.showStatus = true;\n\t\tsuper._initialize(init);\n\t\tthis.editAction = this.reg.getSvc(\"ptrItemEditAction\", SrcPointerFastSelect.SINGLETON);\n\t}\n}\n\nwindow.customElements.define(\"txt-ptritem\", TxtPtrItemBlock);\n\n/** InlObject et InlImg */\nexport class TxtPtrItemInline extends TxtPtrItem {\n\tprotected _initialize(init: OItemPointerInit) {\n\t\tif (!init.skin) init.skin = 'wsp-src-drawer-inline';\n\t\tif (!init.skinOver) init.skinOver = 'inl-ptritem';\n\t\tif (!this.reg) this.reg = this.findReg(init);\n\t\tinit.defaultAction = this.reg.getSvc(\"ptrItemDblClick\", SrcPointerDblClick.SINGLETON);\n\t\tinit.actionsLists = ACTIONS_TXT;\n\t\tinit.accelKeysLists = ACCELKEYS_TXT;\n\t\tinit.showStatus = true;\n\t\tsuper._initialize(init);\n\t\tthis.editAction = this.reg.getSvc(\"ptrItemEditAction\", SrcPointerFastSelect.SINGLETON);\n\t}\n}\n\nwindow.customElements.define(\"inl-ptritem\", TxtPtrItemInline);\n\n/** Surcharges du skin wsp-src-drawer-inline */\nREG.reg.registerSkin('inl-ptritem', 1, /* language=CSS */ `\n\t:host {\n\t\tcursor: pointer;\n\t}\n\n\t:host(:focus) {\n\t\toutline: var(--focus-outline);\n\t\toutline-offset: -2px;\n\t}\n\n\t::selection {\n\t\tcolor: currentColor;\n\t\tbackground-color: var(--edit-seltext-bgcolor);\n\t}\n`);\n\n\n/** Recherche la signature des items autorisés d'un TxtElement de type lien (uLink, objectLeaf, extBlock, inlineImg)*/\nexport function sgnPatternFromTxtElement(txtElt: TxtElement, subItemSgn?: boolean): RegExp {\n\tconst docHolder = txtElt.wedMgr.docHolder;\n\tif (!docHolder) return null;\n\tconst path = txtElt.wedAnchor;\n\tpath.push(\"sc:refUri\");\n\tconst struct = docHolder.getStruct(path, txtElt.wedAttributes && (\"sc:refUri\" in txtElt.wedAttributes) ? null : [\"@\"]);\n\t//console.log(\"struct.itSgnPattern::::\", struct ? (struct as IPtrItemRule).itSgnPattern : null);\n\treturn subItemSgn ? (struct as IPtrItemRule)?.subItSgnPattern : (struct as IPtrItemRule)?.itSgnPattern;\n}\n\n\n/**\n * SpTe editors : source du flux issu d'un ptrItem.\n */\nexport class SpTeSourceItemModel extends WedletModelBase {\n\ttransform: string;\n\n\tinitModel(config: Element): void {\n\t\tsuper.initModel(config);\n\t\tif (this.nodeType !== ENodeType.attribute) throw Error(\"SpTeSourceItem wedlet must be bind to an attribute\");\n\t\tthis.transform = config.getAttribute(\"transform\");\n\t}\n\n\tcreateWedlet(parent: IParentWedlet): IChildWedlet {\n\t\treturn new SpTeSourceItemWedlet(this, parent);\n\t}\n}\n\nWED.registerWedletModel(\"SpTeSourceItem\", SpTeSourceItemModel);\n\nexport class SpTeSourceItemWedlet extends SpTeSourceUrlWedlet {\n\n\tmodel: SpTeSourceItemModel;\n\n\twspCd: wspCd;\n\tsrcRef: srcRef;\n\n\tprotected async initUrl(txt: string) {\n\t\tconst spteElt = SPTE.findSpTeForkedWedlet(this).spTeViews[0].wedlet.spteSource;\n\t\tspteElt.setUrl(null);//reset avant de recharger la source.\n\t\tconst reg = this.wedMgr.reg as IReg<IItemUiEnv>;\n\t\tthis.wspCd = reg.env.wsp.code;\n\t\tthis.srcRef = txt;\n\t\tif (txt) {\n\t\t\tif (!this._listenItem) reg.env.place?.eventsMgr.on(\"wspUriChange\", (this._listenItem = this.listenItem.bind(this)));\n\t\t\treturn this.refreshUrl(spteElt, reg);\n\t\t} else if (this._listenItem) {\n\t\t\treg.env.place?.eventsMgr.removeListener(\"wspUriChange\", this._listenItem);\n\t\t\tthis._listenItem = undefined;\n\t\t}\n\t}\n\n\tprotected async refreshUrl(spteElt: IEltSpTeSource, reg: IReg<IItemUiEnv>) {\n\t\tconst wsp = reg.env.wsp;\n\t\tconst shortDesc = await wsp.fetchShortDesc(this.srcRef, spteElt);\n\t\tif (shortDesc && shortDesc.itModel && shortDesc.srcSt > 0 && !document.wasDiscarded) {\n\t\t\tconst srcUri = wsp.wspMetaUi.getItemType(shortDesc.itModel).getMainStreamSrcUri(shortDesc);\n\t\t\tspteElt.setUrl(WSP.getStreamUrl(wsp, srcUri, this.model.transform).url);\n\t\t}\n\t}\n\n\tprotected listenItem(msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') {\n\t\tif (LANG.in(msg.type, EWspChangesEvts.u, EWspChangesEvts.r) && SRC.srcRef(msg) === this.srcRef && msg.wspCd === this.wspCd) {\n\t\t\tthis.refreshUrl(SPTE.findSpTeForkedWedlet(this).spTeViews[0].wedlet.spteSource, this.wedMgr.reg as IReg<IItemUiEnv>);\n\t\t}\n\t}\n\n\tprotected _listenItem?: (msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') => void\n}\n\n/**\n * SpTe editors : source d'un flux avec waveform issu d'un ptrItem.\n */\nexport class SpTeStreamItemModel extends SpTeSourceItemModel {\n\tcreateWedlet(parent: IParentWedlet): IChildWedlet {\n\t\treturn new SpTeStreamItemWedlet(this, parent);\n\t}\n}\n\nWED.registerWedletModel(\"SpTeStreamItem\", SpTeStreamItemModel);\n\nexport class SpTeStreamItemWedlet extends SpTeSourceItemWedlet {\n\n\tmodel: SpTeSourceItemModel;\n\n\twspCd: wspCd;\n\tsrcRef: srcRef;\n\tnoCleanup: boolean;\n\n\tprotected async initUrl(txt: string) {\n\t\tconst currentRootMsg = this.wedMgr.currentMsgsStack[0];\n\t\tthis.noCleanup = currentRootMsg && currentRootMsg.metas && currentRootMsg.metas.noCleanup;\n\n\t\tconst spteElt = SPTE.findSpTeForkedWedlet(this).spTeViews[0].wedlet.spteSource;\n\t\tspteElt.setUrl(null);//reset avant de recharger la source.\n\t\tconst reg = this.wedMgr.reg as IReg<IItemUiEnv>;\n\t\tthis.wspCd = reg.env.wsp.code;\n\t\tthis.srcRef = txt;\n\n\t\tspteElt.setUrl(null);//reset avant de recharger la source.\n\t\tif (txt) {\n\t\t\tif (!this._listenItem) reg.env.place?.eventsMgr.on(\"wspUriChange\", (this._listenItem = this.listenItem.bind(this)));\n\t\t\treturn this.refreshUrl(spteElt, reg);\n\t\t} else {\n\t\t\treg.env.place?.eventsMgr.removeListener(\"wspUriChange\", this._listenItem);\n\t\t\tthis._listenItem = undefined;\n\t\t}\n\t}\n\n\tprotected async refreshUrl(spteElt: IEltSpTeSource, reg: IReg<IItemUiEnv>) {\n\t\tconst {wsp, universe} = this.wedMgr.reg.env;\n\t\tconst shortDesc = await wsp.fetchShortDesc(this.srcRef, spteElt);\n\t\tif (shortDesc && shortDesc.itModel && shortDesc.srcSt > 0 && !document.wasDiscarded) {\n\t\t\tconst srcUri = wsp.wspMetaUi.getItemType(shortDesc.itModel).getMainStreamSrcUri(shortDesc);\n\n\t\t\tlet url: string;\n\t\t\tlet waveformUrl: string;\n\t\t\tlet duration: number;\n\n\t\t\ttry {\n\t\t\t\tif (shortDesc.itModel.startsWith('sfile_')) {\n\t\t\t\t\turl = WSP.getStreamUrl(wsp, srcUri, this.model.transform).url;\n\t\t\t\t\t// Ressource binaire locale\n\t\t\t\t\tif ('setWaveformUrl' in spteElt) waveformUrl = WSP.getStreamUrl(wsp, srcUri, 'transform=ffmpeg&f=data&map=0:a&acodec=pcm_u8&ar=8k&ac=1&transform=waveformData&ar=8k&r=100').url;\n\t\t\t\t\tif ('setDurationProp' in spteElt) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst props = await WSP.getStreamUrl(wsp, srcUri, 'transform=ffmpeg&outType=PROPS&outFormat=json').fetchJson() as { duration: number };\n\t\t\t\t\t\t\tduration = props.duration;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tawait ERROR.log(\"Unable to retrieve the stream duration from properties\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// Ressource distante\n\t\t\t\t\tconst resp = await universe.httpFrames.web.fetchSvc(\"*u/remoteContent\");\n\t\t\t\t\tconst remoteContentFacet = \"transform=facet&facet=remoteContent\";\n\n\t\t\t\t\t// Test de l'existance du service remoteContent\n\t\t\t\t\tif (resp.ok) {\n\t\t\t\t\t\turl = await WSP.fetchStreamText(wsp, this.wedMgr.wedEditor, srcUri, `${remoteContentFacet}&outType=LOCATION&queryString=scDepot:(gotoTags\\'lowest\\')`);\n\t\t\t\t\t\tif (url && 'setWaveformUrl' in spteElt) waveformUrl = await WSP.fetchStreamText(wsp, this.wedMgr.wedEditor, srcUri, `${remoteContentFacet}&outType=LOCATION&scDepotView=waveformData`);\n\t\t\t\t\t\tif (url && 'setDurationProp' in spteElt) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst props = await WSP.getStreamUrl(wsp, srcUri, `${remoteContentFacet}&outType=CONTENT&scDepotView=originalMetas`).fetchJson() as { duration: number };\n\t\t\t\t\t\t\t\tduration = props.duration;\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tawait ERROR.log(\"Unable to retrieve the stream duration from properties\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tawait ERROR.report(\"Impossible de récupérer l'URL du flux ou de sa forme d'onde.\", e);\n\t\t\t}\n\n\t\t\tif (url) {\n\t\t\t\tspteElt.setUrl(url, this.noCleanup);\n\t\t\t\tif (waveformUrl) spteElt.setWaveformUrl(waveformUrl);\n\t\t\t\tif (duration) spteElt.setDurationProp(duration);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected listenItem(msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') {\n\t\tif (LANG.in(msg.type, EWspChangesEvts.u, EWspChangesEvts.r) && SRC.srcRef(msg) === this.srcRef && msg.wspCd === this.wspCd) {\n\t\t\tthis.noCleanup = false;\n\t\t\tthis.refreshUrl(SPTE.findSpTeForkedWedlet(this).spTeViews[0].wedlet.spteSource, this.wedMgr.reg as IReg<IItemUiEnv>);\n\t\t}\n\t}\n\n\tprotected _listenItem?: (msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') => void\n}\n\nexport const ptrItemTagsDefined = Promise.resolve();\n\n\nexport class WspDataTransferWedAnalyzer implements IDataTransferWedAnalyzer {\n\n\tstatic SINGLETON = new WspDataTransferWedAnalyzer();\n\n\tasync tryPaste(this: void, dataTrsf: DataTransfer, pasteCtx: OSkPasteContext, cache: OSkImportDatas, wedMgr: WedMgr): Promise<ISkImporter[] | null> {\n\t\t//Sources externes\n\t\tlet shortDescsTrsf = ITEM.getShortDescsTransferFromExternal(wedMgr.reg, dataTrsf, {targetSrcType: \"item\", canCreate: true}, wedMgr.wedEditor.rootNode);\n\t\tif (shortDescsTrsf) {\n\t\t\tawait shortDescsTrsf.extractDatasNow(dataTrsf);\n\t\t\tconst imps = await wedMgr.docHolder.house.schemaDom.tryPasteLinks(pasteCtx, shortDescsTrsf, cache);\n\t\t\tconst defImps = await wedMgr.tryPasteDefault(pasteCtx, cache, dataTrsf);\n\t\t\tif (imps && defImps) return [...imps, ...defImps];\n\t\t\treturn imps || defImps;\n\t\t}\n\t\t//ItemDesc internes issus de l'application.\n\t\tshortDescsTrsf = await ITEM.getShortDescsTransferFromDataTransfer(dataTrsf, wedMgr.reg.env.wsp);\n\t\tif (shortDescsTrsf) return wedMgr.docHolder.house.schemaDom.tryPasteLinks(pasteCtx, shortDescsTrsf, cache);\n\t\treturn null; //On laisse le comportement par défaut.\n\t}\n\n\textractDatasFromDragSession(this: void, dataTrsf: DataTransfer, wedMgr: WedMgr): OSkImportDatas {\n\t\tconst shortDescTrsf = ITEM.getShortDescsTransferFromDragSession(wedMgr.reg, dataTrsf, {targetSrcType: \"item\", canCreate: true}, wedMgr.wedEditor);\n\t\tif (shortDescTrsf) {\n\t\t\tif (!shortDescTrsf.isImport && shortDescTrsf.srcRefs && shortDescTrsf.srcRefs.length === 0) return {};\n\t\t\tif (shortDescTrsf.server && wedMgr.reg.env.universe.config.universeUrl.url !== shortDescTrsf.server) {\n\t\t\t\tPOPUP.showNotifInfo(\"Il est impossible d'exploiter des items d'un autre entrepôt.\", wedMgr.wedEditor);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\treturn {originalLinks: shortDescTrsf};\n\t\t}\n\t\treturn null;\n\t}\n}"]}