{"version":3,"sources":["/@back@/wsp/widgets/wed/enums/enumPrvFromItem.tsx"],"names":["WSP","BoxEnumEntry","WedEnumProvider","EWspChangesEvts","EventMgr","SRC","async","jslibAsyncInit","jsEndPoint","elt","reg","registerSvc","tpl","widget","wedMgr","wedlet","env","wsp","hasAttribute","wspCd","getAttribute","universe","wspServer","wspsLive","findWsp","wspCache","cache","enumPrv","get","EnumPrvFromItem","set","usedBy","has","add","listeners","on","delete","size","killEnum","[object Object]","super","this","onEnumChange","Set","fetchCounter","initing","init","xslUrl","itemType","datas","wspResUrl","resolve","xsl","fetchDom","xslt","XSLTProcessor","importStylesheet","e","console","error","listenChanges","place","newPlaceWsp","eventsMgr","msg","from","code","type","r","isSubUriOrEqual","srcUri","itemSrcUri","u","resetActions","emit","reset","transform","closePlace","stopListenChanges","fetching","_actions","_fetchEnum","counter","setEnabled","setLabel","Promise","isLoaded","waitForLoad","isPublic","dom","fetchStreamDom","uiRoot","Error","transformToDocument","buildActions","documentElement","filter","fetchEnum","then","getActions","key","getAction"],"mappings":"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","sourcesContent":["import {IReg} from 'lib/commons/registry';\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {IWspEnv, IWspUiEnv, JWspUriChangeMsg, WSP, Wsp} from \"lib/wsp/wsp\";\nimport {IAction} from \"lib/commons/actions\";\nimport {IEndPoint} from \"lib/commons/io/io\";\nimport {BoxEnumEntry, IBoxEnumEltWedlet, IBoxEnumProvider, WedEnumProvider} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {SRC} from \"lib/wsp/src\";\n\n/**\n * Appelé au chargement dans le WED :\n * <jslib src=\":back:wsp/widgets/wed/enums/enumPrvFromItem.js\"/>\n * Déclare un svc 'wsp-wed-enumprovider-fromitem'\n * qui doit être déclaré dans le widget Wed. Exemple :\n * <box-input-enum enumSvc=\"wsp-wed-enumprovider-fromitem\" itemSrcUri=\"\" publicWspCode?=\"\" transform?=\"\" xslUrl?=\"\"/>\n */\nexport async function jslibAsyncInit(jsEndPoint: IEndPoint, elt: Element, reg: IReg<any>) {\n\treg.registerSvc('wsp-wed-enumprovider-fromitem', 1, (tpl: Element, widget: IBoxEnumEltWedlet) => {\n\t\tconst wedMgr = widget.wedlet.wedMgr;\n\t\tconst env = wedMgr.reg.env as IWspEnv;\n\t\tlet wsp: Wsp;\n\t\tif (tpl.hasAttribute(\"publicWspCode\")) {\n\t\t\tconst wspCd = tpl.getAttribute(\"publicWspCode\");\n\t\t\twsp = env.universe.wspServer.wspsLive.findWsp(wspCd, true);\n\t\t} else {\n\t\t\twsp = env.wsp;\n\t\t}\n\t\tconst wspCache = wsp.reg.cache; //Cache sur le registre de l'atelier détenteur de cette énum.\n\t\tlet enumPrv = wspCache.get(tpl) as EnumPrvFromItem;\n\t\tif (!enumPrv) {\n\t\t\tenumPrv = new EnumPrvFromItem(tpl, wedMgr, wsp);\n\t\t\twspCache.set(tpl, enumPrv);\n\t\t}\n\t\t//Gestion du kill de l'enum\n\t\tif (!enumPrv.usedBy.has(wedMgr)) {\n\t\t\tenumPrv.usedBy.add(wedMgr);\n\t\t\twedMgr.listeners.on(\"killEditor\", () => {\n\t\t\t\tenumPrv.usedBy.delete(wedMgr);\n\t\t\t\tif (enumPrv.usedBy.size === 0) {\n\t\t\t\t\tenumPrv.killEnum();\n\t\t\t\t\twspCache.delete(tpl);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn enumPrv;\n\t});\n}\n\n/**\n * Fournisseur d'enum issu d'un item\n * <xxx itemSrcUri=\"/monItem\" publicWspCode?=\"wsp courant par défaut\" transform?=\"\" xslUrl?=\"\" />\n */\nclass EnumPrvFromItem extends WedEnumProvider implements IBoxEnumProvider {\n\tonEnumChange = new EventMgr<() => void>();\n\n\n\tusedBy: Set<WedMgr> = new Set();\n\n\tprotected initing: Promise<void>\n\tprotected fetching: Promise<void>\n\tprotected fetchCounter = 0;\n\tprotected reg: IReg<IWspUiEnv & IItemUiEnv>\n\tprotected wsp: Wsp | null;\n\tprotected itemSrcUri: string;\n\tprotected transform?: string;\n\tprotected xslUrl?: IEndPoint;\n\tprotected place: WspsLivePlace;\n\t/** Si null chargement de la xsl en erreur*/\n\tprotected xslt?: XSLTProcessor | null;\n\n\tconstructor(tpl: Element, wedMgr: WedMgr, wsp: Wsp) {\n\t\tsuper(null);\n\t\tthis.reg = wedMgr.reg;\n\t\tthis.wsp = wsp;\n\t\tthis.initing = this.init(tpl, wedMgr);\n\t}\n\n\tasync init(tpl: Element, wedMgr: WedMgr) {\n\t\ttry {\n\t\t\t// Xsl\n\t\t\tif (tpl.hasAttribute(\"xslUrl\")) {\n\t\t\t\tthis.xslUrl = this.reg.env.itemType.datas.wspResUrl.resolve(tpl.getAttribute(\"xslUrl\"));\n\t\t\t\ttry {\n\t\t\t\t\tconst xsl = await this.xslUrl.fetchDom();\n\t\t\t\t\tthis.xslt = new XSLTProcessor();\n\t\t\t\t\tthis.xslt.importStylesheet(xsl);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthis.xslt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// - Wsp\n\t\t\tif (this.wsp !== this.reg.env.wsp) {\n\t\t\t\t//Atelier public.\n\t\t\t\tthis.wsp.listenChanges();\n\t\t\t}\n\n\t\t\t// Listener sur les changements de la ressource\n\t\t\tthis.place = this.wsp.newPlaceWsp();\n\t\t\tthis.place.eventsMgr.on(\"wspUriChange\", (msg: JWspUriChangeMsg, from) => {\n\t\t\t\tif (msg.wspCd !== this.wsp.code) return;\n\t\t\t\tif ((msg.type === EWspChangesEvts.r && SRC.isSubUriOrEqual(msg.srcUri, this.itemSrcUri))\n\t\t\t\t\t|| (msg.type === EWspChangesEvts.u && this.itemSrcUri === msg.srcUri)) {\n\t\t\t\t\tif (this.resetActions()) this.onEnumChange.emit();\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst reset = () => {if (this.resetActions()) this.onEnumChange.emit()}\n\t\t\tthis.place.eventsMgr.on(\"wspLiveStateChange\", reset);\n\t\t\tthis.place.eventsMgr.on(\"onConnectionRenewed\", reset);\n\n\t\t\t// Item\n\t\t\tthis.itemSrcUri = tpl.getAttribute('itemSrcUri');\n\t\t\tthis.transform = tpl.getAttribute('transform');\n\t\t} finally {\n\t\t\tthis.initing = null; //fin de l'init\n\t\t}\n\t}\n\n\tkillEnum() {\n\t\tthis.place.closePlace();\n\t\tif (this.wsp !== this.reg.env.wsp) this.wsp.stopListenChanges();\n\t}\n\n\tprotected async fetchEnum() {\n\t\tif (this.initing) await this.initing;\n\t\tif (!this.fetching && !this._actions) this.fetching = this._fetchEnum();\n\t\twhile (this.fetching) await this.fetching;\n\t}\n\n\tprotected async _fetchEnum() {\n\t\tconst counter = this.fetchCounter;\n\t\tif (this.xslt === null) {\n\t\t\t// xsl configurée mais echec à sa construction.\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Chargement du composant en erreur\")];\n\t\t\tawait Promise.resolve();\n\t\t\tthis.fetching = null;\n\t\t\treturn;\n\t\t}\n\t\tif (this.wsp !== this.reg.env.wsp) {\n\t\t\tif (!this.wsp.isLoaded) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.wsp.waitForLoad();\n\t\t\t\t\tif (counter !== this.fetchCounter) return; //raceCond\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.fetching = null;\n\t\t\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"L'atelier contenant cette liste est inaccessible\")];\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.wsp.isPublic) {\n\t\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"L'atelier contenant cette liste n'est pas déclaré 'public' (voir les propriétés de l'atelier)\")];\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tthis.fetching = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tlet dom = await WSP.fetchStreamDom(this.wsp, this.reg.env.uiRoot, this.itemSrcUri, this.transform);\n\t\t\tif (counter !== this.fetchCounter) return; //raceCond\n\t\t\tif (!dom) throw Error(`Item '${this.itemSrcUri}' not found in wsp '${this.wsp.code}'`);\n\n\t\t\tif (this.xslt) dom = this.xslt.transformToDocument(dom);\n\n\t\t\tthis._actions = dom ? WedEnumProvider.buildActions(dom.documentElement, this) : [];\n\t\t\tthis.fetching = null;\n\t\t} catch (e) {\n\t\t\tthis.fetching = null;\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Construction de l'énumération en erreur\")];\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/** Retourne true si un reset a eu lieu */\n\tprotected resetActions(): boolean {\n\t\tthis.fetchCounter++;\n\t\tif (this.fetching) this.fetching = this._fetchEnum(); //chargement en cours annulé, on recommence.\n\t\tif (this._actions) {\n\t\t\tthis._actions = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetActions(widget: IBoxEnumEltWedlet, filter?: string): IAction<IBoxEnumEltWedlet>[] | Promise<IAction<IBoxEnumEltWedlet>[]> {\n\t\tif (!this._actions) return this.fetchEnum().then(() => super.getActions(widget, filter));\n\t\treturn super.getActions(widget, filter);\n\t}\n\n\tgetAction(key: string, widget: IBoxEnumEltWedlet): IAction<IBoxEnumEltWedlet> | null | Promise<IAction<IBoxEnumEltWedlet> | null> {\n\t\tif (!this._actions) return this.fetchEnum().then(() => super.getAction(key, widget));\n\t\treturn super.getAction(key, widget);\n\t}\n}"]}