{"version":3,"sources":["/@back@/edit/wed/wedlets/spte/spteWallpaper.tsx"],"names":["EWedletEditMode","isParentWedlet","WEDLET","BarActions","renderAppend","svg","WED","DOMSH","DOM","JSX","GFX","SVG","REG","Action","ACTION","ActionActions","InfoSpTeFocus","SPTE","SpTeSegmentWedlet","ZOOM_LEVELS","SpTeWallpaper","HTMLElement","[object Object]","this","_currentToolLstns","_percentIntFormat","Intl","NumberFormat","style","maximumFractionDigits","_percentOneDigitFormat","firstAvailableTool","tools","find","tool","isAvailable","selectedSegment","_selectedSegment","segment","internal","_zoomToOnRedraw","selectedArea","_toolBar","refreshContent","redrawSpTeView","area","areasLayer","firstElementChild","nextElementSibling","spTeSegment","redrawable","_redrawViewRequest","window","requestAnimationFrame","tplAreas","redrawTools","_updateMaskOnRedraw","updateMask","_redrawToolsRequest","clearToolsLayer","showToolsLayer","currentTool","redraw","setTimeout","isSpTeSrcAvailable","isVisible","zoomToRect","canvasContentRect","tpl","wedlet","setSpTeSource","modes","parseModes","getAttribute","forkedModes","","availableShapes","wedMgr","reg","getListAsMap","hasAttribute","creatableShapes","split","getPref","sr","attachShadow","SHADOWDOM_INIT","installSkin","shadowRoot","appendChild","scrollBox","createElement","class","zoomBox","id","contentBox","_img","onload","isConnected","onSpTeSrcChange","_insideMask","asSvg","x","y","width","height","fill","mask","toolsLayer","canvas","focusable","_currentZoom","addEventListener","onFocusin","onFocusout","spteInfoBroker","addConsumer","toolConstructors","getList","toolConstructor","push","enable","initialize","actions","actionContext","groupOrder","skinOver","_zoomSelect","value","_currentZoomOption","zoomLevel","i","level","Math","pow","formatZoomLevel","pivotPoint","clientWidth","scrollLeft","offsetLeft","clientHeight","scrollTop","offsetTop","parseFloat","centeredOnCanvasPoint","ev","MouseEvent","shiftKey","preventDefault","stopPropagation","button","setAttribute","mode","editMode","activateTool","force","deactivate","removeToolListeners","activate","lstn","lstns","ctx","target","event","capture","passive","removeEventListener","areas","forkedWedlet","visitor","w","sp","getSpatial","spShape","getShape","shape","tplArea","getCoords","console","log","visitWedletChildren","Number","MAX_SAFE_INTEGER","val","children","onDelete","model","wedModel","findModelForNode","forkedVariants","createWedlet","wedParent","spTeViews","bindWithNode","xaPart","url","src","naturalWidth","naturalHeight","spteSrcDuration","undefined","spteSrcSize","h","info","setSelection","findSpTeSegmentWedlet","findWedlet","focusXa","FINDOPTIONS_lastAncestorIfNone","findHost","SVGGraphicsElement","setAttrBool","removeAttribute","_resizeObserver","disconnect","_scrollParent","findFlatParentElt","document","documentElement","node","getComputedStyle","overflowY","ResizeObserver","entries","entry","setHeightFromScrollParent","observe","imgW","imgH","setProperty","toString","updateZoomSelect","rect","targetWidth","SPATIAL_HANDLERS_WIDTH","max","min","targetHeight","point","scrollTo","firstChild","removeChild","display","scrollHeight","getBoundingClientRect","maxHeight","minHeight","_updateMaskRequest","zoomRect","canvasRect","maskBkg","assignRectLengths","left","top","maskFrg","lastElementChild","svgElem","elemRect","getBBox","clientPoint","canvasBBox","contentRect","visibleBox","svgElemBBox","SVGSVGElement","right","bottom","remove","selectedIndex","insertCurrentBefore","option","options","selected","textContent","insertBefore","format","registerSkin","customElements","define","SpTeSpatialTool","api","SpTeSpatialToolSelect","addToolListener","handleEvent","dispatchInfo","wedAnchor","write","key","docHolder","newBatch","deleteSequence","doBatch","SpTeSpatialToolMove","super","isEnabled","transform","ownerSVGElement","createSVGTransform","baseVal","_moveData","start","screenX","screenY","delta","hideToolsLayer","setTranslate","removeItem","translateArea","freezeFocus","updateSpatial","areaCoords","onCancel","clear","SpTeSpatialToolNodesBase","nodes","areaNodes","appendHandler","SpTeSpatialToolMoveNodes","handler","nodeStart","handlers","Array","from","updateAreaFromNodes","map","indexOf","SpTeSpatialToolAddNodes","_label","_group","_icon","_a","SVGPolygonElement","canvasPoint","clientToCanvasPoint","clientX","clientY","points","sortedPoints","sort","point1","point2","vecLength","closestPointIdx","prevPointIdx","length","nextPointIdx","refPointIdx","closestBrotherPoint","polyline","appendItem","createSVGPoint","Object","assign","getItem","_data","insertItemBefore","refreshToolbarContent","SpTeSpatialToolRemoveNodes","numberOfItems","SVGCircleElement","prototype","findIndex","call","SpTeSpatialToolHandle","_subTools","subTool","SpTeSpatialToolZoomAndPan","_zoomOutModifier","isAccelPressed","zoomed","deltaY","_zoomIn","_zoomOut","cursor","clearTimeout","_zoomOutCursorTimeout","wallpaper","maxLevel","sqrt","minLevel","SpTeSpatialToolCreate","uiContext","parent","shapes","keys","shapeKey","createAction","currentCreateAction","findReg","createTool","actionBtn","action","actionsBtn","lastAsDefault","baseOnCancel","_fromRectData","emptyArea","current","updateAreaFromRect","_fromPolyData","startSvgPoint","lastPoint","startHandler","_addLastPointListeners","SpTeSpatialCreateAction","addToList","SpTeShapeRect","rounded","setLabel","setDescription","setIcon","spCoords","coords","coord","RoundedRectNode","rx","nodeIndex","join","SpTeShapeCircle","cx","cy","r","abs","SpTeShapeEllipse","ry","SpTeShapePolygon","_rect","_y","rectY","minMaxR","halfWidth","createElementNS","SVG_NS","setRotate","classList","add","strokeWidth"],"mappings":"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","sourcesContent":["import {IInfo, IInfoConsumer} from \"lib/commons/infos\";\nimport {EWedletEditMode, IChildWedlet, IParentWedlet, isParentWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {BarActions} from \"back/commons/widgets/bars\";\nimport {renderAppend, svg, TemplateResult} from \"lib/commons/utils/htmlLit\";\nimport {WED} from \"back/edit/wed/wedCore\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {DOM, INodeFilter, JSX} from \"lib/commons/xml/dom\";\nimport {IJmlNode, IJmlSubSet} from \"lib/commons/xml/jml\";\nimport {GFX, SVG} from \"lib/commons/utils/gfx\";\nimport {REG} from \"lib/commons/registry\";\nimport {Action, ACTION, EButtonUiContext, IActionToggle} from \"lib/commons/actions\";\nimport {ActionActions, OActionActionsInit} from \"back/commons/widgets/buttons\";\nimport {BoxSpTeRootWedlet, IEltSpTeSource, InfoSpTeFocus, ISpTeForkedWedlet, SPTE, SpTeSegmentWedlet} from \"back/edit/wed/wedlets/spte/spte\";\n\n\ninterface ISpTeSpatialEditor extends IEltSpTeSource, IInfoConsumer {\n\ttools: IActionToggle<ISpTeSpatialEditor>[];\n}\n\ntype ISpTeSpatialArea<S extends SVGGraphicsElement = SVGGraphicsElement> = S & { spTeSegment: SpTeSegmentWedlet };\n\nconst ZOOM_LEVELS = 3;\n\ninterface ISpTeSpatialNode extends GFX.IPoint {\n\tshape?: 'circle' | 'diamond';\n}\n\n/**\n * Widget avec une image de fond et les areas dessinées.\n *\n * Attributs :\n *  - creatable-shapes Liste des formes créables, séparées par des espaces\n */\nexport class SpTeWallpaper extends HTMLElement implements IEltSpTeSource, IInfoConsumer {\n\n\twedlet: BoxSpTeRootWedlet;\n\n\tforkedWedlet: ISpTeForkedWedlet;\n\n\t/** modes pour le fork des wedlets fournissant la source et les areas. */\n\tforkedModes: Dict<string[]>;\n\n\tforkedVariants: Dict<string>;\n\n\t/** Formes disponibles et listes des outils */\n\tavailableShapes: Dict<ISpTeShape<any>>;\n\tcreatableShapes: string[];\n\ttools: ISpTeSpatialTool[];\n\tcurrentTool: ISpTeSpatialTool;\n\n\tget firstAvailableTool() {\n\t\treturn this.tools.find((tool) => tool.isAvailable(this));\n\t}\n\n\t/** Container et couches graphiques manipulable par les outils */\n\tscrollBox: HTMLDivElement;\n\tzoomBox: HTMLDivElement;\n\tcontentBox: HTMLDivElement;\n\tcanvas: SVGSVGElement;\n\tareasLayer: SVGGElement;\n\ttoolsLayer: SVGGElement;\n\n\t/** Mode d'écriture */\n\teditMode: EWedletEditMode;\n\n\tredrawable: boolean;\n\n\tprotected _toolBar: BarActions<SpTeWallpaper>;\n\tprotected _zoomSelect: HTMLSelectElement;\n\tprotected _currentZoomOption: HTMLOptionElement;\n\tprotected _img: HTMLImageElement;\n\tprotected _insideMask: SVGMaskElement;\n\tprotected _scrollParent: HTMLElement;\n\tprotected _currentToolLstns: ISpTeSpatialListener<ISpTeSpatialTool>[] = [];\n\tprotected _currentZoom: number;\n\tprotected _selectedSegment: SpTeSegmentWedlet;\n\tprotected _redrawViewRequest: number;\n\tprotected _redrawToolsRequest: number;\n\tprotected _resizeObserver: ResizeObserver;\n\tprotected _updateMaskRequest: number;\n\n\tprotected _zoomToOnRedraw: SVGGraphicsElement;\n\tprotected _updateMaskOnRedraw: boolean;\n\n\tprotected _percentIntFormat = new Intl.NumberFormat(\"fr\", {style: 'percent', maximumFractionDigits: 0});\n\tprotected _percentOneDigitFormat = new Intl.NumberFormat(\"fr\", {style: 'percent', maximumFractionDigits: 1});\n\n\t/** Retourne le segment sélectionné */\n\tget selectedSegment(): SpTeSegmentWedlet {\n\t\treturn this._selectedSegment\n\t}\n\n\t/**\n\t * Défini la sélection courante\n\t * @param segment Le segment a sélectionner\n\t * @param internal À définir à true si l'origine de la séléction est interne pour éviter un redraw complet\n\t */\n\tsetSelection(segment: SpTeSegmentWedlet, internal = false) {\n\t\tif (this._selectedSegment === segment) return;\n\t\tthis._selectedSegment = segment;\n\t\tif (!internal) this._zoomToOnRedraw = this.selectedArea;\n\t\tthis._toolBar.refreshContent();\n\t\tthis.redrawSpTeView();\n\t}\n\n\t/** Retourne l'area correspondante à la sélection par parcours des areas disponibles */\n\tget selectedArea(): ISpTeSpatialArea {\n\t\tfor (let area = this.areasLayer.firstElementChild as ISpTeSpatialArea; area; area = area.nextElementSibling as ISpTeSpatialArea) {\n\t\t\tif (area.spTeSegment === this._selectedSegment) return area;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Lance une requête de redessinement de la vue */\n\tredrawSpTeView(): void {\n\t\tif (!this.redrawable || this._redrawViewRequest) return;\n\t\tthis._redrawViewRequest = window.requestAnimationFrame(() => {\n\t\t\tthis._redrawViewRequest = 0;\n\t\t\trenderAppend(this.tplAreas(), this.areasLayer);\n\t\t\tthis.redrawTools();\n\t\t\tif (this._updateMaskOnRedraw) {\n\t\t\t\tthis.updateMask();\n\t\t\t\tthis._updateMaskOnRedraw = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Lance une requête de redessinement de l'outil courant */\n\tredrawTools() {\n\t\tif (this._redrawToolsRequest) return;\n\t\tthis._redrawToolsRequest = window.requestAnimationFrame(() => {\n\t\t\tthis._redrawToolsRequest = 0;\n\t\t\tthis.clearToolsLayer();\n\t\t\tthis.showToolsLayer();\n\t\t\tif (this.redrawable) {\n\t\t\t\tif (this.currentTool && 'redraw' in this.currentTool) this.currentTool.redraw(this);\n\t\t\t\tif (this._zoomToOnRedraw) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (this._zoomToOnRedraw && this.isSpTeSrcAvailable && !this.isVisible(this._zoomToOnRedraw)) this.zoomToRect(this.canvasContentRect(this._zoomToOnRedraw));\n\t\t\t\t\t\tthis._zoomToOnRedraw = null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet): void {\n\t\tthis.redrawable = false;\n\t\t/* Initialisation du wedlet et des modes */\n\t\tthis.wedlet = wedlet as BoxSpTeRootWedlet;\n\t\tthis.wedlet.setSpTeSource(this);\n\t\tconst modes = WED.parseModes(this.getAttribute(\"wedlet-modes\"));\n\t\tif (modes) this.forkedModes = {'': modes};\n\n\t\t/* Récupération des formes disponibles dans le registre et des créables dans l'attribut */\n\t\tthis.availableShapes = this.wedlet.wedMgr.reg.getListAsMap(\"wed:spTeSpatial:shapes\") as Dict<ISpTeShape<any>>;\n\t\tif (this.hasAttribute('creatable-shapes')) this.creatableShapes = this.getAttribute('creatable-shapes').split(' ');\n\t\t// Par défaut, on active que les trois formes \"historiques\"\n\t\telse this.creatableShapes = this.wedlet.wedMgr.reg.getPref('spte.creatableShapes', ['rect', 'circle', 'poly']);\n\n\t\t/* Initialisation du shadow */\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.wedlet.wedMgr.reg.installSkin(\"spte-wallpaper\", this.shadowRoot);\n\t\tthis.wedlet.wedMgr.reg.installSkin(\"scroll/large\", this.shadowRoot);\n\t\tthis._toolBar = sr.appendChild(new BarActions<SpTeWallpaper>());\n\t\tthis.scrollBox = sr.appendChild(<div class=\"scrollBox\"/>) as HTMLDivElement;\n\t\tthis.zoomBox = this.scrollBox.appendChild(<div id=\"zoomBox\"/>) as HTMLDivElement;\n\t\tthis.contentBox = this.zoomBox.appendChild(<div id=\"content\"/>) as HTMLDivElement;\n\t\tthis._img = this.contentBox.appendChild(<img/>) as HTMLImageElement;\n\t\tthis._img.onload = () => {\n\t\t\tif (this.isConnected) this.onSpTeSrcChange();\n\t\t};\n\n\t\tthis._insideMask = JSX.asSvg(() => <mask id=\"insideMask\">\n\t\t\t<rect x=\"0\" y=\"0\" width=\"0\" height=\"0\" fill=\"#444\"/>\n\t\t\t<rect x=\"0\" y=\"0\" width=\"0\" height=\"0\" fill=\"white\"/>\n\t\t</mask>) as SVGMaskElement;\n\t\tthis.areasLayer = JSX.asSvg(() => <g id=\"areasLayer\" mask=\"url(#insideMask)\"/>) as SVGGElement;\n\t\tthis.toolsLayer = JSX.asSvg(() => <g id=\"toolsLayer\"/>) as SVGGElement;\n\t\tthis.canvas = this.contentBox.appendChild(JSX.asSvg(() => <svg focusable=\"false\">{[\n\t\t\tthis._insideMask,\n\t\t\tthis.areasLayer,\n\t\t\tthis.toolsLayer\n\t\t]}</svg>)) as SVGSVGElement;\n\n\t\t// Dessin initial de la vue\n\t\tthis._currentZoom = 1;\n\n\t\t// Gestion de la sélection\n\t\tthis.addEventListener('focusin', this.onFocusin);\n\t\tthis.addEventListener('focusout', this.onFocusout);\n\t\tthis.wedlet.spteInfoBroker.addConsumer(this);\n\n\t\t// Initialisation des outils et de la toolbar\n\t\tconst toolConstructors = this.wedlet.wedMgr.reg.getList(\"actions:wed:spte:spatial:tools\") as Constructor<ISpTeSpatialTool>[];\n\t\tthis.tools = [];\n\t\tfor (const toolConstructor of toolConstructors) {\n\t\t\tconst tool = new toolConstructor;\n\t\t\tthis.tools.push(tool);\n\t\t\tif ('enable' in tool) tool.enable(this);\n\t\t}\n\t\tthis._toolBar.initialize({\n\t\t\tactions: this.tools,\n\t\t\tactionContext: this,\n\t\t\tgroupOrder: \"main secondary\",\n\t\t\tskinOver: \"spte-wallpaper/toolbar\"\n\t\t});\n\t\t/* Initialisation de la liste de choix du zoom */\n\t\tthis._zoomSelect = this._toolBar.shadowRoot.appendChild(<select id=\"zoomSelect\">\n\t\t\t<option value=\"toImage\">Ajusté</option>\n\t\t</select> as HTMLSelectElement);\n\t\tthis._currentZoomOption = <option value={this.zoomLevel}/> as HTMLOptionElement;\n\t\tfor (let i = ZOOM_LEVELS; i >= -ZOOM_LEVELS; i--) {\n\t\t\tconst level = 1 * Math.pow(2, i);\n\t\t\tthis._zoomSelect.appendChild(<option value={level}>{this.formatZoomLevel(level)}</option>);\n\t\t}\n\t\tthis._zoomSelect.addEventListener('change', () => {\n\t\t\tif (this._zoomSelect.value == 'toImage') {\n\t\t\t\tthis.zoomToRect(this.canvasContentRect(this.canvas));\n\t\t\t} else {\n\t\t\t\tconst pivotPoint = {\n\t\t\t\t\tx: ((this.scrollBox.clientWidth / 2) + this.scrollBox.scrollLeft - this.contentBox.offsetLeft) / this.zoomLevel,\n\t\t\t\t\ty: ((this.scrollBox.clientHeight / 2) + this.scrollBox.scrollTop - this.contentBox.offsetTop) / this.zoomLevel\n\t\t\t\t};\n\t\t\t\tthis.zoomLevel = parseFloat(this._zoomSelect.value);\n\t\t\t\tthis.centeredOnCanvasPoint(pivotPoint);\n\t\t\t}\n\t\t});\n\n\t\t// Désactivation du clic droit sur l'ensemble de la vue\n\t\tthis.addEventListener('contextmenu', (ev: Event) => {\n\t\t\tif (ev instanceof MouseEvent && ev.shiftKey) return;\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\t\t});\n\n\t\tthis.addEventListener('pointerdown', (ev: MouseEvent) => {\n\t\t\tif (ev.button == 1) ev.preventDefault();\n\t\t\tev.stopPropagation();\n\t\t});\n\n\t\t// Désactivation du drag dans le cas où un ancètre en pose un\n\t\tthis.setAttribute(\"draggable\", \"true\");\n\t\tthis.addEventListener('dragstart', (ev) => {\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\t\t});\n\t}\n\n\t/** A appeler par le wedlet en cas de changement de IEditableWedlet.editMode. */\n\tsetEditMode(mode: EWedletEditMode): void {\n\t\tthis.editMode = mode;\n\t\tif (this.currentTool) {\n\t\t\tif (this.currentTool.isAvailable(this)) this.activateTool(this.currentTool, true);\n\t\t\telse this.activateTool(this.firstAvailableTool);\n\t\t} else {\n\t\t\tthis._toolBar.refreshContent();\n\t\t\tthis.redrawTools();\n\t\t}\n\t}\n\n\t/**\n\t * Active un outil, en désactivant au préalable celui courant\n\t * @param tool L'outil à activer\n\t * @param force Force l'appel à la méthode activate pour même si l'outil n'a pas changé, utile pour les changements de mode d'écriture\n\t */\n\tactivateTool(tool: ISpTeSpatialTool, force: boolean = false) {\n\t\tif (this.currentTool) {\n\t\t\tif (!force && this.currentTool == tool) return;\n\t\t\tif ('deactivate' in this.currentTool) this.currentTool.deactivate(this);\n\t\t\t// Les listeners propre à l'outil sont systématiquement supprimé sur la désactivation\n\t\t\tthis.removeToolListeners();\n\t\t}\n\t\tthis._currentToolLstns = [];\n\t\tthis.clearToolsLayer();\n\t\tthis.currentTool = tool;\n\t\tif (tool) {\n\t\t\tthis.currentTool.activate(this);\n\t\t\tthis.redrawTools();\n\t\t}\n\t\tthis._toolBar.refreshContent();\n\t}\n\n\t/**\n\t * Ajoute un listener pour l'outil courant\n\t * @param lstn Le listener a ajouté, les propriétés tool et ctx sont définie si non précisée\n\t * @param lstn Tableau de listener dans lequel ajouter le lstn, pour être passé ensuite à {@link removeToolListeners}\n\t */\n\taddToolListener(lstn: ISpTeSpatialListener<any>, lstns = this._currentToolLstns) {\n\t\tlstns.push(lstn);\n\t\tif (!lstn.tool) lstn.tool = this.currentTool;\n\t\tif (!lstn.ctx) lstn.ctx = this;\n\t\tlstn.target.addEventListener(lstn.event, lstn, {capture: lstn.capture, passive: lstn.passive});\n\t}\n\n\t/**\n\t * Désenregistre l'ensemble des listeners d'un outil (ou d'une liste passé spécifiquement en paramètre)\n\t */\n\tremoveToolListeners(lstns = this._currentToolLstns) {\n\t\tfor (const lstn of lstns) lstn.target.removeEventListener(lstn.event, lstn, lstn.capture);\n\t}\n\n\t/**\n\t * Template de création des areas\n\t */\n\tprotected tplAreas(): TemplateResult {\n\t\tconst areas: TemplateResult[] = [];\n\t\tif (this.forkedWedlet) {\n\t\t\tconst visitor = (w: IChildWedlet): void | 'stop' => {\n\t\t\t\tif (w instanceof SpTeSegmentWedlet) {\n\t\t\t\t\tconst sp = w.getSpatial();\n\t\t\t\t\tif (sp) {\n\t\t\t\t\t\tconst spShape = sp.getShape();\n\t\t\t\t\t\tconst shape = this.availableShapes[spShape];\n\t\t\t\t\t\tif (shape) {\n\t\t\t\t\t\t\tareas.push(shape.tplArea(spShape, sp.getCoords(), w, this._selectedSegment === w));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(`Unknow shape ${sp.getShape()}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isParentWedlet(w)) (w as IParentWedlet).visitWedletChildren(0, Number.MAX_SAFE_INTEGER, visitor);\n\t\t\t};\n\t\t\tthis.forkedWedlet.visitWedletChildren(0, Number.MAX_SAFE_INTEGER, visitor);\n\t\t}\n\t\treturn svg`${areas}`;\n\t}\n\n\trefreshBindValue(val: IJmlNode | string, children?: IJmlSubSet): void {\n\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\tif (this.forkedWedlet) {\n\t\t\tthis.forkedWedlet.onDelete();\n\t\t\tthis.forkedWedlet = null;\n\t\t}\n\t\tif (val !== null && typeof val === 'object') {\n\t\t\tconst model = wedMgr.wedModel.findModelForNode(val, this.forkedModes, this.forkedVariants, this.wedlet);\n\t\t\tif (model) {\n\t\t\t\tthis.forkedWedlet = model.createWedlet(this.wedlet.wedParent) as ISpTeForkedWedlet;\n\t\t\t\tthis.forkedWedlet.spTeViews = [this];\n\t\t\t\tthis.forkedWedlet.bindWithNode(this.wedlet.xaPart, val, children);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetUrl(url: string) {\n\t\tif (url) {\n\t\t\t// this.onSpTeSrcChange() sera appelé sur l'event onload\n\t\t\tthis._img.src = url;\n\t\t} else {\n\t\t\tthis._img.src = '';\n\t\t\tif (this.isConnected) this.onSpTeSrcChange();\n\t\t}\n\t}\n\n\tget isSpTeSrcAvailable(): boolean {\n\t\treturn this._img && this._img.naturalWidth > 0 && this._img.naturalHeight > 0\n\t};\n\n\tget spteSrcDuration(): number | undefined {\n\t\treturn undefined\n\t}\n\n\tget spteSrcSize(): { w: number, h: number } | undefined {\n\t\treturn this._img.naturalWidth > 0 && this._img.naturalHeight > 0 ? {w: this._img.naturalWidth, h: this._img.naturalHeight} : undefined\n\t};\n\n\tonInfo(info: IInfo): void {\n\t\tif (info instanceof InfoSpTeFocus) {\n\t\t\t//Un autre widget du spTeEditor ou un wedlet Box de l'éditeur principal impose un changement de focus\n\t\t\tif (this.forkedWedlet) {\n\t\t\t\tthis.setSelection(SPTE.findSpTeSegmentWedlet(WEDLET.findWedlet(this.forkedWedlet, info.focusXa, WEDLET.FINDOPTIONS_lastAncestorIfNone)));\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO Voir si la gestion du selectin reste utile\n\tprotected onFocusin(ev: FocusEvent) {\n\t\tDOMSH.findHost(this).setAttribute(\"selectin\", \"\");\n\t\tconst target = ev.target;\n\t\tif (target instanceof SVGGraphicsElement) {\n\t\t\tDOM.setAttrBool(target, \"spte-selected\", true);\n\t\t}\n\t}\n\n\t// TODO Voir si la gestion du selectin reste utile\n\tprotected onFocusout() {\n\t\tDOMSH.findHost(this).removeAttribute(\"selectin\");\n\t}\n\n\tconnectedCallback() {\n\t\tif (this.isSpTeSrcAvailable) this.onSpTeSrcChange();\n\t}\n\n\t/** Appelé sur un changement de l'image source si connecté */\n\tonSpTeSrcChange() {\n\t\tif (!this.isSpTeSrcAvailable) {\n\t\t\tif (this._resizeObserver) {\n\t\t\t\tthis._resizeObserver.disconnect();\n\t\t\t\tthis._resizeObserver = null;\n\t\t\t}\n\t\t\tthis.redrawable = false;\n\t\t\trenderAppend(null, this.areasLayer);\n\t\t\tthis.activateTool(null);\n\t\t\tthis.zoomLevel = 1;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.canvas.setAttribute('viewBox', `0 0 ${this._img.naturalWidth} ${this._img.naturalHeight}`);\n\n\t\tif (!this.redrawable) {\n\t\t\tthis._scrollParent = DOMSH.findFlatParentElt(this, document.documentElement, ((node) => {\n\t\t\t\treturn getComputedStyle(node).overflowY != 'visible';\n\t\t\t}) as INodeFilter<HTMLElement>);\n\n\t\t\t// ResizeObserver\n\t\t\tthis._resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tif (this._redrawViewRequest) return;\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tif (entry.target === this._scrollParent) this.setHeightFromScrollParent();\n\t\t\t\t\telse if (entry.target === this) this.updateMask();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._resizeObserver.observe(this);\n\t\t\tthis._resizeObserver.observe(this._scrollParent);\n\t\t\tthis.redrawable = true;\n\t\t}\n\t\tthis.activateTool(this.firstAvailableTool);\n\t\tthis.setHeightFromScrollParent();\n\t\tthis._zoomToOnRedraw = this.canvas;\n\t\tthis._updateMaskOnRedraw = true;\n\t\tthis.redrawSpTeView();\n\t}\n\n\tget zoomLevel(): number {\n\t\treturn this._currentZoom;\n\t}\n\n\tset zoomLevel(val: number) {\n\t\tthis._currentZoom = val;\n\t\tif (this.isSpTeSrcAvailable) {\n\t\t\tconst {w: imgW, h: imgH} = this.spteSrcSize;\n\t\t\tthis._img.width = imgW * this._currentZoom;\n\t\t\tthis._img.height = imgH * this._currentZoom;\n\t\t}\n\t\tthis.style.setProperty('--zoom-level', this._currentZoom.toString());\n\t\tthis.redrawTools();\n\t\tthis.updateMask();\n\t\tthis.updateZoomSelect();\n\t}\n\n\tzoomToRect(rect: GFX.IRect): void {\n\t\tif (!this.zoomBox.clientWidth || !this.zoomBox.clientHeight) return;\n\t\tconst {w: imgW, h: imgH} = this.spteSrcSize;\n\t\tconst targetWidth = imgW + SPATIAL_HANDLERS_WIDTH * 2 + Math.max(-Math.min(rect.x, 0), rect.x + rect.width - imgW) * 2;\n\t\tconst targetHeight = imgH + SPATIAL_HANDLERS_WIDTH * 2 + Math.max(-Math.min(rect.y, 0), rect.y + rect.height - imgH) * 2;\n\t\tthis.zoomLevel = Math.min(this.zoomBox.clientWidth / targetWidth, this.zoomBox.clientHeight / targetHeight);\n\t}\n\n\tcenteredOnCanvasPoint(point: GFX.IPoint) {\n\t\tthis.scrollBox.scrollTo(((point.x * this.zoomLevel) - (this.zoomBox.clientWidth / 2)), ((point.y * this.zoomLevel) - (this.zoomBox.clientHeight / 2)));\n\t}\n\n\tclearToolsLayer(): void {\n\t\twhile (this.toolsLayer.firstChild) this.toolsLayer.removeChild(this.toolsLayer.firstChild);\n\t}\n\n\thideToolsLayer(): void {\n\t\tthis.toolsLayer.style.display = 'none';\n\t}\n\n\tshowToolsLayer(): void {\n\t\tthis.toolsLayer.style.display = '';\n\t}\n\n\tsetHeightFromScrollParent(): void {\n\t\tconst scrollHeight = this._scrollParent.getBoundingClientRect().height;\n\t\tthis.style.maxHeight = (scrollHeight - 40) + 'px';\n\t\tthis.style.minHeight = scrollHeight / 2 + 'px';\n\t}\n\n\t/** Mise à jour du mask de visibilité */\n\tupdateMask(): void {\n\t\tif (this._updateMaskRequest) return;\n\t\tthis._updateMaskRequest = window.requestAnimationFrame(() => {\n\t\t\tthis._updateMaskRequest = 0;\n\t\t\tconst zoomRect = this.zoomBox.getBoundingClientRect();\n\t\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\t\tconst maskBkg = this._insideMask.firstElementChild as SVGRectElement;\n\t\t\tSVG.assignRectLengths(maskBkg, {\n\t\t\t\tx: (zoomRect.left - canvasRect.left) / this.zoomLevel,\n\t\t\t\ty: (zoomRect.top - canvasRect.top) / this.zoomLevel,\n\t\t\t\twidth: zoomRect.width / this.zoomLevel,\n\t\t\t\theight: zoomRect.height / this.zoomLevel\n\t\t\t});\n\t\t\tconst maskFrg = this._insideMask.lastElementChild as SVGRectElement;\n\t\t\tif (this.isSpTeSrcAvailable) {\n\t\t\t\tconst {w: imgW, h: imgH} = this.spteSrcSize;\n\t\t\t\tSVG.assignRectLengths(maskFrg, {\n\t\t\t\t\twidth: imgW,\n\t\t\t\t\theight: imgH\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tSVG.assignRectLengths(maskFrg, {\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Retourne un rectangle incluant l'élément en paramètre et le canvas */\n\tcanvasContentRect(svgElem: SVGGraphicsElement): GFX.IRect {\n\t\tconst {w: imgW, h: imgH} = this.spteSrcSize;\n\t\tconst elemRect = svgElem.getBBox();\n\t\tconst x = Math.min(elemRect.x, 0);\n\t\tconst y = Math.min(elemRect.y, 0);\n\t\treturn {\n\t\t\tx,\n\t\t\ty,\n\t\t\twidth: Math.max(elemRect.x + elemRect.width, imgW) - x,\n\t\t\theight: Math.max(elemRect.y + elemRect.height, imgH) - y\n\t\t};\n\t}\n\n\tclientToCanvasPoint(clientPoint: GFX.IPoint): GFX.IPoint {\n\t\tconst canvasBBox = this.canvas.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: (clientPoint.x - canvasBBox.left) / this.zoomLevel,\n\t\t\ty: (clientPoint.y - canvasBBox.top) / this.zoomLevel\n\t\t};\n\t}\n\n\t/** Test si l'élément passé en paramètre est visible */\n\tisVisible(svgElem: SVGGraphicsElement): boolean {\n\t\tconst contentRect = this.contentBox.getBoundingClientRect();\n\t\tconst visibleBox = {\n\t\t\tx: (this.scrollBox.scrollLeft - this.contentBox.offsetLeft) / this.zoomLevel,\n\t\t\ty: (this.scrollBox.scrollTop - this.contentBox.offsetTop) / this.zoomLevel,\n\t\t\twidth: this.scrollBox.clientWidth / this.zoomLevel,\n\t\t\theight: this.scrollBox.clientHeight / this.zoomLevel\n\t\t};\n\t\tconst svgElemBBox = svgElem.getBBox();\n\t\tif (svgElem instanceof SVGSVGElement) {\n\t\t\tsvgElemBBox.x = Math.min(svgElemBBox.x, 0);\n\t\t\tsvgElemBBox.y = Math.min(svgElemBBox.y, 0);\n\t\t\tconst right = Math.max(svgElemBBox.x + svgElemBBox.width, contentRect.width);\n\t\t\tsvgElemBBox.width = right - svgElemBBox.x;\n\t\t\tconst bottom = Math.max(svgElemBBox.y + svgElemBBox.height, contentRect.height);\n\t\t\tsvgElemBBox.height = bottom - svgElemBBox.y;\n\t\t}\n\t\treturn svgElemBBox.x > visibleBox.x\n\t\t\t&& svgElemBBox.y > visibleBox.y\n\t\t\t&& svgElemBBox.x + svgElemBBox.width < visibleBox.x + visibleBox.width\n\t\t\t&& svgElemBBox.y + svgElemBBox.height < visibleBox.y + visibleBox.height;\n\t}\n\n\tupdateZoomSelect(): void {\n\t\tthis._currentZoomOption.remove();\n\t\tthis._zoomSelect.selectedIndex = -1;\n\t\tlet insertCurrentBefore = null;\n\t\tfor (const option of this._zoomSelect.options) {\n\t\t\tif (option.value != \"toImage\") {\n\t\t\t\tconst value = parseFloat(option.value);\n\t\t\t\tif (value == this.zoomLevel) {\n\t\t\t\t\toption.selected = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value < this.zoomLevel) {\n\t\t\t\t\tinsertCurrentBefore = option;\n\t\t\t\t\tbreak;\n\t\t\t\t\tthis._currentZoomOption.textContent = this.formatZoomLevel(this.zoomLevel);\n\t\t\t\t\tthis._zoomSelect.insertBefore(this._currentZoomOption, option);\n\t\t\t\t\tthis._currentZoomOption.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._zoomSelect.selectedIndex == -1) {\n\t\t\tthis._currentZoomOption.textContent = this.formatZoomLevel(this.zoomLevel);\n\t\t\tthis._zoomSelect.insertBefore(this._currentZoomOption, insertCurrentBefore);\n\t\t\tthis._currentZoomOption.selected = true;\n\t\t}\n\t}\n\n\tformatZoomLevel(level: number) {\n\t\treturn (level < 1 ? this._percentOneDigitFormat : this._percentIntFormat).format(level);\n\t}\n\n\trefreshToolbarContent() {\n\t\tthis._toolBar.refreshContent();\n\t}\n}\n\nREG.reg.registerSkin('spte-wallpaper', 1, /* language=CSS */ `\n    :host {\n        display: flex;\n        min-width: 0;\n        min-height: 640px;\n        flex-direction: column;\n        background-color: var(--bgcolor);\n    }\n\n\t.scrollBox {\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\toverflow: auto;\n\t\tflex: 1;\n\t\tbackground-color: var(--edit-bgcolor);\n\t\tposition: relative;\n\t}\n\n\t#zoomBox {\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\tflex: 1;\n\t\tuser-select: none;\n\t}\n\n\t#content {\n\t\tposition: relative;\n\t\tmargin: auto;\n\t}\n\n\t#content > img {\n\t\tdisplay: block;\n\t}\n\n\tsvg {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\n    .area {\n        stroke-width: 0.5;\n        stroke: black;\n        stroke-opacity: 1;\n        fill: green;\n        fill-opacity: 0.3;\n    }\n\n\t[spte-selected] {\n\t\tfill: #2090ff;\n\t}\n\n    .handler {\n        fill: white;\n        stroke: black;\n        stroke-width: 1;\n    }\n`);\n\nREG.reg.registerSkin('spte-wallpaper/toolbar', 1, /* language=CSS */ `\n\t::slotted(hr) {\n\t\tborder: none;\n\t\tflex: 1;\n\t}\n\n\t#zoomSelect {\n\t\tborder: 1px outset var(--border-color);\n\t\tborder-radius: 3px;\n\t\tmargin-inline: 1px;\n\t\tfont-size: var(--label-size);\n\t\tbackground-color: transparent;\n\t\tpadding: 2px 4px;\n\t\tbox-sizing: content-box;\n\t\theight: var(--icon-size);\n\t\twidth: 4.8em;\n\t}\n\n\t#zoomSelect:focus {\n\t\tbackground-color: var(--pressed-bgcolor);\n\t\tborder-style: inset;\n\t}\n`);\n\nwindow.customElements.define(\"spte-wallpaper\", SpTeWallpaper);\n\nconst SPATIAL_HANDLERS_WIDTH = 10;\n\n/**\n * Interface pour un outil de l'éditeur spatial.\n *\n * L'activation d'un outil désactive tout les autres, c'est pourquoi il hérite de IActionToggle\n */\nexport interface ISpTeSpatialTool extends IActionToggle<SpTeWallpaper> {\n\n\t/**\n\t * Appelé dès l'initialisation de l'éditeur.\n\t * Permet de définir pour toutes la durées de vie de l'éditeur.\n\t * @param ctx\n\t */\n\tenable?(ctx: SpTeWallpaper): void;\n\n\t/**\n\t * Méthode principale d'éxecution de l'outil/action, à utiliser à la place de l'execute de IAction\n\t * @param ctx\n\t */\n\tactivate(ctx: SpTeWallpaper): void;\n\n\t/**\n\t * Méthode de désactivation de l'outil\n\t * @param ctx\n\t */\n\tdeactivate?(ctx: SpTeWallpaper): void;\n\n\t/**\n\t * Méthode de dessin de l'outil. Appellé à chaque refresh de l'éditeur\n\t * @param ctx\n\t */\n\tredraw?(ctx: SpTeWallpaper): void;\n}\n\n/**\n * Interface d'EventListener DOM contenant toutes les propriétés nécessaires à son enregistrement et désenregistrement\n */\ninterface IEventListenerSelfObject extends EventListenerObject {\n\ttarget: EventTarget,\n\tevent: string,\n\tcapture?: boolean,\n\tpassive?: boolean,\n\thandleEvent: (this: this, evt?: Event) => void;\n}\n\n/**\n * Interface de listener contenant une référence à l'outil et le contexte\n */\ninterface ISpTeSpatialListener<T extends ISpTeSpatialTool> extends IEventListenerSelfObject {\n\t/** L'outil qui enregistre ce listener, défini par {@link SpTeWallpaper.addToolListener} si non précisé */\n\ttool?: T,\n\n\t/** Le contexte/éditeur, défini par {@link SpTeWallpaper.addToolListener} si non précisé */\n\tctx?: SpTeWallpaper,\n}\n\n/**\n * Implémentation de base d'un outil\n *\n * Implémente le comportement toggle et redirige l'exécution vers {@link SpTeWallpaper.activateTool}.\n */\nabstract class SpTeSpatialTool extends Action<SpTeWallpaper> implements ISpTeSpatialTool {\n\tisToggle(ctx: SpTeWallpaper): this is IActionToggle<SpTeWallpaper> {\n\t\treturn true\n\t}\n\n\tgetDatas(api: 'toggle', ctx: SpTeWallpaper): boolean | null {\n\t\treturn ctx.currentTool === this\n\t}\n\n\tisEnabled(ctx: SpTeWallpaper): boolean {\n\t\treturn ctx.isSpTeSrcAvailable;\n\t}\n\n\texecute(ctx: SpTeWallpaper) {\n\t\tctx.activateTool(this);\n\t}\n\n\tabstract activate(ctx: SpTeWallpaper): void;\n}\n\n/**\n * Outil de sélection\n */\nclass SpTeSpatialToolSelect extends SpTeSpatialTool {\n\tactivate(ctx: SpTeWallpaper) {\n\t\t/* Dispatch de l'info de focus sur le focus d'une area */\n\t\t/* On ne défini pas le ensureVisible à ce moment là, pour éviter un scroll qui corromprait les actions de drag */\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.areasLayer, event: 'focusin', handleEvent: function (ev: UIEvent) {\n\t\t\t\tconst area = ev.target as ISpTeSpatialArea;\n\t\t\t\tctx.setSelection(area.spTeSegment, true);\n\t\t\t\tthis.ctx.wedlet.spteInfoBroker.dispatchInfo(new InfoSpTeFocus(area.spTeSegment.wedAnchor), ctx);\n\t\t\t}\n\t\t});\n\n\t\t/* Dispatch de l'info de focus avec ensureVisible sur le pointerup */\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.areasLayer, event: 'pointerup', handleEvent: function (ev: UIEvent) {\n\t\t\t\tconst area = ev.target as ISpTeSpatialArea;\n\t\t\t\tthis.ctx.wedlet.spteInfoBroker.dispatchInfo(new InfoSpTeFocus(area.spTeSegment.wedAnchor, true), ctx);\n\t\t\t}\n\t\t});\n\n\n\t\t/* Par commoditié, on gère la suppression par la touche Delete dans cet outil */\n\t\tif (ctx.editMode === EWedletEditMode.write) ctx.addToolListener({\n\t\t\ttarget: ctx.zoomBox, event: 'keydown', handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\tif ((ev.key === 'Delete' || ev.key === 'Backspace') && this.ctx.selectedSegment) {\n\t\t\t\t\tthis.ctx.wedlet.wedMgr.docHolder.newBatch().deleteSequence(this.ctx.selectedSegment.wedAnchor, 1).doBatch();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Outil de déplacement de forme\n */\nclass SpTeSpatialToolMove extends SpTeSpatialTool {\n\tprotected _moveData: {\n\t\tarea: ISpTeSpatialArea;\n\t\tstart: GFX.IPoint;\n\t\tdelta: GFX.IPoint;\n\t\ttransform: SVGTransform;\n\t\tlstns: ISpTeSpatialListener<SpTeSpatialToolMove>[];\n\t};\n\n\tisEnabled(ctx: SpTeWallpaper): boolean {\n\t\treturn super.isEnabled(ctx) && ctx.editMode === EWedletEditMode.write;\n\t}\n\n\tactivate(ctx: SpTeWallpaper) {\n\t\t/* Déplacement des formes par drag */\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.areasLayer, event: 'pointerdown', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tif (ev.button != 0) return;\n\t\t\t\tconst area = ev.target as ISpTeSpatialArea;\n\t\t\t\t/* Une transformation est posée le temps du drag */\n\t\t\t\tconst transform = area.ownerSVGElement.createSVGTransform();\n\t\t\t\tarea.transform.baseVal.initialize(transform);\n\t\t\t\tthis.tool._moveData = {\n\t\t\t\t\tarea,\n\t\t\t\t\tstart: {x: ev.screenX, y: ev.screenY},\n\t\t\t\t\tdelta: {x: 0, y: 0},\n\t\t\t\t\ttransform,\n\t\t\t\t\tlstns: []\n\t\t\t\t};\n\n\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'pointermove', handleEvent: function (ev: MouseEvent) {\n\t\t\t\t\t\tconst {start, transform} = this.tool._moveData;\n\t\t\t\t\t\tconst delta = {\n\t\t\t\t\t\t\tx: (ev.screenX - start.x) / this.ctx.zoomLevel,\n\t\t\t\t\t\t\ty: (ev.screenY - start.y) / this.ctx.zoomLevel\n\t\t\t\t\t\t};\n\t\t\t\t\t\t/* La couche \"outils\" est caché le temps du drag */\n\t\t\t\t\t\tthis.ctx.hideToolsLayer();\n\t\t\t\t\t\ttransform.setTranslate(delta.x, delta.y);\n\t\t\t\t\t\tthis.tool._moveData.delta.x = delta.x;\n\t\t\t\t\t\tthis.tool._moveData.delta.y = delta.y;\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._moveData.lstns);\n\n\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'pointerup', capture: true, handleEvent: function () {\n\t\t\t\t\t\tconst {area, delta, lstns} = this.tool._moveData;\n\t\t\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\t\t\t\t\t\tarea.transform.baseVal.removeItem(0);\n\t\t\t\t\t\tif (delta.x || delta.y) {\n\t\t\t\t\t\t\tconst shape = this.ctx.availableShapes[area.getAttribute('spte-shape')];\n\t\t\t\t\t\t\t// La translation est commité dans la forme\n\t\t\t\t\t\t\tshape.translateArea(area, delta.x, delta.y);\n\t\t\t\t\t\t\tthis.tool._moveData = null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = true;\n\t\t\t\t\t\t\t\tarea.spTeSegment.getSpatial().updateSpatial(this.ctx.wedlet.wedMgr.docHolder.newBatch(), shape.areaCoords(area)).doBatch();\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._moveData.lstns);\n\n\t\t\t\tconst onCancel = () => {\n\t\t\t\t\tconst {area, lstns} = this.tool._moveData;\n\t\t\t\t\tarea.transform.baseVal.clear();\n\t\t\t\t\tctx.removeToolListeners(lstns);\n\t\t\t\t\tthis.tool._moveData = null;\n\t\t\t\t\tthis.ctx.showToolsLayer();\n\t\t\t\t}\n\n\t\t\t\tctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'keydown', capture: true, handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\t\t\tif (ev.key == 'Escape') onCancel();\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._moveData.lstns);\n\t\t\t\tctx.addToolListener({target: window, event: 'pointercancel', capture: true, handleEvent: onCancel}, this.tool._moveData.lstns);\n\t\t\t}\n\t\t});\n\t}\n}\n\ntype ISpTeSpatialHandler = (SVGCircleElement | SVGPolygonElement) & { node: ISpTeSpatialNode };\n\n/** Classe de base pour les outils de manipulation de noeuds */\nabstract class SpTeSpatialToolNodesBase extends SpTeSpatialTool {\n\tisEnabled(ctx: SpTeWallpaper): boolean {\n\t\treturn super.isEnabled(ctx) && ctx.editMode === EWedletEditMode.write;\n\t}\n\n\t/** Redessine l'ensemble des noeuds de la sélection courante */\n\tredraw(ctx: SpTeWallpaper) {\n\t\tconst area = ctx.selectedArea;\n\t\tif (!area) return;\n\t\tconst shape = ctx.availableShapes[area.getAttribute('spte-shape')];\n\t\tconst nodes = shape.areaNodes(area);\n\t\tfor (const node of nodes) appendHandler(ctx, node);\n\t}\n}\n\n/**\n * Outil de déplacement de noeuds\n */\nclass SpTeSpatialToolMoveNodes extends SpTeSpatialToolNodesBase {\n\tprotected _moveData: {\n\t\thandler: ISpTeSpatialHandler;\n\t\tstart: GFX.IPoint;\n\t\tnodeStart: GFX.IPoint;\n\t\tshape: ISpTeShape<any>;\n\t\tlstns: ISpTeSpatialListener<SpTeSpatialToolMoveNodes>[];\n\t};\n\n\tactivate(ctx: SpTeWallpaper) {\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.toolsLayer, event: 'pointerdown', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tif (ev.button != 0) return;\n\t\t\t\tconst handler = ev.target as ISpTeSpatialHandler;\n\n\t\t\t\tconst area = this.ctx.selectedArea;\n\t\t\t\tconst shape = this.ctx.availableShapes[area.getAttribute('spte-shape')];\n\n\t\t\t\tthis.tool._moveData = {\n\t\t\t\t\thandler,\n\t\t\t\t\tstart: {x: ev.screenX, y: ev.screenY},\n\t\t\t\t\tnodeStart: {x: handler.node.x, y: handler.node.y},\n\t\t\t\t\tlstns: [],\n\t\t\t\t\tshape\n\t\t\t\t};\n\n\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'pointermove', handleEvent: function (ev: MouseEvent) {\n\t\t\t\t\t\tconst {handler, start, shape, nodeStart} = this.tool._moveData;\n\t\t\t\t\t\tconst delta = {\n\t\t\t\t\t\t\tx: (ev.screenX - start.x) / this.ctx.zoomLevel,\n\t\t\t\t\t\t\ty: (ev.screenY - start.y) / this.ctx.zoomLevel\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\thandler.node.x = nodeStart.x + delta.x;\n\t\t\t\t\t\thandler.node.y = nodeStart.y + delta.y;\n\n\t\t\t\t\t\t// Dans le cas des polygone, l'affectation des coordonées des points est directe\n\t\t\t\t\t\tif ('updateAreaFromNodes' in shape) {\n\t\t\t\t\t\t\tconst handlers = Array.from(this.ctx.toolsLayer.children) as ISpTeSpatialHandler[];\n\t\t\t\t\t\t\tshape.updateAreaFromNodes(area, handlers.map((h) => h.node), handlers.indexOf(handler));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.ctx.hideToolsLayer();\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._moveData.lstns);\n\n\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'pointerup', capture: true, handleEvent: function () {\n\t\t\t\t\t\tconst {shape, lstns} = this.tool._moveData;\n\t\t\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = true;\n\t\t\t\t\t\t\tarea.spTeSegment.getSpatial().updateSpatial(this.ctx.wedlet.wedMgr.docHolder.newBatch(), shape.areaCoords(area)).doBatch();\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.tool._moveData = null;\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._moveData.lstns);\n\n\t\t\t\tconst onCancel = () => {\n\t\t\t\t\tconst {handler, nodeStart, lstns} = this.tool._moveData;\n\t\t\t\t\thandler.node.x = nodeStart.x;\n\t\t\t\t\thandler.node.y = nodeStart.y;\n\t\t\t\t\t// Dans le cas des polygone, l'affectation des coordonées des points est directe\n\t\t\t\t\tif ('updateAreaFromNodes' in shape) {\n\t\t\t\t\t\tconst handlers = Array.from(this.ctx.toolsLayer.children) as ISpTeSpatialHandler[];\n\t\t\t\t\t\tshape.updateAreaFromNodes(area, handlers.map((h) => h.node), handlers.indexOf(handler));\n\t\t\t\t\t}\n\t\t\t\t\tctx.removeToolListeners(lstns);\n\t\t\t\t\tthis.tool._moveData = null;\n\t\t\t\t\tthis.ctx.showToolsLayer();\n\t\t\t\t}\n\n\t\t\t\tctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'keydown', capture: true, handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\t\t\tif (ev.key == 'Escape') onCancel();\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._moveData.lstns);\n\t\t\t\tctx.addToolListener({target: window, event: 'pointercancel', capture: true, handleEvent: onCancel}, this.tool._moveData.lstns);\n\t\t\t}\n\t\t});\n\t}\n\n}\n\n/**\n * Outil d'ajout de nœuds\n */\nclass SpTeSpatialToolAddNodes extends SpTeSpatialToolNodesBase {\n\tconstructor() {\n\t\tsuper('addNodes');\n\t\tthis._label = \"Ajouter des nœuds\";\n\t\tthis._group = \"main\";\n\t\tthis._icon = \"/@skin@/edit/wed/spte/spatial/addNodes.svg\";\n\t}\n\n\tisVisible(ctx: SpTeWallpaper): boolean {\n\t\treturn ctx.selectedSegment?.getSpatial().getShape() == 'poly';\n\t}\n\n\tprotected _data: {\n\t\tarea: ISpTeSpatialArea<SVGPolygonElement | SVGPolylineElement>;\n\t\tpolyline: SVGPolylineElement;\n\t\trefPointIdx: number;\n\t\tlstns: ISpTeSpatialListener<SpTeSpatialToolAddNodes>[];\n\t};\n\n\tactivate(ctx: SpTeWallpaper) {\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.zoomBox, event: 'pointerdown', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tconst area = this.ctx.selectedArea;\n\t\t\t\tif (!area || !(area instanceof SVGPolygonElement)) return;\n\n\t\t\t\tconst canvasPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\tconst points = Array.from(area.points as any as Iterable<SVGPoint>);\n\n\t\t\t\t/* Recherche du point le plus proche */\n\t\t\t\tconst sortedPoints = Array.from(points).sort((point1, point2) => {\n\t\t\t\t\treturn GFX.vecLength(canvasPoint, point1) - GFX.vecLength(canvasPoint, point2);\n\t\t\t\t});\n\t\t\t\tconst closestPointIdx = points.indexOf(sortedPoints[0]);\n\t\t\t\t/* Recherche des index des points frères les plus proches */\n\t\t\t\tconst prevPointIdx = closestPointIdx > 0 ? closestPointIdx - 1 : points.length - 1;\n\t\t\t\tconst nextPointIdx = closestPointIdx < points.length - 1 ? closestPointIdx + 1 : 0;\n\t\t\t\tlet refPointIdx = -1;\n\t\t\t\tconst closestBrotherPoint = sortedPoints.find((point) => {\n\t\t\t\t\tif (point === points[prevPointIdx]) {\n\t\t\t\t\t\trefPointIdx = closestPointIdx;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (point === points[nextPointIdx]) {\n\t\t\t\t\t\trefPointIdx = nextPointIdx;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\t/* Création du polyline de visualisation */\n\t\t\t\tconst polyline = JSX.asSvg(() => <polyline class=\"area\"/>) as SVGPolylineElement;\n\t\t\t\tpolyline.points.appendItem(sortedPoints[0]);\n\t\t\t\tpolyline.points.appendItem(this.ctx.canvas.createSVGPoint());\n\t\t\t\tpolyline.points.appendItem(closestBrotherPoint);\n\t\t\t\tthis.ctx.toolsLayer.insertBefore(polyline, this.ctx.toolsLayer.firstChild);\n\t\t\t\tObject.assign(polyline.points.getItem(1), canvasPoint);\n\n\t\t\t\tthis.tool._data = {\n\t\t\t\t\tpolyline,\n\t\t\t\t\tlstns: [],\n\t\t\t\t\tarea,\n\t\t\t\t\trefPointIdx\n\t\t\t\t};\n\n\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'pointermove', handleEvent: function (ev: MouseEvent) {\n\t\t\t\t\t\tconst {polyline} = this.tool._data;\n\t\t\t\t\t\tconst canvasPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\t\t\tObject.assign(polyline.points.getItem(1), canvasPoint);\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._data.lstns);\n\n\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\ttarget: window, event: 'pointerup', handleEvent: function (ev: MouseEvent) {\n\t\t\t\t\t\tif (ev.button != 0) return;\n\t\t\t\t\t\tconst {area, polyline, refPointIdx, lstns} = this.tool._data;\n\t\t\t\t\t\tif (polyline) {\n\t\t\t\t\t\t\tconst shape = this.ctx.availableShapes[area.getAttribute('spte-shape')];\n\t\t\t\t\t\t\t// Insertion du nouveau point dans le polygone\n\t\t\t\t\t\t\tarea.points.insertItemBefore(polyline.points.getItem(1), refPointIdx);\n\t\t\t\t\t\t\tpolyline.remove();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = true;\n\t\t\t\t\t\t\t\tarea.spTeSegment.getSpatial().updateSpatial(this.ctx.wedlet.wedMgr.docHolder.newBatch(), shape.areaCoords(area)).doBatch();\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.refreshToolbarContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\t\t\t\t\t}\n\t\t\t\t}, this.tool._data.lstns);\n\t\t\t}\n\t\t});\n\n\n\t}\n}\n\n/**\n * Outil de suppression de nœuds\n */\nclass SpTeSpatialToolRemoveNodes extends SpTeSpatialToolNodesBase {\n\tconstructor() {\n\t\tsuper('removeNodes');\n\t\tthis._label = \"Supprimer des nœuds\";\n\t\tthis._group = \"main\";\n\t\tthis._icon = \"/@skin@/edit/wed/spte/spatial/rmNodes.svg\";\n\t}\n\n\tisVisible(ctx: SpTeWallpaper): boolean {\n\t\treturn ctx.selectedSegment?.getSpatial().getShape() == 'poly';\n\t}\n\n\tisEnabled(ctx: SpTeWallpaper): boolean {\n\t\treturn ctx.selectedArea instanceof SVGPolygonElement && ctx.selectedArea.points.numberOfItems > 3;\n\t}\n\n\tactivate(ctx: SpTeWallpaper) {\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.toolsLayer, event: 'pointerup', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tif (ev.button != 0 || !(ev.target instanceof SVGCircleElement)) return;\n\t\t\t\tconst handler = ev.target as ISpTeSpatialHandler;\n\t\t\t\tconst area = this.ctx.selectedArea;\n\t\t\t\tif (area instanceof SVGPolygonElement && area.points.numberOfItems > 3) {\n\t\t\t\t\tarea.points.removeItem(Array.prototype.findIndex.call(area.points, (point: SVGPoint) => {\n\t\t\t\t\t\t/* TODO On passe par une comparaison des coordonnées car getItem retourne dans certains cas (lesquelles?) une copie du point */\n\t\t\t\t\t\treturn point.x === handler.node.x && point.y === handler.node.y\n\t\t\t\t\t}));\n\t\t\t\t\tconst shape = this.ctx.availableShapes[area.getAttribute('spte-shape')];\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = true;\n\t\t\t\t\t\tarea.spTeSegment.getSpatial().updateSpatial(this.ctx.wedlet.wedMgr.docHolder.newBatch(), shape.areaCoords(area)).doBatch();\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = false;\n\t\t\t\t\t}\n\t\t\t\t\tctx.refreshToolbarContent();\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Outil de manipulation principale, regroupant la sélection et le déplacement de formes et de nœuds\n */\nclass SpTeSpatialToolHandle extends SpTeSpatialTool {\n\tprotected _subTools: ISpTeSpatialTool[];\n\n\tconstructor() {\n\t\tsuper('handle');\n\t\tthis._label = \"Modification\";\n\t\tthis._group = \"main\";\n\t\tthis._icon = \"/@skin@/edit/wed/spte/spatial/handle.svg\";\n\t\tthis._subTools = [new SpTeSpatialToolSelect(), new SpTeSpatialToolMove(), new SpTeSpatialToolMoveNodes()];\n\t}\n\n\tactivate(ctx: SpTeWallpaper) {\n\t\tfor (const subTool of this._subTools) if ('activate' in subTool && subTool.isAvailable(ctx)) subTool.activate(ctx);\n\t}\n\n\tdeactivate(ctx: SpTeWallpaper) {\n\t\tfor (const subTool of this._subTools) if ('deactivate' in subTool && subTool.isAvailable(ctx)) subTool.deactivate(ctx);\n\t}\n\n\tredraw(ctx: SpTeWallpaper) {\n\t\tfor (const subTool of this._subTools) if ('redraw' in subTool && subTool.isAvailable(ctx)) subTool.redraw(ctx);\n\t}\n}\n\n/**\n * Outil de zoom et de pan\n * @todo le pan\n */\nclass SpTeSpatialToolZoomAndPan extends SpTeSpatialTool {\n\tprotected _zoomOutModifier: boolean;\n\n\tconstructor() {\n\t\tsuper('zoom');\n\t\tthis._label = \"Zoom\";\n\t\tthis._group = \"secondary\";\n\t\tthis._icon = \"/@skin@/edit/wed/spte/spatial/zoom.svg\";\n\t\tthis._zoomOutModifier = false;\n\t}\n\n\tenable(ctx: SpTeWallpaper) {\n\t\t// Ajout d'un listener pour effectuer un zoom sur le Ctrl+Molette au lieu du zoom de page\n\t\t// Le preventDefault implique que le listener ne soit pas 'passive' (avertissement dans Chrome)\n\t\tctx.zoomBox.addEventListener('wheel', (ev: WheelEvent) => {\n\t\t\tif (!ACTION.isAccelPressed(ev)) return;\n\t\t\tif (ctx.redrawable) {\n\t\t\t\tconst pivotPoint = ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\tconst zoomed = ev.deltaY < 0 ? this._zoomIn(ctx) : this._zoomOut(ctx);\n\t\t\t\tif (zoomed) ctx.centeredOnCanvasPoint(pivotPoint);\n\t\t\t}\n\t\t\tev.preventDefault();\n\t\t});\n\t}\n\n\tactivate(ctx: SpTeWallpaper) {\n\t\tctx.zoomBox.style.cursor = 'zoom-in';\n\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.zoomBox, event: 'pointerup', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tif (ev.button !== 0) return;\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopPropagation();\n\t\t\t\tconst pivotPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\tconst zoomed = this.tool._zoomOutModifier ? this.tool._zoomOut(this.ctx) : this.tool._zoomIn(this.ctx);\n\t\t\t\tif (zoomed) ctx.centeredOnCanvasPoint(pivotPoint);\n\t\t\t}\n\t\t});\n\n\t\tctx.addToolListener({\n\t\t\ttarget: window, event: 'keydown', handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\tif (ev.key === 'Control') {\n\t\t\t\t\tthis.tool._zoomOutModifier = true;\n\t\t\t\t\tthis.ctx.zoomBox.style.cursor = 'zoom-out';\n\t\t\t\t} else if (ev.key == 'Escape') {\n\t\t\t\t\tctx.activateTool(ctx.firstAvailableTool);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tctx.addToolListener({\n\t\t\ttarget: window, event: 'keyup', handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\tif (ev.key === 'Control') {\n\t\t\t\t\tthis.tool._zoomOutModifier = false;\n\t\t\t\t\tthis.ctx.zoomBox.style.cursor = 'zoom-in';\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tctx.addToolListener({\n\t\t\ttarget: window, event: 'focusout', handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\tthis.tool._zoomOutModifier = false;\n\t\t\t\tthis.ctx.zoomBox.style.cursor = 'zoom-in';\n\t\t\t}\n\t\t});\n\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.zoomBox, event: 'contextmenu', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tconst pivotPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\tconst zoomed = this.tool._zoomOut(this.ctx);\n\t\t\t\tif (zoomed) ctx.centeredOnCanvasPoint(pivotPoint);\n\t\t\t\tthis.ctx.zoomBox.style.cursor = 'zoom-out';\n\t\t\t\tclearTimeout(this.tool._zoomOutCursorTimeout);\n\t\t\t\tthis.tool._zoomOutCursorTimeout = setTimeout(() => {\n\t\t\t\t\tthis.ctx.zoomBox.style.cursor = 'zoom-in';\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _zoomIn(wallpaper: SpTeWallpaper): boolean {\n\t\tconst maxLevel = Math.pow(2, ZOOM_LEVELS);\n\t\tif (wallpaper.zoomLevel >= maxLevel) return false;\n\t\twallpaper.zoomLevel = Math.min(maxLevel, wallpaper.zoomLevel * Math.sqrt(2));\n\t\treturn true;\n\t}\n\n\tprotected _zoomOut(wallpaper: SpTeWallpaper): boolean {\n\t\tconst minLevel = Math.pow(2, -ZOOM_LEVELS);\n\t\tif (wallpaper.zoomLevel <= minLevel) return false;\n\t\twallpaper.zoomLevel = Math.max(minLevel, wallpaper.zoomLevel / Math.sqrt(2));\n\t\treturn true;\n\t}\n\n\tdeactivate(ctx: SpTeWallpaper): void {\n\t\tctx.zoomBox.style.cursor = '';\n\t}\n\n}\n\n/**\n * Outil de création de forme\n */\nclass SpTeSpatialToolCreate extends SpTeSpatialTool {\n\tcurrentCreateAction: SpTeSpatialCreateAction;\n\n\tprotected _fromRectData: {\n\t\tarea: SVGGraphicsElement;\n\t\tstart: GFX.IPoint;\n\t\tcurrent?: GFX.IPoint;\n\t\tlstns: ISpTeSpatialListener<ISpTeSpatialTool>[];\n\t};\n\n\tprotected _fromPolyData: {\n\t\tpolyline?: SVGPolylineElement;\n\t\tlastPoint?: SVGPoint;\n\t\tstartHandler?: ISpTeSpatialHandler;\n\t\tlstns: ISpTeSpatialListener<ISpTeSpatialTool>[];\n\t};\n\n\tconstructor() {\n\t\tsuper('create');\n\t\tthis._label = \"Création\";\n\t\tthis._group = \"main\";\n\t}\n\n\tbuildCustomButton(ctx: SpTeWallpaper, uiContext: EButtonUiContext, parent?: Element): Element | null {\n\t\tif (!this.isVisible(ctx)) return null;\n\t\tconst shapes = ctx.creatableShapes || Object.keys(ctx.availableShapes);\n\t\tif (shapes.length == 1) return null;\n\t\tconst actions = shapes.map((shapeKey) => ctx.availableShapes[shapeKey].createAction);\n\t\tthis.currentCreateAction = actions[0];\n\t\treturn new ActionActions<ICreateActionContext>().initialize({\n\t\t\treg: REG.findReg(ctx),\n\t\t\tactionContext: {\n\t\t\t\tcreateTool: this,\n\t\t\t\twallpaper: ctx\n\t\t\t},\n\t\t\tactionBtn: {\n\t\t\t\taction: actions[0]\n\t\t\t},\n\t\t\tactionsBtn: {\n\t\t\t\tactions\n\t\t\t},\n\t\t\tuiContext: uiContext,\n\t\t\tlastAsDefault: true\n\t\t} as OActionActionsInit<ICreateActionContext>);\n\t}\n\n\tactivate(ctx: SpTeWallpaper): void {\n\t\tconst baseOnCancel = () => {\n\t\t\tctx.selectedArea.style.display = '';\n\t\t\tctx.activateTool(ctx.firstAvailableTool);\n\t\t}\n\t\tlet onCancel = baseOnCancel;\n\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.zoomBox, event: 'pointerdown', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tconst shape = this.tool.currentCreateAction.shape;\n\t\t\t\tif ('updateAreaFromRect' in shape) {\n\t\t\t\t\tif (ev.button != 0) return;\n\n\t\t\t\t\tctx.selectedArea.style.display = 'none';\n\n\t\t\t\t\tonCancel = () => {\n\t\t\t\t\t\tconst {lstns} = this.tool._fromRectData;\n\t\t\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\t\t\t\t\t\tthis.tool._fromRectData = null;\n\t\t\t\t\t\tbaseOnCancel();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst area = this.ctx.toolsLayer.appendChild(shape.emptyArea());\n\n\t\t\t\t\tthis.tool._fromRectData = {\n\t\t\t\t\t\tarea,\n\t\t\t\t\t\tstart: this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY}),\n\t\t\t\t\t\tlstns: []\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\t\ttarget: window, event: 'pointermove', handleEvent: function (ev: MouseEvent) {\n\t\t\t\t\t\t\tconst {area, start} = this.tool._fromRectData;\n\t\t\t\t\t\t\tconst current = this.tool._fromRectData.current = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\t\t\t\tshape.updateAreaFromRect(area, start, current);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this.tool._fromRectData.lstns);\n\n\t\t\t\t\tthis.ctx.addToolListener({\n\t\t\t\t\t\ttarget: window, event: 'pointerup', capture: true, handleEvent: function () {\n\t\t\t\t\t\t\tconst {area, lstns, current} = this.tool._fromRectData;\n\t\t\t\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\t\t\t\t\t\t\tonCancel = baseOnCancel;\n\t\t\t\t\t\t\tthis.tool._fromRectData = null;\n\t\t\t\t\t\t\tif (!current) return;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = true;\n\t\t\t\t\t\t\t\tconst selectedSegment = ctx.selectedSegment;\n\t\t\t\t\t\t\t\tselectedSegment.getSpatial().updateSpatial(this.ctx.wedlet.wedMgr.docHolder.newBatch(), shape.areaCoords(area), shape.shape).doBatch();\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.ctx.selectedArea.style.display = '';\n\t\t\t\t\t\t\tthis.ctx.activateTool(this.ctx.firstAvailableTool);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this.tool._fromRectData.lstns);\n\t\t\t\t} else {\n\t\t\t\t\tctx.selectedArea.style.display = 'none';\n\n\t\t\t\t\tonCancel = () => {\n\t\t\t\t\t\tconst {lstns} = this.tool._fromPolyData;\n\t\t\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\t\t\t\t\t\tthis.tool._fromPolyData = null;\n\t\t\t\t\t\tbaseOnCancel();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ev.button == 0) {\n\t\t\t\t\t\t// Ajout d'un nouveau point sur le clic gauche\n\t\t\t\t\t\tconst canvasPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\t\t\tif (!this.tool._fromPolyData) {\n\t\t\t\t\t\t\tconst startSvgPoint = this.ctx.canvas.createSVGPoint();\n\t\t\t\t\t\t\tstartSvgPoint.x = canvasPoint.x;\n\t\t\t\t\t\t\tstartSvgPoint.y = canvasPoint.y;\n\n\t\t\t\t\t\t\tthis.tool._fromPolyData = {\n\t\t\t\t\t\t\t\tpolyline: this.ctx.toolsLayer.appendChild(JSX.asSvg(() => <polyline class=\"area\"/>) as SVGPolylineElement),\n\t\t\t\t\t\t\t\tlastPoint: null,\n\t\t\t\t\t\t\t\tstartHandler: appendHandler(ctx, canvasPoint),\n\t\t\t\t\t\t\t\tlstns: []\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.tool._fromPolyData.polyline.points.appendItem(startSvgPoint);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst lastPoint = this.tool._fromPolyData.lastPoint = this.ctx.canvas.createSVGPoint();\n\t\t\t\t\t\tlastPoint.x = canvasPoint.x;\n\t\t\t\t\t\tlastPoint.y = canvasPoint.y;\n\t\t\t\t\t\tthis.tool._fromPolyData.polyline.points.appendItem(lastPoint);\n\n\t\t\t\t\t\tthis.tool._addLastPointListeners(ctx, onCancel);\n\t\t\t\t\t} else if (ev.button == 2 && this.tool._fromPolyData) {\n\t\t\t\t\t\t// Suppression du dernier point sur le clic droit\n\t\t\t\t\t\tconst {polyline, lstns} = this.tool._fromPolyData;\n\t\t\t\t\t\tif (polyline.points.numberOfItems > 2) {\n\t\t\t\t\t\t\tconst canvasPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\t\t\t\tpolyline.points.removeItem(polyline.points.numberOfItems - 1);\n\t\t\t\t\t\t\tconst lastPoint = this.tool._fromPolyData.lastPoint = polyline.points.getItem(polyline.points.numberOfItems - 1);\n\t\t\t\t\t\t\tlastPoint.x = canvasPoint.x;\n\t\t\t\t\t\t\tlastPoint.y = canvasPoint.y;\n\t\t\t\t\t\t\tthis.tool._addLastPointListeners(ctx, onCancel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.addToolListener({\n\t\t\t\t\t\ttarget: window, event: 'keydown', capture: true, handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\t\t\t\tif (ev.key == 'Escape') onCancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this.tool._fromPolyData.lstns);\n\t\t\t\t\tctx.addToolListener({target: window, event: 'pointercancel', capture: true, handleEvent: onCancel}, this.tool._fromPolyData.lstns);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tctx.addToolListener({\n\t\t\ttarget: window, event: 'keydown', capture: true, handleEvent: function (ev: KeyboardEvent) {\n\t\t\t\tif (ev.key == 'Escape') onCancel();\n\t\t\t}\n\t\t});\n\t\tctx.addToolListener({target: window, event: 'pointercancel', capture: true, handleEvent: onCancel});\n\n\t}\n\n\t_addLastPointListeners(ctx: SpTeWallpaper, onCancel: () => void) {\n\t\tctx.removeToolListeners(this._fromPolyData.lstns);\n\t\tthis._fromPolyData.lstns = [];\n\t\tconst shape = this.currentCreateAction.shape;\n\n\t\tctx.addToolListener({\n\t\t\ttarget: window, event: 'pointermove', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tconst {lastPoint} = this.tool._fromPolyData;\n\t\t\t\tconst canvasPoint = this.ctx.clientToCanvasPoint({x: ev.clientX, y: ev.clientY});\n\t\t\t\tlastPoint.x = canvasPoint.x;\n\t\t\t\tlastPoint.y = canvasPoint.y;\n\t\t\t}\n\t\t}, this._fromPolyData.lstns);\n\n\t\tctx.addToolListener({\n\t\t\ttarget: ctx.toolsLayer, event: 'pointerdown', handleEvent: function (ev: MouseEvent) {\n\t\t\t\tconst startHandler = this.tool._fromPolyData.startHandler;\n\t\t\t\tif (!startHandler || ev.target !== startHandler) return;\n\t\t\t\tev.stopPropagation();\n\t\t\t\tconst {polyline, lstns} = this.tool._fromPolyData;\n\t\t\t\t// Annulation si moins de 3 points\n\t\t\t\tif (polyline.points.numberOfItems <= 3) return onCancel();\n\n\t\t\t\tthis.ctx.removeToolListeners(lstns);\n\t\t\t\tthis.tool._fromPolyData = null;\n\t\t\t\t// Suppression du lastPoint sur la fermeture du polygone\n\t\t\t\tpolyline.points.removeItem(polyline.points.numberOfItems - 1);\n\t\t\t\ttry {\n\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = true;\n\t\t\t\t\tconst selectedSegment = this.ctx.selectedSegment;\n\t\t\t\t\tselectedSegment.getSpatial().updateSpatial(this.ctx.wedlet.wedMgr.docHolder.newBatch(), shape.areaCoords(polyline), shape.shape).doBatch();\n\t\t\t\t} finally {\n\t\t\t\t\tthis.ctx.wedlet.wedMgr.freezeFocus = false;\n\t\t\t\t}\n\t\t\t\tthis.ctx.selectedArea.style.display = '';\n\t\t\t\tthis.ctx.activateTool(this.ctx.firstAvailableTool);\n\t\t\t}\n\t\t}, this._fromPolyData.lstns);\n\t}\n\n\tdeactivate(ctx: SpTeWallpaper) {\n\t\tif (ctx.selectedArea) ctx.selectedArea.style.display = '';\n\t}\n}\n\ntype ICreateActionContext = {\n\tcreateTool: SpTeSpatialToolCreate,\n\twallpaper: SpTeWallpaper\n}\n\n/**\n * Classe de base pour les actions de création de forme\n */\nclass SpTeSpatialCreateAction extends Action<ICreateActionContext> implements IActionToggle<ICreateActionContext> {\n\tisToggle() {\n\t\treturn true;\n\t}\n\n\tgetDatas(api: 'toggle', ctx: ICreateActionContext): boolean | null {\n\t\treturn ctx.wallpaper.currentTool === ctx.createTool && ctx.createTool.currentCreateAction === this\n\t};\n\n\tshape: ISpTeShape<SVGGraphicsElement>;\n\n\tisVisible(ctx: ICreateActionContext): boolean {\n\t\treturn (!ctx.wallpaper.creatableShapes && Object.keys(ctx.wallpaper.availableShapes).length > 1) || ctx.wallpaper.creatableShapes.length > 1;\n\t}\n\n\tisEnabled(ctx: ICreateActionContext): boolean {\n\t\treturn super.isEnabled(ctx) && ctx.wallpaper.selectedSegment && ctx.wallpaper.editMode === EWedletEditMode.write;\n\t}\n\n\tconstructor(shape: ISpTeShape<any>) {\n\t\tsuper('create-' + shape.shape);\n\t\tthis.shape = shape;\n\t}\n\n\texecute(ctx: ICreateActionContext, ev: Event) {\n\t\tctx.createTool.currentCreateAction = this;\n\t\tctx.wallpaper.activateTool(ctx.createTool);\n\t\treturn this;\n\t}\n}\n\nREG.reg.addToList(\"actions:wed:spte:spatial:tools\", \"handler\", 1, SpTeSpatialToolHandle, 10);\nREG.reg.addToList(\"actions:wed:spte:spatial:tools\", \"create\", 1, SpTeSpatialToolCreate, 20);\nREG.reg.addToList(\"actions:wed:spte:spatial:tools\", \"addNodes\", 1, SpTeSpatialToolAddNodes, 30);\nREG.reg.addToList(\"actions:wed:spte:spatial:tools\", \"removeNodes\", 1, SpTeSpatialToolRemoveNodes, 40);\nREG.reg.addToList(\"actions:wed:spte:spatial:tools\", \"zoom\", 1, SpTeSpatialToolZoomAndPan, 100);\n\n/**\n * Interface pour l'ajout d'une forme\n */\ninterface ISpTeShape<S extends SVGGraphicsElement> {\n\t/**\n\t * Nom de la forme tel que stocké dans le flux XML\n\t */\n\tshape: string;\n\n\t/**\n\t * Template lit de création de la forme\n\t */\n\ttplArea(spShape: string, spCoords: string, spTeSegment: SpTeSegmentWedlet, selected: boolean): TemplateResult;\n\n\t/**\n\t * Retourne une forme vide pour l'outil de création\n\t */\n\temptyArea(): S;\n\n\t/**\n\t * Translate la forme\n\t */\n\ttranslateArea(area: S, x: number, y: number): void;\n\n\t/**\n\t * Retourne les coordonnées à stocker dans le flux XML\n\t */\n\tareaCoords(area: S): string;\n\n\t/**\n\t * Retourne la liste des points manipulables par les outils de nœuds\n\t */\n\tareaNodes(area: S): Iterable<GFX.IPoint>;\n\n\t/**\n\t * Mets à jour la forme par une nouvelle liste de nœuds\n\t * Peut ne pas être définie si {@link areaNodes} retourne des SVGPoint directement modifiable (ex: polygone)\n\t */\n\tupdateAreaFromNodes?(area: S, nodes: ISpTeSpatialNode[], nodeIndex: number): void;\n\n\t/**\n\t * Mets à jour la forme en fonction d'un carré défini par deux points\n\t * Utile pour l'outil de création par drag (ex: rect, circle)\n\t */\n\tupdateAreaFromRect?(area: S, point1: GFX.IPoint, point2: GFX.IPoint): void;\n\n\t/**\n\t * Définition de l'action de création pour cette forme\n\t */\n\tcreateAction: SpTeSpatialCreateAction;\n}\n\nclass SpTeShapeRect implements ISpTeShape<SVGRectElement> {\n\tshape: 'rect' | 'roundedRect' = null;\n\n\tcreateAction: SpTeSpatialCreateAction = null;\n\n\tconstructor(readonly rounded = false) {\n\t\tif (rounded) {\n\t\t\tthis.shape = 'roundedRect';\n\t\t\tthis.createAction = new SpTeSpatialCreateAction(this)\n\t\t\t\t.setLabel(\"Rectangle arrrondi\")\n\t\t\t\t.setDescription(\"Création d'un rectangle arrrondi\")\n\t\t\t\t.setIcon(\"/@skin@/edit/wed/spte/spatial/roundedRect.svg\");\n\t\t} else {\n\t\t\tthis.shape = 'rect';\n\t\t\tthis.createAction = new SpTeSpatialCreateAction(this)\n\t\t\t\t.setLabel(\"Rectangle\")\n\t\t\t\t.setDescription(\"Création d'un rectangle\")\n\t\t\t\t.setIcon(\"/@skin@/edit/wed/spte/spatial/rect.svg\");\n\t\t}\n\t}\n\n\ttplArea(spShape: string, spCoords: string, spTeSegment: SpTeSegmentWedlet, selected: boolean): TemplateResult {\n\t\tconst coords = spCoords ? spCoords.split(',').map((coord) => parseFloat(coord)) : null;\n\t\treturn svg`<rect class=\"area\" x=\"${coords?.[0] || '0'}\" y=\"${coords?.[1] || '0'}\" width=\"${(coords?.[2] || 0) - (coords?.[0] || 0)}\" height=\"${(coords?.[3] || 0) - (coords?.[1] || 0)}\" rx=\"${(coords?.[4] || 0)}\" p.spTeSegment=\"${spTeSegment}\" b.spte-selected=\"${selected}\" spte-shape=\"${spShape}\" tabindex=\"0\"/>`;\n\t}\n\n\temptyArea(): SVGRectElement {\n\t\treturn JSX.asSvg(() => <rect class=\"area\"/>) as SVGRectElement;\n\t}\n\n\ttranslateArea(area: SVGRectElement, x: number, y: number): void {\n\t\tarea.x.baseVal.value += x;\n\t\tarea.y.baseVal.value += y;\n\t}\n\n\tareaNodes(area: SVGRectElement): Iterable<GFX.IPoint> {\n\t\tconst nodes = [\n\t\t\t{x: area.x.baseVal.value, y: area.y.baseVal.value},\n\t\t\t{x: area.x.baseVal.value + area.width.baseVal.value, y: area.y.baseVal.value + area.height.baseVal.value},\n\t\t];\n\t\tif (this.rounded) nodes.push(new RoundedRectNode(area, area.y.baseVal.value + area.rx.baseVal.value));\n\t\treturn nodes;\n\t}\n\n\tupdateAreaFromRect(area: SVGRectElement, point1: GFX.IPoint, point2: GFX.IPoint) {\n\t\tSVG.assignRectLengths(area, {\n\t\t\tx: Math.min(point1.x, point2.x),\n\t\t\ty: Math.min(point1.y, point2.y),\n\t\t\twidth: point2.x > point1.x ? point2.x - point1.x : point1.x - point2.x,\n\t\t\theight: point2.y > point1.y ? point2.y - point1.y : point1.y - point2.y\n\t\t});\n\t}\n\n\tupdateAreaFromNodes(area: SVGRectElement, nodes: ISpTeSpatialNode[], nodeIndex: number): void {\n\t\tif (nodeIndex < 2) {\n\t\t\tconst x = Math.min(nodes[0].x, nodes[1].x);\n\t\t\tconst y = Math.min(nodes[0].y, nodes[1].y);\n\t\t\tconst width = Math.max(nodes[0].x, nodes[1].x) - x;\n\t\t\tconst height = Math.max(nodes[0].y, nodes[1].y) - y;\n\t\t\tSVG.assignRectLengths(area, {x, y, width, height});\n\t\t} else if (this.rounded) {\n\t\t\tarea.rx.baseVal.value = nodes[2].y - area.y.baseVal.value;\n\t\t}\n\t}\n\n\tareaCoords(area: SVGRectElement): string {\n\t\tconst coords = [\n\t\t\tarea.x.baseVal.value,\n\t\t\tarea.y.baseVal.value,\n\t\t\tarea.x.baseVal.value + area.width.baseVal.value,\n\t\t\tarea.y.baseVal.value + area.height.baseVal.value\n\t\t];\n\t\tif (this.rounded) coords.push(area.rx.baseVal.value);\n\t\treturn coords.join(',');\n\t}\n}\n\n\nclass SpTeShapeCircle implements ISpTeShape<SVGCircleElement> {\n\treadonly shape = 'circle';\n\n\tcreateAction: SpTeSpatialCreateAction = new SpTeSpatialCreateAction(this)\n\t\t.setLabel(\"Cercle\")\n\t\t.setDescription(\"Création d'un cercle\")\n\t\t.setIcon(\"/@skin@/edit/wed/spte/spatial/circle.svg\");\n\n\ttplArea(spShape: string, spCoords: string, spTeSegment: SpTeSegmentWedlet, selected: boolean): TemplateResult {\n\t\tconst coords = spCoords.split(',');\n\t\treturn svg`<circle class=\"area\" cx=\"${coords?.[0] || '0'}\" cy=\"${coords?.[1] || '0'}\" r=\"${coords?.[2] || '0'}\" p.spTeSegment=\"${spTeSegment}\" b.spte-selected=\"${selected}\" spte-shape=\"${spShape}\" tabindex=\"0\"/>`;\n\t}\n\n\temptyArea(): SVGCircleElement {\n\t\treturn JSX.asSvg(() => <circle class=\"area\"/>) as SVGCircleElement;\n\t}\n\n\ttranslateArea(area: SVGCircleElement, x: number, y: number): void {\n\t\tarea.cx.baseVal.value += x;\n\t\tarea.cy.baseVal.value += y;\n\t}\n\n\tupdateAreaFromNodes(area: SVGCircleElement, nodes: ISpTeSpatialNode[], nodeIndex: number): void {\n\t\tarea.r.baseVal.value = Math.abs(nodes[0].x - area.cx.baseVal.value);\n\t}\n\n\tupdateAreaFromRect(area: SVGCircleElement, point1: GFX.IPoint, point2: GFX.IPoint) {\n\t\tarea.cx.baseVal.value = point1.x;\n\t\tarea.cy.baseVal.value = point1.y;\n\t\tarea.r.baseVal.value = Math.abs(point2.x - point1.x);\n\t}\n\n\tareaNodes(area: SVGCircleElement): Iterable<GFX.IPoint> {\n\t\treturn [\n\t\t\t{x: area.cx.baseVal.value + area.r.baseVal.value, y: area.cy.baseVal.value}\n\t\t];\n\t}\n\n\tareaCoords(area: SVGCircleElement): string {\n\t\treturn [\n\t\t\tarea.cx.baseVal.value,\n\t\t\tarea.cy.baseVal.value,\n\t\t\tarea.r.baseVal.value\n\t\t].join(',');\n\t}\n}\n\nclass SpTeShapeEllipse implements ISpTeShape<SVGEllipseElement> {\n\treadonly shape = 'ellipse';\n\n\tcreateAction: SpTeSpatialCreateAction = new SpTeSpatialCreateAction(this)\n\t\t.setLabel(\"Ellipse\")\n\t\t.setDescription(\"Création d'une ellipse\")\n\t\t.setIcon(\"/@skin@/edit/wed/spte/spatial/ellipse.svg\");\n\n\ttplArea(spShape: string, spCoords: string, spTeSegment: SpTeSegmentWedlet, selected: boolean): TemplateResult {\n\t\tconst coords = spCoords.split(',');\n\t\treturn svg`<ellipse class=\"area\" cx=\"${coords?.[0] || '0'}\" cy=\"${coords?.[1] || '0'}\" rx=\"${coords?.[2] || '0'}\" ry=\"${coords?.[3] || '0'}\" p.spTeSegment=\"${spTeSegment}\" b.spte-selected=\"${selected}\" spte-shape=\"${spShape}\" tabindex=\"0\"/>`;\n\t}\n\n\temptyArea(): SVGEllipseElement {\n\t\treturn JSX.asSvg(() => <ellipse class=\"area\"/>) as SVGEllipseElement;\n\t}\n\n\ttranslateArea(area: SVGEllipseElement, x: number, y: number): void {\n\t\tarea.cx.baseVal.value += x;\n\t\tarea.cy.baseVal.value += y;\n\t}\n\n\tupdateAreaFromNodes(area: SVGEllipseElement, nodes: ISpTeSpatialNode[], nodeIndex: number): void {\n\t\tif (nodeIndex == 0) area.rx.baseVal.value = Math.abs(nodes[0].x - area.cx.baseVal.value);\n\t\telse area.ry.baseVal.value = Math.abs(nodes[1].y - area.cy.baseVal.value);\n\t}\n\n\tupdateAreaFromRect(area: SVGEllipseElement, point1: GFX.IPoint, point2: GFX.IPoint) {\n\t\tarea.cx.baseVal.value = point1.x;\n\t\tarea.cy.baseVal.value = point1.y;\n\t\tarea.rx.baseVal.value = Math.abs(point2.x - point1.x);\n\t\tarea.ry.baseVal.value = Math.abs(point2.y - point1.y);\n\t}\n\n\tareaNodes(area: SVGEllipseElement): Iterable<ISpTeSpatialNode> {\n\t\treturn [\n\t\t\t{x: area.cx.baseVal.value + area.rx.baseVal.value, y: area.cy.baseVal.value},\n\t\t\t{x: area.cx.baseVal.value, y: area.cy.baseVal.value + area.ry.baseVal.value}\n\t\t];\n\t}\n\n\tareaCoords(area: SVGEllipseElement): string {\n\t\treturn [\n\t\t\tarea.cx.baseVal.value,\n\t\t\tarea.cy.baseVal.value,\n\t\t\tarea.rx.baseVal.value,\n\t\t\tarea.ry.baseVal.value\n\t\t].join(',');\n\t}\n}\n\nclass SpTeShapePolygon implements ISpTeShape<SVGPolygonElement> {\n\treadonly shape = 'poly';\n\n\tcreateAction: SpTeSpatialCreateAction = new SpTeSpatialCreateAction(this)\n\t\t.setLabel(\"Polygone\")\n\t\t.setDescription(\"Création d'un polygone\")\n\t\t.setIcon(\"/@skin@/edit/wed/spte/spatial/poly.svg\");\n\n\ttplArea(spShape: string, spCoords: string, spTeSegment: SpTeSegmentWedlet, selected: boolean): TemplateResult {\n\t\tconst coords = spCoords.split(',');\n\t\tlet points = '';\n\t\tif (coords && coords.length > 1) {\n\t\t\tfor (let i = 0; i < coords.length; i += 2) {\n\t\t\t\tpoints += `${coords[i]},${coords[i + 1]} `;\n\t\t\t}\n\t\t} else {\n\t\t\tpoints = '0,0'\n\t\t}\n\t\treturn svg`<polygon class=\"area\" points=\"${points}\" p.spTeSegment=\"${spTeSegment}\" b.spte-selected=\"${selected}\" spte-shape=\"${spShape}\" tabindex=\"0\"/>`;\n\t}\n\n\temptyArea(): SVGPolygonElement {\n\t\treturn JSX.asSvg(() => <polygon class=\"area\"/>) as SVGPolygonElement;\n\t}\n\n\ttranslateArea(area: SVGPolygonElement, x: number, y: number): void {\n\t\tfor (let i = 0; i < area.points.numberOfItems; i++) {\n\t\t\tconst point = area.points.getItem(i);\n\t\t\tpoint.x += x;\n\t\t\tpoint.y += y;\n\t\t}\n\t}\n\n\tareaCoords(area: SVGPolygonElement): string {\n\t\tconst coords = [];\n\t\tfor (let i = 0; i < area.points.numberOfItems; i++) {\n\t\t\tconst point = area.points.getItem(i);\n\t\t\tcoords.push(point.x, point.y);\n\t\t}\n\t\treturn coords.join(',');\n\t}\n\n\tareaNodes(area: SVGPolygonElement): Iterable<GFX.IPoint> {\n\t\treturn area.points as any as Iterable<SVGPoint>;\n\t}\n}\n\nREG.reg.addToList(\"wed:spTeSpatial:shapes\", \"rect\", 1, new SpTeShapeRect(), 0);\nREG.reg.addToList(\"wed:spTeSpatial:shapes\", \"roundedRect\", 1, new SpTeShapeRect(true), 10);\nREG.reg.addToList(\"wed:spTeSpatial:shapes\", \"circle\", 1, new SpTeShapeCircle(), 20);\nREG.reg.addToList(\"wed:spTeSpatial:shapes\", \"ellipse\", 1, new SpTeShapeEllipse(), 30);\nREG.reg.addToList(\"wed:spTeSpatial:shapes\", \"poly\", 1, new SpTeShapePolygon(), 40);\n\n\nclass RoundedRectNode implements ISpTeSpatialNode {\n\tprotected _y: number;\n\n\tconstructor(readonly _rect: SVGRectElement, y: number) {\n\t\tthis.y = y;\n\t}\n\n\treadonly shape = 'diamond';\n\n\tget x(): number {\n\t\treturn this._rect.x.baseVal.value + this._rect.width.baseVal.value;\n\t}\n\n\tset x(val) {\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset y(val: number) {\n\t\tconst rectY = this._rect.y.baseVal.value;\n\t\tconst minMaxR = Math.min(this._rect.width.baseVal.value / 2, this._rect.height.baseVal.value / 2);\n\t\tthis._y = Math.max(rectY, Math.min(rectY + minMaxR, val));\n\t}\n}\n\nfunction appendHandler(ctx: SpTeWallpaper, node: ISpTeSpatialNode): ISpTeSpatialHandler {\n\tlet handler: SVGRectElement | SVGCircleElement;\n\tif (node.shape == 'diamond') {\n\t\tconst halfWidth = Math.sqrt(SPATIAL_HANDLERS_WIDTH * 2) / ctx.zoomLevel;\n\t\thandler = document.createElementNS(DOM.SVG_NS, 'rect') as SVGRectElement;\n\t\tSVG.assignRectLengths(handler, {\n\t\t\tx: node.x - halfWidth,\n\t\t\ty: node.y - halfWidth,\n\t\t\twidth: halfWidth * 2,\n\t\t\theight: halfWidth * 2\n\t\t});\n\t\tconst transform = ctx.canvas.createSVGTransform();\n\t\ttransform.setRotate(45, node.x, node.y);\n\t\thandler.transform.baseVal.initialize(transform);\n\t} else {\n\t\thandler = document.createElementNS(DOM.SVG_NS, 'circle') as SVGCircleElement;\n\t\thandler.r.baseVal.value = SPATIAL_HANDLERS_WIDTH / ctx.zoomLevel / 2;\n\t\thandler.cx.baseVal.value = node.x;\n\t\thandler.cy.baseVal.value = node.y;\n\t}\n\thandler.classList.add('handler');\n\t(handler as ISpTeSpatialHandler).node = node;\n\tctx.toolsLayer.appendChild(handler);\n\thandler.style.strokeWidth = parseFloat(getComputedStyle(handler).strokeWidth) / ctx.zoomLevel + 'px';\n\treturn handler as ISpTeSpatialHandler;\n}\n"]}