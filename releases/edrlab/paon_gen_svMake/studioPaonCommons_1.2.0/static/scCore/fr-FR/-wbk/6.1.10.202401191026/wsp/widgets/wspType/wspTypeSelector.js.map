{"version":3,"sources":["/@back@/wsp/widgets/wspType/wspTypeSelector.tsx"],"names":["BaseElement","BaseElementAsync","MsgLabel","DOMSH","DOM","JSX","REG","ERROR","WSPTYPE","MxFormElement","LOCALE","WspTypeSelector","[object Object]","init","this","config","reg","findReg","msgElt","wspMetaEditorRootElt","createElement","tabindex","_attach","localName","name","addEventListener","async","ev","_refreshValidity","_initializeForm","_refreshAll","disabled","wspTypeDef","querySelector","required","setValidity","valueMissing","wspOptionDefs","querySelectorAll","wspOptionDef","unknown","initStatus","reinitializeStarted","addPendingValidity","setStandardMsg","refreshPending","mode","fromWspCode","getNewEditor","env","universe","wspServer","params","getUpdateEditor","innerHTML","wspMetaEditorDom","hasWspDefSelected","firstElementChild","childNodes","forEach","node","nodeName","appendChild","WspTypeDef","initialize","getAttribute","log","childElementCount","checked","hasChildNodes","setCustomMsg","readonly","undefined","e","hasAttribute","val","Array","from","elt","setAttr","removeAttribute","wspTypeInst","toWspTypeInst","parent","refreshUi","root","fillWspTypeInst","customElements","define","registerSkin","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","initInput","addClass","obsolete","newest","label","inputElt","titleWspDef","descWspDef","children","class","_childrenSkinElt","_childrenGenElt","_childrenExtElt","optionNode","WspOptionDef","slot","Ã®","input","composedPath","_adjustUi","forced","initialized","isOptionVisible","hidden","findIndex","setHidden","value","prev","previousElementSibling","next","nextElementSibling","details","languageToName","error","errorLevel","type","form","wspType","key","lang","version","title","uri","wspOptions","push"],"mappings":"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","sourcesContent":["import {BaseElement, BaseElementAsync, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {JWspCreateParamsDB, JWspCreateParamsDB_DRF, JWspCreateParamsDB_DRV, JWspCreateParamsFS, JWspType, JWspTypeInst} from \"lib/wsp/wsp\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {WSPTYPE} from \"lib/wsp/wspType\";\nimport {IChainEnv} from \"lib/wsp/chain\";\nimport {IPendingValidity, MxFormElement, OFormElementInit} from \"lib/commons/forms\";\nimport {LOCALE} from \"lib/commons/lang\";\n\nexport interface OWspTypeSelectorInit extends OFormElementInit {\n\treg?: IReg<IChainEnv>\n\tmode: \"new\" | \"edit\"\n\tfromWspCode?: string\n\treadonly?: boolean\n\tparams?: JWspCreateParamsFS | JWspCreateParamsDB | JWspCreateParamsDB_DRF | JWspCreateParamsDB_DRV | any\n}\n\nexport interface IWspTypeDefMaker {\n\tfillWspTypeInst(): JWspTypeInst;\n}\n\n\nexport class WspTypeSelector extends MxFormElement(BaseElementAsync) implements IWspTypeDefMaker, IPendingValidity {\n\n\tprotected config: OWspTypeSelectorInit;\n\n\tprotected reg: IReg<IChainEnv>;\n\n\tprotected wspMetaEditorRootElt: HTMLFieldSetElement;\n\n\tprotected msgElt: MsgLabel;\n\n\tprotected async _initialize(init: OWspTypeSelectorInit): Promise<any> {\n\t\tthis.config = init;\n\t\tthis.reg = this.findReg(init);\n\n\t\tthis.msgElt = new MsgLabel();\n\t\tthis.wspMetaEditorRootElt = <fieldset tabindex=\"-1\"/> as HTMLFieldSetElement;\n\n\t\tthis._attach(this.localName, init, this.msgElt, <form name=\"wspTypeSelector\">{this.wspMetaEditorRootElt}</form>);\n\n\t\tthis.addEventListener('input', async (ev: UIEvent) => {\n\t\t\tthis._refreshValidity();\n\t\t});\n\n\t\tthis._initializeForm(init);\n\n\t\tawait this._refreshAll();\n\t}\n\n\t/** Form */\n\tformDisabledCallback(disabled: boolean) {\n\t\tthis.wspMetaEditorRootElt.disabled = disabled;\n\t}\n\n\tprotected _refreshValidity() {\n\t\tconst wspTypeDef: WspTypeDef = this.wspMetaEditorRootElt.querySelector(\"wsptype-selector-wsptypedef[checked]\") as WspTypeDef;\n\t\tif (this.required && !wspTypeDef) return this.setValidity({valueMissing: true}, \"Veuillez sÃ©lectionner un modÃ¨le documentaire\", this.wspMetaEditorRootElt);\n\t\tif (wspTypeDef) {\n\t\t\tconst wspOptionDefs: NodeListOf<WspOptionDef> = wspTypeDef.querySelectorAll(\"wsptype-selector-wspoptiondef[checked]\");\n\t\t\tfor (const wspOptionDef of wspOptionDefs) {\n\t\t\t\tif (wspOptionDef.unknown)\n\t\t\t\t\treturn this.setValidity({valueMissing: true}, \"Veuillez dÃ©sÃ©lectionner les extensions inconnues\", this.wspMetaEditorRootElt);\n\t\t\t}\n\t\t}\n\t\tthis.setValidity({}, \"\");\n\t}\n\n\t/**\n\t * Fonctions de refresh UI\n\t */\n\tprotected refreshUi() {\n\t\tif (this.initStatus != \"pending\")\n\t\t\tthis.reinitializeStarted(this._refreshAll());\n\t}\n\n\trefreshPending: Promise<Document>;\n\n\tprotected async _refreshAll(): Promise<void> {\n\t\tthis.addPendingValidity(this);\n\t\tthis.msgElt.setStandardMsg(\"loading\");\n\t\ttry {\n\t\t\t// - Load du wspMetaEditor\n\t\t\tthis.refreshPending = (this.config.mode == \"new\" || !this.config.fromWspCode ? WSPTYPE.getNewEditor(this.reg.env.universe.wspServer, this.config.fromWspCode, this.config.params) : WSPTYPE.getUpdateEditor(this.reg.env.universe.wspServer, this.config.fromWspCode));\n\n\t\t\t// - Clean\n\t\t\tthis.wspMetaEditorRootElt.innerHTML = \"\";\n\t\t\tlet wspMetaEditorDom: Document = await this.refreshPending\n\t\t\t// - affichage UI\n\t\t\tlet hasWspDefSelected: boolean = false;\n\t\t\twspMetaEditorDom.firstElementChild.childNodes.forEach((node: HTMLElement) => {\n\t\t\t\tif (node.nodeName == \"wspTypeDef\") {\n\t\t\t\t\tthis.wspMetaEditorRootElt.appendChild(new WspTypeDef().initialize({node}));\n\t\t\t\t\tif (node.getAttribute(\"selected\") == \"true\") hasWspDefSelected = true;\n\t\t\t\t} else\n\t\t\t\t\tERROR.log(\"wspTypeEditor : unknown tag '\" + node.nodeName + \"'\");\n\t\t\t});\n\n\t\t\t// - Mode \"new\" : on sÃ©lectionne le premier wspTypeDef si uniquement un seul\n\t\t\tif (this.config.mode == \"new\" && this.wspMetaEditorRootElt.childElementCount===1)\n\t\t\t\t(this.wspMetaEditorRootElt.firstElementChild as WspTypeDef).checked = true;\n\n\t\t\tif (!this.wspMetaEditorRootElt.hasChildNodes())\n\t\t\t\tthis.msgElt.setCustomMsg(\"Aucun modÃ¨le disponible\", \"info\");\n\t\t\telse\n\t\t\t\tthis.msgElt.setStandardMsg(null);\n\n\t\t\tthis.disabled = this.disabled;// refraichissement UI du statut disabled\n\t\t\tif (this.config.readonly !== undefined) this.readonly = this.config.readonly;\n\t\t\telse this.readonly = this.readonly;// refraichissement UI du statut readonly\n\t\t\tthis._refreshValidity();\n\t\t} catch (e) {\n\t\t\tthis.msgElt.setCustomMsg(\"Chargement impossible\", \"error\");\n\t\t\tawait ERROR.log(e);\n\t\t} finally {\n\t\t\tthis.refreshPending = null;\n\t\t}\n\t}\n\n\tasync computeValidity(): Promise<void> {\n\t\tawait this.refreshPending;\n\t}\n\n\tget readonly(): boolean {\n\t\treturn this.hasAttribute(\"readonly\");\n\t}\n\n\tset readonly(val) {\n\t\tArray.from(this.wspMetaEditorRootElt.querySelectorAll(\"wsptype-selector-wsptypedef\")).forEach((elt: WspTypeDef) => {\n\t\t\tif (val === true) elt.readonly = true;\n\t\t});\n\t\tif (val === true)\n\t\t\tDOM.setAttr(this, \"readonly\", \"true\");\n\t\telse\n\t\t\tthis.removeAttribute(\"readonly\")\n\t}\n\n\t/**\n\t * Retourne le JWspTypeInst construit\n\t */\n\tfillWspTypeInst(): JWspTypeInst | null {\n\t\tlet wspTypeDef: WspTypeDef = this.wspMetaEditorRootElt.querySelector(\"wsptype-selector-wsptypedef[checked]\") as WspTypeDef;\n\t\tif (wspTypeDef) {\n\t\t\tlet wspTypeInst: JWspTypeInst = {} as JWspTypeInst;\n\t\t\twspTypeDef.toWspTypeInst(wspTypeInst);\n\t\t\treturn wspTypeInst;\n\t\t}\n\t}\n\n\textractJson(parent: Dict<any>): boolean {\n\t\tif (this.name && parent[this.name]) this.refreshUi();\n\t\treturn false;\n\t}\n\n\tfillJson(parent: any, root: any): void {\n\t\tif (this.name) parent[this.name] = this.fillWspTypeInst();\n\t}\n}\n\ncustomElements.define('wsptype-selector', WspTypeSelector);\nREG.reg.registerSkin('wsptype-selector', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t  display: flex;\n\t  min-height: 0;\n\t  min-width: 0;\n\t  flex-direction: column;\n\t  justify-content: center;\n\t  text-align: center;\n\t  vertical-align: middle;\n\t  overflow: auto;\n  }\n\n  fieldset {\n\t  margin: 0;\n\t  padding: 0;\n\t  border: none;\n  }\n\n  fieldset:focus {\n\t  outline: none;\n  }\n`);\n\n\n/**\n * Tag wspTypeDef\n */\nexport interface OWspTypeDefInit extends OSkinableInit {\n\treadonly?: boolean\n\tnode: Element\n}\n\nclass WspTypeDef extends BaseElement {\n\n\tprotected config: OWspTypeDefInit;\n\n\tprotected inputElt: HTMLInputElement;\n\n\tprivate _childrenSkinElt: HTMLDivElement;\n\tprivate _childrenGenElt: HTMLDivElement;\n\tprivate _childrenExtElt: HTMLDivElement;\n\n\tprotected _initialize(init: OWspTypeDefInit) {\n\t\tthis.config = init;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\n\t\tthis._initAndInstallSkin(\"wsptype-selector-wsptypedef\", init);\n\n\t\tthis.initInput();\n\n\t\tif (this.unknown) DOM.addClass(this, \"unknown\");\n\t\tif (this.obsolete) DOM.addClass(this, \"obsolete\");\n\t\tif (this.newest) DOM.addClass(this, \"newest\");\n\t\tlet label = sr.appendChild(<label>{this.inputElt} <span>{this.titleWspDef}</span></label>);\n\t\tif (this.descWspDef)\n\t\t\tDOM.setAttr(label, \"title\", this.descWspDef);\n\t\tlet children = sr.appendChild(<div class=\"children\"/>);\n\n\t\tif (this.config.readonly !== undefined) this.readonly = this.config.readonly;\n\t\tthis.disabled = this.obsolete ? true : this.disabled;// refraichissement UI du statut disabled\n\n\t\t// Options filles\n\t\tthis._childrenSkinElt = children.appendChild(<div>\n\t\t\t<div class=\"sublabel\">Habillage des publications</div>\n\t\t\t<div class=\"optslist\">\n\t\t\t\t<slot name=\"skin\"/>\n\t\t\t</div>\n\t\t</div>) as HTMLDivElement;\n\t\tthis._childrenGenElt = children.appendChild(<div>\n\t\t\t<legend class=\"sublabel\">Publications</legend>\n\t\t\t<div class=\"optslist\">\n\t\t\t\t<slot name=\"gen\"/>\n\t\t\t</div>\n\t\t</div>) as HTMLDivElement;\n\t\tthis._childrenExtElt = children.appendChild(<div>\n\t\t\t<legend class=\"sublabel\">Extensions</legend>\n\t\t\t<div class=\"optslist\">\n\t\t\t\t<slot name=\"ext\"/>\n\t\t\t</div>\n\t\t</div>) as HTMLDivElement;\n\n\t\tif (init.node) init.node.childNodes.forEach((optionNode: HTMLElement) => {\n\t\t\tif (optionNode.nodeName == \"wspOptionDef\")\n\t\t\t\tthis.appendChild(<WspOptionDef slot={optionNode.getAttribute(\"nature\") || \"ext\"} Ã®={{node: optionNode, disabled: this.disabled} as OWspTypeDefInit}/>);\n\t\t});\n\n\t\tthis.addEventListener('input', async (ev: UIEvent) => {\n\t\t\tif (!this.disabled || !this.readonly) {\n\t\t\t\tconst input = ev.composedPath()[0] as HTMLInputElement;\n\t\t\t\tif (input === this.inputElt)\n\t\t\t\t\tthis.checked = input.checked;\n\t\t\t}\n\t\t});\n\n\t\tif (init.node.getAttribute(\"selected\") === \"true\")\n\t\t\tthis.checked = true;\n\n\t\tthis._adjustUi(true)\n\t}\n\n\t/** Ajustemets graphiques UI en fonction des Ã©tats (disabled, ...) **/\n\tprivate _adjustUi(forced?: boolean): void {\n\t\tif (forced || this.initialized) {\n\t\t\tlet isOptionVisible = function (optionNode: WspOptionDef) {if (!optionNode.hidden) return true};\n\t\t\tif (Array.from(this.querySelectorAll(\"*[slot='skin']\")).findIndex(isOptionVisible) == -1)\n\t\t\t\tDOM.setHidden(this._childrenSkinElt, true);\n\t\t\tif (Array.from(this.querySelectorAll(\"*[slot='gen']\")).findIndex(isOptionVisible) == -1)\n\t\t\t\tDOM.setHidden(this._childrenGenElt, true);\n\t\t\tif (Array.from(this.querySelectorAll(\"*[slot='ext']\")).findIndex(isOptionVisible) == -1)\n\t\t\t\tDOM.setHidden(this._childrenExtElt, true);\n\t\t}\n\t}\n\n\tget checked(): boolean {\n\t\treturn this.inputElt.checked;\n\t}\n\n\tset checked(value: boolean) {\n\t\tthis.inputElt.checked = value;\n\t\tif (value)\n\t\t\tDOM.setAttr(this, \"checked\", \"true\");\n\t\telse\n\t\t\tthis.removeAttribute(\"checked\");\n\t\tif (value && this.nodeName == \"wsptype-selector-wsptypedef\") {\n\t\t\t// on dÃ©sactive les frÃªres wspTypeDef\n\t\t\tlet prev: WspTypeDef = this.previousElementSibling as WspTypeDef;\n\t\t\twhile (prev) {\n\t\t\t\tprev.checked = false;\n\t\t\t\tprev = prev.previousElementSibling as WspTypeDef;\n\t\t\t}\n\t\t\tlet next: WspTypeDef = this.nextElementSibling as WspTypeDef;\n\t\t\twhile (next) {\n\t\t\t\tnext.checked = false;\n\t\t\t\tnext = next.nextElementSibling as WspTypeDef;\n\t\t\t}\n\t\t}\n\t\tthis._adjustUi();\n\t}\n\n\tget disabled(): boolean {\n\t\treturn this.getAttribute(\"disabled\") === \"true\";\n\t}\n\n\tset disabled(val) {\n\t\tArray.from(this.querySelectorAll(\"wsptype-selector-wspoptiondef\")).forEach((elt: WspOptionDef) => {\n\t\t\tif (val === true) elt.disabled = true;\n\t\t});\n\t\tthis.inputElt.disabled = val === true;\n\t\tif (val === true)\n\t\t\tDOM.setAttr(this, \"disabled\", \"true\");\n\t\telse\n\t\t\tthis.removeAttribute(\"disabled\");\n\t\tthis._adjustUi();\n\t}\n\n\tget readonly(): boolean {\n\t\treturn this.getAttribute(\"readonly\") === \"true\";\n\t}\n\n\tset readonly(val) {\n\t\tArray.from(this.querySelectorAll(\"wsptype-selector-wspoptiondef\")).forEach((elt: WspOptionDef) => {\n\t\t\tif (val === true) elt.readonly = true;\n\t\t});\n\t\tthis.inputElt.disabled = val === true;\n\t\tif (val === true)\n\t\t\tDOM.setAttr(this, \"readonly\", \"true\");\n\t\telse\n\t\t\tthis.removeAttribute(\"readonly\");\n\t\tthis._adjustUi();\n\t}\n\n\tget hidden(): boolean {\n\t\treturn this.readonly && !this.checked;\n\t}\n\n\t/**\n\t * Titre\n\t */\n\tprotected get titleWspDef(): HTMLElement {\n\t\tlet details = \"\";\n\t\tif (this.obsolete || this.newest) details = `version ${this.config.node.getAttribute(\"version\")}`;\n\t\tif (this.config.node.getAttribute(\"lang\")) {\n\t\t\tif (details !== \"\") details += `, ${LOCALE.languageToName(this.config.node.getAttribute(\"lang\"))}`;\n\t\t\telse details += LOCALE.languageToName(this.config.node.getAttribute(\"lang\"));\n\t\t}\n\t\treturn <span>\n\t\t\t<span class=\"title\">\n\t\t\t\t{this.config.node.getAttribute(\"title\")}\n\t\t\t\t{details ? <span> ({details})</span> : null}\n\t\t\t</span>\n\t\t\t{this.error ? <span class={\"labelstatus \" + this.errorLevel}>{this.error}</span> : null}\n\t\t</span>;\n\t}\n\n\t/**\n\t * Description\n\t */\n\tprotected get descWspDef(): string {\n\t\treturn this.config.node.getAttribute(\"version\");\n\t}\n\n\t/**\n\t * ModÃ¨le inconnu (ie pas de pack)\n\t */\n\tget unknown(): boolean {\n\t\treturn this.config.node.getAttribute(\"unknown\") === \"true\";\n\t}\n\n\t/**\n\t * ModÃ¨le obsolÃ¨te (ie pack potentiellement prÃ©sent, mais inutilisable. Ex : v mineure -1 avec migration)\n\t */\n\tget obsolete(): boolean {\n\t\treturn this.config.node.getAttribute(\"obsolete\") === \"true\";\n\t}\n\n\t/**\n\t * Nouveau modÃ¨le cible conseillÃ©e en cas de prÃ©sence d'obsolÃ¨te sÃ©lectionnÃ©e\n\t */\n\tget newest(): boolean {\n\t\treturn this.config.node.getAttribute(\"newest\") === \"true\";\n\t}\n\n\t/**\n\t * null si pas d'erreur\n\t */\n\tprotected get error(): string | null {\n\t\tif (this.obsolete)\n\t\t\treturn \"modÃ¨le obsolÃ¨te\";\n\t\tif (this.unknown)\n\t\t\treturn \"modÃ¨le inconnu\";\n\t\tif (this.config.node.hasAttribute(\"@errorPack\")) {\n\t\t\tswitch (this.config.node.getAttribute(\"@errorPack\")) {\n\t\t\tcase \"unknownError\":\n\t\t\tcase \"malformedPack\":\n\t\t\t\treturn \"modÃ¨le en erreur\";\n\t\t\tcase \"versionPackUnknown\":\n\t\t\tcase \"versionFrameworkPackOutdated\":\n\t\t\t\treturn \"modÃ¨le trop ancien, mise Ã  jour nÃ©cessaire\";\n\t\t\tcase \"versionServerOutdated\":\n\t\t\t\treturn \"modÃ¨le trop rÃ©cent, incompatible avec cet entrepÃ´t\";\n\t\t\tdefault:\n\t\t\t\treturn \"modÃ¨le en erreur\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected get errorLevel(): \"warning\" | \"error\" | null {\n\t\tif (this.unknown || this.config.node.hasAttribute(\"@errorPack\"))\n\t\t\treturn 'error';\n\t\tif (this.obsolete)\n\t\t\treturn 'warning'\n\t\treturn null;\n\t}\n\n\t/**\n\t * Construit le tag input\n\t */\n\tprotected initInput(): HTMLInputElement {\n\t\tthis.inputElt = <input type=\"radio\" name=\"wspTypeDef\" value={this.config.node.getAttribute(\"uri\")} form=\"wspTypeSelector\"/> as HTMLInputElement;\n\t\treturn this.inputElt;\n\t}\n\n\t/**\n\t * Retourne un Ã©lÃ©ment JWspTypeInst\n\t */\n\tpublic toWspTypeInst(wspTypeInst: JWspTypeInst): void {\n\t\tif (this.checked && !this.obsolete) {\n\t\t\twspTypeInst.wspType = {\n\t\t\t\tkey: this.config.node.getAttribute(\"key\"),\n\t\t\t\tlang: this.config.node.getAttribute(\"lang\"),\n\t\t\t\tversion: this.config.node.getAttribute(\"version\"),\n\t\t\t\ttitle: this.config.node.getAttribute(\"title\"),\n\t\t\t\turi: this.config.node.getAttribute(\"uri\"),\n\t\t\t} as JWspType;\n\n\t\t\tArray.from(this.querySelectorAll(\"*\")).forEach((node: WspOptionDef) => {\n\t\t\t\tnode.toWspTypeInst(wspTypeInst);\n\t\t\t})\n\t\t}\n\t}\n\n}\n\ncustomElements.define('wsptype-selector-wsptypedef', WspTypeDef);\nREG.reg.registerSkin('wsptype-selector-wsptypedef', 1, /* language=CSS */ `\n\t:host {\n\t\ttext-align: start;\n\t\tuser-select: none;\n\t}\n\n\t:host([readonly]:not([checked=true])) {\n\t\tdisplay: none;\n\t}\n\n\t:host(.newest) .title {\n\t\tfont-weight: bolder;\n\t}\n\n\tlabel {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n\n\t:host(:not([disabled]):not([readonly])) label {\n\t\tcursor: pointer;\n\t}\n\n  :host([readonly]) input {\n\t  display: none;\n  }\n\n  :host(.obsolete) {\n\t  font-style: italic;\n  }\n\n  .labelstatus::before {\n\t  content: \" - \";\n\t  font-style: italic;\n  }\n\n  .labelstatus {\n\t  font-size: .8em;\n  }\n\n  .labelstatus.warning {\n\t  color: var(--warning-color);\n  }\n\n  .labelstatus.error {\n\t  color: var(--error-color);\n  }\n\n  :host(wsptype-selector-wsptypedef) > label {\n\t  /*color: var(--alt2-color);\n\t\tbackground-color: var(--alt2-bgcolor);*/\n  }\n\n  :host(wsptype-selector-wspoptiondef) > label {\n\t  font-size: 0.8em;\n  }\n\n  .children {\n\t  margin-inline-start: 2em;\n  }\n\n  .optslist {\n\t  margin-inline-start: 1em;\n\t  padding-inline-start: .2em;\n\t  border-inline-start: 1px solid var(--alt2-border-color);\n  }\n\n  .sublabel {\n\t  padding-top: .2em;\n\t  font-variant: all-small-caps;\n\t  font-size: 0.8em;\n  }\n\n  :host(:not([checked]):not(.unknown)) > .children {\n\t  display: none;\n  }\n\n  :host(:not([checked]).unknown){\n\t  color:var(--fade-color);\n\t\tfont-style: italic;\n  }\n\n  .unknown > label {\n\t  font-style: italic;\n  }\n`);\n\n/**\n * Tag wspOptionDef\n */\n\nclass WspOptionDef extends WspTypeDef {\n\n\tprotected initInput(): HTMLInputElement {\n\t\tthis.inputElt = <input type=\"checkbox\" name=\"wspTypeDef\" value={this.config.node.getAttribute(\"uri\")} form=\"wspTypeSelector\"/> as HTMLInputElement;\n\t\treturn this.inputElt;\n\t}\n\n\tpublic toWspTypeInst(wspTypeInst: JWspTypeInst): void {\n\t\tif (this.checked && !this.obsolete) {\n\t\t\tif (!wspTypeInst.wspOptions)\n\t\t\t\twspTypeInst.wspOptions = [];\n\t\t\twspTypeInst.wspOptions.push({\n\t\t\t\tkey: this.config.node.getAttribute(\"key\"),\n\t\t\t\tlang: this.config.node.getAttribute(\"lang\"),\n\t\t\t\tversion: this.config.node.getAttribute(\"version\"),\n\t\t\t\ttitle: this.config.node.getAttribute(\"title\"),\n\t\t\t\turi: this.config.node.getAttribute(\"uri\"),\n\t\t\t} as JWspType);\n\t\t}\n\t}\n\n\t/**\n\t * null si pas d'erreur\n\t */\n\tprotected get error(): string | null {\n\t\tif (this.obsolete)\n\t\t\treturn \"extension obsolÃ¨te\";\n\t\tif (this.unknown)\n\t\t\treturn \"extension inconnue\";\n\t\tif (this.config.node.hasAttribute(\"@errorPack\")) {\n\t\t\tswitch (this.config.node.getAttribute(\"@errorPack\")) {\n\t\t\tcase \"unknownError\":\n\t\t\tcase \"malformedPack\":\n\t\t\t\treturn \"extension en erreur\";\n\t\t\tcase \"versionPackUnknown\":\n\t\t\tcase \"versionFrameworkPackOutdated\":\n\t\t\t\treturn \"extension trop ancienne, mise Ã  jour nÃ©cessaire\";\n\t\t\tcase \"versionServerOutdated\":\n\t\t\t\treturn \"extension trop rÃ©cente, incompatible avec cet entrepÃ´t\";\n\t\t\tdefault:\n\t\t\t\treturn \"extension en erreur\";\n\t\t\t}\n\t\t}\n\t}\n}\n\ncustomElements.define('wsptype-selector-wspoptiondef', WspOptionDef);"]}