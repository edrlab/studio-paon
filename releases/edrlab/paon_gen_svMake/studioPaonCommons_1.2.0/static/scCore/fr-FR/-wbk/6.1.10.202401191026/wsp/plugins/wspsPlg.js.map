{"version":3,"sources":["/@back@/wsp/plugins/wspsPlg.tsx"],"names":["Action","ActionHackCtx","ActionMenu","SimpleTagArea","REG","POPUP","JSX","CheckPrefArea","SelectPrefArea","UserPrefPageConfig","Wsp","CreateWspAction","ImportWspAction","ManageWspsAction","initApp","reg","WrapReg","[object Object]","sub","super","this","ctx","buttonNode","initButtonNode","wrap","action","plgCode","getPref","plgName","plgCheckUniverse","d","desk","addAppBuilder","WspAppBuilder","WspDocAppBuilder","surveyWsConnexion","env","universe","wsFrames","ws","wspsActionListCode","wspsAction","setLabel","setSkinOver","setActionLists","setVisible","getReg","hasPerm","securityCtx","requireVisiblePerm","addToList","WspListAction","userPrefsListCd","LIST_userPrefPages","setAreasList","setDescription","setBuildOptions","selectElt","currentVal","add","cd","label","append","createElement","value","selected","undefined","setCheckStateIfNone","setInvertCheck","setReloadAppNeeded","uiContext","parent","import","OpenFixedWsp","_wspCodeOrAlias","wspAppMode","id","ev","wsp","wspServer","waitForLoad","isLoaded","OpenWsp","execute","createSubReg","showNotifForbidden","document","body","checkUnivers","resolver","resolve","data","u","getId","skin","skinOver","newElt","initialize","wspDoc"],"mappings":"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","sourcesContent":["import {OSkinableInit} from \"back/commons/basis\";\nimport {Action, ActionHackCtx, ActionMenu, EButtonUiContext, IAction} from \"lib/commons/actions\";\nimport {SimpleTagArea} from \"lib/commons/areas\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {Desk} from \"lib/commons/desk\";\nimport {ISecurityCtxPointer} from \"lib/commons/security\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {JSX} from \"lib/commons/xml/dom\";\n\nimport {AppFrameDeskFeat, IApp, IAppBuilder, IAppCtx, JAppDef} from \"back/core/appFrame\";\nimport {CheckPrefArea, SelectPrefArea, UserPrefPageConfig} from \"back/core/dialogs/userPrefEditorConfig\";\n\nimport \"back/wsp/plugins/plugins_Perms\";\nimport \"back/wsp/actions/actions_Perms\";\n\nimport {srcRef} from \"lib/wsp/src\";\nimport {IWspEnv, IWspUiEnv, Wsp, wspCd} from \"lib/wsp/wsp\";\n\nimport type {WspList} from \"back/wsp/views/wspList\";\nimport type {IChainEnv} from \"lib/wsp/chain\";\nimport type {OWspAppInit, WspApp} from \"back/wsp/apps/wspApp\";\nimport type {OWspDocAppInit, WspDocApp} from \"back/wsp/apps/wspDocApp\";\nimport type {ICreateWspCtx, IWspActionCtx} from \"back/wsp/actions/wspActions\";\nimport {CreateWspAction, ImportWspAction, ManageWspsAction} from \"back/wsp/actions/chainActions\";\n\n\n/**\n * Accès aux ateliers d'un chain dans une appFrame.\n * A appeler au cours du processus d'init du desk (qui doit disposer de AppFrameDeskFeat).\n *\n * @param reg Registre à exploiter correspondant au chain, nécessaire en cas de front multi-universe.\n */\nexport function initApp(reg: IReg<IChainEnv> = REG.reg) {\n\n\tclass WrapReg extends ActionHackCtx<Element, IReg<IChainEnv>> {\n\t\tconstructor(sub: IAction<IReg<IChainEnv>>, public reg: IReg<IChainEnv>) {\n\t\t\tsuper(sub);\n\t\t}\n\n\t\twrapCtx(ctx: Element): IReg<IChainEnv> {return this.reg}\n\n\t\tinitButtonNode(buttonNode: Element, ctx: Element) {\n\t\t\t//Affectation du bon registre dans le contexte graphique.\n\t\t\t(buttonNode as IRegPointer<IChainEnv>).reg = this.reg;\n\t\t\tthis.sub.initButtonNode(buttonNode, this.reg);\n\t\t}\n\t}\n\n\tfunction wrap(action: IAction<IReg<IChainEnv>>): IAction<Element> {\n\t\treturn new WrapReg(action, reg);\n\t}\n\n\tconst plgCode = reg.getPref<string>(\"plg.code\", \"xChain\");\n\tconst plgName = reg.getPref<string>(\"plg.name\", \"Ateliers\");\n\tconst plgCheckUniverse = reg.getPref<boolean>(\"plg.checkUniverse\", true);\n\t//const plgUniverseCode = reg.getPref<string>(\"plg.universe\", \"xChain\");\n\n\tconst d = desk as AppFrameDeskFeat;\n\td.addAppBuilder(new WspAppBuilder(reg, plgCheckUniverse));\n\td.addAppBuilder(new WspDocAppBuilder(reg, plgCheckUniverse));\n\n\td.surveyWsConnexion(reg.env.universe.wsFrames.ws);\n\n\t// Création du menu 'Ateliers'\n\tconst wspsActionListCode = \"app:wsps:\" + plgCode + \":actions\";\n\tconst wspsAction = wrap(new ActionMenu<IReg<IChainEnv>>('wsps')\n\t\t.setLabel(plgName)\n\t\t//.setIcon(\"/@skin@/wsp/objects/wspList.svg\")\n\t\t.setSkinOver(\"appframeHeader_wsps\")\n\t\t.setActionLists(\"app:wsps:actions \" + wspsActionListCode)\n\t\t.setVisible((ctx) => {\n\t\t\tif (!REG.getReg(ctx).hasPerm([\"ui.wspApp\", \"ui.wspDocApp\"], (ctx as ISecurityCtxPointer).securityCtx)) return false;\n\t\t})\n\t\t.requireVisiblePerm([\"ui.wspsPlg\"])\n\t);\n\n\tREG.reg.addToList(\"appframe:header:toolbar\", \"wsps_\" + plgCode, 1, wspsAction);\n\n\t//Menu Ateliers\n\treg.addToList(wspsActionListCode, 'wspList', 1, wrap(new WspListAction('wspList')), 100);\n\treg.addToList(wspsActionListCode, 'addWsp', 1, wrap(new CreateWspAction().requireVisiblePerm(\"ui.wspsPlg.create\")), 110);\n\treg.addToList(wspsActionListCode, 'importWsp', 1, wrap(new ImportWspAction().requireVisiblePerm(\"ui.wspsPlg.import\")), 120);\n\treg.addToList(wspsActionListCode, 'manageWsps', 1, wrap(new ManageWspsAction().requireVisiblePerm(\"ui.wspsPlg.manage\")), 200);\n\n\t//Prefs\n\tconst userPrefsListCd = `user:prefs:${plgCode}`;\n\tREG.reg.addToList(UserPrefPageConfig.LIST_userPrefPages, `prl_${plgCode}`, 1, new UserPrefPageConfig(reg).setAreasList(userPrefsListCd).setLabel(plgName), 2);\n\treg.addToList(userPrefsListCd, \"wspAppPrefered\", 1, new CheckPrefArea(\"wspAppPrefered\").setLabel(\"Privilégier le mode explorateur au mode plan\").setDescription(\"L'accès par défaut à l'atelier en mode plan est remplacé par le mode explorateur\"));\n\treg.addToList(userPrefsListCd, \"wspApp:tools:generators\", 1, new SelectPrefArea(\"wspApp:tools:generators\").setLabel(\"Emplacement du volet 'Publications' (mode explorateur)'\").setBuildOptions((selectElt, currentVal) => {\n\t\tif (!currentVal) currentVal = \"\";\n\n\t\tfunction add(cd: string, label: string) {\n\t\t\tselectElt.append(<option value={cd} selected={currentVal === cd ? \"\" : undefined}>{label}</option>);\n\t\t}\n\n\t\tadd(\"lt\", \"À gauche au-dessus\");\n\t\tadd(\"lb\", \"À gauche au-dessous\");\n\t\tadd(\"bl\", \"En bas à gauche\");\n\t\tadd(\"br\", \"En bas à droite\");\n\t\tadd(\"rt\", \"À droite au-dessus\");\n\t\tadd(\"rb\", \"À droite au-dessous\");\n\t\tadd(\"\", \"Non spécifié\");\n\t}));\n\treg.addToList(userPrefsListCd, \"showFlapTabs\", 1, new CheckPrefArea(\"showFlapTabs\").setLabel(\"Masquer les onglets des volets fermés (mode explorateur)\").setDescription(\"Le menu principal de l'atelier permet d'accéder aux volets fermés\").setCheckStateIfNone(true).setInvertCheck().setReloadAppNeeded());\n}\n\n\n/** Liste les ateliers dans le menu. */\nclass WspListAction extends Action<IReg<IChainEnv>> {\n\n\tbuildCustomButton(ctx: IReg<IChainEnv>, uiContext: EButtonUiContext, parent?: Element): Element {\n\t\timport(\"back/wsp/views/wspList.js\");\n\t\treturn <wsp-list/> as WspList;\n\t}\n}\n\n/** Chargement et ouverture d'un wsp par son code ou son alias. */\nexport class OpenFixedWsp extends Action<IRegPointer<IChainEnv>> {\n\tconstructor(protected _wspCodeOrAlias: string, public wspAppMode?: 'wspApp' | 'wspDocApp', id?: string) {\n\t\tsuper(id || \"OpenFixedWsp\");\n\t}\n\n\tasync execute(ctx: IRegPointer<IChainEnv>, ev?: KeyboardEvent | MouseEvent) {\n\t\tconst wsp = new Wsp(ctx.reg.env.universe.wspServer, this._wspCodeOrAlias);\n\t\tawait wsp.waitForLoad();\n\t\tif (wsp.isLoaded) {\n\t\t\tconst OpenWsp = (await import(\"back/wsp/views/wspList.js\")).OpenWsp;\n\t\t\treturn new OpenWsp(this.wspAppMode).execute({reg: REG.createSubReg(ctx.reg, wsp)}, ev);\n\t\t} else {\n\t\t\tPOPUP.showNotifForbidden(\"L'atelier demandé n'existe pas ou est inaccessible.\", document.body);\n\t\t}\n\t}\n}\n\n\n/** Définition pour une WspApp. */\nexport interface JWspAppDef extends JAppDef {\n\t/** Code de l'univers associé */\n\tu?: string\n\twsp: wspCd\n\tsrcRef?: srcRef\n}\n\n/** Définition pour une WspDocApp. */\nexport interface JWspDocAppDef extends JAppDef {\n\twspDoc: wspCd\n\t/** Code de l'univers associé */\n\tu?: string\n\t/** document / contenu racine */\n\tdoc?: srcRef\n\t/** item support sélectionné */\n\tsup?: srcRef\n\t/** item courant dans l'arbre affiché */\n\tsrc?: srcRef\n}\n\n\n/** Construction async de la view WspApp. */\nexport class WspAppBuilder extends SimpleTagArea<IAppCtx<IChainEnv>, IApp<IWspEnv>> implements OSkinableInit, IAppBuilder<IChainEnv, IWspEnv> {\n\n\tskin?: string;\n\n\tskinOver?: string;\n\n\tconstructor(public reg: IReg<IChainEnv>, public checkUnivers: boolean) {\n\t\tsuper('wsp-app', reg.env.resolver.resolve(\":back:wsp/apps/wspApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JWspAppDef) {\n\t\treturn typeof data.wsp === 'string' && (!this.checkUnivers || data.u === this.reg.env.universe.getId());\n\t}\n\n\tnormalizeAppDef(data: JWspDocAppDef) {\n\t\tif (!this.checkUnivers) data.u = undefined;\n\t}\n\n\tnewElt(ctx: IAppCtx<IChainEnv> & OSkinableInit): WspApp {\n\t\tif (!ctx.skin) ctx.skin = this.skin;\n\t\tif (!ctx.skinOver) ctx.skinOver = this.skinOver;\n\t\tctx.reg = this.reg;\n\t\treturn (super.newElt(ctx) as WspApp).initialize(ctx as OWspAppInit);\n\t}\n}\n\n/** Construction async de la view WspDocApp. */\nexport class WspDocAppBuilder extends SimpleTagArea<IAppCtx<IChainEnv>, IApp<IWspEnv>> implements OSkinableInit, IAppBuilder<IChainEnv, IWspEnv> {\n\n\tskin?: string;\n\n\tskinOver?: string;\n\n\tconstructor(public reg: IReg<IChainEnv>, public checkUnivers: boolean) {\n\t\tsuper('wsp-doc-app', reg.env.resolver.resolve(\":back:wsp/apps/wspDocApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JWspDocAppDef) {\n\t\treturn typeof data.wspDoc === 'string' && (!this.checkUnivers || data.u === this.reg.env.universe.getId());\n\t}\n\n\tnormalizeAppDef(data: JWspDocAppDef) {\n\t\tif (!this.checkUnivers) data.u = undefined;\n\t}\n\n\tnewElt(ctx: IAppCtx<IChainEnv> & OSkinableInit): WspDocApp {\n\t\tif (!ctx.skin) ctx.skin = this.skin;\n\t\tif (!ctx.skinOver) ctx.skinOver = this.skinOver;\n\t\tctx.reg = this.reg;\n\t\treturn (super.newElt(ctx) as WspDocApp).initialize(ctx as OWspDocAppInit);\n\t}\n}\n"]}