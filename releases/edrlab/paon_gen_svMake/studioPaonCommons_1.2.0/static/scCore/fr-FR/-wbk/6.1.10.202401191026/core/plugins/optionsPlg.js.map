{"version":3,"sources":["/@back@/core/plugins/optionsPlg.tsx"],"names":["Action","ActionHackCtx","ActionMenu","ActionMenuDep","Desk","REG","DOM","JSX","EventMgr","POPUP","BASIS","LASTDATAS","LastDatasDeskFeat","CheckPrefArea","SelectPrefArea","UserPrefPageConfig","initApp","reg","options","WrapReg","[object Object]","sub","super","this","ctx","buttonNode","initButtonNode","wrap","action","addToList","setLabel","setSkinOver","setActionLists","setGroupOrder","requireVisiblePerm","docUrl","setGroup","override","window","open","setVisible","env","universe","auth","config","noAuthentication","checkObjectRootVisiblePerm","isListFilled","liaiseUrl","isDesktopApp","setExecute","async","event","import","openNotifUsers","getList","map","elt","confirm","createElement","Ã®","newInit","about","document","body","kind","titleBar","barLabel","label","resizer","cancelLbl","_a","findReg","UserPrefEditor","initialize","prefEditorsList","initializedAsync","showDialog","UiThemeDeskFeat","desk","themes","isIn","d","assignProps","registerCoreThemes","length","onThemeChange","ThemeMenu","userPrefs","userDatas","LIST_userPrefsFrontPage","setDescription","setBuildOptions","selectElt","currentVal","s","value","getId","appendChild","selected","undefined","getLabel","setReloadAppNeeded","LC_init","ldDesk","buildLastDatasHooks","add","datas","uiTheme","currentTheme","setThemeById","lastDatas","getUserData","listeners","on","selector","CORE_THEMES","forEach","coreTheme","id","match","find","act","push","ThemeAction","styleSheetPath","injectThemeInSubFrame","FontSizeDeskFeat","injectFontSizeInSubFrame","theme","t","getDefaultTheme","setAsCurrentTheme","matchMedia","matches","th","isDark","frame","subDoc","contentDocument","style","setAttribute","head","refreshTheme","setAttr","addEventListener","visibilityState","delete","_label","_group","_actions","isVisible","_id","indexOf","cb","getElementById","remove","themeChanged","emitCatched","linkElem","rel","type","href","path","api","getAttribute","ev","setProperty","UiLangDeskFeat","currentLangCode","langs","currentLang","l","newLangMenu","LangMenu","setIcon","code","lang","getDefaultLang","execute","documentElement","LangAction","frontUrl","location","assign","sizes","size","FontSizeAction","onFontSizeChange","FontSizeMenu","fontSize","currentFontSize","setFontSize","getComputedFontSize","currentFontSizeCss","refreshFontSize","_size","toString","pxFontSize","parseFloat","getComputedStyle","Math","round"],"mappings":"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","sourcesContent":["import {Action, ActionHackCtx, ActionMenu, ActionMenuDep, IAction, IActionToggle} from \"lib/commons/actions\";\nimport {Desk} from \"lib/commons/desk\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IBasicUniversePointer, IUniverseEnv} from \"lib/core/universe\";\nimport \"back/core/plugins/plugins_Perms\";\nimport \"lib/commons/utils/user_Perms\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {OAboutDialogInit} from \"back/core/dialogs/about\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {BASIS} from \"back/commons/basis\";\nimport {JLastDatas, LASTDATAS} from \"lib/commons/lastDatas\";\nimport {LastDatasDeskFeat} from \"lib/core/lastDatas\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {CheckPrefArea, SelectPrefArea, UserPrefPageConfig} from \"back/core/dialogs/userPrefEditorConfig\";\n\n/**\n * Ajoute le menu Options au bandeau avec deux entrÃ©es par dÃ©faut :\n * - gestion des users;\n * - A propos de l'application\n *\n */\n\nexport interface OOptionsPlugins {\n\tdocUrl?: string\n\tabout?: OAboutDialogInit\n}\n\nexport function initApp(reg: IReg<IUniverseEnv> = REG.reg, options?: OOptionsPlugins) {\n\n\tclass WrapReg extends ActionHackCtx<Element, IReg<IUniverseEnv>> {\n\t\tconstructor(sub: IAction<IReg<IUniverseEnv>>, public reg: IReg<IUniverseEnv>) {\n\t\t\tsuper(sub);\n\t\t}\n\n\t\twrapCtx(ctx: Element): IReg<IUniverseEnv> {return this.reg}\n\n\t\tinitButtonNode(buttonNode: Element, ctx: Element) {\n\t\t\t//Affectation du bon registre dans le contexte graphique.\n\t\t\t(buttonNode as IRegPointer<IUniverseEnv>).reg = this.reg;\n\t\t\tthis.sub.initButtonNode(buttonNode, this.reg);\n\t\t}\n\t}\n\n\tfunction wrap(action: IAction<IReg<IUniverseEnv>>): IAction<Element> {\n\t\treturn new WrapReg(action, reg);\n\t}\n\n\tREG.reg.addToList(\"appframe:header:toolbar\", \"params\", 1, wrap(new ActionMenuDep<IReg<IUniverseEnv>>()\n\t\t\t.setLabel(\"Gestion\")\n\t\t\t//.setIcon(\"/@skin@/commons/icons/options.svg\")\n\t\t\t.setSkinOver(\"appframeHeader_options\")\n\t\t\t.setActionLists(\"appframe:header:toolbar:params\")\n\t\t\t.setGroupOrder(\"ui * users admin about\")\n\t\t\t.requireVisiblePerm(\"ui.optionsPlg\")),\n\t\t100);\n\tREG.reg.addToList(\"appframe:header:toolbar\", \"help\", 1, wrap(new ActionMenuDep<IReg<IUniverseEnv>>()\n\t\t\t.setLabel(\"Affichage\")\n\t\t\t//.setIcon(\"/@skin@/commons/icons/options.svg\")\n\t\t\t.setGroupOrder(\"* about\")\n\t\t\t.setActionLists(\"appframe:header:toolbar:options\")),\n\t\t1000);\n\n\tif (options && options.docUrl) {\n\t\tREG.reg.addToList(\"appframe:header:toolbar:options\", \"scenari\", 1, new Action().setLabel(\"Documentation...\").setGroup(\"about\").override(\"execute\", () => {\n\t\t\twindow.open(options.docUrl, \"_blank\");\n\t\t}), 950);\n\t}\n\n\tREG.reg.addToList(\"appframe:header:toolbar:params\", \"admin\", 1, wrap(new ActionMenu()\n\t\t.setLabel(\"Administration systÃ¨me\").setGroup(\"admin\").requireVisiblePerm(\"ui.optionsPlg.admin\")\n\t\t.setActionLists(\"appframe:header:toolbar:params:admin\")), 950);\n\n\tREG.reg.addToList(\"appframe:header:toolbar:params:admin\", \"notifUsers\", 1, wrap(new Action<IReg<IUniverseEnv>>(\"notifUsers\")\n\t\t.setLabel(\"Notifications pour maintenance\")\n\t\t.requireVisiblePerm(\"ui.optionsPlg.notif\")\n\t\t.setVisible((ctx: IReg<IUniverseEnv>, action: Action) =>\n\t\t\t!ctx.reg.env.universe.auth.config.noAuthentication\n\t\t\t&& action.checkObjectRootVisiblePerm(ctx)\n\t\t\t&& (ctx.isListFilled(\"plg:notifUsers:universes\") || ctx.env.universe.config.liaiseUrl != null)\n\t\t\t&& !ctx.env.universe.config.isDesktopApp\n\t\t)\n\t\t.setExecute(async function (this: Action, ctx: IReg<IUniverseEnv>, event) {\n\t\t\t(await import(\"back/core/dialogs/notifUsers.js\")).openNotifUsers(ctx.isListFilled(\"plg:notifUsers:universes\") ? (ctx.getList(\"plg:notifUsers:universes\") as IRegPointer<IUniverseEnv>[]).map(elt => elt.reg) : [ctx]);\n\t\t})\n\t), 10);\n\n\tREG.reg.addToList(\"appframe:header:toolbar:options\", \"about\", 1, wrap(new Action<IReg<IUniverseEnv>>(\"about\").setLabel(\"Ã propos...\").setGroup(\"about\").setExecute(async function (reg: IReg<IUniverseEnv>) {\n\t\tawait import(\"back/core/dialogs/about.js\");\n\t\tPOPUP.confirm(<c-about Ã®={BASIS.newInit(options ? options.about : null, reg)}/>, document.body, {\n\t\t\tkind: null,\n\t\t\ttitleBar: {barLabel: {label: \"Ã propos\"}},\n\t\t\tresizer: {},\n\t\t\tcancelLbl: null\n\t\t});\n\t})), 1000);\n\n\tif(reg.env.universe.auth?.config.noAuthentication) {\n\t\treg.addToList(\"appframe:header:toolbar:options\", \"prefs\", 1, new Action<Element>('prefs')\n\t\t\t.setLabel(\"PrÃ©fÃ©rences...\")\n\t\t\t.setGroup(\"ui\")\n\t\t\t.setExecute(async (ctx: Element) => {\n\t\t\t\tconst reg = REG.findReg(ctx) as IReg<IBasicUniversePointer>;\n\t\t\t\tconst {UserPrefEditor} = await import(\"back/core/dialogs/userPrefEditor.js\");\n\t\t\t\tconst body = new UserPrefEditor().initialize({reg, prefEditorsList: \"user:prefs\"});\n\t\t\t\tawait body.initializedAsync;\n\t\t\t\tPOPUP.showDialog(body, ctx, {titleBar: \"PrÃ©fÃ©rences\", resizer:{}});\n\t\t\t}));\n\t}\n\n}\n\n\n/**\n * Feature du desk pour gÃ©rer le thÃ¨me graphique :\n * - Ajoute une entrÃ©e dans le menu Options (ou logged-user) pour choisir le thÃ¨me\n * - GÃ¨re la persistance du choix dans les persistUserDatas.\n * - dÃ©clare par dÃ©faut 2 thÃ¨mes, un clair et un foncÃ©.\n */\nexport class UiThemeDeskFeat extends Desk {\n\n\tprivate static CORE_THEMES: { id: string, styleSheetPath: string, label: string }[] = [\n\t\t{id: \"light\", styleSheetPath: \"/@skin@/core/themes/light-bluegrey.css\", label: \"ThÃ¨me gris-bleu\"},\n\t\t{id: 'light-contrast', styleSheetPath: \"/@skin@/core/themes/light-contrast-bluegrey.css\", label: \"ThÃ¨me gris-bleu contrastÃ©\"},\n\t\t{id: 'light-sand', styleSheetPath: \"/@skin@/core/themes/light-sand.css\", label: \"ThÃ¨me sable-rouille\"},\n\t\t{id: 'light-pinkturquoise', styleSheetPath: \"/@skin@/core/themes/light-pinkturquoise.css\", label: \"ThÃ¨me rose-turquoise\"},\n\t\t{id: 'light-contrast-greenblue', styleSheetPath: \"/@skin@/core/themes/light-contrast-greenblue.css\", label: \"ThÃ¨me vert-bleu\"},\n\t\t{id: 'light-contrast-yellowpink', styleSheetPath: \"/@skin@/core/themes/light-contrast-yellowpink.css\", label: \"ThÃ¨me rose-moutarde\"},\n\t\t{id: 'dark', styleSheetPath: \"/@skin@/core/themes/dark.css\", label: \"ThÃ¨me sombre noir-bleu\"},\n\t\t{id: 'dark-greenblue', styleSheetPath: \"/@skin@/core/themes/dark-greenblue.css\", label: \"ThÃ¨me sombre vert-bleu\"},\n\t\t{id: 'dark-greygreen', styleSheetPath: \"/@skin@/core/themes/dark-greygreen.css\", label: \"ThÃ¨me sombre gris-vert\"}\n\t]\n\n\tstatic add(desk: Desk, themes?: ThemeAction[], reg: IReg<IBasicUniversePointer> = REG.reg): UiThemeDeskFeat {\n\t\tif (this.isIn(desk)) return desk;\n\t\tconst d = desk as UiThemeDeskFeat;\n\t\tdesk.assignProps(this);\n\t\td.themes = themes || this.registerCoreThemes([]);\n\t\t// fallback : un thÃ¨me est requis\n\t\tif (d.themes.length === 0) this.registerCoreThemes(d.themes, /^(light|dark)$/);\n\n\t\td.onThemeChange = new EventMgr();\n\n\t\treg.addToList(\"appframe:header:toolbar:options\", \"uiTheme\", 1, new ThemeMenu(d.themes));\n\t\t// reg.addToList(\"appframe:header:toolbar:options\", \"uiTheme\", 1, new ThemeMenu(d.themes).setVisible(() => !auth || !auth.currentAuthenticatedUser));\n\t\t// reg.addToList(\"actions:loggedUser\", \"uiTheme\", 1, new ThemeMenu(d.themes).setGroup(\"me\"), 4);\n\n\t\tconst auth = reg.env.universe?.auth;\n\n\t\tconst userPrefs = reg.env.universe.userDatas;\n\t\tif (userPrefs) {\n\t\t\treg.addToList(UserPrefPageConfig.LIST_userPrefsFrontPage, \"uiTheme\", 1, new SelectPrefArea(\"uiTheme\")\n\t\t\t\t.setLabel(\"ThÃ¨me par dÃ©faut\")\n\t\t\t\t.setDescription(\"Ce thÃ¨me sera exploitÃ© lors de l'ouverture de nouvelles fenÃªtres\")\n\t\t\t\t.setBuildOptions((selectElt: HTMLSelectElement, currentVal: string | null) => {\n\t\t\t\t\tfor (const s of d.themes) {\n\t\t\t\t\t\tconst value = s.getId();\n\t\t\t\t\t\tselectElt.appendChild(<option value={value} selected={value === currentVal ? \"\" : undefined} label={s.getLabel(null)}/>);\n\t\t\t\t\t}\n\t\t\t\t\tselectElt.appendChild(<option value=\"\" selected={!currentVal ? \"\" : undefined} label=\"Non spÃ©cifiÃ©\"/>);\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treg.addToList(UserPrefPageConfig.LIST_userPrefsFrontPage, \"gridSimpleClickPrefered\", 1, new CheckPrefArea(\"gridSimpleClickPrefered\")\n\t\t\t\t\t.setLabel(\"PrivilÃ©gier le simple click au double-click\")\n\t\t\t\t\t.setDescription(\"Force le comportement de l'application comme sur une tablette, mÃªme si une souris est disponible\")\n\t\t\t\t\t.setReloadAppNeeded()\n\t\t\t\t, 50);\n\t\t}\n\n\t\tREG.reg.addToList(Desk.LC_init, 'uiTheme', 1, () => {\n\t\t\tconst ldDesk = LastDatasDeskFeat.isIn(desk) ? desk : null;\n\t\t\tif (ldDesk) LASTDATAS.buildLastDatasHooks.add((datas: JLDTheme) => {\n\t\t\t\tdatas.uiTheme = d.currentTheme?.getId();\n\t\t\t});\n\t\t\t//Recherche du AuthServer\n\t\t\td.setThemeById((ldDesk?.lastDatas as JLDTheme)?.uiTheme || reg.getUserData(\"uiTheme\"));\n\t\t\tauth?.listeners.on(\"loggedUserChanged\", () => {\n\t\t\t\td.setThemeById((ldDesk?.lastDatas as JLDTheme)?.uiTheme || reg.getUserData(\"uiTheme\"));\n\t\t\t});\n\t\t});\n\t\treturn d;\n\t}\n\n\t/** Ajoute les skin \"core\" au registre des thÃ¨mes passÃ© en paramÃ¨tre\n\t * \tSi @selector est non spÃ©cifiÃ©, alors TOUS les thÃ¨mes sont injectÃ©s\n\t * \tGestion de l'unicitÃ© des thÃ¨mes dans le registre  */\n\tstatic registerCoreThemes(themes: ThemeAction[], selector?: RegExp): ThemeAction[] {\n\t\tthis.CORE_THEMES.forEach((coreTheme) => {\n\t\t\tif ((!selector || coreTheme.id.match(selector)) && !themes.find((act) => act.getId() === coreTheme.id))\n\t\t\t\tthemes.push(new ThemeAction(coreTheme.id, coreTheme.styleSheetPath).setLabel(coreTheme.label))\n\t\t});\n\t\treturn themes;\n\t}\n\n\tstatic isIn(desk: Desk): desk is UiThemeDeskFeat {return 'setThemeById' in desk}\n\n\t/**\n\t * Fonction Ã  dÃ©clarer sur un HTMLElementIFrame :\n\t * if (UiThemeDeskFeat.isIn(desk)) (iframe as any).injectTheme = UiThemeDeskFeat.injectTheme;\n\t *\n\t * Pour ensuite pouvoir Ãªtre appelÃ©e par le js de l'iframe :\n\t * if(frameElement?.injectTheme) frameElement.injectTheme();\n\t */\n\tstatic injectTheme(this: HTMLIFrameElement) {\n\t\tif (UiThemeDeskFeat.isIn(desk)) desk.injectThemeInSubFrame(this);\n\t\tif (FontSizeDeskFeat.isIn(desk)) desk.injectFontSizeInSubFrame(this);\n\t}\n\n\tthemes: ThemeAction[];\n\tcurrentTheme: ThemeAction | null;\n\tonThemeChange: EventMgr<(theme: ThemeAction) => void>;\n\n\tsetThemeById(id: string) {\n\t\tconst theme = id && this.themes.find((t) => t.getId() === id) || this.getDefaultTheme();\n\t\tif (!theme || theme === this.currentTheme) return;\n\t\ttheme.setAsCurrentTheme();\n\t}\n\n\tgetDefaultTheme(): ThemeAction {\n\t\tif (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n\t\t\tconst th = this.themes.find((t) => t.isDark);\n\t\t\tif (th) return th;\n\t\t}\n\t\treturn this.themes[0];\n\t}\n\n\tinjectThemeInSubFrame(frame: HTMLIFrameElement) {\n\t\tconst subDoc = frame.contentDocument;\n\t\tconst style = subDoc.createElement(\"link\");\n\t\tstyle.setAttribute(\"rel\", \"stylesheet\");\n\t\tstyle.setAttribute(\"type\", \"text/css\");\n\t\tsubDoc.head.appendChild(style);\n\n\t\tconst refreshTheme = () => {\n\t\t\tDOM.setAttr(style, \"href\", this.currentTheme && this.currentTheme.styleSheetPath || \"\");\n\t\t};\n\n\t\trefreshTheme();\n\t\tthis.onThemeChange.add(refreshTheme);\n\t\tsubDoc.addEventListener(\"visibilitychange\", () => {\n\t\t\tif (subDoc.visibilityState === \"visible\") {\n\t\t\t\trefreshTheme();\n\t\t\t\tthis.onThemeChange.add(refreshTheme);\n\t\t\t} else {\n\t\t\t\tthis.onThemeChange.delete(refreshTheme);\n\t\t\t}\n\t\t});\n\t}\n\n}\n\ninterface JLDTheme extends JLastDatas {\n\tuiTheme?: string\n}\n\nclass ThemeMenu extends ActionMenu<Element> {\n\tconstructor(themes: ThemeAction[]) {\n\t\tsuper('theme');\n\t\tthis._label = \"ThÃ¨me graphique\";\n\t\tthis._group = \"ui\";\n\t\tthis._actions = themes;\n\t}\n\n\tisVisible(ctx: Element): boolean {\n\t\tif (this._actions.length <= 1) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n}\n\nexport class ThemeAction extends Action<Element> implements IActionToggle<Element> {\n\tconstructor(id: string, public styleSheetPath: string | null) {\n\t\tsuper(id);\n\t}\n\n\tget isDark() {return this._id.indexOf('dark') >= 0}\n\n\tsetAsCurrentTheme(cb?: (done: boolean) => void) {\n\t\tconst uiTheme = document.getElementById(\"uiTheme\") as HTMLLinkElement;\n\t\tif (uiTheme) uiTheme.remove();\n\n\t\tconst themeChanged = () => {\n\t\t\tif (UiThemeDeskFeat.isIn(desk)) {\n\t\t\t\tdesk.currentTheme = this;\n\t\t\t\tdesk.onThemeChange.emitCatched(this);\n\t\t\t}\n\t\t\tif (cb) cb(true);\n\t\t};\n\n\t\tif (this.styleSheetPath) {\n\t\t\tconst linkElem = document.head.appendChild(<link id=\"uiTheme\" rel=\"stylesheet\" type=\"text/css\" href={this.styleSheetPath} path={this.styleSheetPath}/>);\n\t\t\tlinkElem.addEventListener('load', themeChanged);\n\t\t\tlinkElem.addEventListener('error', () => {\n\t\t\t\tif (uiTheme) document.head.appendChild(uiTheme);\n\t\t\t\tif (cb) cb(false);\n\t\t\t});\n\t\t} else {\n\t\t\tthemeChanged();\n\t\t}\n\t}\n\n\n\tisToggle(ctx: Element): this is IActionToggle<Element> {return true}\n\n\tgetDatas(api: 'toggle', ctx: Element): boolean | null {\n\t\tconst uiTheme = document.getElementById(\"uiTheme\") as HTMLLinkElement;\n\t\treturn this.styleSheetPath ? uiTheme !== null && uiTheme.getAttribute(\"path\") === this.styleSheetPath : uiTheme === null;\n\t}\n\n\texecute(ctx: Element, ev?: Event): any | 'noPreventDefault' {\n\t\tthis.setAsCurrentTheme(\n\t\t\t//PassÃ© en Ã©cran de pref explicite\n\t\t\t// (done) => {\n\t\t\t// \tconst persistUS = done ? REG.findReg(ctx).getPersistUserStates() : null;\n\t\t\t// \tif (persistUS) persistUS.setUserDatas({uiTheme: this.getId()});\n\t\t\t// }\n\t\t)\n\t}\n\n\tinitButtonNode(buttonNode: HTMLElement, ctx: Element): void {\n\t\tif (this._id === REG.findReg(ctx).getUserData(\"uiTheme\")) (buttonNode as Button).label += \" (par dÃ©faut)\";\n\t\tbuttonNode.style.setProperty(\"--icon-size\", \"0\");\n\t}\n}\n\n/**\n * Feature du desk pour gÃ©rer les langues :\n * - Ajoute une entrÃ©e dans le menu Options pour choisir la langue\n * - GÃ¨re la persistance du choix dans les persistUserDatas.\n */\nexport class UiLangDeskFeat extends Desk {\n\n\t/**\n\t *\n\t * @param desk\n\t * @param currentLangCode\n\t * @param langs\n\t * @param reg\n\t */\n\tstatic add(desk: Desk, currentLangCode: string, langs: LangAction[], reg: IReg<IBasicUniversePointer> = REG.reg): UiLangDeskFeat {\n\t\tif (this.isIn(desk)) return desk;\n\t\tconst d = desk as UiLangDeskFeat;\n\t\tdesk.assignProps(this);\n\t\td.langs = langs;\n\t\td.currentLang = langs.find((l) => l.getId() == currentLangCode) || langs[0];\n\n\t\treg.addToList(\"appframe:header:toolbar:options\", \"uiLang\", 1, d.newLangMenu());\n\t\t// const auth = reg.env.universe?.auth;\n\t\t// reg.addToList(\"appframe:header:toolbar:options\", \"uiLang\", 1, d.newLangMenu().setVisible(() => !auth || !auth.currentAuthenticatedUser));\n\t\t// reg.addToList(\"actions:loggedUser\", \"uiLang\", 1, d.newLangMenu().setGroup(\"me\"), 6);\n\t\t/*\n\t\tif(d.autoSwitch && auth) {\n\t\t\tREG.reg.addToList(Desk.LC_init, 'uiLang', 1, () => {\n\t\t\t\tif (auth.currentAuthenticatedUser) d.setLangByCode(reg.getUserData(\"uiLang\"));\n\t\t\t\t\tauth.listeners.on(\"loggedUserChanged\", () => {\n\t\t\t\t\td.setLangByCode(reg.getUserData(\"uiLang\"));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t*/\n\t\treturn d;\n\t}\n\n\tstatic isIn(desk: Desk): desk is UiLangDeskFeat {return 'setLangByCode' in desk}\n\n\t//autoSwitch : boolean = false;\n\tlangs: LangAction[];\n\tcurrentLang: LangAction;\n\n\tnewLangMenu(): ActionMenu<Element> {return new LangMenu(this.langs).setIcon(\"/@skin@/core/actions/options/lang.svg\")}\n\n\tsetLangByCode(code: string) {\n\t\tconst lang = code && this.langs.find((t) => t.getId() === code) || this.getDefaultLang();\n\t\tif (!lang || lang === this.currentLang) return;\n\t\tlang.execute(document.documentElement);\n\t}\n\n\tgetDefaultLang(): LangAction {\n\t\treturn this.langs[0];\n\t}\n\n}\n\nclass LangMenu extends ActionMenu<Element> {\n\tconstructor(langs: LangAction[]) {\n\t\tsuper('lang');\n\t\tthis._label = \"Langue\";\n\t\tthis._group = \"ui\";\n\t\tthis._actions = langs;\n\t}\n}\n\nexport class LangAction extends Action<Element> implements IActionToggle<Element> {\n\tconstructor(id: string, public frontUrl: string) {\n\t\tsuper(id);\n\t}\n\n\tisToggle(ctx: Element): this is IActionToggle<Element> {return true}\n\n\tgetDatas(api: 'toggle', ctx: Element): boolean | null {\n\t\tconst d = desk as UiLangDeskFeat;\n\t\treturn this === d.currentLang;\n\t}\n\n\texecute(ctx: Element, ev?: Event): any | 'noPreventDefault' {\n\t\tif (UiLangDeskFeat.isIn(desk) && desk.currentLang != this) {\n\t\t\tdesk.currentLang = this;\n\t\t\tdocument.location.assign(this.frontUrl);\n\t\t\tconst d = desk as UiLangDeskFeat;\n\t\t\t/*if(d.autoSwitch) {\n\t\t\t\tlet persistUS = REG.findReg(ctx).getPersistUserStates();\n\t\t\t\tif (persistUS) persistUS.setUserDatas({uiLang: this.getId()});\n\t\t\t}*/\n\t\t}\n\n\t}\n}\n\n\n/**\n * Feature du desk pour gÃ©rer le changement de taille de police :\n * - Ajoute une entrÃ©e dans le menu Options (ou logged-user) pour choisir la taille de police\n * - GÃ¨re la persistance du choix dans les persistUserDatas.\n */\nexport class FontSizeDeskFeat extends Desk {\n\n\tstatic add(desk: Desk, reg: IReg<IBasicUniversePointer> = REG.reg): FontSizeDeskFeat {\n\t\tif (this.isIn(desk)) return desk;\n\t\tconst d = desk as FontSizeDeskFeat;\n\t\tdesk.assignProps(this);\n\n\t\tconst sizes: FontSizeAction[] = [];\n\t\tfor (let size = 6; size <= 20; size += 1) {\n\t\t\tsizes.push(new FontSizeAction(size));\n\t\t}\n\t\td.onFontSizeChange = new EventMgr();\n\n\t\tconst auth = reg.env.universe?.auth;\n\t\treg.addToList(\"appframe:header:toolbar:options\", \"fontSize\", 1, new FontSizeMenu(sizes));\n\t\t// reg.addToList(\"appframe:header:toolbar:options\", \"fontSize\", 1, new FontSizeMenu(sizes).setVisible(() => !auth || !auth.currentAuthenticatedUser));\n\t\t// reg.addToList(\"actions:loggedUser\", \"fontSize\", 1, new FontSizeMenu(sizes).setGroup(\"me\"), 5);\n\n\t\tconst userPrefs = reg.env.universe.userDatas;\n\t\tif (userPrefs) {\n\t\t\treg.addToList(UserPrefPageConfig.LIST_userPrefsFrontPage, \"fontSize\", 1, new SelectPrefArea(\"fontSize\")\n\t\t\t\t.setLabel(\"Taille de police par dÃ©faut\")\n\t\t\t\t.setDescription(\"Cette taille sera exploitÃ©e lors de l'ouverture de nouvelles fenÃªtres\")\n\t\t\t\t.setBuildOptions((selectElt: HTMLSelectElement, currentVal: string | null) => {\n\t\t\t\t\tfor (const s of sizes) {\n\t\t\t\t\t\tconst value = s.getLabel(null);\n\t\t\t\t\t\tselectElt.appendChild(<option value={value} selected={value === currentVal ? \"\" : undefined} label={value}/>);\n\t\t\t\t\t}\n\t\t\t\t\tselectElt.appendChild(<option value=\"\" selected={!currentVal ? \"\" : undefined} label=\"Non spÃ©cifiÃ©e\"/>);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tREG.reg.addToList(Desk.LC_init, 'fontSize', 1, () => {\n\t\t\tconst ldDesk = LastDatasDeskFeat.isIn(desk) ? desk : null;\n\t\t\tif (ldDesk) LASTDATAS.buildLastDatasHooks.add((datas: JLDFontSize) => {\n\t\t\t\tdatas.fontSize = d.currentFontSize;\n\t\t\t});\n\t\t\tconst fontSize = (ldDesk?.lastDatas as JLDFontSize)?.fontSize || reg.getUserData(\"fontSize\") as number;\n\t\t\tif (fontSize) d.setFontSize(fontSize);\n\t\t\telse {\n\t\t\t\tdocument.documentElement.style.fontSize = '';\n\t\t\t\tif (!d.currentFontSize) d.currentFontSize = FontSizeAction.getComputedFontSize();\n\t\t\t}\n\t\t\tauth?.listeners.on(\"loggedUserChanged\", () => {\n\t\t\t\tconst fontSize = (ldDesk?.lastDatas as JLDFontSize)?.fontSize || reg.getUserData(\"fontSize\") as number;\n\t\t\t\tif (fontSize) d.setFontSize(fontSize);\n\t\t\t\telse {\n\t\t\t\t\tdocument.documentElement.style.fontSize = '';\n\t\t\t\t\tif (!d.currentFontSize) d.currentFontSize = FontSizeAction.getComputedFontSize();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn d;\n\t}\n\n\tstatic isIn(desk: Desk): desk is FontSizeDeskFeat {return 'setFontSize' in desk}\n\n\tonFontSizeChange: EventMgr<(size: string) => void>;\n\n\tcurrentFontSize: number;\n\n\tget currentFontSizeCss(): string {return this.currentFontSize + 'pt'}\n\n\tsetFontSize(size: number) {\n\t\tif (this.currentFontSize === size) return;\n\t\tthis.currentFontSize = size;\n\t\tconst s = this.currentFontSizeCss;\n\t\tdocument.documentElement.style.fontSize = s;\n\t\tthis.onFontSizeChange.emitCatched(s);\n\t}\n\n\tinjectFontSizeInSubFrame(frame: HTMLIFrameElement) {\n\t\tconst subDoc = frame.contentDocument;\n\t\tconst refreshFontSize = (size: string) => {\n\t\t\tsubDoc.documentElement.style.fontSize = size;\n\t\t};\n\t\trefreshFontSize(this.currentFontSizeCss);\n\t\tthis.onFontSizeChange.add(refreshFontSize);\n\t\tsubDoc.addEventListener(\"visibilitychange\", () => {\n\t\t\tif (subDoc.visibilityState === \"visible\") {\n\t\t\t\trefreshFontSize(this.currentFontSizeCss);\n\t\t\t\tthis.onFontSizeChange.add(refreshFontSize);\n\t\t\t} else {\n\t\t\t\tthis.onFontSizeChange.delete(refreshFontSize);\n\t\t\t}\n\t\t});\n\t}\n}\n\ninterface JLDFontSize extends JLastDatas {\n\tfontSize?: number\n}\n\nclass FontSizeMenu extends ActionMenu<Element> {\n\tconstructor(sizes: FontSizeAction[]) {\n\t\tsuper('fontSize');\n\t\tthis._label = \"Taille de police\";\n\t\tthis._group = \"ui\";\n\t\tthis._actions = sizes;\n\t}\n}\n\nexport class FontSizeAction extends Action<Element> implements IActionToggle<Element> {\n\tconstructor(protected _size: number) {\n\t\tsuper('fontSize');\n\t\tthis._label = _size.toString();\n\t\tthis._group = \"ui\";\n\t}\n\n\tisToggle(ctx: Element): this is IActionToggle<Element> {return true}\n\n\tgetDatas(api: 'toggle', ctx: Element): boolean | null {\n\t\tconst fontSize = FontSizeDeskFeat.isIn(desk) ? desk.currentFontSize : FontSizeAction.getComputedFontSize();\n\t\treturn fontSize === this._size;\n\t}\n\n\texecute(ctx: Element, ev?: Event): any | 'noPreventDefault' {\n\t\tif (FontSizeDeskFeat.isIn(desk)) desk.setFontSize(this._size);\n\t\telse document.documentElement.style.fontSize = this._size + 'pt';\n\t\t//PassÃ© en Ã©cran de pref explicite\n\t\t// const persistUS = REG.findReg(ctx).getPersistUserStates();\n\t\t// if (persistUS) persistUS.setUserDatas({fontSize: this._size});\n\t}\n\n\tinitButtonNode(buttonNode: HTMLElement, ctx: Element): void {\n\t\tif (this._size == REG.findReg(ctx).getUserData(\"fontSize\")) (buttonNode as Button).label += \" (par dÃ©faut)\";\n\t\tbuttonNode.style.setProperty(\"--icon-size\", \"0\");\n\t}\n\n\tstatic getComputedFontSize(): number {\n\t\tconst pxFontSize = parseFloat(getComputedStyle(document.documentElement).fontSize);\n\t\treturn Math.round(pxFontSize * 3 / 4 * 100) / 100;\n\t}\n}"]}