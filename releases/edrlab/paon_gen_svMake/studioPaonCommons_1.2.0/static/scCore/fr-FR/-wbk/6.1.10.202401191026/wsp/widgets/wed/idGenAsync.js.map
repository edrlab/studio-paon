{"version":3,"sources":["/@back@/wsp/widgets/wed/idGenAsync.tsx"],"names":["UNIVERSE","IdGenAsyncMgr","[object Object]","svc","cdaction","params","universe","this","schemaDom","nodeOrAttr","rule","house","wsp","reg","hasPermission","srcFields","srcRoles","auth","currentUser","isSuperAdmin","srcRi","Attr","nodeValue","textContent","itemType","Promise","resolve","fetchValue","univ","env","val","httpFrames","web","fetchSvcJson","nextValue","toString","crossDomMgrFactory","config","getAttribute","all","get","p","JSON","parse"],"mappings":"OAIsBA,aAAS;AAG/B,MAAMC,cAILC,YAAmBC,IAAoBC,SAA0BC,OAA2BC,UAAzEC,KAAAJ,IAAAA;AAAoBI,KAAAH,SAAAA;AAA0BG,KAAAF,OAAAA;AAA2BE,KAAAD,SAAAA,SAI5FJ,WAAWM,UAAsBC,WAAyBC,MACzD,MAAMC,MAAQH,UAAUG;AACxB,IAAKA,MAAMC,IAAIC,IAAIC,cAAc,oBAAqBH,MAAMI,UAAUC,SAAUT,KAAKD,SAASW,KAAKC,YAAYC,aAAcR,MAAMI,UAAUK,OAAQ,OAAO;AAC5J,OAAOX,sBAAsBY,MAAQZ,WAAWa,WAAab,WAAWc,YAGzErB,eAAeM,UAAsBC,WAAyBC,MAC7D,IAAIc,SAAYhB,UAAUG,MAAuBa;AACjD,IAAKA,SAAU,OAERC,QAAQC;AACdF,SAAYhB,UAAUG,MAAuBa,SAE9C,OAAOjB,KAAKoB,WAAWH,SAASX,KAGjCX,iBAAiBW,KAChB,MAAMe,KAAOrB,KAAKD,UAAYO,IAAIgB,IAAIvB;AACtC,MAAMwB,WAAaF,KAAKG,WAAWC,IAAIC,aAAyB1B,KAAKJ,IAAKI,KAAKH,SAAUG,KAAKF,SAAS6B;AACvG,UAAWJ,MAAQ,SAAU,OAAOA;AACpC,UAAWA,MAAQ,SAAU,OAAOA,IAAIK;AACxC,OAAO,aAMF,MAAMC,mBAAsBC,QAAoB,KACtD,MAAMT,KAAOS,OAAOC,aAAa;AACjC,MAAMhC,SAAWsB,KAAO5B,SAASuC,IAAIC,IAAIZ,MAAyB;AAClE,MAAMa,EAAIJ,OAAOC,aAAa;AAC9B,OAAO,IAAIrC,cAAcoC,OAAOC,aAAa,OAAQD,OAAOC,aAAa,YAAaG,EAAIC,KAAKC,MAAMF,GAAK,KAAMnC","sourcesContent":["import {SchemaDom} from \"lib/edit/schema/schema\";\nimport {IAutoFillAsyncMgr, IAutofillAsyncRule} from \"lib/edit/schema/schemaMeta\";\nimport {IWspXmlHouse} from \"lib/wsp/wspsLive\";\nimport {IReg} from \"lib/commons/registry\";\nimport {IUniverseEnv, UNIVERSE} from \"lib/core/universe\";\nimport {ChainUniverse} from \"lib/wsp/chain\";\n\nclass IdGenAsyncMgr implements IAutoFillAsyncMgr {\n\n\t//public schemaDom: SchemaDom;\n\n\tconstructor(public svc: string, public cdaction?: string, public params?: Dict<any>, public universe?: ChainUniverse) {\n\t\t//this.schemaDom = schemaDom\n\t}\n\n\tneedNewVal(schemaDom: SchemaDom, nodeOrAttr: Node | Attr, rule: IAutofillAsyncRule): boolean {\n\t\tconst house = schemaDom.house as IWspXmlHouse;\n\t\tif (!house.wsp.reg.hasPermission(\"write.node.update\", house.srcFields.srcRoles, this.universe.auth.currentUser.isSuperAdmin, house.srcFields.srcRi)) return false;\n\t\treturn nodeOrAttr instanceof Attr ? !nodeOrAttr.nodeValue : !nodeOrAttr.textContent;\n\t}\n\n\tasync newValue(schemaDom: SchemaDom, nodeOrAttr: Node | Attr, rule: IAutofillAsyncRule): Promise<string | null> {\n\t\tlet itemType = (schemaDom.house as IWspXmlHouse).itemType;\n\t\tif (!itemType) {\n\t\t\t//attente de la fin de l'init du doc.\n\t\t\tawait Promise.resolve();\n\t\t\titemType = (schemaDom.house as IWspXmlHouse).itemType;\n\t\t}\n\t\treturn this.fetchValue(itemType.reg);\n\t}\n\n\tasync fetchValue(reg: IReg<IUniverseEnv>): Promise<string> {\n\t\tconst univ = this.universe || reg.env.universe;\n\t\tconst val = (await univ.httpFrames.web.fetchSvcJson<JIdGenResp>(this.svc, this.cdaction, this.params)).nextValue;\n\t\tif (typeof val === \"string\") return val;\n\t\tif (typeof val === \"number\") return val.toString();\n\t\treturn null;\n\t}\n}\n\ninterface JIdGenResp {nextValue: string | number}\n\nexport const crossDomMgrFactory = (config: Element) => (/*schemaDom: SchemaDom*/) => {\n\tconst univ = config.getAttribute(\"universe\");\n\tconst universe = univ ? UNIVERSE.all.get(univ) as ChainUniverse : null;\n\tconst p = config.getAttribute(\"params\");\n\treturn new IdGenAsyncMgr(config.getAttribute(\"svc\"), config.getAttribute(\"cdaction\"), p ? JSON.parse(p) : null, universe);\n}"]}