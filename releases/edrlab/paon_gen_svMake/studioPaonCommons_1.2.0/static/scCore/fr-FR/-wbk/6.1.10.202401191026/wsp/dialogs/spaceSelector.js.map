{"version":3,"sources":["/@back@/wsp/dialogs/spaceSelector.tsx"],"names":["BaseElement","BASIS","ActionBtn","Button","POPUP","SpaceTree","Action","REG","JSX","DOMSH","ITEM","CreateSpace","SpaceSelector","wsp","this","reg","env","shortDescs","spaceTree","emitter","[object Object]","init","findReg","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","initTree","newInit","hideSearch","selOnDblClick","defaultAction","setExecute","doSelect","srcFilter","data","getSrcUriType","srcUri","appendChild","initialize","footer","createElement","id","msgArea","noCreateSpace","createSpBtn","ui-context","î","action","SpSelCreateSpace","actionContext","selectBtn","label","buttonLabel","class","onclick","onSelectBtn","onCancelBtn","onSelChange","grid","addEventListener","ev","currentTarget","row","dataHolder","getRow","getSelectedRow","_a","refresh","rowKey","startSel","initializedAsync","then","selectSrcUri","msg","allowSelect","textContent","disabled","perms","src","msgNotAllowed","msgForbidden","hasPermission","srcRoles","srcRi","setMsg","hasSystemRights","r","length","findPopupableParent","close","findHost","visitor","options","registerSkin","customElements","define","super","_visSrcPerms","_enableSrcPerms","ctx","sd","execute"],"mappings":"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","sourcesContent":["import {BaseElement, BASIS, OSkinableInit} from \"back/commons/basis\";\nimport {ActionBtn, Button, ButtonActions, OActionBtnInit} from \"back/commons/widgets/buttons\";\nimport {GridSmall} from \"back/commons/widgets/grid-tags\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {OSpaceTreeInit, SpaceTree} from \"back/wsp/views/spaceTree\";\nimport {Action} from \"lib/commons/actions\";\nimport {IReg, IUiEnv, REG} from \"lib/commons/registry\";\nimport {IView, IViewsContainer, OViewVisitOptions} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IShortDescCtx, ITEM} from \"lib/wsp/item\";\nimport {JSrcFields, JSrcFieldsTree, srcUri} from \"lib/wsp/src\";\nimport {IWspEnv, Wsp} from \"lib/wsp/wsp\";\nimport {CreateSpace} from \"back/wsp/actions/srcActions\";\n\n/**\n * Sélecteur d'un espace\n */\nexport interface SpaceSelector extends BaseElement, IView {\n\tinitialize(init: OSpaceSelectorInit): this\n}\n\nexport interface OSpaceSelectorInit extends OSkinableInit {\n\tstartSel?: srcUri\n\tspaceTree?: OSpaceTreeInit\n\tbuttonLabel?: string\n\tselOnDblClick?: boolean\n\n\t/** Supprime le bouton de création d'un espace. */\n\tnoCreateSpace?: boolean\n\n\t/**\n\t * Permet d'afficher un message en fonction de l'espace sélectionné et d'activer/désactiver le btn de sélection.\n\t * cf SpaceSelector.setMsg(msg:string, allowSelect:boolean)\n\t */\n\tonSelChange?: (src: JSrcFieldsTree, spSel: SpaceSelector) => void\n}\n\nexport class SpaceSelector extends BaseElement implements IViewsContainer, IShortDescCtx {\n\n\n\t/** Contexte */\n\treg: IReg<IWspEnv & IUiEnv>;\n\n\tget wsp(): Wsp {return this.reg.env.wsp};\n\n\t/** Eléments UI */\n\tspaceTree: SpaceTree;\n\tmsgArea: HTMLElement;\n\tcreateSpBtn?: ActionBtn<SpaceSelector>;\n\tselectBtn: ButtonActions<SpaceSelector>;\n\n\tget shortDescs(): JSrcFields[] {return this.spaceTree.shortDescs}\n\n\tget emitter(): SpaceSelector {return this}\n\n\tprotected _initialize(init: OSpaceSelectorInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"webzone:panel\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst initTree = BASIS.newInit(init.spaceTree, this.reg);\n\t\tinitTree.hideSearch = true;\n\t\tif (init.selOnDblClick) initTree.defaultAction = new Action<IShortDescCtx>().setExecute(() => {this.doSelect()});\n\t\tinitTree.srcFilter = (data: JSrcFields) => ITEM.getSrcUriType(data.srcUri) === \"space\";\n\t\tthis.spaceTree = sr.appendChild(new SpaceTree().initialize(initTree));\n\t\tconst footer = sr.appendChild(<div id=\"footer\"/>);\n\t\tthis.msgArea = footer.appendChild(<div id=\"msg\"/>);\n\t\tif (!init.noCreateSpace) {\n\t\t\tthis.createSpBtn = footer.appendChild(<ActionBtn id=\"create\" ui-context=\"dialog\" î={{\n\t\t\t\taction: new SpSelCreateSpace(),\n\t\t\t\tactionContext: this\n\t\t\t} as OActionBtnInit<SpaceSelector>}/> as ActionBtn<SpaceSelector>);\n\t\t}\n\t\tthis.selectBtn = footer.appendChild(<Button id=\"select\" label={init.buttonLabel || \"Sélectionner\"} ui-context=\"dialog\" class=\"default\" onclick={this.onSelectBtn}/>) as ButtonActions<SpaceSelector>;\n\t\tfooter.appendChild(<Button id=\"cancel\" label=\"Annuler\" ui-context=\"dialog\" onclick={this.onCancelBtn}/>);\n\t\tif (init.onSelChange) {\n\t\t\tthis.spaceTree.grid.addEventListener(\"grid-select\", (ev: CustomEvent) => {\n\t\t\t\tconst grid = ev.currentTarget as GridSmall;\n\t\t\t\tconst row = grid.dataHolder.getRow(grid.getSelectedRow());\n\t\t\t\tthis.createSpBtn?.refresh();\n\t\t\t\tinit.onSelChange(row ? row.rowKey as JSrcFieldsTree : null, this);\n\t\t\t});\n\t\t\tinit.onSelChange(null, this);\n\t\t} else if (this.createSpBtn) {\n\t\t\tthis.spaceTree.grid.addEventListener(\"grid-select\", (ev: CustomEvent) => {\n\t\t\t\tthis.createSpBtn.refresh();\n\t\t\t});\n\t\t}\n\t\tif (init.startSel) this.spaceTree.initializedAsync.then(() => {this.spaceTree.selectSrcUri(init.startSel)});\n\t}\n\n\t// protected _refresh() {\n\t// \t//appelé une fois inséré dans l'arbre.\n\t// }\n\n\tsetMsg(msg: string, allowSelect: boolean) {\n\t\tthis.msgArea.textContent = msg;\n\t\tthis.selectBtn.disabled = !allowSelect;\n\t}\n\n\tevalPerm(perms: string | string[], src: JSrcFieldsTree, msgNotAllowed: string, msgForbidden: string): boolean {\n\t\tif (!this.reg.hasPermission(perms, src.srcRoles, null, src.srcRi)) {\n\t\t\tthis.setMsg(this.reg.hasSystemRights(perms, src.srcRi) ? msgNotAllowed : msgForbidden, false);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tdoSelect() {\n\t\tconst r = this.spaceTree.shortDescs;\n\t\tif (r.length > 0) POPUP.findPopupableParent(this).close(r[0]);\n\t}\n\n\tonCancelBtn(this: Button) {\n\t\tPOPUP.findPopupableParent(this).close();\n\t}\n\n\tonSelectBtn(this: Button) {\n\t\tDOMSH.findHost<SpaceSelector>(this).doSelect();\n\t}\n\n\tvisitViews(visitor: (view: IView) => any, options?: OViewVisitOptions): any {\n\t\treturn visitor(this.spaceTree);\n\t}\n\n\tvisitViewsAsync(visitor: (view: IView) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn visitor(this.spaceTree);\n\t}\n}\n\nREG.reg.registerSkin('wsp-space-selector', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 30em;\n\t\tmin-width: 15em;\n\t\tflex-direction: column;\n\t}\n\n\twsp-space-tree {\n\t\tborder-bottom: 1px solid var(--border-color);\n\t}\n\n\t#footer {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\talign-items: center;\n\t}\n\n\t#msg {\n\t\tflex: 1;\n\t\tmargin: 0 .5em;\n\t}\n`);\n\ncustomElements.define(\"wsp-space-selector\", SpaceSelector);\n\nclass SpSelCreateSpace extends CreateSpace<SpaceSelector> {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._visSrcPerms = this._enableSrcPerms; //Masque le btn si pas les droits.\n\t}\n\n\tasync execute(ctx: SpaceSelector, ev?: Event): Promise<JSrcFields> {\n\t\tconst sd = await super.execute(ctx, ev);\n\t\tif (sd) await ctx.spaceTree.selectSrcUri(sd.srcUri);\n\t\treturn sd;\n\t}\n}\n"]}