{"version":3,"sources":["/@back@/wsp/actions/searchesActions.tsx"],"names":["POPUP","Action","ActionMenu","IO","DOM","BASIS","ExportResultItems","[object Object]","super","this","_label","_description","_icon","_group","requireEnabledPerm","ctx","ev","wsp","reg","env","name","getValidFileName","wspTitle","where","buildWhereXml","url","universe","config","wsps","searchUrl","resolve","qs","code","saveRespAs","uiRoot","Map","set","serializer","serializeToString","ExportResultCsv_item","SearchExportCsv","import","initHeader","newInit","privateUri","bibConfsLists","buildWhereXmlFct","ctxfct","appHeaderMainActionsLists","APPBAR_MAIN_ACTIONS","columns","Promise","all","mergeLists","showDialog","initialize","titleBar","barLabel","label","fixSize","resizer","onNextClose","ExportResultCsv_task","TplRequestsMenu","acts","_actions","length","isVisible","lists","elts","actions","forEach","entry","push","TplRequestAction","id","title","whereCrit","description","whereXml","_searchId","Element","viewSearch","getLabel","getDescription"],"mappings":"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","sourcesContent":["import \"back/wsp/actions/actions_Perms\";\nimport {IWspUiEnv} from \"lib/wsp/wsp\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {Action, ActionMenu} from \"lib/commons/actions\";\nimport {ISearchPersist, ISearchViewResult, SearchExportColumn} from \"lib/wsp/search\";\nimport {IRegPointer} from \"lib/commons/registry\";\nimport {IO} from \"lib/commons/io/io\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {OSearchExportCsvInit, SearchExportCsv} from \"back/wsp/dialogs/searchExportCsv\";\nimport {BASIS} from \"back/commons/basis\";\n\n\n/** Exporter la liste des items (scar) */\nexport class ExportResultItems<C extends ISearchViewResult & IRegPointer<IWspUiEnv>> extends Action<C> {\n\n\tconstructor() {\n\t\tsuper(\"exportResultItems\");\n\t\tthis._label = \"Exporter les items trouvés (.scwsp)\";\n\t\tthis._description = \"Créer une archive avec les items trouvés\";\n\t\tthis._icon = \"/@skin@/wsp/dialogs/searchItems/exports.svg\";\n\t\tthis._group = 'io';\n\t\tthis.requireEnabledPerm('action.searches#export.items');\n\t}\n\n\tasync execute(ctx: C, ev?: Event) {\n\t\tconst wsp = ctx.reg.env.wsp;\n\t\tconst name = IO.getValidFileName(wsp.wspTitle, \".scwsp\", 'date');\n\t\tconst where = ctx.buildWhereXml();\n\t\tconst url = ctx.reg.env.universe.config.wsps.searchUrl.resolve(IO.qs(\"cdaction\", \"Search\", \"param\", wsp.code, \"format\", 'scwsp', \"downloadFileName\", name));\n\t\tIO.saveRespAs(url, ctx.reg.env.uiRoot, new Map().set(\"request\", DOM.serializer().serializeToString(where)), \"application/scenari.scwsp\", \"POST\");\n\t}\n\n}\n\n/** Exporter la liste des propriétés des items (csv) */\nexport class ExportResultCsv_item<C extends ISearchViewResult & IRegPointer<IWspUiEnv>> extends Action<C> {\n\n\tconstructor() {\n\t\tsuper(\"exportResultCsv-item\");\n\t\tthis._label = \"Exporter les propriétés des items trouvés (.csv)\";\n\t\tthis._description = \"Créer un CSV avec les propriétés des items trouvés\";\n\t\tthis._icon = \"/@skin@/wsp/dialogs/searchItems/exports.svg\";\n\t\tthis._group = 'io';\n\t\tthis.requireEnabledPerm('action.searches#export.props');\n\t}\n\n\tasync execute(ctx: C, ev?: Event) {\n\t\tconst {SearchExportCsv} = await import(\"back/wsp/dialogs/searchExportCsv.js\");\n\t\tconst initHeader: OSearchExportCsvInit = BASIS.newInit({\n\t\t\treg: ctx.reg,\n\t\t\tprivateUri: \"/itemSearchesColsCsv.json\",\n\t\t\tbibConfsLists: [\"confcsv:searchExportCsv:bib\", \"confcsv:searchExportCsv:bib:item\"],\n\t\t\tbuildWhereXmlFct: (ctxfct) => {return ctx.buildWhereXml()},\n\t\t\tappHeaderMainActionsLists: [SearchExportCsv.APPBAR_MAIN_ACTIONS, \"actions:searchExportCsv:bar:item\"],\n\t\t\tcolumns: await Promise.all(ctx.reg.mergeLists<Promise<SearchExportColumn<C>>>(\"columns:wspApp:searches-export\", \"columns:wspApp:searches-export:item\")),\n\t\t} as OSearchExportCsvInit, ctx.reg);\n\t\treturn POPUP.showDialog<void>(new SearchExportCsv().initialize(initHeader), ctx.reg.env.uiRoot, {titleBar: {barLabel: {label: \"Export CSV de la recherche\"}}, fixSize: false, resizer: {}}).onNextClose();\n\t}\n\n}\n\n/** Exporter la liste des propriétés des taches (csv) */\nexport class ExportResultCsv_task<C extends ISearchViewResult & IRegPointer<IWspUiEnv>> extends Action<C> {\n\n\tconstructor() {\n\t\tsuper(\"exportResultCsv-task\");\n\t\tthis._label = \"Exporter les propriétés des tâches trouvées (.csv)\";\n\t\tthis._description = \"Créer un CSV avec les propriétés des tâches trouvées\";\n\t\tthis._icon = \"/@skin@/wsp/dialogs/searchItems/expCsv.svg\";\n\t\tthis._group = 'io';\n\t\tthis.requireEnabledPerm('action.searches#export.props');\n\t}\n\n\tasync execute(ctx: C, ev?: Event) {\n\t\tconst {SearchExportCsv} = await import(\"back/wsp/dialogs/searchExportCsv.js\");\n\t\tconst initHeader: OSearchExportCsvInit = BASIS.newInit({\n\t\t\treg: ctx.reg,\n\t\t\tprivateUri: \"/taskSearchesColsCsv.json\",\n\t\t\tbibConfsLists: [\"confcsv:searchExportCsv:bib\", \"confcsv:searchExportCsv:bib:task\"],\n\t\t\tbuildWhereXmlFct: (ctxfct) => {return ctx.buildWhereXml()},\n\t\t\tappHeaderMainActionsLists: [SearchExportCsv.APPBAR_MAIN_ACTIONS, \"actions:searchExportCsv:bar:task\"],\n\t\t\tcolumns: await Promise.all(ctx.reg.mergeLists<Promise<SearchExportColumn<C>>>(\"columns:wspApp:searches-export\", \"columns:wspApp:searches-export:task\")),\n\t\t} as OSearchExportCsvInit, ctx.reg);\n\t\treturn POPUP.showDialog<void>(new SearchExportCsv().initialize(initHeader), ctx.reg.env.uiRoot, {titleBar: {barLabel: {label: \"Export CSV de la recherche\"}}, fixSize: false, resizer: {}}).onNextClose();\n\t}\n\n}\n\n/** Afficher / ouvrir les requêtes pré-enregistrées */\nexport class TplRequestsMenu<C extends IRegPointer<IWspUiEnv> & ISearchViewResult> extends ActionMenu<C> {\n\tconstructor(acts: TplRequestAction<C>[]) {\n\t\tsuper('tplRequestsMenu');\n\t\tthis._label = \"Bibliothèque de requêtes\";\n\t\tthis._group = \"lib\";\n\t\tthis._actions = acts;\n\t\tthis._icon = \"/@skin@/wsp/dialogs/searchItems/bibRequests.svg\";\n\t}\n\n\tisVisible(ctx: C): boolean {\n\t\tif (!this._actions.length) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\t/** Construction d'un TplRequestsMenu à partir de listes de {@link ISearchPersist} */\n\tstatic makeFromSearchPersistLists(ctx: IRegPointer<IWspUiEnv>, ...lists: string[]): TplRequestsMenu<IRegPointer<IWspUiEnv> & ISearchViewResult> {\n\t\tconst elts = ctx.reg.mergeLists(...lists) as ISearchPersist[];\n\t\tconst actions: TplRequestAction<IRegPointer<IWspUiEnv> & ISearchViewResult>[] = [];\n\t\telts.forEach(entry => actions.push(new TplRequestAction(entry.id, entry.title, entry.whereCrit, entry.description)));\n\t\treturn new TplRequestsMenu(actions);\n\t}\n}\n\nexport class TplRequestAction<C extends IRegPointer<IWspUiEnv> & ISearchViewResult> extends Action<C> {\n\tprivate _searchId: string;\n\n\tconstructor(id: string, public title: string, public whereXml: Element | ((ctx: IRegPointer<IWspUiEnv>) => Element), public description?: string) {\n\t\tsuper(id);\n\t\tthis._searchId = id;\n\t\tthis._label = title;\n\t\tthis._description = description;\n\t}\n\n\tasync execute(ctx: C, ev?: Event): Promise<any | 'noPreventDefault'> {\n\t\tconst where: Element = this.whereXml instanceof Element ? this.whereXml : this.whereXml(ctx);\n\t\treturn this._searchId = await ctx.viewSearch(where, this._searchId, this.getLabel(ctx), this.getDescription(ctx));\n\t}\n}\n"]}