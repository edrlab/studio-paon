{"version":3,"sources":["/@back@/edit/wed/wedlets/outline/outlineTags.tsx"],"names":["WedEditorBase","EOtlType","WED_SELECTOR_OTL","WEDLET","DOM","JSX","DOMSH","REG","addDragMgrOnWedletHost","AgInsSelEditor","OtlEditor","[object Object]","wedlet","otlTree","wedParent","init","super","initUi","this","wedMgr","listeners","on","treeRoot","rootNode","appendChild","createElement","attachShadow","SHADOWDOM_INIT","reg","installSkin","setTreeRoot","docHolder","config","wedRootModelSelector","noFocus","initFromDocHolder","otlNode","currentHighlighted","otlHighlight","otlScrollInView","isOtlRootRow","treeNode","OtlTree","otlConnect","parentRowWedlet","findOtlRootRow","otlParent","nextTreeNode","findOtlTreeFromWrapper","findNextSiblingHier","insertBefore","otlAddChild","otlDelete","options","mainBranch","scan","visitWedletChildren","Infinity","findFlatParentElt","element","IS_OtlTree","VISITOPTIONS_mainBranch","HTMLElement","otlRowCtn","class","draggable","otlChildrenCtn","insertElement","child","before","remove","highlighted","classList","toggle","scrollIntoView","block","behavior","customElements","define","otlType","container","wrapper","parent","n","IS_element","localName","registerSkin"],"mappings":"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","sourcesContent":["import {OWedEditorConfig, OWedManagerConfig, WedEditorBase} from \"back/edit/wed/wedEditor\";\nimport {EOtlType, IOtlDriver, OtlWedlet, OtlWedletWrapper, OVisitWedletOtlOptions, WED_SELECTOR_OTL} from \"back/edit/wed/wedlets/outline/outline\";\nimport {IParentWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IDocHolder} from \"lib/edit/docHolder\";\nimport {REG} from \"lib/commons/registry\";\nimport {addDragMgrOnWedletHost, AgInsSelEditor} from \"back/edit/wed/features/insMgr\";\n\n/** Editor d'outline. */\nexport class OtlEditor extends WedEditorBase implements IOtlDriver {\n\n\tstatic findOtlTree(wedlet: IWedlet): OtlTree {\n\t\twhile (wedlet) {\n\t\t\tif ((wedlet as OtlWedlet).otlTree) return (wedlet as OtlWedlet).otlTree;\n\t\t\twedlet = wedlet.wedParent;\n\t\t}\n\t\treturn null;\n\t}\n\n\tcurrentHighlighted: OtlTree;\n\n\ttreeRoot: ShadowRoot;\n\n\tprotected initUi(init: OWedEditorConfig) {\n\t\tsuper.initUi(init);\n\t\tthis.wedMgr.listeners.on(\"redrawBeforeBinds\", () => {\n\t\t\tconst treeRoot = this.rootNode.appendChild(<div/>).attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\t\tthis.wedMgr.reg.installSkin(\"otl/root\", treeRoot);\n\t\t\taddDragMgrOnWedletHost(treeRoot);\n\t\t\tthis.setTreeRoot(treeRoot);\n\t\t});\n\t}\n\n\tprotected setTreeRoot(treeRoot: ShadowRoot) {\n\t\tthis.treeRoot = treeRoot;\n\t}\n\n\tinitFromDocHolder(docHolder: IDocHolder, config?: OWedManagerConfig): Promise<boolean> {\n\t\tconfig.wedRootModelSelector = WED_SELECTOR_OTL;\n\t\tconfig.noFocus = true;\n\t\treturn super.initFromDocHolder(docHolder, config);\n\t}\n\n\thighlightOtlEntry(otlNode: OtlTree): boolean {\n\t\tif (this.currentHighlighted === otlNode) return false;\n\t\tif (this.currentHighlighted) this.currentHighlighted.otlHighlight(false);\n\t\t//console.log(\"highlightOtlEntry:::\", otlNode);\n\t\tif (otlNode) otlNode.otlHighlight(true).otlScrollInView();\n\t\tthis.currentHighlighted = otlNode;\n\t\treturn true;\n\t}\n\n\tonNewOtlWedlet(wedlet: OtlWedlet) {\n\t\t//console.log(\"onNewOtlWedlet::::\", wedlet);\n\t\tif (!isOtlRootRow(wedlet)) return;\n\t\tconst treeNode = new OtlTree();\n\t\ttreeNode.otlConnect(wedlet);\n\t\tconst parentRowWedlet = findOtlRootRow(wedlet.otlParent);\n\t\tconst nextTreeNode = wedlet.otlParent ? this.findOtlTreeFromWrapper(wedlet.otlParent.findNextSiblingHier(wedlet)) : null;\n\n\t\t//console.log(\"onNewOtlWedlet inserted!!!\");\n\t\tif (!parentRowWedlet) {\n\t\t\tthis.treeRoot.insertBefore(treeNode, nextTreeNode);\n\t\t} else {\n\t\t\tthis.findOtlTreeFromWrapper(parentRowWedlet).otlAddChild(treeNode, nextTreeNode);\n\t\t}\n\t}\n\n\tonDeletedOtlWedlet(wedlet: OtlWedlet) {\n\t\t//console.log(\"onDeletedOtlWedlet::::\", wedlet);\n\t\tif (wedlet.otlTree) {\n\t\t\twedlet.otlTree.otlDelete();\n\t\t} else {\n\t\t\t//On recherche tous les OtlTree contenus dans ce wedlet.\n\t\t\tconst options = {mainBranch: true} as OVisitWedletOtlOptions;\n\t\t\tconst scan = (wedlet: OtlWedlet): \"stop\" | void => {\n\t\t\t\tif (wedlet.otlTree) {\n\t\t\t\t\twedlet.otlTree.otlDelete();\n\t\t\t\t} else {\n\t\t\t\t\t(wedlet as IParentWedlet).visitWedletChildren(-1, Infinity, scan, options);\n\t\t\t\t}\n\t\t\t};\n\t\t\t(wedlet as IParentWedlet).visitWedletChildren(-1, Infinity, scan, options);\n\t\t}\n\t}\n\n\tonOtlRowUpdated() {}\n\n\tprotected findOtlTreeFromWrapper(wedlet: OtlWedletWrapper): OtlTree {\n\t\tif (!wedlet) return null;\n\t\t//XXX fusion avec OtlEditor.findOtlTree() ?\n\t\treturn DOMSH.findFlatParentElt(wedlet.element, this.rootNode, IS_OtlTree);\n\t}\n}\n\nAgInsSelEditor(OtlEditor, WEDLET.VISITOPTIONS_mainBranch);\n\n\n/** Noeud constituant l'arbre de l'outline. */\nexport class OtlTree extends HTMLElement {\n\n\twedlet: OtlWedletWrapper;\n\n\totlRowCtn: HTMLElement;\n\totlChildrenCtn: HTMLElement;\n\n\t/** non utilisé mais fake de IElementWedlet pour impl générique drag&drop insMgr.*/\n\tconfigWedletElt() {}\n\n\totlConnect(wedlet: OtlWedletWrapper) {\n\t\tthis.wedlet = wedlet;\n\t\twedlet.otlTree = this;\n\t\tthis.otlRowCtn = this.appendChild(<div class=\"row\" draggable=\"true\"/>);\n\t\tthis.otlChildrenCtn = this.appendChild(<div class=\"children\"/>);\n\t\tthis.wedlet.insertElement(this.otlRowCtn);\n\t}\n\n\totlAddChild(child: OtlTree, before: OtlTree) {\n\t\tthis.otlChildrenCtn.insertBefore(child, before);\n\t}\n\n\totlDelete() {\n\t\tthis.remove();\n\t}\n\n\totlHighlight(highlighted: boolean): this {\n\t\tthis.classList.toggle(\"highlight\", highlighted);\n\t\treturn this;\n\t}\n\n\totlScrollInView(): this {\n\t\tthis.otlRowCtn.scrollIntoView({block: \"nearest\", behavior: \"smooth\"});\n\t\treturn this;\n\t}\n\n}\n\ncustomElements.define(\"otl-tree\", OtlTree);\n\n\n/** Otl wedlet racine d'une nouvelle row (de type node ou wrapper, fils d'un node ou d'un container). */\nfunction isOtlRootRow(wedlet: OtlWedlet): wedlet is OtlWedletWrapper {\n\treturn wedlet.otlType !== EOtlType.container && (!wedlet.otlParent || wedlet.otlParent.otlType !== EOtlType.wrapper);\n}\n\n/** Recherche le wedlet racine associé à un TreeRow contenant wedlet. */\nfunction findOtlRootRow(wedlet: OtlWedlet): OtlWedletWrapper {\n\twhile (wedlet && wedlet.otlType === EOtlType.container) wedlet = wedlet.otlParent;\n\tif (!wedlet) return null;\n\tlet parent = wedlet.otlParent;\n\twhile (parent && parent.otlType === EOtlType.wrapper) {\n\t\twedlet = parent;\n\t\tparent = wedlet.otlParent;\n\t}\n\treturn wedlet as OtlWedletWrapper;\n}\n\nexport function IS_OtlTree(n: Node): n is OtlTree {return n && DOM.IS_element(n) && n.localName === 'otl-tree'};\n\n\nREG.reg.registerSkin(\"otl/root\", 1, /*language=CSS*/ `\n\t:host {\n\t\tpadding-bottom: 5vh; /* nécessaire pour éviter bug redraw au drag. */\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\totl-tree {\n\t\tdisplay: block;\n\t\tborder-inline-start: 5px solid transparent;\n\t}\n\n\totl-tree > .row {\n\t\tcursor: pointer;\n\t\tmin-height: 1em;\n\t\tpadding: 2px 0;\n\t}\n\n\n\totl-tree > .children {\n\t\tpadding-bottom: 3px;\n\t\tborder: 1px solid var(--border-color);\n\t\tborder-inline-end: none;\n\t\tborder-radius: 3px;\n\t}\n\n\totl-tree > .children:empty {\n\t\tborder-color: transparent;\n\t}\n\n\totl-tree > .row:hover {\n\t\t/*box-shadow: inset 0px 0px 3px var(--border-color);*/\n\t\tbackground: var(--pressed-bgcolor);\n\t}\n\n\totl-tree.highlight {\n\t\tborder-inline-start-color: var(--border-color);\n\t}\n\n\t.row * {\n\t\tborder: none;\n\t}\n\n\t.v {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t.h {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\n\t[edit-mode='h'] {\n\t\tdisplay: none;\n\t}\n\n`);\n"]}