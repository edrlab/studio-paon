{"version":3,"sources":["/@back@/store/plugins/depotPlg.tsx"],"names":["Action","ActionHackCtx","ActionMenuDep","AreaAsync","SimpleTagArea","REG","JSX","IO","initApp","reg","params","d","desk","plgCode","getPref","plgName","plgUniverseCode","env","universe","getId","actions","addAppBuilder","DepotDeskAppBuilder","push","setLabel","label","requireVisiblePerm","setExecute","ctx","ev","findAndOpenApp","u","dptPath","urlTree","UrlTreeAppBuilder","utPath","WrapReg","[object Object]","sub","super","this","buttonNode","initButtonNode","main","length","setActions","map","a","addToList","resolver","resolve","data","skin","skinOver","newElt","initialize","appDef","lastDatas","boards","getList","BrowseBoardArea","_label","_icon","requireLib","asEndPoint","isClosed","init","createElement","î"],"mappings":"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","sourcesContent":["import {OSkinableInit} from \"back/commons/basis\";\nimport {AppFrameDeskFeat, IAppBuilder, IAppCtx, JAppDef} from \"back/core/appFrame\";\nimport {Action, ActionHackCtx, ActionMenuDep, IAction} from \"lib/commons/actions\";\nimport {AreaAsync, IArea, SimpleTagArea} from \"lib/commons/areas\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {JSX} from \"lib/commons/xml/dom\";\nimport \"back/store/plugins/plugins_Perms\";\nimport {IDepotEnv, IDepotUiEnv} from \"lib/store/depot\";\nimport {UrlTreeApp} from \"back/store/apps/urlTreeApp\";\nimport {DepotDeskApp, ODepotDeskAppInit} from \"back/store/apps/depotDeskApp\";\nimport {resPath} from \"lib/store/res\";\nimport {IO} from \"lib/commons/io/io\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {BrowseBoard, OBrowseBoardInit} from \"back/store/views/browseBoard\";\n\nexport interface JDepotPlgAppInit {\n\t/** NON IMPLEMENTE Vue ouverte par défaut */\n\t//openByDefault? : 'urlTree'|'desk',\n\n\t/** Vue desk */\n\tdesk?: {\n\t\t/**\n\t\t * Bouton affiché dans la barre du portail avec le titre spécifié, ou celui par défaut si \"\".\n\t\t * Bouton masqué si null ou undefined (mais App bien déclarée)\n\t\t */\n\t\tlabel?: string\n\t}\n\n\t/** Vue urlTree */\n\turlTree?: {\n\t\t/**\n\t\t * Bouton affiché dans la barre du portail avec le titre spécifié, ou celui par défaut si \"\".\n\t\t * Bouton masqué si null ou undefined (mais App bien déclarée)\n\t\t */\n\t\tlabel?: string\n\t}\n}\n\n/**\n * Accès à un dépot.\n * Peut être appelé n fois pour déclarer n dépots dans le front\n *\n * @param reg Registre à exploiter correspondant au depot, nécessaire en cas de front multi-universe.\n */\nexport function initApp(reg: IReg<IDepotEnv> = REG.reg, params: JDepotPlgAppInit) {\n\n\tconst d = desk as AppFrameDeskFeat;\n\n\tconst plgCode = reg.getPref<string>(\"plg.code\", \"xDepot\");\n\tconst plgName = reg.getPref<string>(\"plg.name\") || \"Dépôt\";\n\tconst plgUniverseCode = reg.env.universe.getId();\n\n\t// Création du menu 'Dépot'\n\tconst actions: Action<IReg<IDepotEnv>>[] = [];\n\tif (params.desk) {\n\t\td.addAppBuilder(new DepotDeskAppBuilder(reg));\n\t\tactions.push(new Action<IReg<IDepotEnv>>('desk')\n\t\t\t.setLabel(params.desk.label || \"Gestion\")\n\t\t\t.requireVisiblePerm(\"ui.depotPlg.desk\")\n\t\t\t.setExecute((ctx: IReg<IDepotEnv>, ev: Event) => {\n\t\t\t\t\td.findAndOpenApp({u: plgUniverseCode, dptPath: \"\"} as JDepotDeskAppDef, ev);\n\t\t\t\t}\n\t\t\t));\n\n\t}\n\tif (params.urlTree) {\n\t\td.addAppBuilder(new UrlTreeAppBuilder(reg));\n\t\tif (params.urlTree.label != null) actions.push(new Action<IReg<IDepotEnv>>('urlTree')\n\t\t\t.setLabel(params.urlTree.label || \"Consultation\")\n\t\t\t.requireVisiblePerm(\"ui.depotPlg.urlTree\")\n\t\t\t.setExecute((ctx: IReg<IDepotEnv>, ev: Event) => {\n\t\t\t\t\td.findAndOpenApp({u: plgUniverseCode, utPath: \"\"} as JUrlTreeAppAppDef, ev);\n\t\t\t\t}\n\t\t\t));\n\t}\n\n\t/**\n\t * Force le bon registre en ctx, indispensable pour la résolution des permissions.\n\t */\n\tclass WrapReg extends ActionHackCtx<Element, IReg<IDepotEnv>> {\n\t\tconstructor(sub: IAction<IReg<IDepotEnv>>, public reg: IReg<IDepotEnv>) {\n\t\t\tsuper(sub);\n\t\t}\n\n\t\twrapCtx(ctx: Element): IReg<IDepotEnv> {return this.reg}\n\n\t\tinitButtonNode(buttonNode: Element, ctx: Element) {\n\t\t\t//Affectation du bon registre dans le contexte graphique.\n\t\t\t(buttonNode as IRegPointer<IDepotEnv>).reg = this.reg;\n\t\t\tthis.sub.initButtonNode(buttonNode, this.reg);\n\t\t}\n\t}\n\n\tlet main: IAction<IReg<IDepotEnv>>;\n\tif (actions.length > 1) {\n\t\tmain = new ActionMenuDep().setLabel(plgName).setActions(actions.map((a) => new WrapReg(a, reg)));\n\t} else if (actions[0]) {\n\t\tmain = actions[0].setLabel(plgName); //Force le label du dépot et nom le sous-label, \"Gestion\", \"Consultation\"...\n\t}\n\n\tif (main)\n\t\tREG.reg.addToList(\"appframe:header:toolbar\", \"depot_\" + plgCode, 1, new WrapReg(main, reg));\n}\n\n\n/** Définition pour une UrlTreeApp */\nexport interface JUrlTreeAppAppDef extends JAppDef {\n\t/** Code de l'univers associé */\n\tu: string\n\t/** Path d'une res à afficher. */\n\tutPath: string\n}\n\nexport class UrlTreeAppBuilder extends SimpleTagArea<IAppCtx<IDepotEnv>, UrlTreeApp> implements OSkinableInit, IAppBuilder<IDepotEnv, IDepotEnv> {\n\n\tskin?: string;\n\n\tskinOver?: string;\n\n\tconstructor(public reg: IReg<IDepotEnv>) {\n\t\tsuper('store-urltree-app', reg.env.resolver.resolve(\":back:store/apps/urlTreeApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JUrlTreeAppAppDef) {return typeof data.utPath === 'string' && data.u === this.reg.env.universe.getId()}\n\n\tnewElt(ctx: IAppCtx<IDepotEnv> & OSkinableInit): UrlTreeApp {\n\t\tif (!ctx.skin) ctx.skin = this.skin;\n\t\tif (!ctx.skinOver) ctx.skinOver = this.skinOver;\n\t\tctx.reg = this.reg;\n\t\treturn (super.newElt(ctx) as UrlTreeApp).initialize(ctx);\n\t}\n}\n\n/** Définition pour une DepotDeskApp */\nexport interface JDepotDeskAppDef extends JAppDef {\n\t/** Code de l'univers associé */\n\tu: string\n\n\t/** Path d'une res à afficher. */\n\tdptPath: resPath\n}\n\nexport class DepotDeskAppBuilder extends SimpleTagArea<IAppCtx<IDepotEnv>, DepotDeskApp> implements OSkinableInit, IAppBuilder<IDepotEnv, IDepotUiEnv> {\n\n\tskin?: string;\n\n\tskinOver?: string;\n\n\tconstructor(public reg: IReg<IDepotEnv>) {\n\t\tsuper('store-depotdesk-app', reg.env.resolver.resolve(\":back:store/apps/depotDeskApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JDepotDeskAppDef) {return 'dptPath' in data && data.u === this.reg.env.universe.getId()}\n\n\tnewElt(ctx: IAppCtx<IDepotEnv> & OSkinableInit): DepotDeskApp {\n\t\treturn (super.newElt(ctx) as DepotDeskApp).initialize({\n\t\t\treg: this.reg,\n\t\t\tskin: this.skin,\n\t\t\tskinOver: this.skinOver,\n\t\t\tappDef: ctx.appDef,\n\t\t\tlastDatas: ctx.lastDatas,\n\t\t\tboards: this.reg.getList<IArea<IRegPointer<IDepotUiEnv>>>(\"depot:desk:boards\") || [new BrowseBoardArea()] //[new BrowseBoardArea(), new BrowseBoardArea()]\n\t\t} as ODepotDeskAppInit);\n\t}\n}\n\nclass BrowseBoardArea extends AreaAsync<IRegPointer<IDepotUiEnv>, BrowseBoard> {\n\n\tconstructor() {\n\t\tsuper('browseBoard');\n\t\tthis._label = \"Arborescence\";\n\t\tthis._icon = \"/@skin@/store/views/browseBoard/home.svg\";\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/store/views/browseBoard.js\"));\n\t}\n\n\tbuildBody(ctx: IRegPointer<IDepotUiEnv>, lastDatas?: JLastDatas): BrowseBoard {\n\t\tif (ctx.reg.isClosed) return null; //raceCond\n\t\tconst init: OBrowseBoardInit = {\n\t\t\treg: ctx.reg,\n\t\t\tlastDatas: lastDatas\n\t\t};\n\t\treturn <store-browse-board î={init}/> as BrowseBoard;\n\t}\n}\n"]}