{"version":3,"sources":["/@back@/wsp/widgets/srcGridColumns.tsx"],"names":["CellBuilderDate","CellBuilderFlagIcon","CellBuilderIconLabel","CellBuilderLabel","CellBuilderString","RESPS","SRC","POPUP","SRCDRAWER","SrcDrawer","REG","DOM","ITEM","ItemTypeTask","EFolderState","GridDataRowJsonTree","CellBuilderAccount","CellBuilderAccounts","CellBuilderSrcIconCode","[object Object]","reg","wspMetaUi","noTooltip","sortFn","sortSrcUriTree","super","this","srcRdr","getSvc","KEY_SrcRenderer","iconFilter","row","cacheHolder","getMainName","rowDatas","getFolderState","opened","getIcon","root","_srcFields","redrawCell","_addTooltip","_buildContent","cell","findParentOrSelf","n","Element","classList","contains","promiseTooltip","owner","tooltip","addEventListener","ev","srcFields","view","setSrcRef","srcRef","preventDefault","initialize","skin","tpl","detailsPreviewTpl","findReg","hoverAllowed","anchor","posFrom","intersectWith","fromX","marginX","notAvailableSpace","targetX","fromY","marginY","r1","r2","v1","_getValue","v2","map","set","CellBuilderSrcIconCodeTitle","span","firstElementChild","redrawIcon","nextElementSibling","setTextContent","_getTitle","spanIcon","appendChild","document","createElement","st","style","color","fontStyle","marginInlineStart","iconLabelGap","getSecondName","fillSearchColumns","CellBuilderSrcIconTitle","icon","_getIcon","label","unicodeBidi","backgroundImage","startsWith","setAttribute","paddingLeft","iconWidth","marginInlineEnd","filter","CellBuilderSpace","srcUri","getData","dataKey","isAirItem","isExtItem","idx","indexOf","substring","idx2","lastIndexOf","CellBuilderItModelFlagIcon","getItemType","itModel","getTitle","CellBuilderItModel","CellBuilderResp","respCode","hideIcon","src","resps","toRespsList","CellBuilderResps","CellBuilderLc","lcSt","itemType","lcProv","lc","getLcStateOrUnknown","name","iconUrl","CellBuilderLcFlag","setIconWidth","CellBuilderTkDeadline","defaultSortValue","Date","now","CellBuilderTkScheduledD","redrawSrcLine","wsp","line","currentSrcUri","highlightSgn","assigned","toggle","srcId","sgn","itSgn","test","getLcStates","setStyle","flagItemsWithTasks","tkPending"],"mappings":"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","sourcesContent":["import {CellBuilderDate, CellBuilderFlagIcon, CellBuilderIconLabel, CellBuilderLabel, CellBuilderString, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {IColSearchBuilder, ISearchFunc} from \"lib/wsp/search\";\nimport {IWspEnv, Wsp} from \"lib/wsp/wsp\";\nimport {IGridDataRow, IRowSortFn} from \"back/commons/widgets/grid-core\";\nimport {ESrcField, JSrcFields, RESPS, SRC, srcRef, srcUri} from \"lib/wsp/src\";\nimport {POPUP, PopupTooltip} from \"back/commons/widgets/popups\";\nimport {IView} from \"lib/commons/views\";\nimport {SRCDRAWER, SrcDrawer} from \"back/wsp/widgets/srcDrawer\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {DOM} from \"lib/commons/xml/dom\";\nimport {ISrcRenderer, ITEM} from \"lib/wsp/item\";\nimport {ILcProvider, ItemTypeTask, WspMetaUi} from \"lib/wsp/wspMetaUi\";\nimport {EFolderState, GridDataRowJsonTree} from \"back/commons/widgets/tree\";\nimport {CellBuilderAccount, CellBuilderAccounts} from \"back/core/widgets/usersGrid\";\nimport {ICoreUniverseEnv} from \"lib/core/universe\";\n\n\nexport class CellBuilderSrcIconCode extends CellBuilderIconLabel implements IColSearchBuilder {\n\n\tprotected srcRdr: ISrcRenderer;\n\n\tconstructor(reg: IReg<any>, public wspMetaUi: WspMetaUi, public noTooltip?: boolean, public sortFn: (a: srcUri, b: srcUri) => number = SRC.sortSrcUriTree) {\n\t\tsuper(null);\n\t\tthis.srcRdr = reg.getSvc(ITEM.KEY_SrcRenderer);\n\t\tthis.iconFilter = \"var(--filter)\";\n\t}\n\n\tprotected _getValue(row: GridDataRowJson<JSrcFields>): string {\n\t\treturn row.cacheHolder['code'] || (row.cacheHolder['code'] = this.srcRdr.getMainName(row.rowDatas, this.wspMetaUi));\n\t}\n\n\tprotected _getIcon(row: GridDataRowJson<JSrcFields>): string {\n\t\tif (row instanceof GridDataRowJsonTree && row.getFolderState() === EFolderState.opened) return row.cacheHolder['iconOpen'] || (row.cacheHolder['iconOpen'] = this.srcRdr.getIcon(row.rowDatas, this.wspMetaUi, true));\n\t\treturn row.cacheHolder['icon'] || (row.cacheHolder['icon'] = this.srcRdr.getIcon(row.rowDatas, this.wspMetaUi));\n\t}\n\n\tredrawCell(row: GridDataRowJson<JSrcFields>, root: HTMLElement): void {\n\t\t(root as JSrcFieldsPointer)._srcFields = row.rowDatas;\n\t\t//if( isTooltipPointer(root)) root.popupTooltip.contentRoot\n\t\tsuper.redrawCell(row, root);\n\t}\n\n\tprotected _buildContent(row: IGridDataRow, root: HTMLElement): HTMLElement {\n\t\tif (!this.noTooltip) this._addTooltip(root);\n\t\treturn super._buildContent(row, root);\n\t}\n\n\tprotected _addTooltip(root: HTMLElement & JSrcFieldsPointer) {\n\t\t//On remonte sur la cell pour que le positionnement du tooltip reste dans la zone du grid.\n\t\tconst cell = DOM.findParentOrSelf(root, null, (n): n is HTMLElement => n instanceof Element && n.classList.contains(\"cell\")) || root;\n\t\tPOPUP.promiseTooltip(cell,\n\t\t\t(owner: HTMLElement, tooltip: PopupTooltip): IView | null => {\n\t\t\t\ttooltip.addEventListener('c-show', function (this: PopupTooltip, ev: CustomEvent) {\n\t\t\t\t\tconst srcFields = root._srcFields;\n\t\t\t\t\tif (srcFields) (this.view as SrcDrawer).setSrcRef(SRC.srcRef(srcFields), srcFields);\n\t\t\t\t\telse ev.preventDefault();\n\t\t\t\t});\n\t\t\t\treturn new SrcDrawer().initialize({skin: 'wsp-src-drawer/tooltip', tpl: SRCDRAWER.detailsPreviewTpl, reg: REG.findReg(owner) as IReg<IWspEnv>});\n\t\t\t},\n\t\t\t{\n\t\t\t\thoverAllowed: true, anchor: {\n\t\t\t\t\tposFrom: root, intersectWith: cell, fromX: 'end', marginX: -3,\n\t\t\t\t\tnotAvailableSpace: {\n\t\t\t\t\t\tposFrom: root, intersectWith: cell, fromX: 'end', targetX: 'end', fromY:'bottom', marginY: -3\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tgetColSortFn(): IRowSortFn {\n\t\treturn (r1: GridDataRowJson<JSrcFields>, r2: GridDataRowJson<JSrcFields>) => {\n\t\t\tconst v1 = this._getValue(r1);\n\t\t\tconst v2 = this._getValue(r2);\n\t\t\tif (v1 == null) {\n\t\t\t\tif (v2 == null) return 0;\n\t\t\t\treturn 1;\n\t\t\t} else if (v2 == null) return -1;\n\t\t\treturn this.sortFn(v1, v2);\n\t\t}\n\t}\n\n\tfillSearchColumns(map: Map<string, string | ISearchFunc>) {\n\t\tmap.set('srcUri', null);\n\t\tmap.set('itModel', null);\n\t}\n}\n\nexport interface JSrcFieldsPointer {\n\t_srcFields?: JSrcFields\n}\n\n/**\n *\n */\nexport class CellBuilderSrcIconCodeTitle extends CellBuilderSrcIconCode {\n\n\tredrawCell(row: GridDataRowJson<JSrcFields>, root: HTMLElement): void {\n\t\t(root as JSrcFieldsPointer)._srcFields = row.rowDatas;\n\t\tlet span = root.firstElementChild as HTMLElement;\n\t\tif (!span) span = this._buildContent(row, root);\n\t\tthis.redrawIcon(row, span);\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this._getValue(row));\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this._getTitle(row));\n\t}\n\n\n\tprotected _buildContent(row: IGridDataRow, root: HTMLElement): HTMLElement {\n\t\t//icon\n\t\tconst spanIcon = super._buildContent(row, root);\n\t\t//code\n\t\troot.appendChild(document.createElement('span'));\n\t\t//title\n\t\tconst st = root.appendChild(document.createElement('span')).style;\n\t\tst.color = \"var(--alt1-color)\";\n\t\tst.fontStyle = \"italic\";\n\t\tst.marginInlineStart = this.iconLabelGap;\n\t\treturn spanIcon;\n\t}\n\n\tprotected _getTitle(row: GridDataRowJson<JSrcFields>) {\n\t\treturn this.srcRdr.getSecondName(row.rowDatas, this.wspMetaUi) || \"\";\n\t}\n\n\tfillSearchColumns(map: Map<string, string | ISearchFunc>) {\n\t\tsuper.fillSearchColumns(map);\n\t\tmap.set('itTi', null);\n\t}\n\n}\n\n/**\n *\n */\nexport class CellBuilderSrcIconTitle extends CellBuilderSrcIconCode {\n\n\tredrawCell(row: GridDataRowJson<JSrcFields>, root: HTMLElement): void {\n\t\t(root as JSrcFieldsPointer)._srcFields = row.rowDatas;\n\t\tlet span = root.firstElementChild as HTMLElement;\n\t\tif (!span) span = this._buildContent(row, root);\n\t\tconst icon = this._getIcon(row);\n\t\tconst label = this._getValue(row);\n\t\tif (icon) {\n\t\t\tspan.style.unicodeBidi = 'isolate';\n\t\t\tspan.style.backgroundImage = icon.startsWith('--') ? `var(${icon})` : `url(\"${icon}\")`;\n\t\t} else {\n\t\t\tspan.style.backgroundImage = 'none';\n\t\t}\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this._getTitle(row) || label);\n\t}\n\n\n\tprotected _buildContent(row: IGridDataRow, root: HTMLElement): HTMLElement {\n\t\tthis._addTooltip(root);\n\t\tconst span = document.createElement('span');\n\t\tspan.setAttribute(\"class\", \"icon\");\n\t\tlet st = span.style;\n\t\tst.paddingLeft = this.iconWidth;\n\t\t(st as any).marginInlineEnd = this.iconLabelGap;\n\t\tif (this.iconFilter) st.filter = this.iconFilter;\n\t\troot.appendChild(span);\n\t\t//title\n\t\tst = root.appendChild(document.createElement('span')).style;\n\t\t(st as any).marginInlineStart = this.iconLabelGap;\n\t\treturn span;\n\t}\n\n\tprotected _getTitle(row: GridDataRowJson<JSrcFields>) {\n\t\treturn this.srcRdr.getSecondName(row.rowDatas, this.wspMetaUi) || \"\";\n\t}\n\n\tfillSearchColumns(map: Map<string, string | ISearchFunc>) {\n\t\tsuper.fillSearchColumns(map);\n\t\tmap.set('itTi', null);\n\t}\n\n}\n\n/**\n * Cellule affichant l'espace de l'item\n */\nexport class CellBuilderSpace extends CellBuilderString {\n\n\tconstructor() {\n\t\tsuper('srcUri');\n\t}\n\n\tprotected _getValue(row: IGridDataRow): any {\n\t\tconst srcUri = row.getData(this.dataKey) as string;\n\t\tif (!srcUri) return \"\";\n\t\tif (ITEM.isAirItem(srcUri)) return \"[Item flottant]\";\n\t\tif (ITEM.isExtItem(srcUri)) return \"[Item étranger]\";\n\t\tconst idx = srcUri.indexOf(\".\");\n\t\tif (idx < 0) return srcUri.substring(1);\n\t\tconst idx2 = srcUri.lastIndexOf(\"/\", idx);\n\t\treturn idx2 > 0 ? srcUri.substring(1, idx2) : \"\";\n\t}\n}\n\n/**\n * CellBuilder qui n'affiche que l'icone du type d'item et son title en tooltip.\n * Permet de trier une liste selon le type d'items.\n */\nexport class CellBuilderItModelFlagIcon extends CellBuilderFlagIcon {\n\tprotected srcRdr: ISrcRenderer;\n\n\tconstructor(reg: IReg<any>, public wspMetaUi: WspMetaUi) {\n\t\tsuper('itModel' as ESrcField);\n\t\tthis.srcRdr = reg.getSvc(ITEM.KEY_SrcRenderer);\n\t}\n\n\tprotected _getValue(row: GridDataRowJson<JSrcFields>): any {\n\t\treturn this.wspMetaUi.getItemType(row.rowDatas.itModel).getTitle();\n\t}\n\n\tprotected _getIcon(row: GridDataRowJson<JSrcFields>): string {\n\t\treturn row.cacheHolder['icon'] || (row.cacheHolder['icon'] = this.srcRdr.getIcon(row.rowDatas, this.wspMetaUi));\n\t}\n}\n\n/**\n * CellBuilder qui n'affiche que l'icone du type d'item et son title en tooltip.\n * Permet de trier une liste selon le type d'items.\n */\nexport class CellBuilderItModel extends CellBuilderLabel {\n\tprotected srcRdr: ISrcRenderer;\n\n\tconstructor(reg: IReg<any>, public wspMetaUi: WspMetaUi) {\n\t\tsuper('itModel' as ESrcField);\n\t\tthis.srcRdr = reg.getSvc(ITEM.KEY_SrcRenderer);\n\t}\n\n\tprotected _getValue(row: GridDataRowJson<JSrcFields>): any {\n\t\treturn this.wspMetaUi.getItemType(row.rowDatas.itModel).getTitle();\n\t}\n\n\tprotected _getIcon(row: GridDataRowJson<JSrcFields>): string {\n\t\treturn row.cacheHolder['icon'] || (row.cacheHolder['icon'] = this.srcRdr.getIcon(row.rowDatas, this.wspMetaUi));\n\t}\n}\n\n/**\n * CellBuilder pour les resps : liste des utilisateur d'une resp donnée\n */\nexport class CellBuilderResp extends CellBuilderAccount {\n\n\tconstructor(public respCode: string, protected reg: IReg<ICoreUniverseEnv>, dataKey: string, public hideIcon: boolean = false) {\n\t\tsuper(reg, dataKey, hideIcon)\n\t}\n\n\tgetAccount(row: GridDataRowJsonTree<any>): string {\n\t\tconst src = row.rowDatas;\n\t\tif (!src[this.dataKey]) return null;\n\t\t//const itemType = this.wspMetaUi.getItemType(src.itModel);\n\t\tconst resps = RESPS.toRespsList(src[this.dataKey]);\n\t\treturn resps[this.respCode] ? resps[this.respCode][0] : null;\n\t}\n}\n\nexport class CellBuilderResps extends CellBuilderAccounts {\n\n\tconstructor(public respCode: string, protected reg: IReg<ICoreUniverseEnv>, dataKey: string, public hideIcon: boolean = false) {\n\t\tsuper(reg, dataKey, hideIcon)\n\t}\n\n\tgetAccounts(row: GridDataRowJsonTree<any>): string[] {\n\t\tconst src = row.rowDatas;\n\t\tif (!src[this.dataKey]) return null;\n\t\t//const itemType = this.wspMetaUi.getItemType(src.itModel);\n\t\tconst resps = RESPS.toRespsList(src[this.dataKey]);\n\t\treturn resps[this.respCode];\n\t}\n}\n\n/**\n * CellBuilder pour les cycles de vie (items et tasks)  : afficage de l'icone et de l'état\n */\nexport class CellBuilderLc extends CellBuilderIconLabel {\n\n\tconstructor(public wspMetaUi: WspMetaUi) {\n\t\tsuper(\"lcSt\");\n\t}\n\n\tprotected _getValue(row: GridDataRowJson<JSrcFields>): any {\n\t\tconst src = row.rowDatas;\n\t\tif (!src.lcSt) return null;\n\t\tconst itemType = this.wspMetaUi.getItemType(src.itModel);\n\t\tconst lcProv: ILcProvider = itemType instanceof ItemTypeTask ? itemType : this.wspMetaUi;\n\t\tconst lc = lcProv.getLcStateOrUnknown(src.lcSt);\n\t\treturn lc ? lc.name : \"\";\n\t}\n\n\tprotected _getIcon(row: GridDataRowJson<JSrcFields>): string {\n\t\tconst src = row.rowDatas;\n\t\tif (!src.lcSt) return null;\n\t\tconst itemType = this.wspMetaUi.getItemType(src.itModel);\n\t\tconst lcProv: ILcProvider = itemType instanceof ItemTypeTask ? itemType : this.wspMetaUi;\n\t\tconst lc = lcProv.getLcStateOrUnknown(src.lcSt);\n\t\treturn lc ? lc.iconUrl : \"\";\n\t}\n}\n\n/**\n * CellBuilder pour les cycles de vie (items et tasks) : affichage de l'icone uniquement\n */\nexport class CellBuilderLcFlag extends CellBuilderFlagIcon {\n\n\tconstructor(public wspMetaUi: WspMetaUi) {\n\t\tsuper(\"lcSt\");\n\t\tthis.setIconWidth(\".8rem\");\n\t}\n\n\tprotected _getIcon(row: GridDataRowJson<any>): string {\n\t\tconst lcSt = row.getData(\"lcSt\" as ESrcField);\n\t\tif (!lcSt) return null;\n\t\tconst itemType = this.wspMetaUi.getItemType(row.getData(\"itModel\" as ESrcField));\n\t\tconst lcProv: ILcProvider = itemType instanceof ItemTypeTask ? itemType : this.wspMetaUi;\n\t\tconst lc = lcProv.getLcStateOrUnknown(lcSt);\n\t\treturn lc ? lc.iconUrl : \"\";\n\t}\n\n\tprotected _getValue(row: GridDataRowJson<any>): any {\n\t\tconst lcSt = row.getData(\"lcSt\" as ESrcField);\n\t\tif (!lcSt) return null;\n\t\tconst itemType = this.wspMetaUi.getItemType(row.getData(\"itModel\" as ESrcField));\n\t\tconst lcProv: ILcProvider = itemType instanceof ItemTypeTask ? itemType : this.wspMetaUi;\n\t\tconst lc = lcProv.getLcStateOrUnknown(lcSt);\n\t\treturn lc ? lc.name : \"\";\n\t}\n}\n\n\n/** CellBuilder pour la deadLine des tasks */\nexport class CellBuilderTkDeadline extends CellBuilderDate {\n\n\t// @ts-ignore\n\tget defaultSortValue() {return Date.now()}\n\n\tconstructor() {\n\t\tsuper(\"tkDeadline\" as ESrcField);\n\t}\n}\n\n/** CellBuilder pour la scheduledDt des tasks */\nexport class CellBuilderTkScheduledD extends CellBuilderDate {\n\n\t// @ts-ignore\n\tget defaultSortValue() {return Date.now()}\n\n\tconstructor() {\n\t\tsuper(\"tkScheduledDt\" as ESrcField);\n\t}\n}\n\n\n/**\n * function commune pour redessiner les lignes en fonction du contexte.\n */\nexport function redrawSrcLine(wsp: Wsp, src: JSrcFields, line: HTMLElement, currentSrcUri: string | null, highlightSgn: RegExp | null, assigned: srcRef | null): void {\n\tline.classList.toggle('current', src.srcUri === currentSrcUri);\n\tif (highlightSgn) {\n\t\tif (assigned && (assigned === src.srcId || assigned === src.srcUri)) {\n\t\t\tline.classList.toggle('assigned', true);\n\t\t\tline.classList.toggle('highlight', false);\n\t\t} else {\n\t\t\tconst sgn = src.itSgn;\n\t\t\tline.classList.toggle('highlight', sgn ? highlightSgn.test(sgn) : false);\n\t\t\tline.classList.toggle('assigned', false);\n\t\t}\n\t} else {\n\t\tline.classList.toggle('highlight', false);\n\t\tline.classList.toggle('assigned', false);\n\t}\n\tconst wspMetaUi = wsp.wspMetaUi;\n\tif (wspMetaUi) {\n\t\tif (wspMetaUi.getLcStates() !== null) {\n\t\t\t//Wsp avec liveCycle sur les items.\n\t\t\tDOM.setStyle(line, \"color\", src.lcSt != null ? wspMetaUi.getLcStateOrUnknown(src.lcSt).color || \"\" : \"\");\n\t\t}\n\t\tif (wspMetaUi.flagItemsWithTasks) {\n\t\t\tDOM.setStyle(line, \"font-weight\", src.tkPending ? 'bold' : null);\n\t\t}\n\t}\n}"]}