{"version":3,"sources":["/@back@/edit/wed/features/searchBar.tsx"],"names":["DOMSH","REG","DOM","JSX","Action","Button","ButtonActions","ButtonToggle","isSkSearchAnnot","SkCssSelectorSearch","SkSearchCommentAnnot","SkTextSearch","SkTextSearchInAtts","SkXPathSearch","LANG","POPUP","XA","EWedletEditMode","findWedEditor","WEDLET","AgSearchBarEditor","cls","proto","prototype","superInit","initialize","config","call","this","hideSearchBar","searchBar","WedSearchBar","init","wedMgr","accelKeyMgr","addAccelKey","ToggleSearchBar","SINGLETON","reg","addToList","ShowSearchBar","listeners","on","coordSearch","search","_a","wedEditor","env","wedSearchCoord","getParams","setSearch","[object Object]","id","super","_label","_icon","api","ctx","hidden","ev","show","close","isVisible","HTMLElement","editor","shadowRoot","lazyInit","refresh","sr","attachShadow","SHADOWDOM_INIT","findReg","installSkin","localName","searchActions","getList","selector","appendChild","actions","actionContext","rootPanels","createElement","icon","title","onclick","onClose","params","barLayout","showBar","currentPanel","action","getId","searchId","act","find","a","initParams","execute","buildSearch","onHideBar","setCurrentPanel","panel","parentNode","append","ch","firstElementChild","nextElementSibling","setHidden","unconnectDoc","docHolderAsync","connectDoc","once","getIcon","dispatchSearchChange","findHost","registerSkin","customElements","define","WedSearchBarNextPrev","annotFilter","onPrevious","onNext","disabled","btn","querySelectorAll","gotoAnnot","_lastAnnot","lastSkAnnots","indexOf","isSelMatchLastAnnot","getCurrentSel","offset","annots","countAnnots","length","foundAnnot","cycled","sel","startFrom","startXa","start","startInText","end","i","annot","isAfter","focusAnnot","_lastAnnotSelStart","showNotif","autoHide","noCloseBtn","posFrom","rootNode","fromX","targetX","fromY","classes","targetY","currentSel","isEquals","SearchBarPanelAction","isEnabled","getPanelFor","buildPanel","SearchPanelBase","lastCount","bar","withReplacePanel","result","nav","classList","add","replaceBtn","toggleReplace","replaceBar","_refreshOnReadOnlyChange","refreshOnReadOnlyChange","bind","_asyncSkAnnots","asyncSkAnnots","execSearch","removeListener","docHolder","setSkSearch","replaceBarShown","toggleOn","insertAdjacentElement","buildReplaceBar","me","showReplaceBar","count","setTextContent","maxResults","deadline","c","updateCount","readOnly","TextSearchAction","searchInAtts","v","TextSearchPanel","initPanel","_initPanel","input","type","oninput","onChange","matchCase","onchange","wholeWord","class","text","value","checked","repBy","undefined","inputRepl","label","onReplace","onReplaceAll","getLastSelectedAnnot","warnNoReplaceInCmt","freeze","len","startWedlet","findWedlet","rootWedlet","lastAncestorIfNone","resolveEditMode","write","batch","newBatch","replaceText","setSelAfterSeq","doBatch","showNotifForbidden","viewPortX","viewPortY","rep","lastAn","inComment","an","deleteSequence","insertText","rawValue","newSkTextSearch","buildRegexp","r","escape4RegexpFuzzy","flags","RegExp","focus","NoOptionsSearchPanel","getLabel","skSearchMk","FixedXPathSearchAction","xpath","annotLabel","initSearch","FixedCssSelectorSearchAction","FixedTextSearchAction","pattern","WedSearchCoordinator","p","Date","now"],"mappings":"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","sourcesContent":["import {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IReg, IUiEnv, REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IWedEditorMain, OWedEditorMainConfig, WedMgr} from \"back/edit/wed/wedEditor\";\nimport {Action, IAction, IActionToggle} from \"lib/commons/actions\";\nimport {Button, ButtonActions, ButtonToggle} from \"back/commons/widgets/buttons\";\nimport {ISchemaSearch, ISkSearchAnnot, isSkSearchAnnot, SkCssSelectorSearch, SkSearchCommentAnnot, SkTextSearch, SkTextSearchInAtts, SkXPathSearch} from \"lib/edit/schema/schemaSearch\";\nimport {LANG} from \"lib/commons/lang\";\nimport {ISkAnnot} from \"lib/edit/schema/schemaAnnots\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {IXAddr, IXAddrRange, XA} from \"lib/commons/xml/xAddr\";\nimport {EWedletEditMode, findWedEditor, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {IDocBatch} from \"lib/edit/docHolder\";\nimport {XmlBatch} from \"lib/edit/ot/xmlHouse\";\n\n\nexport interface OWedEditorSearchBarConfig extends OWedEditorMainConfig {\n\t/** Désactive cette searchBar. */\n\thideSearchBar?: boolean;\n}\n\nexport interface IWedEditorSearchBar extends IWedEditorMain {\n\tsearchBar?: WedSearchBar;\n}\n\n/** Agrégation pour le IWedEditor ajoutant la searchBar. */\nexport function AgSearchBarEditor(cls: any): any {\n\tconst proto = cls.prototype as IWedEditorSearchBar;\n\tconst superInit = proto.initialize;\n\tproto.initialize = function (this: IWedEditorSearchBar, config: OWedEditorSearchBarConfig) {\n\t\tsuperInit.call(this, config);\n\t\tif (!config.hideSearchBar) {\n\t\t\tthis.searchBar = new WedSearchBar().init(this, config);\n\t\t\tthis.wedMgr.accelKeyMgr.addAccelKey(\"f\", 'accel', ToggleSearchBar.SINGLETON);\n\t\t\tthis.reg.addToList(\"actions:wed:commonbar:end\", \"searchBar\", 1, ShowSearchBar.SINGLETON, 1);\n\t\t\tthis.wedMgr.listeners.on(\"redrawAtEnd\", coordSearch);\n\t\t\tthis.wedMgr.listeners.on(\"shown\", coordSearch);\n\t\t}\n\t\treturn this;\n\t};\n\treturn cls;\n}\n\nfunction coordSearch(wedMgr: WedMgr) {\n\tconst search = (wedMgr.wedEditor.reg.env as IWedSearchCoordinatorPointer).wedSearchCoord?.getParams();\n\tif (search) (wedMgr.wedEditor as IWedEditorSearchBar).searchBar.setSearch(search);\n}\n\n/** Action d'affichage ou masquage de la searchBar. */\nexport class ToggleSearchBar extends Action<IWedEditorSearchBar> implements IActionToggle<IWedEditorSearchBar> {\n\tstatic SINGLETON = new ToggleSearchBar();\n\n\tconstructor(id?: string) {\n\t\tsuper('search' || id);\n\t\tthis._label = \"Parcourir, remplacer...\";\n\t\tthis._icon = \"/@skin@/edit/wed/search/search.svg\";\n\t}\n\n\tisToggle(): this is IActionToggle<IWedEditorSearchBar> {return true}\n\n\tgetDatas(api: 'toggle', ctx: IWedEditorSearchBar): boolean | null {\n\t\treturn ctx.searchBar && !ctx.searchBar.hidden;\n\t}\n\n\texecute(ctx: IWedEditorSearchBar, ev?: Event) {\n\t\tif (ctx.searchBar.hidden) {\n\t\t\tctx.searchBar.show();\n\t\t} else {\n\t\t\tctx.searchBar.close();\n\t\t}\n\t}\n}\n\n/** Action pour bouton masqué si la searchBar est déjà visible. */\nexport class ShowSearchBar extends ToggleSearchBar {\n\tstatic SINGLETON = new ShowSearchBar();\n\n\tisToggle(): this is IActionToggle<IWedEditorSearchBar> {return false}\n\n\tisVisible(ctx: IWedEditorSearchBar): boolean {\n\t\tif (!ctx.searchBar.hidden) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n}\n\n/**\n * Widget principal de la searchBar.\n */\nexport class WedSearchBar extends HTMLElement {\n\teditor: IWedEditorSearchBar;\n\n\tsearchActions: ISearchBarAction[];\n\n\tprotected selector: ButtonActions<WedSearchBar>;\n\n\tprotected rootPanels: HTMLElement;\n\n\tcurrentPanel: ISearchBarPanel | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.id = \"searchBar\";\n\t\tthis.hidden = true;\n\t}\n\n\tinit(editor: IWedEditorSearchBar, config: OWedEditorSearchBarConfig): this {\n\t\tthis.editor = editor;\n\t\treturn this;\n\t}\n\n\tconnectedCallback() {\n\t\tif (!this.shadowRoot) this.lazyInit();\n\t\tthis.refresh();\n\t}\n\n\tprotected lazyInit() {\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tconst reg = REG.findReg(this);\n\t\treg.installSkin(this.localName, sr);\n\n\t\tthis.searchActions = reg.getList(\"wed.searchBar.actions\");\n\n\t\tthis.selector = sr.appendChild(new ButtonActions().initialize({\n\t\t\treg,\n\t\t\tactions: this.searchActions,\n\t\t\tactionContext: this\n\t\t}) as ButtonActions<WedSearchBar>);\n\t\tthis.rootPanels = sr.appendChild(<div/>);\n\t\tsr.appendChild(<c-button icon=\"/@skin@/commons/icons/close.svg\" title=\"Fermer\" onclick={this.onClose}/>);\n\t}\n\n\t/** Paramètres d'init d'un panel. */\n\tinitParams: JWedSearchBarParams;\n\n\tsetSearch(params: JWedSearchBarParams) {\n\t\tif (this.hidden) {\n\t\t\tthis.editor.barLayout.showBar(this);\n\t\t\tthis.hidden = false;\n\t\t}\n\t\tif (!this.shadowRoot) this.lazyInit();\n\t\tif (this.currentPanel?.action.getId() !== params.searchId) {\n\t\t\tconst act = this.searchActions.find((a) => a.getId() === params.searchId);\n\t\t\tif (!act) return;\n\t\t\ttry {\n\t\t\t\tthis.initParams = params;\n\t\t\t\tact.execute(this);\n\t\t\t} finally {\n\t\t\t\tthis.initParams = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentPanel.setSearch(params);\n\t\t}\n\t}\n\n\tgetSearchParams(): JWedSearchBarParams | null {\n\t\treturn !this.hidden && this.currentPanel ? this.currentPanel.buildSearch() : null;\n\t}\n\n\tclose() {\n\t\tthis.hidden = true;\n\t\tthis.editor.barLayout.onHideBar(this);\n\t\tthis.setCurrentPanel(null);\n\t}\n\n\tshow() {\n\t\tthis.hidden = false;\n\t\tthis.editor.barLayout.showBar(this);\n\t\tthis.refresh();\n\t}\n\n\tsetCurrentPanel(panel: ISearchBarPanel | null) {\n\t\tif (panel && panel.parentNode !== this.rootPanels) {\n\t\t\t//1ère déclaration, on ajoute.\n\t\t\tthis.rootPanels.append(panel);\n\t\t\tpanel.hidden = true;\n\t\t}\n\t\t//On masque et déconnecte tous les autres\n\t\tconst wedMgr = this.editor.wedMgr;\n\t\tfor (let ch = this.rootPanels.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (DOM.setHidden(ch, ch !== panel)) {\n\t\t\t\tif (ch !== panel) (ch as ISearchBarPanel).unconnectDoc();\n\t\t\t}\n\t\t}\n\t\t//On affiche et connecte ce panel\n\t\tif (panel) {\n\t\t\tif (wedMgr.docHolderAsync) panel.connectDoc(wedMgr);\n\t\t\telse this.editor.wedMgr.listeners.once(\"redrawAtEnd\", () => {panel.connectDoc(wedMgr)});\n\t\t}\n\t\tthis.selector.icon = panel ? panel.action.getIcon(this) : \"\";\n\t\tthis.currentPanel = panel;\n\t\tthis.dispatchSearchChange();\n\t}\n\n\tdispatchSearchChange() {\n\t\t// const coord = (this.editor.reg.env as IWedSearchCoordinatorPointer).wedSearchCoord;\n\t\t// if (coord) coord.setParams(this.currentPanel?.buildSearch() || null);\n\t}\n\n\tgetPanelFor(action: ISearchBarAction): ISearchBarPanel | null {\n\t\tfor (let ch = this.rootPanels.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif ((ch as ISearchBarPanel).action === action) return ch as ISearchBarPanel;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected onClose(this: Button) {\n\t\tDOMSH.findHost<WedSearchBar>(this).close();\n\t}\n\n\trefresh() {\n\t\tif (this.hidden) return;\n\t\tif (!this.currentPanel) {\n\t\t\tthis.searchActions?.[0].execute(this);\n\t\t} else {\n\t\t\tthis.currentPanel.action.execute(this); //refresh.\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin(\"wed-searchbar\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 1.5em;\n\t\tmin-width: 0;\n\t\tbackground-color: var(--bgcolor);\n\t\tfont-size: var(--label-size);\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\tdiv {\n\t\tflex: 1;\n\t}\n`);\ncustomElements.define(\"wed-searchbar\", WedSearchBar);\n\n/** Double bouton précédent / suivant à injecter dans les panels de recherche. */\nexport class WedSearchBarNextPrev extends HTMLElement {\n\n\tannotFilter: (a: ISkAnnot) => boolean = isSkSearchAnnot;\n\n\tconnectedCallback() {\n\t\tif (!this.shadowRoot) {\n\t\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\t\tconst reg = REG.findReg(this);\n\t\t\treg.installSkin(this.localName, sr);\n\t\t\tsr.append(\n\t\t\t\t<c-button icon=\"/@skin@/edit/wed/search/prev.svg\" title=\"Précédent\" onclick={this.onPrevious}/>,\n\t\t\t\t<c-button icon=\"/@skin@/edit/wed/search/next.svg\" title=\"Suivant\" onclick={this.onNext}/>\n\t\t\t);\n\t\t}\n\t}\n\n\tsetDisabled(disabled: boolean) {\n\t\tfor (const btn of this.shadowRoot.querySelectorAll<Button>(\"c-button\")) {\n\t\t\tbtn.disabled = disabled;\n\t\t}\n\t}\n\n\tprotected onNext(this: Button) {\n\t\tif (!this.disabled) DOMSH.findHost<WedSearchBarNextPrev>(this).gotoAnnot(1);\n\t}\n\n\tprotected onPrevious(this: Button) {\n\t\tif (!this.disabled) DOMSH.findHost<WedSearchBarNextPrev>(this).gotoAnnot(-1);\n\t}\n\n\t/** Retourne la dernière annot sélectionnée si la sel courante la pointe toujours. */\n\tgetLastSelectedAnnot(): ISkAnnot | null {\n\t\tif (this._lastAnnot) {\n\t\t\tconst wedMgr = findWedEditor(this).wedMgr;\n\t\t\tif (wedMgr.lastSkAnnots.indexOf(this._lastAnnot) >= 0) {\n\t\t\t\t//annot toujours active\n\t\t\t\tif (this.isSelMatchLastAnnot(wedMgr.getCurrentSel())) {\n\t\t\t\t\t//la sel courante pointe toujours cette annot\n\t\t\t\t\treturn this._lastAnnot;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync gotoAnnot(offset: number) {\n\t\tconst wedMgr = findWedEditor(this).wedMgr;\n\t\tconst annots = wedMgr.lastSkAnnots;\n\t\tconst countAnnots = annots.length;\n\t\tlet foundAnnot: ISkAnnot = null;\n\t\tlet cycled = false;\n\t\tif (annots && countAnnots > 0) {\n\t\t\tconst sel = wedMgr.getCurrentSel();\n\t\t\tlet startFrom = 0;\n\t\t\tif (sel) {\n\t\t\t\tlet startXa: IXAddr;\n\t\t\t\tif (this.isSelMatchLastAnnot(sel)) {\n\t\t\t\t\t//Même sel que le dernier focus d'annot.\n\t\t\t\t\t//On reprend le start de l'annot pas de la sel réelle qui peut être décalée.\n\t\t\t\t\tsel.start = this._lastAnnot.start;\n\t\t\t\t}\n\t\t\t\tstartXa = offset < 0 ? sel.start : !sel.startInText ? XA.append(sel.start, 0) : sel.end || sel.start;\n\t\t\t\tstartFrom = countAnnots;\n\t\t\t\tfor (let i = 0; i < countAnnots; i++) {\n\t\t\t\t\tconst annot = annots[i];\n\t\t\t\t\tif (this.annotFilter(annot) && !XA.isAfter(startXa, annot.start)) {\n\t\t\t\t\t\t//startXa <= anchor\n\t\t\t\t\t\t//si on remonte, on ne doit pas être un ancêtre.\n\t\t\t\t\t\tstartFrom = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = offset < 0 ? startFrom - 1 : startFrom; offset < 0 ? i >= 0 : i < countAnnots; i = i + offset) {\n\t\t\t\tconst a = annots[i];\n\t\t\t\tif (this.annotFilter(a)) {\n\t\t\t\t\tfoundAnnot = a;\n\t\t\t\t\tawait WEDLET.focusAnnot(wedMgr, foundAnnot);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!foundAnnot) {\n\t\t\t\tcycled = true;\n\t\t\t\tfor (let i = offset < 0 ? countAnnots - 1 : 0; offset < 0 ? i >= startFrom : i < startFrom; i = i + offset) {\n\t\t\t\t\tconst a = annots[i];\n\t\t\t\t\tif (this.annotFilter(a)) {\n\t\t\t\t\t\tfoundAnnot = a;\n\t\t\t\t\t\tawait WEDLET.focusAnnot(wedMgr, foundAnnot);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!foundAnnot) {\n\t\t\tthis._lastAnnotSelStart = null;\n\t\t\tthis._lastAnnot = null;\n\t\t\tPOPUP.showNotif(\"Aucune occurrence trouvée\", this, {autoHide: 500, noCloseBtn: true}, {posFrom: wedMgr.wedEditor.rootNode, fromX: \"middle\", targetX: \"middle\", fromY: \"middle\"});\n\t\t} else {\n\t\t\t//Mémoire du start de cette dernière annot car la sel réelle dans un phraseTag du texte pour une annot dans ses metas ne permet pas de\n\t\t\t//gérer la navigation correctement par simple ordonnacnement de la sel courante et du start de l'annot.\n\t\t\t//XXX algo imparfait car cette mémoire n'est pas ajustée avec les edits concurrents. a voir...\n\t\t\tthis._lastAnnotSelStart = wedMgr.getCurrentSel()?.start;\n\t\t\tthis._lastAnnot = foundAnnot;\n\t\t\tif (cycled) {\n\t\t\t\tif (offset > 0) {\n\t\t\t\t\tPOPUP.showNotif(\"Fin du contenu atteint, poursuite au début\", this, {autoHide: 900, noCloseBtn: true, classes: \"hover\"}, {\n\t\t\t\t\t\tposFrom: wedMgr.wedEditor.rootNode,\n\t\t\t\t\t\tfromX: \"middle\",\n\t\t\t\t\t\ttargetX: \"middle\",\n\t\t\t\t\t\tfromY: \"bottom\",\n\t\t\t\t\t\ttargetY: \"bottom\"\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tPOPUP.showNotif(\"Début du contenu atteint, poursuite par la fin\", this, {autoHide: 900, noCloseBtn: true, classes: \"hover\"}, {posFrom: wedMgr.wedEditor.rootNode, fromX: \"middle\", targetX: \"middle\", fromY: \"top\"});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _lastAnnotSelStart: IXAddr;\n\tprotected _lastAnnot: ISkAnnot;\n\n\tisSelMatchLastAnnot(currentSel: IXAddrRange): boolean {\n\t\t//FIXME this._lastAnnotSelStart devrait être ajusté avec les edits concurrents.\n\t\treturn this._lastAnnotSelStart && XA.isEquals(this._lastAnnotSelStart, currentSel.start)\n\t}\n}\n\nREG.reg.registerSkin(\"wed-searchbar-nextprev\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t}\n`);\ncustomElements.define(\"wed-searchbar-nextprev\", WedSearchBarNextPrev);\n\n\n/** Action responsable de l'affichage d'un des panels de la searchBar. */\ninterface ISearchBarAction extends IAction<WedSearchBar> {\n\tmaxResults: number\n}\n\n/**\n * Impl de base pour l'action de choix du panel de search.\n */\nexport abstract class SearchBarPanelAction extends Action<WedSearchBar> implements ISearchBarAction {\n\n\tmaxResults: number;\n\n\tisEnabled(ctx: WedSearchBar): boolean {\n\t\tif (ctx.currentPanel?.action === this) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\texecute(ctx: WedSearchBar, ev?: Event) {\n\t\tlet panel = ctx.getPanelFor(this);\n\t\tif (!panel) panel = this.buildPanel(ctx);\n\t\tif (ctx.initParams) panel.setSearch(ctx.initParams);\n\t\tctx.setCurrentPanel(panel);\n\t}\n\n\tabstract buildPanel(ctx: WedSearchBar, ev?: Event): ISearchBarPanel\n}\n\n/** Données pour initialiser un panneau de recherche. Les autres paramètres sont dépendants de chaque type de panneau de recherche. */\nexport interface JWedSearchBarParams {\n\t/** Id du ISearchBarAction cible */\n\tsearchId: string\n}\n\n\n/** Panel construit par ISearchBarAction et affecté à la searchBar via WedSearchBar.setCurrentPanel(). */\nexport interface ISearchBarPanel extends HTMLElement {\n\n\t/** Action à l'origine de la création de ce panel.*/\n\taction: ISearchBarAction\n\n\t/** Connecte l'éditeur à ce panneau de recherche. Injecte alors les objets recherchés. */\n\tconnectDoc(wedMgr: WedMgr): void\n\n\t/** Déconnecte le panneau de recherche du document.*/\n\tunconnectDoc(): void\n\n\t/** Modifie les paramètres de recherche. */\n\tsetSearch(params: JWedSearchBarParams): void\n\n\t/** Construit un objet */\n\tbuildSearch(): JWedSearchBarParams\n}\n\n\n/** Classe de base pour les panels de barre de recherche. */\nexport abstract class SearchPanelBase extends HTMLElement implements ISearchBarPanel {\n\taction: ISearchBarAction;\n\twedMgr: WedMgr;\n\tresult: HTMLElement;\n\tnav: WedSearchBarNextPrev;\n\tsearchBar?: HTMLElement;\n\treplaceBtn?: ButtonToggle;\n\treplaceBar?: HTMLElement;\n\treg: IReg<IUiEnv>;\n\n\tprotected _initPanel(action: ISearchBarAction, bar: WedSearchBar, withReplacePanel: boolean) {\n\t\tthis.action = action;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg = REG.findReg(bar);\n\t\tthis.reg.installSkin(\"wed-searchbar-base\", sr);\n\t\tthis.result = <span id=\"result\"/> as HTMLElement;\n\t\tthis.nav = new WedSearchBarNextPrev();\n\t\tif (withReplacePanel) {\n\t\t\tthis.classList.add(\"double\");\n\t\t\tthis.replaceBtn = <ButtonToggle icon=\"/@skin@/edit/wed/search/replace.svg\" title=\"Remplacer...\" onclick={this.toggleReplace}/> as ButtonToggle;\n\t\t\tthis.searchBar = <div id=\"search\"/>;\n\t\t\tsr.append(\n\t\t\t\t<div id=\"bars\">\n\t\t\t\t\t{this.searchBar}\n\t\t\t\t\t{this.replaceBar}\n\t\t\t\t</div>,\n\t\t\t\tthis.replaceBtn\n\t\t\t);\n\t\t\tthis._refreshOnReadOnlyChange = this.refreshOnReadOnlyChange.bind(this);\n\t\t} else {\n\t\t\tthis.classList.add(\"single\");\n\t\t}\n\t\tthis._asyncSkAnnots = this.asyncSkAnnots.bind(this);\n\t}\n\n\tconnectDoc(wedMgr: WedMgr): void {\n\t\tthis.wedMgr = wedMgr;\n\t\twedMgr.listeners.on(\"asyncSkAnnots\", this._asyncSkAnnots);\n\t\tif (this._refreshOnReadOnlyChange) {\n\t\t\twedMgr.listeners.on(\"readOnlyChangeAfter\", this._refreshOnReadOnlyChange);\n\t\t\tthis.refreshOnReadOnlyChange();\n\t\t}\n\t\tthis.execSearch();\n\t}\n\n\tunconnectDoc(): void {\n\t\tif (this.wedMgr) {\n\t\t\tthis.wedMgr.listeners.removeListener(\"asyncSkAnnots\", this._asyncSkAnnots);\n\t\t\tif (this._refreshOnReadOnlyChange) this.wedMgr.listeners.removeListener(\"readOnlyChangeAfter\", this._refreshOnReadOnlyChange);\n\t\t\tthis.wedMgr.docHolder.setSkSearch(null);\n\t\t\tthis.wedMgr = null;\n\t\t}\n\t}\n\n\tabstract setSearch(params: JWedSearchBarParams): void;\n\n\tbuildSearch(): JWedSearchBarParams {\n\t\treturn {searchId: this.action.getId()}\n\t}\n\n\tget replaceBarShown(): boolean {return this.replaceBtn?.toggleOn || false}\n\n\tshowReplaceBar(show: boolean) {\n\t\tif (show) {\n\t\t\tif (!this.replaceBar) {\n\t\t\t\tthis.replaceBar = <div id=\"replace\"/>;\n\t\t\t\tthis.searchBar.insertAdjacentElement(\"afterend\", this.replaceBar);\n\t\t\t\tthis.buildReplaceBar();\n\t\t\t}\n\t\t\tthis.replaceBar.hidden = false;\n\t\t\tthis.replaceBtn.toggleOn = true;\n\t\t} else {\n\t\t\tif (this.replaceBar) this.replaceBar.hidden = true;\n\t\t\tthis.replaceBtn.toggleOn = false;\n\t\t}\n\t}\n\n\ttoggleReplace(this: ButtonToggle) {\n\t\tif (this.disabled) return;\n\t\tconst me = DOMSH.findHost<SearchPanelBase>(this);\n\t\tme.showReplaceBar(!this.toggleOn);\n\t}\n\n\t/** A surcharger par les bar qui ont une fct de remplacement. */\n\tprotected buildReplaceBar() {}\n\n\tprotected lastCount: number | null = null;\n\n\tupdateCount(count: number | null) {\n\t\tthis.lastCount = count;\n\t\tswitch (count) {\n\t\tcase null:\n\t\t\tDOM.setTextContent(this.result, null);\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tDOM.setTextContent(this.result, \"➔ Aucune occurrence trouvée\");\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tDOM.setTextContent(this.result, \"➔ 1 occurrence trouvée\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tDOM.setTextContent(this.result, count > this.action.maxResults ? `➔ Plus de ${this.action.maxResults} occurrences trouvées` : `➔ ${count} occurrences trouvées`);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tabstract execSearch(): void;\n\n\t_asyncSkAnnots: (wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void | ((wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void);\n\n\tasyncSkAnnots(wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline): void | ((wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void) {\n\t\tlet c = 0;\n\t\tfor (const a of annots) if (isSkSearchAnnot(a)) c++;\n\t\tif (this.lastCount > this.action.maxResults && c < this.action.maxResults) {\n\t\t\t//On est peut-etre repassé sous la limite max, il faut relancer une recherche exhaustive.\n\t\t\tthis.updateCount(c);\n\t\t\tthis.execSearch();\n\t\t} else {\n\t\t\tthis.updateCount(c);\n\t\t}\n\t}\n\n\t_refreshOnReadOnlyChange: () => void;\n\n\trefreshOnReadOnlyChange() {\n\t\tif (this.wedMgr.readOnly) {\n\t\t\tthis.replaceBtn.disabled = true;\n\t\t\tthis.showReplaceBar(false);\n\t\t} else {\n\t\t\tthis.replaceBtn.disabled = false;\n\t\t}\n\t}\n\n}\n\n\nREG.reg.registerSkin(\"wed-searchbar-base\", 1, /* language=CSS */ `\n\t:host(.single),\n\t#search,\n\t#replace {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tpadding: 2px;\n\t\talign-items: center;\n\t}\n\n\t:host(.double) {\n\t\tdisplay: flex;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\t#bars {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t#replace {\n\t\tborder-top: 1px solid var(--border-color);\n\t}\n\n\tinput {\n\t\tbackground-color: var(--form-bgcolor);\n\t\tcolor: var(--form-color);\n\t\tborder: 1px solid var(--border-color);\n\t}\n\n\tinput:focus {\n\t\toutline: var(--focus-outline);\n\t}\n\n\tlabel {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tuser-select: none;\n\t\tmargin-inline-start: .5em;\n\t}\n\n\t.options {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\talign-items: center;\n\t}\n\n\t#result {\n\t\tmargin: 0 .5em;\n\t\tcolor: var(--alt1-color);\n\t\tflex: 1 0 auto;\n\t\ttext-align: center;\n\t}\n\n\tc-button.border {\n\t\tborder: 1px solid var(--border-color);\n\t\tborder-radius: 3px;\n\t\tmargin-inline: .3em;\n\t}\n`);\n\n\n/**\n *\n */\nexport class TextSearchAction extends SearchBarPanelAction {\n\n\tsearchInAtts = false;\n\n\tconstructor(id?: string, maxResults?: number) {\n\t\tsuper(id || 'text');\n\t\tthis.maxResults = maxResults || 300;\n\t\tthis._icon = \"/@skin@/edit/wed/search/textSearch.svg\";\n\t\tthis._label = \"Chercher dans le texte\";\n\t}\n\n\tsetSearchInAtts(v: boolean): this {\n\t\tthis.searchInAtts = v;\n\t\treturn this;\n\t}\n\n\tbuildPanel(ctx: WedSearchBar, ev?: Event): ISearchBarPanel {\n\t\treturn new TextSearchPanel().initPanel(this, ctx);\n\t}\n}\n\nREG.reg.addToList(\"wed.searchBar.actions\", \"text\", 1, new TextSearchAction());\n\nexport interface JTextWedSearchBarParams extends JWedSearchBarParams {\n\ttext?: string\n\tmatchCase?: boolean\n\twholeWord?: boolean\n\trepBy?: string\n}\n\n/** */\nclass TextSearchPanel extends SearchPanelBase {\n\taction: TextSearchAction;\n\n\tinput: HTMLInputElement;\n\tmatchCase: HTMLInputElement;\n\twholeWord: HTMLInputElement;\n\n\tinputRepl: HTMLInputElement;\n\n\tinitPanel(action: TextSearchAction, bar: WedSearchBar): this {\n\t\tthis._initPanel(action, bar, true);\n\t\tthis.input = <input type=\"search\" oninput={this.onChange}/> as HTMLInputElement;\n\t\tthis.matchCase = <input type=\"checkbox\" onchange={this.onChange}/> as HTMLInputElement;\n\t\tthis.wholeWord = <input type=\"checkbox\" onchange={this.onChange}/> as HTMLInputElement;\n\t\tthis.searchBar.append(\n\t\t\tthis.input,\n\t\t\tthis.nav,\n\t\t\t<div class=\"options\">\n\t\t\t\t<label>{this.matchCase}Respecter la casse</label>\n\t\t\t\t<label>{this.wholeWord}Mot entier</label>\n\t\t\t</div>,\n\t\t\tthis.result\n\t\t);\n\t\treturn this;\n\t}\n\n\tsetSearch(params: JTextWedSearchBarParams): void {\n\t\tif (params.text != null) this.input.value = params.text;\n\t\tif (typeof params.matchCase === \"boolean\") this.matchCase.checked = params.matchCase;\n\t\tif (typeof params.wholeWord === \"boolean\") this.wholeWord.checked = params.wholeWord;\n\t\tthis.execSearch();\n\t\tif (params.repBy !== undefined) {\n\t\t\tthis.showReplaceBar(true);\n\t\t\tthis.inputRepl.value = params.repBy;\n\t\t}\n\t}\n\n\tbuildSearch(): JTextWedSearchBarParams {\n\t\treturn {\n\t\t\tsearchId: this.action.getId(),\n\t\t\ttext: this.input.value,\n\t\t\tmatchCase: this.matchCase.checked,\n\t\t\twholeWord: this.wholeWord.checked,\n\t\t\trepBy: this.replaceBarShown && this.inputRepl ? this.inputRepl.value : undefined\n\t\t};\n\t}\n\n\tprotected onChange(this: HTMLInputElement) {\n\t\tconst me = DOMSH.findHost<TextSearchPanel>(this);\n\t\tme.execSearch();\n\t\tDOMSH.findHost<WedSearchBar>(me).dispatchSearchChange();\n\t}\n\n\tprotected buildReplaceBar() {\n\t\tthis.inputRepl = <input type=\"search\"/> as HTMLInputElement;\n\t\tthis.replaceBar.append(\n\t\t\tthis.inputRepl,\n\t\t\t<Button class=\"border\" label=\"Remplacer\" onclick={this.onReplace}/>,\n\t\t\t<Button class=\"border\" label=\"Tout remplacer\" onclick={this.onReplaceAll}/>\n\t\t);\n\t}\n\n\tprotected onReplace(this: HTMLInputElement) {\n\t\tconst me = DOMSH.findHost<TextSearchPanel>(this);\n\t\tconst annot = me.nav.getLastSelectedAnnot();\n\t\tif (annot instanceof SkSearchCommentAnnot) {\n\t\t\tme.warnNoReplaceInCmt();\n\t\t\treturn;\n\t\t}\n\t\tif (annot) {\n\t\t\tconst wedMgr = me.wedMgr;\n\t\t\tconst start = XA.freeze(annot.start);\n\t\t\tconst len = annot.len;\n\t\t\tconst startWedlet = WEDLET.findWedlet(wedMgr.rootWedlet, start, {lastAncestorIfNone: true});\n\t\t\tif (startWedlet && WEDLET.resolveEditMode(startWedlet) === EWedletEditMode.write) {\n\t\t\t\tconst batch = wedMgr.docHolder.newBatch(me.wedMgr.getCurrentSel());\n\t\t\t\tme.replaceText(batch, start, len, me.inputRepl.value);\n\t\t\t\tbatch.setSelAfterSeq(start, me.inputRepl.value.length);\n\t\t\t\tbatch.doBatch();\n\t\t\t} else {\n\t\t\t\tPOPUP.showNotifForbidden(\"Contenu non modifiable\", this, null, {viewPortX: \"middle\", viewPortY: \"1/3\"});\n\t\t\t}\n\t\t}\n\t\tme.nav.gotoAnnot(1);\n\t}\n\n\tprotected onReplaceAll(this: HTMLInputElement) {\n\t\tconst me = DOMSH.findHost<TextSearchPanel>(this);\n\t\tconst wedMgr = me.wedMgr;\n\t\tconst batch = wedMgr.docHolder.newBatch(wedMgr.getCurrentSel());\n\t\tconst rep = me.inputRepl.value;\n\t\tconst annots = wedMgr.lastSkAnnots;\n\t\tlet lastAn: ISkSearchAnnot;\n\t\tlet inComment = false;\n\t\tfor (let i = annots.length - 1; i >= 0; i--) {\n\t\t\tconst an: ISkAnnot = annots[i];\n\t\t\tif (isSkSearchAnnot(an)) {\n\t\t\t\tif (an instanceof SkSearchCommentAnnot) {\n\t\t\t\t\tinComment = true;\n\t\t\t\t} else {\n\t\t\t\t\tconst start = XA.freeze(an.start);\n\t\t\t\t\tconst startWedlet = WEDLET.findWedlet(wedMgr.rootWedlet, start, {lastAncestorIfNone: true});\n\t\t\t\t\t//FIXME perms configuré sur wedlets, mais wedlets peut être non construit, passer perms sur schéma...\n\t\t\t\t\tif (startWedlet && WEDLET.resolveEditMode(startWedlet) === EWedletEditMode.write) me.replaceText(batch, start, an.len, rep);\n\t\t\t\t\tif (!lastAn) lastAn = an;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (lastAn) {\n\t\t\tbatch.setSelAfterSeq(lastAn.start, rep.length);\n\t\t\tbatch.doBatch();\n\t\t} else {\n\t\t\tme.nav.gotoAnnot(1);\n\t\t}\n\t\tif (inComment) me.warnNoReplaceInCmt();\n\t}\n\n\tprotected warnNoReplaceInCmt() {\n\t\tPOPUP.showNotifForbidden(\"Éditez les commentaires pour effectuer les remplacements\", this, null,\n\t\t\t{posFrom: this.wedMgr.wedEditor, fromX: \"middle\", targetX: \"middle\", fromY: \"middle\", targetY: \"middle\"});\n\t}\n\n\tprotected replaceText(batch: IDocBatch & XmlBatch, start: IXAddr, len: number, rep: string) {\n\t\tbatch.deleteSequence(start, len);\n\t\tif (rep) batch.insertText(start, rep);\n\t}\n\n\n\texecSearch() {\n\t\tif (!this.wedMgr) return;\n\t\tconst v = this.rawValue();\n\t\tif (!v) {\n\t\t\tthis.wedMgr.docHolder.setSkSearch(null);\n\t\t\tthis.updateCount(null);\n\t\t} else {\n\t\t\tif (this.wedMgr.docHolder.setSkSearch(this.newSkTextSearch(v)).length === 0) {\n\t\t\t\tthis.updateCount(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected newSkTextSearch(value: string): ISchemaSearch {\n\t\tif (this.action.searchInAtts) {\n\t\t\treturn new SkTextSearchInAtts(this.buildRegexp(value), this.action.maxResults);\n\t\t} else {\n\t\t\treturn new SkTextSearch(this.buildRegexp(value), this.action.maxResults);\n\t\t}\n\t}\n\n\t/** pour surcharge custom */\n\tprotected rawValue(): string {\n\t\treturn this.input.value; //.trim();\n\t}\n\n\t/** pour surcharge custom */\n\tprotected buildRegexp(rawValue: string): RegExp {\n\t\tlet r = LANG.escape4RegexpFuzzy(rawValue);\n\t\t//NOTE : search \"wholeWord\" à mettre en cohérence avec {@link com.scenari.m.bdp.module.fulltext.ModuleFullTextXmlTransform#makePattern}\n\t\tif (this.wholeWord.checked) r = '(?<=^|\\\\W)' + r + '(?=$|\\\\W)'; // \\b échoue en unicode https://stackoverflow.com/questions/10590098/javascript-regexp-word-boundaries-unicode-characters\n\t\tconst flags = this.matchCase.checked ? \"g\" : \"gi\";\n\t\treturn new RegExp(r, flags);\n\t}\n\n\tconnectDoc(wedMgr: WedMgr): void {\n\t\tsuper.connectDoc(wedMgr);\n\t\tthis.input.focus();\n\t}\n\n\tasyncSkAnnots(wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline): void | ((wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void) {\n\t\tif (!this.rawValue()) return;\n\t\tsuper.asyncSkAnnots(wedMgr, annots, deadline);\n\t}\n\n}\n\ncustomElements.define(\"wed-searchbar-text\", TextSearchPanel);\n\n\n/** Panel générique sans option dédiée. */\nclass NoOptionsSearchPanel extends SearchPanelBase {\n\n\tskSearchMk: () => ISchemaSearch;\n\n\tinitPanel(action: ISearchBarAction, bar: WedSearchBar): this {\n\t\tthis._initPanel(action, bar, false);\n\t\tthis.shadowRoot.append(\n\t\t\t<span>{action.getLabel(bar)}</span>,\n\t\t\tthis.nav,\n\t\t\tthis.result\n\t\t);\n\t\treturn this;\n\t}\n\n\tinitSearch(skSearchMk: () => ISchemaSearch): this {\n\t\tthis.skSearchMk = skSearchMk\n\t\treturn this;\n\t}\n\n\tsetSearch(params: JWedSearchBarParams): void {\n\t\tthis.execSearch();\n\t}\n\n\texecSearch() {\n\t\tif (!this.wedMgr) return;\n\t\tif (this.wedMgr.docHolder.setSkSearch(this.skSearchMk()).length === 0) {\n\t\t\tthis.updateCount(0);\n\t\t}\n\t}\n}\n\ncustomElements.define(\"wed-searchbar-nooptions\", NoOptionsSearchPanel);\n\n/**\n * Parcours Xpath prédéfini sur les éléments xml du document\n */\nexport class FixedXPathSearchAction extends SearchBarPanelAction {\n\n\tconstructor(id: string, public xpath: XPathExpression, public annotLabel: string, maxResults?: number) {\n\t\tsuper(id);\n\t\tthis.maxResults = maxResults || 300;\n\t\t//this._icon = \"/@skin@/edit/wed/search/textSearch.svg\"; todo textXml.svg\n\t}\n\n\tbuildPanel(ctx: WedSearchBar, ev?: Event): ISearchBarPanel {\n\t\treturn new NoOptionsSearchPanel().initPanel(this, ctx).initSearch(() => new SkXPathSearch(this.xpath, this.annotLabel, this.maxResults));\n\t}\n}\n\n/**\n * Parcours Regexp prédéfini sur les textes du document\n */\nexport class FixedCssSelectorSearchAction extends SearchBarPanelAction {\n\n\tconstructor(id: string, public selector: string, public annotLabel: string, maxResults?: number) {\n\t\tsuper(id);\n\t\tthis.maxResults = maxResults || 300;\n\t\t//this._icon = \"/@skin@/edit/wed/search/textSearch.svg\";\n\t}\n\n\tbuildPanel(ctx: WedSearchBar, ev?: Event): ISearchBarPanel {\n\t\treturn new NoOptionsSearchPanel().initPanel(this, ctx).initSearch(() => new SkCssSelectorSearch(this.selector, this.annotLabel, this.maxResults));\n\t}\n}\n\n/**\n * Parcours Regexp prédéfini sur les textes du document\n */\nexport class FixedTextSearchAction extends SearchBarPanelAction {\n\n\tconstructor(id: string, public pattern: RegExp, maxResults?: number) {\n\t\tsuper(id);\n\t\tthis.maxResults = maxResults || 300;\n\t\t//this._icon = \"/@skin@/edit/wed/search/textSearch.svg\";\n\t}\n\n\tbuildPanel(ctx: WedSearchBar, ev?: Event): ISearchBarPanel {\n\t\treturn new NoOptionsSearchPanel().initPanel(this, ctx).initSearch(() => new SkTextSearch(this.pattern, this.maxResults));\n\t}\n}\n\n//\n// REG.reg.addToList(\"wed.searchBar.actions\", \"repriseError\", REG.LEVELAUTH_MODEL,\n// \tnew FixedXPathSearchAction(\n// \t\t\"repriseError\",\n// \t\tdocument.createExpression(\"//paon:text//sc:para/sc:inlineStyle[@role='error']\", (p) => p == \"paon\" ? \"editadapt.fr:paon\" : p == \"sc\" ? \"http://www.utc.fr/ics/scenari/v3/core\" : null),\n// \t\t\"Erreur à la reprise\"\n// \t).setLabel(\"Parcourir les erreurs à la reprise\").setIcon(null)\n//  , 10\n// );\n//\n// REG.r.addToList(\"wed.searchBar.actions\", \"bridgehead\", 101,\n// \tnew FixedCssSelectorSearchAction(\n// \t\t\"bridgehead\",\n// \t\t\"flow > bridgehead\",\n// \t\t\"Titre flottant\"\n// \t).setLabel(\"Parcourir les titres flottants\").setIcon(null) //todo icon\n// \t, 10\n// );\n//\n// REG.reg.addToList(\"wed.searchBar.actions\", \"roman\", REG.LEVELAUTH_MODEL,\n// \tnew FixedTextSearchAction(\n// \t\t\"roman\",\n// \t\t/(?<=^|\\W)[IVXLCDM]+(?=$|\\W)/g\n// \t).setLabel(\"Parcourir les chiffres romans\")\n//  , 10\n// );\n\n/**\n * Objet à instancier et à associer à un IReg.env\n * pour coordonner la recherche par défaut à afficher lors\n * de l'affichage d'un éditeur.\n */\nexport class WedSearchCoordinator {\n\n\tprotected params?: JWedSearchBarParams;\n\n\t/** Limite de validité de ce params (cas où une ouverture planifiée a échouée). */\n\tprotected deadline: number;\n\n\tgetParams(): JWedSearchBarParams | null {\n\t\tlet p = this.params;\n\t\tif (p) {\n\t\t\tif (this.deadline > 0 && Date.now() > this.deadline) {\n\t\t\t\tp = null;\n\t\t\t\tthis.deadline = 0;\n\t\t\t}\n\t\t\tthis.params = null;\n\t\t}\n\t\treturn p;\n\t}\n\n\tsetParamsOnce(params: JWedSearchBarParams) {\n\t\tthis.params = params;\n\t\tthis.deadline = Date.now() + 3000;\n\t}\n}\n\nexport interface IWedSearchCoordinatorPointer {\n\twedSearchCoord?: WedSearchCoordinator\n}"]}