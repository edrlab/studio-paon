{"version":3,"sources":["/@back@/wsp/widgets/wed/itemEditorExt.tsx"],"names":["REG","DiffBarPanelAction","DrfRefDiffAction","[object Object]","id","super","this","_label","ctx","editor","reg","env","wsp","infoWsp","props","drfRefWsp","isVisible","isEnabled","drfState","longDesc","indexOf","ev","import","DrfRefDiffPanel","initPanel","addToList","DrvDiffAction","specialRef","label","drvMasterWsp","drvState","DrvDiffPanel","HistoItemDiffAction","hasFeature","HistoItemDiffPanel","OtherItemDiffAction","OtherItemDiffPanel"],"mappings":"OAKQA,QAAI;OACJC,uBAAkE;OAUpE,MAAOC,yBAAyBD,mBAErCE,YAAYC,IACXC,MAAMD,IAAM;AACZE,KAAKC,OAAS,cAGfJ,UAAUK,KACT,IAAMA,IAAIC,OAAOC,IAAIC,IAAgBC,IAAIC,QAAQC,MAAMC,UAAW,OAAO;AACzE,OAAOV,MAAMW,UAAUR,KAGxBL,UAAUK,KACT,IAAKH,MAAMY,UAAUT,KAAM,OAAO;AAClC,MAAMU,SAAYV,IAAIC,OAAOC,IAAIC,IAAmBQ,SAASD;AAC7D,OAAOA,UAAYA,SAASE,QAAQ,WAAa,EAGlDjB,iBAAiBK,IAAkBa,IAClC,OAAO,WAAWC,OAAM,0CAAwCC,kBAAkBC,UAAUlB,KAAME,MAMpGR,IAAIU,IAAIe,UAAU,sBAAuB,SAAU,EAAG,IAAIvB;OAMpD,MAAOwB,sBAAsBzB,mBAIlCE,YAAYC,GAAYuB,WAAoBC,OAC3CvB,MAAMD;AACNE,KAAKqB,WAAaA;AAClBrB,KAAKC,OAASqB,MAGfzB,UAAUK,KACT,IAAMA,IAAIC,OAAOC,IAAIC,IAAgBC,IAAIC,QAAQC,MAAMe,aAAc,OAAO;AAC5E,OAAOxB,MAAMW,UAAUR,KAGxBL,UAAUK,KACT,IAAKH,MAAMY,UAAUT,KAAM,OAAO;AAClC,MAAMsB,SAAYtB,IAAIC,OAAOC,IAAIC,IAAmBQ,SAASW;AAE7D,OAAQxB,KAAKqB,YACb,IAAK,sBACJ,OAAOG,SAASV,QAAQ,WAAa;AACtC,IAAK,mBACJ,OAAOU,SAASV,QAAQ,UAAY,GAAKU,SAASV,QAAQ,gBAAkB;AAC7E,IAAK,2BACJ,OAAOU,SAASV,QAAQ,UAAY,GAAKU,SAASV,QAAQ,WAAa,GAIzEjB,iBAAiBK,IAAkBa,IAClC,OAAO,WAAWC,OAAM,0CAAwCS,eAAeP,UAAUlB,KAAME,MAMjGR,IAAIU,IAAIe,UAAU,sBAAuB,aAAc,EAAG,IAAIC,cAAc,aAAc,sBAAuB;AACjH1B,IAAIU,IAAIe,UAAU,sBAAuB,UAAW,EAAG,IAAIC,cAAc,UAAW,mBAAoB;AACxG1B,IAAIU,IAAIe,UAAU,sBAAuB,iBAAkB,EAAG,IAAIC,cAAc,iBAAkB,2BAA4B;OAKxH,MAAOM,4BAA4B/B,mBAExCE,YAAYC,IACXC,MAAMD,IAAM;AAEZE,KAAKC,OAAS,wBAGfJ,UAAUK,KACT,IAAMA,IAAIC,OAAOC,IAAIC,IAAgBC,IAAIqB,WAAW,WAAY,OAAO;AACvE,OAAO5B,MAAMW,UAAUR,KAGxBL,iBAAiBK,IAAkBa,IAClC,OAAO,WAAWC,OAAM,0CAAwCY,qBAAqBV,UAAUlB,KAAME,MAQvGR,IAAIU,IAAIe,UAAU,sBAAuB,YAAa,EAAG,IAAIO;OAMvD,MAAOG,4BAA4BlC,mBAExCE,YAAYC,IACXC,MAAMD,IAAM;AAEZE,KAAKC,OAAS,eAGfJ,iBAAiBK,IAAkBa,IAClC,OAAO,WAAWC,OAAM,0CAAwCc,qBAAqBZ,UAAUlB,KAAME,MASvGR,IAAIU,IAAIe,UAAU,sBAAuB,YAAa,EAAG,IAAIU","sourcesContent":["/**\n * Extension à l'editor :\n * - fournisseur de diff (drf, drv, histo, otherItem)\n */\n\nimport {REG} from \"lib/commons/registry\";\nimport {DiffBarPanelAction, IDiffBarPanel, IWedDiffBar, JWedDiffBarParams} from \"back/edit/wed/features/diffBar\";\nimport {srcRef} from \"lib/wsp/src\";\nimport {EXmlDiffMode} from \"lib/edit/schema/diff\";\nimport {IWspEnv} from \"lib/wsp/wsp\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\n\n\n/**\n * Atelier draft : item dans l'atelier de ref.\n */\nexport class DrfRefDiffAction extends DiffBarPanelAction {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || 'drfRef');\n\t\tthis._label = \"Référence\";\n\t}\n\n\tisVisible(ctx: IWedDiffBar): boolean {\n\t\tif (!(ctx.editor.reg.env as IWspEnv).wsp.infoWsp.props.drfRefWsp) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tisEnabled(ctx: IWedDiffBar): boolean {\n\t\tif (!super.isEnabled(ctx)) return false;\n\t\tconst drfState = (ctx.editor.reg.env as IItemUiEnv).longDesc.drfState;\n\t\treturn drfState && drfState.indexOf(\"created\") < 0;\n\t}\n\n\tasync buildPanel(ctx: IWedDiffBar, ev?: Event): Promise<IDiffBarPanel> {\n\t\treturn new (await import(\"back/wsp/widgets/wed/wspDiffBar.js\")).DrfRefDiffPanel().initPanel(this, ctx);\n\t}\n}\n\nexport interface JDrfRefWedDiffBarParams extends JWedDiffBarParams {}\n\nREG.reg.addToList(\"wed.diffBar.actions\", \"drfRef\", 1, new DrfRefDiffAction());\n\n\n/**\n * Atelier draft : item dans l'atelier de ref.\n */\nexport class DrvDiffAction extends DiffBarPanelAction {\n\n\tspecialRef: string\n\n\tconstructor(id: string, specialRef: string, label: string) {\n\t\tsuper(id);\n\t\tthis.specialRef = specialRef;\n\t\tthis._label = label;\n\t}\n\n\tisVisible(ctx: IWedDiffBar): boolean {\n\t\tif (!(ctx.editor.reg.env as IWspEnv).wsp.infoWsp.props.drvMasterWsp) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tisEnabled(ctx: IWedDiffBar): boolean {\n\t\tif (!super.isEnabled(ctx)) return false;\n\t\tconst drvState = (ctx.editor.reg.env as IItemUiEnv).longDesc.drvState;\n\t\t//console.log(\"drvState:::\", drvState);\n\t\tswitch (this.specialRef) {\n\t\tcase \"special:drv:default\":\n\t\t\treturn drvState.indexOf(\"created\") < 0;\n\t\tcase \"special:drv:done\":\n\t\t\treturn drvState.indexOf(\"Dirty\") >= 0 && drvState.indexOf(\"notOverriden\") < 0;\n\t\tcase \"special:drv:default:done\":\n\t\t\treturn drvState.indexOf(\"Dirty\") >= 0 && drvState.indexOf(\"created\") < 0;\n\t\t}\n\t}\n\n\tasync buildPanel(ctx: IWedDiffBar, ev?: Event): Promise<IDiffBarPanel> {\n\t\treturn new (await import(\"back/wsp/widgets/wed/wspDiffBar.js\")).DrvDiffPanel().initPanel(this, ctx);\n\t}\n}\n\nexport interface JDrvWedDiffBarParams extends JWedDiffBarParams {}\n\nREG.reg.addToList(\"wed.diffBar.actions\", \"drvDefault\", 1, new DrvDiffAction(\"drvDefault\", \"special:drv:default\", \"Contenu d'origine (avant surcharge)\"));\nREG.reg.addToList(\"wed.diffBar.actions\", \"drvDone\", 1, new DrvDiffAction(\"drvDone\", \"special:drv:done\", \"Précédent état achevé\"));\nREG.reg.addToList(\"wed.diffBar.actions\", \"drvDefaultDone\", 1, new DrvDiffAction(\"drvDefaultDone\", \"special:drv:default:done\", \"Contenu d'origine du précédent état 'achevé'\"));\n\n/**\n * Diff issu de l'historique de l'item.\n */\nexport class HistoItemDiffAction extends DiffBarPanelAction {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || 'histoItem');\n\t\t//this._icon = \"/@skin@/edit/wed/diff/otherItem.svg\";\n\t\tthis._label = \"Entrée d'historique\";\n\t}\n\n\tisVisible(ctx: IWedDiffBar): boolean {\n\t\tif (!(ctx.editor.reg.env as IWspEnv).wsp.hasFeature(\"history\")) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync buildPanel(ctx: IWedDiffBar, ev?: Event): Promise<IDiffBarPanel> {\n\t\treturn new (await import(\"back/wsp/widgets/wed/wspDiffBar.js\")).HistoItemDiffPanel().initPanel(this, ctx);\n\t}\n}\n\nexport interface JHistoItemWedDiffBarParams extends JWedDiffBarParams {\n\tsrcDiff: srcRef;\n}\n\nREG.reg.addToList(\"wed.diffBar.actions\", \"histoItem\", 1, new HistoItemDiffAction());\n\n\n/**\n * Diff avec un autre item.\n */\nexport class OtherItemDiffAction extends DiffBarPanelAction {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || 'otherItem');\n\t\t//this._icon = \"/@skin@/edit/wed/diff/otherItem.svg\";\n\t\tthis._label = \"Autre item\";\n\t}\n\n\tasync buildPanel(ctx: IWedDiffBar, ev?: Event): Promise<IDiffBarPanel> {\n\t\treturn new (await import(\"back/wsp/widgets/wed/wspDiffBar.js\")).OtherItemDiffPanel().initPanel(this, ctx);\n\t}\n}\n\nexport interface JOtherItemWedDiffBarParams extends JWedDiffBarParams {\n\tsrcDiff: srcRef;\n\tmode: EXmlDiffMode;\n}\n\nREG.reg.addToList(\"wed.diffBar.actions\", \"otherItem\", 1, new OtherItemDiffAction());\n"]}