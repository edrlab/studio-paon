{"version":3,"sources":["/@back@/styler/widgets/stylerSrcDrawer.tsx"],"names":["SrcPointerWriteAction","POPUP","SkinClass","STYLER","SRC","ERROR","ITEM","StylerSrcImportSkin","[object Object]","super","this","_label","_description","_icon","_group","ctx","_a","getAttribute","includes","reg","env","longDesc","itAttr_skClassStl","isVisible","ev","SkinSelectorForSkinClassStl","import","skinFromClassSelector","initialize","skinClassStl","buttonLabel","getSkinClassStl","wsp","skinObj","showMenuFromEvent","titleBar","barLabel","label","name","onNextClose","itTypeSgnMath","isSkinClassOdt","skinClass","isZip","data","result","resp","fetch","resUrl","method","blob","e","skinName","show","ItemCreator","ct","setDefaultConfigFromReg","body","itemTypesTree","itemTypeReducer","acc","cur","getSgn","match","push","spaceUri","shortDescs","length","extractSpaceUri","srcUri","nameBuilder","filterPartUri","class","code","showDialog","emitter","importScar","File","focus","setSrcRef","srcRefSub","SINGLETON"],"mappings":"OAGoBA,0BAAsB;OAClCC,UAAM;OACNC,UAAWC,WAAO;OAENC,QAAI;OAChBC,UAAM;OACNC,SAAK;OAMP,MAAOC,4BAA4BP,sBAMxCQ,cACCC,MAAM;AACNC,KAAKC,OAAS;AACdD,KAAKE,aAAe;AACpBF,KAAKG,MAAQ;AACbH,KAAKI,OAAS,OAGfN,UAAUO;AACT,MAAKC,GAAAD,IAAIE,aAAa,sBAAkB,MAAAD,UAAA,OAAA,EAAAA,GAAEE,SAAS,iBAAmBH,IAAII,IAAIC,IAAmBC,WAAeN,IAAII,IAAIC,IAAmBC,SAAiBC,kBAAmB,OAAO;AACtL,OAAOb,MAAMc,UAAUR,KAGxBP,cAAcO,IAAiBS,IAC9B,MAAMC,4BAACA,mCAAqCC,OAAM;AAClD,MAAMC,uBAAwB,IAAIF,6BAA8BG,WAAW,CAC1EC,aAAgBd,IAAII,IAAIC,IAAmBC,SAAiBC,kBAC5DH,IAAKJ,IAAII,IACTW,YAAa;AAEd,MAAMD,aAAe1B,OAAO4B,gBAAgBhB,IAAII,IAAIC,IAAIY,IAAOjB,IAAII,IAAIC,IAAmBC,SAAiBC;AAC3G,MAAMW,cAAgBhC,MAAMiC,kBAA6CP,sBAAuBH,IAAMT,IAAKA,IAAK,CAC/GoB,SAAU,CAACC,SAAU,CAACC,MAAOR,aAAaS,SACxCC;AACH,GAAIN,QAAS,CAGZ,MAAMO,cAAgBtC,UAAUuC,eAAeZ,aAAaa,UAAU3B,IAAII,IAAIC,IAAIY,MAAQ,kBAAoB;AAC9G,MAAMW,MAAiBzC,UAAUuC,eAAeZ,aAAaa,UAAU3B,IAAII,IAAIC,IAAIY,MAAQ,MAAQ;AAEnG,IAAIY;AACJ,IAAIC;AACJ,IACC,MAAMC,WAAaC,MAAMd,QAAQe,OAAQ,CACxCC,OAAQ;AAGTL,WAAaE,KAAKI,OACjB,MAAOC,GACR,MAAMC,SAAWnB,QAAQK;MACnBjC,MAAMgD,KAAK,iDAAiDD,aAAcD;AAChF,OAED,GAAIP,KAAM,CACT,MAAMU,YAACA,mBAAqB5B,OAAM;AAClC,MAAM6B,IAAK,IAAID,aAAc1B,WAAW0B,YAAYE,wBAAwBzC,IAAII,IAAK,CACpFsC,KAAMd,MAAQ,KAAOC,KACrBc,cAAe,CACdC,gBAAiB,CAACC,IAAiBC,OAClC,GAAIA,IAAIC,SAASC,MAAMvB,eAAgBoB,IAAII,KAAKH;AAChD,OAAOD,MAGTK,SAAUlD,IAAImD,WAAWC,OAAS,EAAI7D,KAAK8D,gBAAgBrD,IAAImD,WAAW,GAAGG,QAAU,GACvFC,YAAa,IAAclE,IAAImE,cAAc1C,aAAa2C,MAAQ,IAAMvC,QAAQwC;AAEjF5B,aAAe5C,MAAMyE,WAAuBnB,GAAIxC,IAAI4D,QAAS,CAACxC,SAAU,CAACC,SAAU,CAACC,MAAO,2CAA2CE,kBAChI,CACN,MAAMa,SAAWnB,QAAQK;MACnBjC,MAAMgD,KAAK,iDAAiDD,cAEnE,GAAIP,OAAQ,CACX,GAAIF,YAAarC,KAAKsE,WAAW7D,IAAII,IAAIC,IAAIY,IAAKjB,IAAK8B,OAAOwB,OAAQ,IAAIQ,KAAK,CAACjC,MAAO,UAAW;AAClG7B,IAAI+D;AACJ/D,IAAIgE,UAAUzE,KAAK0E,UAAUnC,QAASA,WApElCtC,oBAAA0E,UAAY,IAAI1E","sourcesContent":["import {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {ISearchCrit} from \"lib/wsp/search\";\nimport {SrcPointer, SrcPointerWriteAction} from \"back/wsp/widgets/srcDrawer\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {SkinClass, STYLER} from \"lib/styler/styler\";\nimport {OSkinSelectorEntry} from \"dialogs/skinSelector\";\nimport {JSrcFields, SRC} from \"lib/wsp/src\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {ItemType} from \"lib/wsp/wspMetaUi\";\n\n/**\n * Import d'un skin existant dans le contexte du reg du WSP\n */\nexport class StylerSrcImportSkin extends SrcPointerWriteAction {\n\n\tstatic SINGLETON = new StylerSrcImportSkin();\n\n\tcustomCrit?: ISearchCrit;\n\n\tconstructor() {\n\t\tsuper(\"stylerImportSkin\");\n\t\tthis._label = \"Importer un habillage graphique...\";\n\t\tthis._description = \"Importer un habillage graphique pr√©sent dans ce contexte de travail\";\n\t\tthis._icon = \"/@skin@/styler/actions/importSkin.svg\";\n\t\tthis._group = 'edit';\n\t}\n\n\tisVisible(ctx: SrcPointer): boolean {\n\t\tif (!ctx.getAttribute(\"data-styler-act\")?.includes(\"importSkin\") || !(ctx.reg.env as IItemUiEnv).longDesc || !((ctx.reg.env as IItemUiEnv).longDesc as any).itAttr_skClassStl) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync execute(ctx: SrcPointer, ev?: Event) {\n\t\tconst {SkinSelectorForSkinClassStl} = await import(\"back/styler/dialogs/skinSelector.js\");\n\t\tconst skinFromClassSelector = new SkinSelectorForSkinClassStl().initialize({\n\t\t\tskinClassStl: ((ctx.reg.env as IItemUiEnv).longDesc as any).itAttr_skClassStl,\n\t\t\treg: ctx.reg,\n\t\t\tbuttonLabel: \"Importer ce style\",\n\t\t});\n\t\tconst skinClassStl = STYLER.getSkinClassStl(ctx.reg.env.wsp, ((ctx.reg.env as IItemUiEnv).longDesc as any).itAttr_skClassStl);\n\t\tconst skinObj = await POPUP.showMenuFromEvent<OSkinSelectorEntry | null>(skinFromClassSelector, ev || ctx, ctx, {\n\t\t\ttitleBar: {barLabel: {label: skinClassStl.name}}\n\t\t}).onNextClose();\n\t\tif (skinObj) {\n\t\t\t// # Upload du contenu\n\n\t\t\tconst itTypeSgnMath = SkinClass.isSkinClassOdt(skinClassStl.skinClass(ctx.reg.env.wsp)) ? /@sf_skinOdt\\b.*/ : /@sf_skinDoss\\b.*/;\n\t\t\tconst isZip: boolean = SkinClass.isSkinClassOdt(skinClassStl.skinClass(ctx.reg.env.wsp)) ? false : true;\n\n\t\t\tlet data: Blob;\n\t\t\tlet result: JSrcFields | null;\n\t\t\ttry {\n\t\t\t\tconst resp = await fetch(skinObj.resUrl, {\n\t\t\t\t\tmethod: 'get',\n\t\t\t\t\t//cache: \"no-cache\"\n\t\t\t\t});\n\t\t\t\tdata = await resp.blob();\n\t\t\t} catch (e) {\n\t\t\t\tconst skinName = skinObj.name;\n\t\t\t\tawait ERROR.show(`Impossible d'importer l'habillage graphique '${skinName}'`, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (data) {\n\t\t\t\tconst {ItemCreator} = await import(\"back/wsp/dialogs/itemCreator.js\");\n\t\t\t\tconst ct = new ItemCreator().initialize(ItemCreator.setDefaultConfigFromReg(ctx.reg, {\n\t\t\t\t\tbody: isZip ? null : data,\n\t\t\t\t\titemTypesTree: {\n\t\t\t\t\t\titemTypeReducer: (acc: ItemType[], cur: ItemType) => {\n\t\t\t\t\t\t\tif (cur.getSgn().match(itTypeSgnMath)) acc.push(cur);\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tspaceUri: ctx.shortDescs.length > 0 ? ITEM.extractSpaceUri(ctx.shortDescs[0].srcUri) : \"\",\n\t\t\t\t\tnameBuilder: () => {return SRC.filterPartUri(skinClassStl.class + '_' + skinObj.code)}\n\t\t\t\t}));\n\t\t\t\tresult = await POPUP.showDialog<JSrcFields>(ct, ctx.emitter, {titleBar: {barLabel: {label: \"Importer un habillage graphique...\"}}}).onNextClose();\n\t\t\t} else {\n\t\t\t\tconst skinName = skinObj.name;\n\t\t\t\tawait ERROR.show(`Impossible d'importer l'habillage graphique '${skinName}'`);\n\t\t\t}\n\t\t\tif (result) {\n\t\t\t\tif (isZip) await ITEM.importScar(ctx.reg.env.wsp, ctx, result.srcUri, new File([data], 'myFile'), true);//, progress.progressCallback\n\t\t\t\tctx.focus();\n\t\t\t\tctx.setSrcRef(ITEM.srcRefSub(result), result);\n\t\t\t}\n\t\t}\n\n\t}\n\n\n}"]}