{"version":3,"sources":["/@back@/core/dialogs/userCreate.tsx"],"names":["REG","MsgOver","JSX","AREAS","Button","POPUP","FORMS","BaseAreaViewAsync","ERROR","UserAccountInputArea","EUserAspects","EUserType","USER","DOMSH","USERSELF","UserCreateBase","[object Object]","this","buildControlLabel","buildUnlockBtn","forcedUserDataOnSave","init","reg","createSubReg","findReg","userSelfSrv","env","universe","userSelf","usersSrv","adminUsers","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","_saveBtn","createElement","î","disabled","label","uiContext","class","onclick","onSave","closeBtn","onClose","_form","appendChild","id","autocomplete","initForm","applyLayout","Promise","all","mergeLists","_emptyData","formToJson","_refreshUi","checkValidity","checFormOnInput","addEventListener","clearTimeout","setTimeout","clear","jsonToForm","isDirty","user","JSON","stringify","area-ids","ev","me","findHost","reportValidity","result","setCustomMsg","showMsgOver","waitFor","_doExecuteSave","_doClose","returnValue","findPopupableParent","close","registerSkin","UserCreate","uiContextSgn","userType","addToList","addSvcToList","hasAspect","enabledEndDt","super","_initialize","params","Object","assign","userName","getPrimaryName","resp","createUser","errorStr","tcheckUserSelfRespError","showNotifWarning","showNotifInfo","account","show","Error","e","report","customElements","define","GroupCreate","group","createGroup"],"mappings":"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","sourcesContent":["import {IReg, IRegPointer, IUiEnv, REG} from \"lib/commons/registry\";\nimport {MsgOver, OSkinableInit} from \"back/commons/basis\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {AREAS, IArea, IControlAreaContext, IControlLabelContext} from \"lib/commons/areas\";\nimport {Button, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {FORMS} from \"lib/commons/forms\";\nimport {BaseAreaViewAsync} from \"lib/commons/views\";\nimport {ICoreUniverseEnv} from \"lib/core/universe\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IUserAreaContext, UserAccountInputArea} from \"back/core/dialogs/userAreas\";\nimport {EUserAspects, EUserType, JUser, USER, UsersSrv} from \"lib/core/user\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {USERSELF, UserSelfSrv} from \"lib/core/userSelf\";\n\n/**\n * Écran de création d'un utilisateur / groupe\n */\n\nexport interface OUserCreateInit extends OSkinableInit {\n\treg: IReg<ICoreUniverseEnv & IUiEnv>\n}\n\nabstract class UserCreateBase<E extends IRegPointer<ICoreUniverseEnv & IUiEnv>> extends BaseAreaViewAsync<E> implements IUserAreaContext, IControlLabelContext {\n\treg: IReg<ICoreUniverseEnv & IUiEnv>;\n\n\t// IUserAreaContext\n\tuiContextSgn: string;\n\tuserSelfSrv: UserSelfSrv\n\tusersSrv: UsersSrv\n\n\t// IControlLabelContext\n\tbuildControlLabel = true;\n\tbuildUnlockBtn = true;\n\n\tprotected _form: HTMLFormElement;\n\tforcedUserDataOnSave: JUser = {};\n\tprotected _emptyData: JUser;\n\tprotected _saveBtn: Button;\n\n\tprotected async _initialize(init: OUserCreateInit) {\n\t\tif (!this.reg) this.reg = REG.createSubReg(this.findReg(init));\n\t\tthis.userSelfSrv = this.reg.env.universe.userSelf;\n\t\tthis.usersSrv = this.reg.env.universe.adminUsers;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"webzone:panel\", sr);\n\t\tthis.reg.installSkin(\"standard-dialog\", sr);\n\t\tthis.reg.installSkin(\"form-control-areas\", sr);\n\t\tthis.reg.installSkin(\"userscreate-core\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tthis._saveBtn = <Button î={{disabled: true, label: \"Ajouter\", uiContext: \"dialog\"} as OButtonInit} class=\"default\" onclick={this.onSave}/> as Button;\n\t\tconst closeBtn = <Button î={{disabled: false, label: \"Annuler\", uiContext: \"dialog\"} as OButtonInit} onclick={this.onClose}/> as Button;\n\n\t\tthis._form = sr.appendChild(<form id=\"form\" autocomplete=\"off\"/>) as HTMLFormElement;\n\t\tthis.initForm();\n\t\tawait AREAS.applyLayout(this._form, await Promise.all(this.reg.mergeLists<IArea<IUserAreaContext & IControlAreaContext> | Promise<IArea<IUserAreaContext & IControlAreaContext>>>(\"userProps:create\", \"userProps:create:\" + this.id)), this);\n\t\tsr.appendChild(<div id=\"footer\">\n\t\t\t{this._saveBtn}\n\t\t\t{closeBtn}\n\t\t</div>);\n\n\t\tthis._emptyData = FORMS.formToJson(this._form);\n\t\tawait this._refreshUi();\n\t\tthis._form.checkValidity();\n\n\t\tlet checFormOnInput = 0;\n\t\tthis._form.addEventListener('input', () => {\n\t\t\tif (checFormOnInput) {\n\t\t\t\tclearTimeout(checFormOnInput);\n\t\t\t\tchecFormOnInput = 0;\n\t\t\t}\n\t\t\tchecFormOnInput = setTimeout(() => {this._refreshUi()}, 300) as any;\n\t\t});\n\t}\n\n\t/** Différents refresh UI du formulaire et des btns\n\t * \t@param clean : raz du formulaire\n\t */\n\tprotected async _refreshUi(clear: boolean = false) {\n\t\tif (clear) FORMS.jsonToForm(this._emptyData, this._form);\n\t\tthis._saveBtn.disabled = !(await this.isDirty());\n\t}\n\n\t/** Retourne true si le formulaire est dirty */\n\tprotected async isDirty(): Promise<boolean> {\n\t\tconst user = FORMS.formToJson(this._form);\n\t\treturn JSON.stringify(user) !== JSON.stringify(this._emptyData);\n\t}\n\n\t/** Initialisation du formulaire (def du/des fieldset) */\n\tprotected initForm(): void {\n\t\tthis._form.appendChild(\n\t\t\t<fieldset id=\"fieldset\">\n\t\t\t\t<div id=\"common\">\n\t\t\t\t\t<div class=\"fields\" area-ids=\"account isDisabled enabledEndDt isHidden groups\"/>\n\t\t\t\t\t<div class=\"fields\" area-ids=\"nickNames firstName lastName groupName email\"/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"fields\" area-ids=\"*\"/>\n\t\t\t</fieldset>);\n\t}\n\n\t/**\n\t * Action de validation\n\t * @param ev\n\t */\n\tprotected async onSave(this: Button, ev: Event): Promise<void> {\n\t\tif (!this.disabled) {\n\t\t\tconst me = DOMSH.findHost<UserCreateBase<E>>(this);\n\t\t\tif (me._form.reportValidity()) {\n\t\t\t\tconst result = await new MsgOver().setCustomMsg(\"Veuillez patienter...\", \"info\").showMsgOver(me).waitFor(\n\t\t\t\t\tme._doExecuteSave()\n\t\t\t\t)\n\t\t\t\tif (result) await me._doClose(result);\n\t\t\t}\n\t\t\t//else\tPOPUP.showNotifWarning(\"Veuillez corriger le formulaire.\", this);\n\t\t}\n\t}\n\n\t/**\n\t * Action de validation (sans contrôle déjà réalisé)\n\t * @return account si le user a été créé, null dans le cas contraire\n\t */\n\tprotected abstract _doExecuteSave(): Promise<string | null>\n\n\t/**\n\t * Action de fermeture / abandon\n\t * @param ev\n\t */\n\tprotected async onClose(this: Button, ev: Event): Promise<void> {\n\t\tconst me = DOMSH.findHost<UserCreateBase<E>>(this);\n\t\t//if (!await me.isDirty() || await POPUP.confirm(\"Voulez-vous abandonner la déclaration ?\", me, {cancelLbl: \"Reprendre\", okLbl: \"Abandonner\"})) {\n\t\treturn me._doClose();\n\t\t//}\n\t}\n\n\t/**\n\t * Action de la fermeture\n\t * @param ev\n\t */\n\tasync _doClose(returnValue?: any): Promise<void> {\n\t\tPOPUP.findPopupableParent(this).close(returnValue);\n\t}\n\n\tonViewBeforeHide(close?: boolean): boolean {\n\t\treturn false;\n\t}\n\n\tasync onViewWaitForHide(close?: boolean): Promise<boolean> {\n\t\treturn true;\n\t}\n}\n\nREG.reg.registerSkin('userscreate-core', 1, /* language=CSS */ `\n\tform {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tflex: 1;\n\t\tpadding: 1em;\n\t\toverflow: auto;\n\t}\n\n\tfieldset {\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tmin-width: 0;\n\t}\n\n\t#common {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-wrap: wrap;\n\t}\n\n\t#common > .fields {\n\t\tflex: 1;\n\t\tdisplay: grid;\n\t\tmin-width: 10em;\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-row-gap: .7rem;\n\t\tgrid-auto-rows: max-content;\n\t}\n\n\t#common > .fields > div {\n\t\tdisplay: contents;\n\t}\n\n\t#common > .fields:first-child {\n\t\tmargin-inline-end: 2em;\n\t}\n\n\t.fields div[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\tdiv[area-id=authMethod] {\n\t\tflex-direction: column;\n\t}\n\n\tdiv[area-id=authMethod] > div {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n\n\tdiv[area-id=\"passwordSetMode\"] > .subPanel {\n\t\tborder: 0;\n\t\tmax-width: fit-content;\n\t}\n\n\t.ctrlLbl > .ctrlLbl {\n\t\tmargin: 0;\n\t}\n\n\tselect {\n\t\tmax-width: fit-content;\n\t}\n`);\n\nexport class UserCreate<E extends IRegPointer<ICoreUniverseEnv>> extends UserCreateBase<E> {\n\n\tprotected async _initialize(init: OUserCreateInit): Promise<void> {\n\t\tif (!this.reg) this.reg = REG.createSubReg(this.findReg(init));\n\n\t\tthis.id = \"users\";\n\t\tthis.uiContextSgn = \"@user#create\";\n\t\tthis.forcedUserDataOnSave.userType = EUserType.user;\n\t\t// Form\n\t\tthis.reg.addToList(\"userProps:create:users\", 'account', 1, new UserAccountInputArea());\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'isDisabled', 1, 'area.users.isDisabled.users');\n\t\tif (this.reg.env.universe.adminUsers.hasAspect(EUserAspects.enabledEndDt)) this.reg.addSvcToList(\"userProps:create:users\", 'enabledEndDt', 1, 'area.users.enabledEndDt');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'isHidden', 1, 'area.users.isHidden.users');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'nickNames.first', 1, 'area.users.nickNames.first');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'firstName', 1, 'area.users.firstName');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'lastName', 1, 'area.users.lastName');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'groups', 1, 'area.users.groupsmembers.users.create');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'grantedRoles', 1, 'area.users.grantedRoles.users');\n\t\tthis.reg.addSvcToList(\"userProps:create:users\", 'email', 1, 'area.users.email.user');\n\t\treturn super._initialize(init);\n\t}\n\n\tprotected async _doExecuteSave(): Promise<string | null> {\n\t\ttry {\n\t\t\tconst params = Object.assign(FORMS.formToJson(this._form), this.forcedUserDataOnSave);\n\t\t\tlet userName = USER.getPrimaryName(params);\n\t\t\tconst resp = await this.userSelfSrv.createUser(params);\n\t\t\tlet errorStr = USERSELF.tcheckUserSelfRespError(resp, \"\");\n\t\t\tif (errorStr === null) {\n\t\t\t\tif (resp.result === 'validationPending')\n\t\t\t\t\tPOPUP.showNotifWarning(`L'utilisateur '${userName}' a été créé avec succès.\\nRemarque : ce compte est en l'état inactif.`, this);\n\t\t\t\telse\n\t\t\t\t\tPOPUP.showNotifInfo(`L'utilisateur '${userName}' a été créé avec succès.`, this);\n\t\t\t\treturn params.account || true;//return true, contexte account posé automatiquement par ex dans Distrib\n\t\t\t} else\n\t\t\t\tawait ERROR.show(errorStr ? `La création de l'utilisateur '${userName}' a échoué. ${errorStr}` : \"La création de l'utilisateur a échoué.\", new Error(JSON.stringify(resp)));\n\t\t\treturn null;\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(`La création de l'utilisateur a échoué. Veuillez réessayer ultérieurement.`, e);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\ncustomElements.define(\"usercreate-users\", UserCreate);\nREG.reg.registerSkin('usercreate-users', 1, /* language=CSS */ `\n`);\n\n\nexport class GroupCreate<E extends IRegPointer<ICoreUniverseEnv>> extends UserCreateBase<E> {\n\tprotected async _initialize(init: OUserCreateInit): Promise<void> {\n\t\tif (!this.reg) this.reg = REG.createSubReg(this.findReg(init));\n\t\tthis.id = \"groups\";\n\t\tthis.uiContextSgn = \"@group#create\";\n\t\tthis.forcedUserDataOnSave.userType = EUserType.group;\n\t\t// Form\n\t\tthis.reg.addToList(\"userProps:create:groups\", 'account', 1, new UserAccountInputArea());\n\t\tthis.reg.addSvcToList(\"userProps:create:groups\", 'groupName', 1, 'area.users.groupName');\n\t\tthis.reg.addSvcToList(\"userProps:create:groups\", 'isHidden', 1, 'area.users.isHidden.groups');\n\t\tthis.reg.addSvcToList(\"userProps:create:groups\", 'groups', 1, 'area.users.groupsmembers.groups.create');\n\t\tthis.reg.addSvcToList(\"userProps:create:groups\", 'grantedRoles', 1, 'area.users.grantedRoles.groups');\n\t\tthis.reg.addSvcToList(\"userProps:create:groups\", 'email', 1, 'area.users.email.group');\n\t\treturn super._initialize(init);\n\t}\n\n\tprotected async _doExecuteSave(): Promise<string | null> {\n\t\ttry {\n\t\t\tconst params = Object.assign(FORMS.formToJson(this._form), this.forcedUserDataOnSave);\n\t\t\tlet userName = USER.getPrimaryName(params);\n\t\t\tconst resp = await this.userSelfSrv.createGroup(params);\n\t\t\tlet errorStr = USERSELF.tcheckUserSelfRespError(resp, \"\");\n\t\t\tif (errorStr === null) {\n\t\t\t\tPOPUP.showNotifInfo(`Le groupe '${userName}' a été créé avec succès.`, this);\n\t\t\t\treturn params.account;\n\t\t\t} else\n\t\t\t\tawait ERROR.show(errorStr ? `La création du groupe '${userName}' a échoué. ${errorStr}` : \"La création du groupe a échoué.\", new Error(JSON.stringify(resp)));\n\t\t\treturn null;\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(`La création du groupe a échoué. Veuillez réessayer ultérieurement.`, e);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\ncustomElements.define(\"usercreate-groups\", GroupCreate);\nREG.reg.registerSkin('usercreate-groups', 1, /* language=CSS */ `\n`);"]}