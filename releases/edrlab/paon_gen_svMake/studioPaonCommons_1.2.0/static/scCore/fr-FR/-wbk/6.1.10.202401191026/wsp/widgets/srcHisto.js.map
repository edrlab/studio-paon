{"version":3,"sources":["/@back@/wsp/widgets/srcHisto.tsx"],"names":["SRC","WSP","SrcPointerFastSelect","SrcPointerSetterAction","Button","Action","ActionSeparator","POPUP","SrcHisto","[object Object]","parent","key","this","histoSet","size","init","srcPointer","Set","history","super","_initialize","onclick","onClick","onSrcRefChange","add","addEntryHisto","srcRef","_a","length","setSrcRef","delete","del","s","ev","reg","actions","srcRefs","Array","from","srcs","fetchShortDescs","env","wsp","src","srcSt","itModel","push","setEnabled","setLabel","reverse","showPopupActionsFromEvent","actionContext","customElements","define"],"mappings":"OAAQA,QAAY;OACZC,QAAI;OACQC,qBAAsBC,2BAAuB;OACzDC,WAAoB;OACpBC,OAAQC,oBAAyB;OACjCC,UAAM;OAcR,MAAOC,iBAAiBJ,OAK7BK,WAAkCC,OAAYC,KAC7C,GAAIC,KAAKC,SAASC,KAAO,EAAG,CAC3BJ,OAAOC,KAAO,IAAIC,KAAKC;AACvB,OAAOH,QAICD,YAAYM;AAErBH,KAAKI,WAAaD,KAAKC;AACvBJ,KAAKC,SAAW,IAAII,IAAIF,KAAKG;AAC7BC,MAAMC,YAAYL;AAClBH,KAAKS,QAAUT,KAAKU;AACpBV,KAAKI,WAAWO,eAAeC,IAAI,KAAOZ,KAAKa,cAAcb,KAAKI,WAAWU;AAC7E,KAAIC,GAAAZ,KAAKG,WAAO,MAAAS,UAAA,OAAA,EAAAA,GAAEC,QAAS,EAAGhB,KAAKI,WAAWa,UAAUd,KAAKG,QAAQH,KAAKG,QAAQU,OAAS,IAG5FnB,cAAciB,QACb,IAAKA,OAAQ;AACbd,KAAKC,SAASiB,OAAOJ;AACrB,GAAId,KAAKC,SAASC,KAAO,GAAI,CAC5B,IAAIiB,IAAM;AACV,IAAK,MAAMC,KAAKpB,KAAKC,SAAU,CAC9BD,KAAKC,SAASiB,OAAOE;AACrB,KAAMD,MAAQ,GAAI,OAGpBnB,KAAKC,SAASW,IAAIE,QAGTjB,cAAcwB,IACvB,MAAMC,IAAMtB,KAAKI,WAAWkB;AAC5B,MAAMC,QAAiC;AACvC,GAAIvB,KAAKC,SAASC,KAAO,EAAG,CAC3B,MAAMsB,QAAUC,MAAMC,KAAK1B,KAAKC;AAChC,GAAID,KAAKI,WAAWU,OAAQU,QAAQR;AACpC,MAAMW,WAAatC,IAAIuC,gBAAgBN,IAAIO,IAAIC,IAAK9B,QAASwB;AAC7D,IAAK,MAAMO,OAAOJ,KAAM,CACvB,GAAII,IAAK,CACR,GAAIA,IAAIC,MAAQ,GAAKD,IAAIE,SAAW,KAAMV,QAAQW,KAAK,IAAI3C,uBAAuBwC;KAC7E/B,KAAKC,SAASiB,OAAO9B,IAAI0B,OAAOiB,QAIxC,GAAIR,QAAQP,SAAW,EAAGO,QAAQW,KAAK,IAAIzC,OAAmB,QAAQ0C,WAAW,OAAOC,SAAS;KAC5Fb,QAAQc;AACbd,QAAQW,KACP,IAAIxC,gBACJ,IAAIJ,qBAAqB,YAA4C8C,SAAS;AAE/E,OAAOzC,MAAM2C,0BAA0B,CACtChB,IAAAA,IACAC,QAAAA,QACAgB,cAAevC,KAAKI,YAClBiB,KAILmB,eAAeC,OAAO,gBAAiB7C","sourcesContent":["import {SRC, srcRef} from \"lib/wsp/src\";\nimport {WSP} from \"lib/wsp/wsp\";\nimport {SrcPointer, SrcPointerFastSelect, SrcPointerSetterAction} from \"back/wsp/widgets/srcDrawer\";\nimport {Button, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {Action, ActionSeparator, IAction} from \"lib/commons/actions\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\n\n/**\n */\nexport interface SrcHisto extends Button {\n\tinitialize(init: OSrcHistoInit): this\n}\n\nexport interface OSrcHistoInit extends OButtonInit {\n\tsrcPointer?: SrcPointer\n\thistory?: srcRef[]\n}\n\nexport class SrcHisto extends Button {\n\n\tsrcPointer: SrcPointer\n\tprotected histoSet: Set<srcRef>;\n\n\tsetHistory<LD extends JLastDatas>(parent: LD, key: keyof LD): LD | undefined {\n\t\tif (this.histoSet.size > 0) {\n\t\t\tparent[key] = [...this.histoSet] as any;\n\t\t\treturn parent;\n\t\t}\n\t}\n\n\tprotected _initialize(init: OSrcHistoInit) {\n\t\t//if(!(\"icon\" in init) init.icon = \"\"; TODO centraliser icone\n\t\tthis.srcPointer = init.srcPointer;\n\t\tthis.histoSet = new Set(init.history);\n\t\tsuper._initialize(init);\n\t\tthis.onclick = this.onClick;\n\t\tthis.srcPointer.onSrcRefChange.add(() => {this.addEntryHisto(this.srcPointer.srcRef)});\n\t\tif (init.history?.length > 0) this.srcPointer.setSrcRef(init.history[init.history.length - 1]);\n\t}\n\n\taddEntryHisto(srcRef: srcRef) {\n\t\tif (!srcRef) return;\n\t\tthis.histoSet.delete(srcRef); //pour le replacer à la fin si il était déjà dans la liste.\n\t\tif (this.histoSet.size > 12) {\n\t\t\tlet del = 0;\n\t\t\tfor (const s of this.histoSet) {\n\t\t\t\tthis.histoSet.delete(s);\n\t\t\t\tif (++del === 12) break;\n\t\t\t}\n\t\t}\n\t\tthis.histoSet.add(srcRef);\n\t}\n\n\tprotected async onClick(ev: MouseEvent) {\n\t\tconst reg = this.srcPointer.reg;\n\t\tconst actions: IAction<SrcPointer>[] = [];\n\t\tif (this.histoSet.size > 1) {\n\t\t\tconst srcRefs = Array.from(this.histoSet);\n\t\t\tif (this.srcPointer.srcRef) srcRefs.length--; //on suppr le dernier courant\n\t\t\tconst srcs = await WSP.fetchShortDescs(reg.env.wsp, this, ...srcRefs);\n\t\t\tfor (const src of srcs) {\n\t\t\t\tif (src) {\n\t\t\t\t\tif (src.srcSt > 0 && src.itModel != null) actions.push(new SrcPointerSetterAction(src));\n\t\t\t\t\telse this.histoSet.delete(SRC.srcRef(src)); // src supprimée, cleanup\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (actions.length === 0) actions.push(new Action<SrcPointer>('none').setEnabled(false).setLabel(\"Historique vide\"));\n\t\telse actions.reverse();\n\t\tactions.push(\n\t\t\tnew ActionSeparator(),\n\t\t\tnew SrcPointerFastSelect(\"selOther\" /*Autre id pour tuer accelKey*/).setLabel(\"Autre item...\")\n\t\t);\n\t\treturn POPUP.showPopupActionsFromEvent({\n\t\t\treg,\n\t\t\tactions,\n\t\t\tactionContext: this.srcPointer\n\t\t}, ev);\n\t}\n}\n\ncustomElements.define('wsp-src-histo', SrcHisto);"]}