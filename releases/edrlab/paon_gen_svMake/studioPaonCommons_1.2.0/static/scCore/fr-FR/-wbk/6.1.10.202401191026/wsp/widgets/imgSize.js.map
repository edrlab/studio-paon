{"version":3,"sources":["/@back@/wsp/widgets/imgSize.tsx"],"names":["BaseElement","DOMSH","REG","DOM","JSX","ITEM","WSP","EWspWorkingSt","SRC","POPUP","BarActions","Action","STDCHARSIZE_TXTREF","LIMITCHARSIZE_TXTREF","TXTREF_HELP","ImgSize","[object Object]","this","_locked","_savePropsReq","_updateStdCharReq","_updateLimitCharReq","_history","_currentStateIdx","_isDirty","_notifAnchor","posFrom","fromY","targetY","fromX","targetX","init","reg","findReg","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","dimsTransform","_dimsTransform","console","warn","_txtRefElem","createElement","id","_sizeBox","_writePerms","writePerms","stdCharSize","_stdCharSize","area","rangeInput","type","min","max","step","orient","percentInput","valueInput","defaultValue","value","NaN","oninput","ev","parseFloat","target","_onStdCharSizeUpdate","currentTarget","_setDirty","_requestSaveProps","_dims","onchange","_pushStateToHistory","class","title","limitCharSize","defaultVal","_limitCharSize","_onLimitCharSizeUpdate","stdCharWidth","addEventListener","textContent","textRef","rotateForbidden","_rotateForbid","input","checked","undefined","sizeAreas","saveAction","setIcon","setLabel","setEnabled","ctx","setExecute","async","_saveProps","undoAction","_restoreStateFromHistory","showNotifInfo","redoAction","length","_toolbar","initialize","actions","actionContext","appendChild","env","_propsWspRef","buildWspRef","wsp","code","addLeafToUri","longDesc","srcUri","place","eventsMgr","on","wspRef","wspCd","srcRef","st","w","_refresh","msg","_rulerElem","promiseTooltip","skinOver","anchor","initWidth","marginY","_sizeRefElem","Promise","all","_loadDims","_loadProps","_updateProps","readOnly","hasPerm","disabled","dimsText","fetchStreamText","itemType","getMainStreamSrcUri","dims","split","_dpi","e","propsDoc","fetchDom","_propsElt","documentElement","_a","stdCharSizeAttr","getAttribute","invValue","isNaN","limitCharSizeAttr","_b","_c","hasAttribute","currentState","rotateForbid","lastState","JSON","stringify","push","clearTimeout","setTimeout","newDomDoc","propsElt","document","setAttribute","toString","update","ser","from","requestAnimationFrame","stdCharDims","map","dim","matches","_updateImgDims","fixedValue","toFixed","limitCharDims","dirty","fromHistory","setState","r","refreshContent","style","width","height","customElements","define","registerSkin"],"mappings":"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","sourcesContent":["import {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {JWspUriChangeMsg, WSP, wspCd, wspRef} from \"lib/wsp/wsp\";\nimport {EWspWorkingSt} from \"lib/wsp/wspsLive\";\nimport {SRC, srcRef} from \"lib/wsp/src\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {BarActions} from \"back/commons/widgets/bars\";\nimport {Action} from \"lib/commons/actions\";\nimport {OPopupAnchor} from \"back/commons/widgets/popupable\";\n\nexport interface OImgSizeConfig extends OSkinableInit {\n\treg?: IReg<IItemUiEnv>,\n\tdimsTransform: string,\n\tstdCharSize?: {\n\t\tdefaultValue?: number | ((width: number, dpi?: number) => number),\n\t\ttextRef?: string\n\t},\n\tlimitCharSize?: {\n\t\tdefaultValue?: number,\n\t\ttextRef?: string\n\t},\n\trotateForbidden?: {\n\t\tdefaultValue?: boolean\n\t},\n\twritePerms: string | string[]\n}\n\nconst STDCHARSIZE_TXTREF = \"Ceci est un texte de référence qui vous permet d'adapter la taille de l'image en fonction de la taille des caractères et d'une largeur standard de paragraphe.\";\nconst LIMITCHARSIZE_TXTREF = \"Ceci est un texte de référence qui vous permet d'adapter la taille de l'image. Réglez le curseur d'échelle ci-contre de telle sorte que l'image demeure intelligible.\";\nconst TXTREF_HELP = \"Si votre image comporte des caractères (schéma, tableau, copie d'écran...), réglez le curseur d'échelle ci-contre pour que les caractères de l'image de taille « normale » correspondent à la taille des caractères de ce texte. Si votre image ne contient pas de caractères (photo, illustration), réglez le curseur d'échelle pour donner l'importance qui convient à l'image en rapport avec ce paragraphe et particulièrement avec sa largeur.\";\n\ntype IImgSizeState = {\n\tstdCharSize: number,\n\tlimitCharSize: number,\n\trotateForbid: boolean,\n};\n\nexport class ImgSize extends BaseElement {\n\treg: IReg<IItemUiEnv>;\n\n\tprotected _locked: boolean = false;\n\tprotected _propsWspRef: string;\n\tprotected _dimsTransform: string;\n\tprotected _dims: [number, number];\n\tprotected _dpi: number;\n\tprotected _propsElt: Element;\n\tprotected _savePropsReq: number = 0;\n\tprotected _updateStdCharReq: number = 0;\n\tprotected _updateLimitCharReq: number = 0;\n\tprotected _history: IImgSizeState[] = [];\n\tprotected _currentStateIdx = -1;\n\tprotected _isDirty = false;\n\n\tprotected _stdCharSize: {\n\t\tarea: HTMLDivElement,\n\t\trangeInput: HTMLInputElement,\n\t\tpercentInput: HTMLInputElement,\n\t\tvalueInput: HTMLInputElement,\n\t\t/** Valeur par défaut pour initialisation après récupération des dimensions */\n\t\tdefaultValue: number | ((width: number, dpi?: number) => number)\n\t\t/** Valeur en pourcentage (cf eu.scenari.transform.img.IImgSrc.getStandardCharSize()) */\n\t\tvalue: number\n\t};\n\tprotected _limitCharSize: {\n\t\tarea: HTMLDivElement,\n\t\trangeInput: HTMLInputElement,\n\t\tpercentInput: HTMLInputElement,\n\t\tvalueInput: HTMLInputElement,\n\t\tdefaultValue: number,\n\t\t/** Valeur en pourcentage (cf eu.scenari.transform.img.IImgSrc.getLimitCharSize()) */\n\t\tvalue: number\n\t};\n\tprotected _rotateForbid: {\n\t\tarea: HTMLDivElement,\n\t\tinput: HTMLInputElement,\n\t\tdefaultValue: boolean,\n\t\tvalue: boolean\n\t};\n\n\tprotected _writePerms: string | string[];\n\n\tprotected _toolbar: BarActions<ImgSize>;\n\tprotected _sizeBox: HTMLSlotElement;\n\tprotected _sizeRefElem: HTMLDivElement;\n\tprotected _rulerElem: HTMLDivElement;\n\tprotected _txtRefElem: HTMLDivElement;\n\tprotected _notifAnchor: OPopupAnchor = {posFrom: this, fromY: \"bottom\", targetY: \"bottom\", fromX: \"middle\", targetX: \"middle\"};\n\n\tprotected _initialize(init: OImgSizeConfig) {\n\t\tthis.reg = this.findReg<IItemUiEnv>(init);\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"scroll/small\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tif (init.dimsTransform) this._dimsTransform = init.dimsTransform;\n\t\telse console.warn(\"No dimsTransform specified\");\n\n\n\t\tthis._txtRefElem = <div id=\"txtRef\"/> as HTMLDivElement;\n\t\tthis._sizeBox = <div id=\"sizeBox\">\n\t\t\t<slot/>\n\t\t</div> as HTMLSlotElement;\n\n\t\tthis._writePerms = init.writePerms || \"action.itemMainView#edit.content\";\n\n\t\t// orient=vertical sur les input de type ranges pour Firefox\n\t\tif (init.stdCharSize) {\n\t\t\tthis._stdCharSize = {\n\t\t\t\tarea: null,\n\t\t\t\trangeInput: <input type=\"range\" min=\"1\" max=\"300\" step=\"any\" orient=\"vertical\"/> as HTMLInputElement,\n\t\t\t\tpercentInput: <input type=\"number\" min=\"1\" max=\"300\" step=\"any\"/> as HTMLInputElement,\n\t\t\t\tvalueInput: <input type=\"number\"/> as HTMLInputElement,\n\t\t\t\tdefaultValue: init.stdCharSize.defaultValue || 10,\n\t\t\t\tvalue: NaN\n\t\t\t};\n\t\t\tthis._stdCharSize.rangeInput.oninput = this._stdCharSize.percentInput.oninput = (ev: Event) => {\n\t\t\t\tthis._stdCharSize.value = parseFloat((ev.target as HTMLInputElement).value);\n\t\t\t\tthis._onStdCharSizeUpdate(ev.currentTarget as HTMLElement);\n\t\t\t\tthis._setDirty(true);\n\t\t\t\tthis._requestSaveProps();\n\t\t\t};\n\t\t\tthis._stdCharSize.valueInput.oninput = (ev: Event) => {\n\t\t\t\tthis._stdCharSize.value = parseFloat((ev.target as HTMLInputElement).value) * 600 / this._dims[0];\n\t\t\t\tthis._onStdCharSizeUpdate(ev.currentTarget as HTMLElement);\n\t\t\t\tthis._setDirty(true);\n\t\t\t\tthis._requestSaveProps();\n\t\t\t};\n\t\t\tthis._stdCharSize.rangeInput.onchange = this._stdCharSize.percentInput.onchange = this._stdCharSize.valueInput.onchange = () => {\n\t\t\t\tthis._pushStateToHistory();\n\t\t\t};\n\n\t\t\tthis._stdCharSize.area = <div class=\"sizeArea\" id=\"stdCharSizeArea\">\n\t\t\t\t<div class=\"areaTitle\">Taille de l'image</div>\n\t\t\t\t<label title=\"Taille de l'image en pourcentage de sa taille d'origine\">\n\t\t\t\t\t{this._stdCharSize.percentInput}\n\t\t\t\t\t<span>%</span>\n\t\t\t\t</label>\n\t\t\t\t{this._stdCharSize.rangeInput}\n\t\t\t\t<label title=\"Taille limite de l'image en nombre de caractères\">\n\t\t\t\t\t{this._stdCharSize.valueInput}\n\t\t\t\t\t<span>car.</span>\n\t\t\t\t</label>\n\t\t\t</div> as HTMLDivElement;\n\t\t}\n\n\t\tif (init.limitCharSize) {\n\t\t\tconst defaultVal = 'defaultValue' in init.limitCharSize ? 1000 / init.limitCharSize.defaultValue : 80;\n\t\t\tthis._limitCharSize = {\n\t\t\t\tarea: null,\n\t\t\t\trangeInput: <input type=\"range\" min=\"1\" max=\"100\" step=\"any\" orient=\"vertical\"/> as HTMLInputElement,\n\t\t\t\tpercentInput: <input type=\"number\" min=\"1\" max=\"100\" step=\"any\"/> as HTMLInputElement,\n\t\t\t\tvalueInput: <input type=\"number\"/> as HTMLInputElement,\n\t\t\t\tdefaultValue: defaultVal,\n\t\t\t\tvalue: defaultVal\n\t\t\t};\n\t\t\tthis._limitCharSize.rangeInput.oninput = this._limitCharSize.percentInput.oninput = (ev: Event) => {\n\t\t\t\tthis._limitCharSize.value = parseFloat((ev.target as HTMLInputElement).value);\n\t\t\t\tthis._onLimitCharSizeUpdate(this);\n\t\t\t\tthis._setDirty(true);\n\t\t\t\tthis._requestSaveProps();\n\t\t\t};\n\t\t\tthis._limitCharSize.valueInput.oninput = (ev: Event) => {\n\t\t\t\tconst stdCharWidth = this._stdCharSize ? this._dims[0] * this._stdCharSize.value / 100 : this._dims[0];\n\t\t\t\tthis._limitCharSize.value = parseFloat((ev.target as HTMLInputElement).value) * 600 / stdCharWidth;\n\t\t\t\tthis._onLimitCharSizeUpdate(this);\n\t\t\t\tthis._setDirty(true);\n\t\t\t\tthis._requestSaveProps();\n\t\t\t};\n\n\t\t\tthis._limitCharSize.rangeInput.onchange = this._limitCharSize.percentInput.onchange = this._limitCharSize.valueInput.onchange = () => {\n\t\t\t\tthis._pushStateToHistory();\n\t\t\t};\n\n\t\t\tthis._limitCharSize.area = <div class=\"sizeArea\" id=\"limitCharSizeArea\">\n\t\t\t\t<div class=\"areaTitle\">Limite de lisibilité</div>\n\t\t\t\t<label title=\"Taille limite de l'image en pourcentage de sa taille d'origine\">\n\t\t\t\t\t{this._limitCharSize.percentInput}\n\t\t\t\t\t<span>%</span>\n\t\t\t\t</label>\n\t\t\t\t{this._limitCharSize.rangeInput}\n\t\t\t\t<label title=\"Taille limite de l'image en nombre de caractères\">\n\t\t\t\t\t{this._limitCharSize.valueInput}\n\t\t\t\t\t<span>car.</span>\n\t\t\t\t</label>\n\t\t\t</div> as HTMLDivElement;\n\n\t\t\tif (init.stdCharSize) {\n\t\t\t\tthis._limitCharSize.area.addEventListener('focusin', () => {\n\t\t\t\t\tthis._txtRefElem.textContent = init.limitCharSize.textRef || LIMITCHARSIZE_TXTREF;\n\t\t\t\t\tthis._onLimitCharSizeUpdate();\n\t\t\t\t});\n\t\t\t\tthis._limitCharSize.area.addEventListener('focusout', () => {\n\t\t\t\t\tthis._txtRefElem.textContent = init.stdCharSize.textRef || STDCHARSIZE_TXTREF;\n\t\t\t\t\tthis._onStdCharSizeUpdate();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (init.rotateForbidden) {\n\t\t\tconst defaultVal = 'defaultValue' in init.rotateForbidden ? init.rotateForbidden.defaultValue : false;\n\t\t\tthis._rotateForbid = {\n\t\t\t\tarea: null,\n\t\t\t\tinput: <input type=\"checkbox\" checked={!defaultVal ? \"\" : undefined}/> as HTMLInputElement,\n\t\t\t\tdefaultValue: defaultVal,\n\t\t\t\tvalue: defaultVal\n\t\t\t};\n\t\t\tthis._rotateForbid.input.oninput = (ev: Event) => {\n\t\t\t\tthis._rotateForbid.value = !(ev.target as HTMLInputElement).checked;\n\t\t\t\tthis._setDirty(true);\n\t\t\t\tthis._requestSaveProps();\n\t\t\t};\n\n\t\t\tthis._rotateForbid.input.onchange = () => {\n\t\t\t\tthis._pushStateToHistory();\n\t\t\t};\n\n\t\t\tthis._rotateForbid.area = <div id=\"rotateForbidArea\">\n\t\t\t\t<span class=\"areaTitle\">Rotation autorisée</span>\n\t\t\t\t<div class=\"checkValue\">\n\t\t\t\t\t{this._rotateForbid.input}\n\t\t\t\t</div>\n\t\t\t</div> as HTMLDivElement;\n\t\t}\n\t\tif (this._stdCharSize || this._limitCharSize || this._rotateForbid) {\n\t\t\tlet sizeAreas = null;\n\t\t\tif (this._stdCharSize || this._limitCharSize) {\n\t\t\t\tsizeAreas = <div id=\"sizeAreas\">\n\t\t\t\t\t{this._stdCharSize && this._stdCharSize.area}\n\t\t\t\t\t{this._limitCharSize && this._limitCharSize.area}\n\t\t\t\t</div>;\n\t\t\t}\n\n\t\t\tconst saveAction = new Action<ImgSize>(\"save\")\n\t\t\t\t.setIcon(\"/@skin@/edit/wed/save.svg\")\n\t\t\t\t.setLabel(\"Enregistrer\")\n\t\t\t\t.setEnabled((ctx) => {\n\t\t\t\t\treturn ctx._isDirty;\n\t\t\t\t})\n\t\t\t\t.setExecute(async (ctx) => {\n\t\t\t\t\tawait ctx._saveProps();\n\t\t\t\t});\n\n\t\t\tconst undoAction = new Action<ImgSize>(\"undo\")\n\t\t\t\t.setIcon(\"/@skin@/edit/wed/undo.svg\")\n\t\t\t\t.setLabel(\"Annuler\")\n\t\t\t\t.setExecute(async (ctx) => {\n\t\t\t\t\tif (ctx._currentStateIdx > 0) {\n\t\t\t\t\t\tctx._currentStateIdx--;\n\t\t\t\t\t\tctx._restoreStateFromHistory();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPOPUP.showNotifInfo(\"Aucune action à annuler\", ctx, null, ctx._notifAnchor)\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tconst redoAction = new Action<ImgSize>(\"redo\")\n\t\t\t\t.setIcon(\"/@skin@/edit/wed/redo.svg\")\n\t\t\t\t.setLabel(\"Refaire\")\n\t\t\t\t.setExecute(async (ctx) => {\n\t\t\t\t\tif (ctx._currentStateIdx < ctx._history.length - 1) {\n\t\t\t\t\t\tctx._currentStateIdx++;\n\t\t\t\t\t\tctx._restoreStateFromHistory();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPOPUP.showNotifInfo(\"Aucune action à refaire\", ctx, null, ctx._notifAnchor)\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\tthis._toolbar = new BarActions<ImgSize>().initialize({\n\t\t\t\tactions: [saveAction, undoAction, redoAction],\n\t\t\t\tactionContext: this\n\t\t\t});\n\t\t\tsr.appendChild(<aside>\n\t\t\t\t{this._toolbar}\n\t\t\t\t{sizeAreas}\n\t\t\t\t{this._rotateForbid && this._rotateForbid.area}\n\t\t\t</aside>);\n\n\t\t\t// Enregistrement des changements d'états sur le flux des props\n\t\t\tconst {env} = this.reg;\n\t\t\tthis._propsWspRef = WSP.buildWspRef(env.wsp.code, SRC.addLeafToUri(env.longDesc.srcUri, 'props.xml'));\n\t\t\tthis._setDirty(false);\n\t\t\tenv.place.eventsMgr.on(\"newWspWorkingState\", (wspRef: wspRef, wspCd: wspCd, srcRef: srcRef, st: EWspWorkingSt) => {\n\t\t\t\tif (wspRef === this._propsWspRef) {\n\t\t\t\t\tthis._locked = st === EWspWorkingSt.w;\n\t\t\t\t\tthis._refresh();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Listener sur les changements de la ressource\n\t\t\tenv.place.eventsMgr.on(\"wspUriChange\", (msg: JWspUriChangeMsg) => {\n\t\t\t\tif (SRC.srcRef(env.longDesc) === SRC.srcRef(msg)) this._refresh();\n\t\t\t});\n\t\t}\n\n\t\tif (init && (this._stdCharSize || this._limitCharSize)) {\n\t\t\tthis._rulerElem = <div id=\"sizeRuler\"/> as HTMLDivElement;\n\n\t\t\tif (init.stdCharSize) this._txtRefElem.textContent = init.stdCharSize.textRef || STDCHARSIZE_TXTREF;\n\t\t\telse if (init.limitCharSize) this._txtRefElem.textContent = init.limitCharSize.textRef || LIMITCHARSIZE_TXTREF;\n\n\t\t\tPOPUP.promiseTooltip(this._txtRefElem, () => <div>{TXTREF_HELP}</div>,\n\t\t\t\t{\n\t\t\t\t\tskinOver: \"wsp-imgsize/txtref-tooltip\",\n\t\t\t\t\tanchor: {\n\t\t\t\t\t\tposFrom: this._txtRefElem,\n\t\t\t\t\t\tinitWidth: '640px',\n\t\t\t\t\t\tfromY: 'bottom',\n\t\t\t\t\t\tmarginY: 3\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tthis._sizeRefElem = <div id=\"sizeRef\">\n\t\t\t\t{this._rulerElem}\n\t\t\t\t{this._txtRefElem}\n\t\t\t</div> as HTMLDivElement;\n\t\t}\n\n\t\tsr.appendChild(<div id=\"mainArea\">\n\t\t\t<div id=\"scrollBox\">\n\t\t\t\t{this._sizeBox}\n\t\t\t\t{this._sizeRefElem}\n\t\t\t</div>\n\t\t</div>);\n\t}\n\n\tprotected async _refresh() {\n\t\tawait Promise.all([this._loadDims(), this._loadProps()]);\n\t\tif (this._dims) this._updateProps();\n\t\tconst readOnly = this._locked || !this.reg.hasPerm(this._writePerms) || !this._dimsTransform || !this._dims;\n\n\t\tif (this._stdCharSize) {\n\t\t\tthis._onStdCharSizeUpdate();\n\t\t\tconst {rangeInput, percentInput, valueInput} = this._stdCharSize;\n\t\t\trangeInput.disabled = percentInput.disabled = valueInput.disabled = readOnly;\n\t\t}\n\t\tif (this._limitCharSize) {\n\t\t\tthis._onLimitCharSizeUpdate();\n\t\t\tconst {rangeInput, percentInput, valueInput} = this._limitCharSize;\n\t\t\trangeInput.disabled = percentInput.disabled = valueInput.disabled = readOnly;\n\t\t}\n\t\tif (this._rotateForbid) {\n\t\t\tthis._rotateForbid.input.checked = !this._rotateForbid.value;\n\t\t\tthis._rotateForbid.input.disabled = readOnly;\n\t\t}\n\t}\n\n\tasync _loadDims() {\n\t\tconst {env} = this.reg;\n\t\ttry {\n\t\t\tif (!this._dimsTransform) return;\n\t\t\tconst dimsText = await WSP.fetchStreamText(env.wsp, this, env.itemType.getMainStreamSrcUri(env.longDesc), this._dimsTransform);\n\t\t\tconst dims = dimsText.split(';', 3);\n\t\t\tthis._dims = [parseFloat(dims[0]), parseFloat(dims[1])];\n\t\t\tif (this._dims[0] == -1 || this._dims[1] == -1) throw \"Invalid dimensions\";\n\t\t\tthis._dpi = dims[2] ? parseFloat(dims[2]) : undefined;\n\t\t} catch (e) {\n\t\t\tthis._dims = undefined;\n\t\t\tthis._dpi = undefined;\n\t\t\tconsole.warn(\"Unable to retrieve the resource dimensions\");\n\t\t}\n\t}\n\n\tasync _loadProps() {\n\t\tconst {env} = this.reg;\n\t\ttry {\n\t\t\tconst propsDoc = await ITEM.fetchDom(env.wsp, this, `${env.longDesc.srcUri}/props.xml`, true);\n\t\t\tthis._propsElt = propsDoc ? propsDoc.documentElement : null;\n\t\t} catch {}\n\t}\n\n\tprotected _updateProps() {\n\t\tif (this._stdCharSize) {\n\t\t\tconst stdCharSizeAttr = this._propsElt?.getAttribute('standardCharSize');\n\t\t\tlet invValue = NaN;\n\t\t\tif (stdCharSizeAttr) invValue = parseFloat(stdCharSizeAttr);\n\t\t\tif (isNaN(invValue)) {\n\t\t\t\tconst {defaultValue} = this._stdCharSize;\n\t\t\t\tif (typeof defaultValue === 'number') invValue = defaultValue;\n\t\t\t\telse invValue = defaultValue(this._dims[0], this._dpi);\n\t\t\t}\n\t\t\tthis._stdCharSize.value = 1000 / invValue;\n\t\t}\n\n\t\tif (this._limitCharSize) {\n\t\t\tthis._limitCharSize.value = this._limitCharSize.defaultValue; //reset\n\t\t\tconst limitCharSizeAttr = this._propsElt?.getAttribute('limitCharSize');\n\t\t\tif (limitCharSizeAttr) {\n\t\t\t\tconst limitCharSize = parseFloat(limitCharSizeAttr);\n\t\t\t\tif (!isNaN(limitCharSize)) {\n\t\t\t\t\tconst stdCharSize = this._stdCharSize ? this._stdCharSize.value : 100;\n\t\t\t\t\tthis._limitCharSize.value = 1000 / stdCharSize * 100 / limitCharSize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._rotateForbid) {\n\t\t\tif(this._propsElt?.hasAttribute('rotateForbidden')) {\n\t\t\t\tthis._rotateForbid.value = this._propsElt.getAttribute('rotateForbidden') === \"true\";\n\t\t\t} else {\n\t\t\t\tthis._rotateForbid.value = this._rotateForbid.defaultValue;\n\t\t\t}\n\t\t}\n\n\t\tthis._pushStateToHistory();\n\t}\n\n\tprotected _pushStateToHistory() {\n\t\tconst currentState: IImgSizeState = {\n\t\t\tstdCharSize: this._stdCharSize ? this._stdCharSize.value : undefined,\n\t\t\tlimitCharSize: this._limitCharSize ? this._limitCharSize.value : undefined,\n\t\t\trotateForbid: this._rotateForbid ? this._rotateForbid.value : undefined\n\t\t};\n\t\tconst lastState = this._history[this._currentStateIdx];\n\t\tif (!lastState || JSON.stringify(lastState) != JSON.stringify(currentState)) {\n\t\t\tthis._history.push(currentState);\n\t\t\tthis._currentStateIdx = this._history.length - 1;\n\t\t}\n\t}\n\n\tprotected _restoreStateFromHistory() {\n\t\tconst currentState = this._history[this._currentStateIdx];\n\t\tif (this._stdCharSize) {\n\t\t\tthis._stdCharSize.value = currentState.stdCharSize;\n\t\t\tthis._onStdCharSizeUpdate();\n\t\t}\n\t\tif (this._limitCharSize) {\n\t\t\tthis._limitCharSize.value = currentState.limitCharSize;\n\t\t\tthis._onLimitCharSizeUpdate();\n\t\t}\n\t\tif (this._rotateForbid) {\n\t\t\tthis._rotateForbid.value = currentState.rotateForbid;\n\t\t\tthis._rotateForbid.input.checked = !this._rotateForbid.value;\n\t\t}\n\t\tthis._setDirty(true, true);\n\t\tthis._requestSaveProps();\n\t}\n\n\tprotected _requestSaveProps() {\n\t\tif (this._savePropsReq) clearTimeout(this._savePropsReq);\n\t\tthis._savePropsReq = setTimeout(() => {\n\t\t\tthis._saveProps();\n\t\t}, 2000) as any /* bug TS 2.9 typage Timer vs number*/;\n\t}\n\n\tprotected async _saveProps() {\n\t\tclearTimeout(this._savePropsReq);\n\t\tconst {env} = this.reg;\n\t\tconst propsDoc = DOM.newDomDoc();\n\t\tconst propsElt = propsDoc.appendChild(document.createElement('imgProps'));\n\t\tconst stdCharSize = this._stdCharSize ? this._stdCharSize.value : 100;\n\t\tif (this._stdCharSize) propsElt.setAttribute('standardCharSize', (1000 / stdCharSize).toString());\n\t\tif (this._limitCharSize) propsElt.setAttribute('limitCharSize', (1000 / stdCharSize * 100 / this._limitCharSize.value).toString());\n\t\tif (this._rotateForbid) propsElt.setAttribute('rotateForbidden', this._rotateForbid.value.toString());\n\t\tawait ITEM.update(env.wsp, this, `${env.longDesc.srcUri}/props.xml`, DOM.ser(propsDoc));\n\t\tthis._setDirty(false);\n\t}\n\n\tprotected _onStdCharSizeUpdate(from?: HTMLElement) {\n\t\tif (!this._dims || this._updateStdCharReq) return;\n\t\tthis._updateStdCharReq = requestAnimationFrame(() => {\n\t\t\tthis._updateStdCharReq = 0;\n\t\t\tconst {value, rangeInput, percentInput, valueInput} = this._stdCharSize;\n\t\t\tconst stdCharDims = this._dims.map((dim) => dim * value / 100);\n\t\t\tif (!this._limitCharSize || !this._limitCharSize.area.matches(':focus-within')) this._updateImgDims(stdCharDims);\n\n\t\t\tconst fixedValue = value.toFixed(1).toString();\n\t\t\tif (rangeInput != from) rangeInput.value = fixedValue;\n\t\t\tif (percentInput != from) percentInput.value = fixedValue;\n\t\t\tif (valueInput != from) valueInput.value = (stdCharDims[0] / 6).toFixed(1).toString();\n\t\t})\n\n\t}\n\n\t_onLimitCharSizeUpdate(from?: HTMLElement) {\n\t\tif (!this._dims || this._updateLimitCharReq) return;\n\t\tthis._updateLimitCharReq = requestAnimationFrame(() => {\n\t\t\tthis._updateLimitCharReq = 0;\n\t\t\tconst {value, rangeInput, percentInput, valueInput} = this._limitCharSize;\n\t\t\tconst stdCharDims = this._stdCharSize ? this._dims.map((dim) => dim * this._stdCharSize.value / 100) : this._dims;\n\t\t\tconst limitCharDims = stdCharDims.map((dim) => dim * value / 100);\n\t\t\tif (this._limitCharSize.area.matches(':focus-within')) this._updateImgDims(limitCharDims);\n\n\t\t\tconst fixedValue = value.toFixed(1).toString();\n\t\t\tif (rangeInput != from) rangeInput.value = fixedValue;\n\t\t\tif (percentInput != from) percentInput.value = fixedValue;\n\t\t\tif (valueInput != from) valueInput.value = (limitCharDims[0] / 6).toFixed(1).toString();\n\t\t});\n\t}\n\n\t_setDirty(dirty: boolean, fromHistory = false) {\n\t\tthis._isDirty = dirty;\n\t\t// Changement d'état des props pour les locker/délocker les autres ImgSize ouvert sur cet item\n\t\tthis.reg.env.place.setState(this._propsWspRef, dirty ? EWspWorkingSt.w : EWspWorkingSt.r);\n\t\tthis._toolbar.refreshContent();\n\t\tif (dirty && !fromHistory) {\n\t\t\tthis._history.length = this._currentStateIdx + 1;\n\t\t}\n\t}\n\n\t_updateImgDims(dims: number[]) {\n\t\tthis._sizeBox.style.width = dims[0] + 'px';\n\t\tthis._sizeBox.style.height = dims[1] + 'px';\n\t\tthis._rulerElem.style.width = dims[0] + 'px';\n\t}\n}\n\ncustomElements.define(\"wsp-imgsize\", ImgSize);\n\nREG.reg.registerSkin(\"wsp-imgsize\", 1, /* language=CSS */ `\n\t:host {\n\t  display: flex;\n\t  min-height: 0;\n\t  min-width: 0;\n  }\n\n  aside {\n\t  display: flex;\n\t  min-height: 0;\n\t  min-width: 0;\n\t  flex-direction: column;\n\t  margin-inline-end: 0.5em;\n\t  overflow-y: auto;\n  }\n\n  #sizeAreas {\n\t  display: flex;\n\t  min-height: auto;\n\t  min-width: 0;\n\t  flex: 1;\n  }\n\n  .sizeArea {\n\t\tdisplay: flex;\n\t\tmin-height: auto;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tflex: 1;\n\t\talign-items: center;\n\t\tmargin: 0.2em 0.3em;\n\t\twidth: 6.1em;\n\t}\n\n\t#rotateForbidArea {\n\t\tdisplay: flex;\n\t\tmin-height: auto;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin: 0.2em;\n\t}\n\n\t.areaTitle {\n\t\tcolor: var(--alt1-color);\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t\tmargin: 0.2em 0;\n\t}\n\n\tlabel {\n\t\tdisplay: block;\n\t}\n\n\tlabel > span {\n\t\tmargin-inline-start: 0.1em;\n\t}\n\n\tinput[type=range] {\n\t\tmargin: 0;\n\t\t-webkit-appearance: slider-vertical;\n\t\tflex: 1;\n\t\twidth: 3em;\n\t\tmin-height: 8em;\n\t}\n\n\tinput[type=number] {\n\t\twidth: 4em;\n\t\ttext-align: center;\n\t\tmargin: 0.2em 0;\n\t}\n\n\t.numberValue {\n\t\tcolor: var(--alt2-color);\n\t}\n\n\t.checkValue {\n\t\tpadding: 2px;\n\t\tmargin: 2px;\n\t}\n\n\tinput[type=checkbox] {\n\t\tdisplay: block;\n\t\tmargin: 0;\n\t}\n\n\t#mainArea {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t}\n\n\t#scrollBox {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\toverflow: auto;\n\t\tflex: 1;\n\t}\n\n\t#sizeBox {\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t\tflex: 0 0 auto;\n\t}\n\n\t::slotted(*) {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: contain;\n\t}\n\n\t#sizeRuler {\n\t\tmargin: 0.5em auto;\n\t\tbackground-image: url(/@skin@/wsp/widgets/imgSize/ruler.png);\n\t\tbackground-repeat: repeat-x;\n\t\theight: 10px;\n\t}\n\n\t#sizeRef {\n\t  position: sticky;\n\t  bottom: 0;\n  }\n\n\n  #txtRef {\n\t  width: 640px;\n\t  box-sizing: border-box;\n\t  margin: 0.5em auto;\n\t  border-color: var(--border-color);\n\t  border-inline-start: dotted 1px;\n\t  border-inline-end: dotted 1px;\n\t  padding: 3px;\n\t  font-size: 10pt;\n\t  background-color: #FFFFFFBB;\n\t  color: #000c18;\n\t  cursor: help;\n  }\n`);\n\nREG.reg.registerSkin(\"wsp-imgsize/txtref-tooltip\", 1, /* language=CSS */ `\n\t::slotted(div) {\n\t\tpadding: 0.5em;\n\t}\n`);\n"]}