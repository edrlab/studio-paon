{"version":3,"sources":["/@back@/wsp/views/task/taskContent.tsx"],"names":["BaseElement","BaseElementAsync","BASIS","MsgLabel","REG","VIEWS","JSX","DOMSH","WSP","ItemEditInDialogInfoBroker","ItemXmlEd","SRC","ItemDynGen","InfoFocusItem","ItemViewerSingle","EItemTypeFamily","ButtonActions","LIFECYCLE","EWspChangesEvts","InfoReqTaskContentItems","InfoTaskCurrentItemsChange","[object Object]","srcRef","shortDesc","lastDatas","this","TaskCtEdit","init","reg","findReg","config","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","itemToEdit","findItemToEdit","_a","env","infoBroker","addConsumer","appendChild","initialize","label","srcId","initEditor","clearContent","wspReg","findWspReg","wsp","fetchShortDesc","_currentItemToEdit","itemType","wspMetaUi","getItemType","itModel","mode","getFamily","xml","getEditor","editorKey","editor","shadowRoot","writePerms","initItemReg","_shown","onViewShown","itemViewer","mainViewCode","root","createElement","initViewer","onViewHidden","removeChild","mainViewParent","remove","info","handleFocusItem","handled","dispatchInfo","hidden","entries","push","entrySgn","srcUri","closed","registerSkin","customElements","define","TaskCtDynGen","itemToShow","initDynGen","dynGenInit","newInit","toolbar","itemDynGen","view","onError","add","onGenError","delete","err","msg","dynGen","me","findHost","taskDesc","longDesc","cts","actCts","TaskCtLc","fieldName","value","selectedTrans","trans","targetState","srcLongDesc","lcSt","getLcStateOrUnknown","name","icon","iconUrl","shortDescs","emitter","skinOver","groupOrder","getLcTransitionsGroupOrder","onWspUriChange","_onWspUriChange","bind","place","eventsMgr","on","super","_initialize","onRefreshTask","innerHTML","fetchLongDesc","actions","listAllTransitionActions","refresh","_refresh","disabled","editable","hasPerm","removeListener","from","type"],"mappings":"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","sourcesContent":["import {BaseElement, BaseElementAsync, BASIS, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {ITaskUiEnv} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView, VIEWS} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JWspUriChangeMsg, WSP} from \"lib/wsp/wsp\";\nimport {ItemEditInDialogInfoBroker, ItemXmlEd} from \"back/wsp/views/item/itemXmlEd\";\nimport {JActTouchedContent, JSrcFields, SRC, srcId, srcRef, srcUri} from \"lib/wsp/src\";\nimport {ItemDynGen, OItemDynGenInit} from \"back/wsp/views/item/itemDynGen\";\nimport {IInfo, IInfoConsumer, IInfoProducer} from \"lib/commons/infos\";\nimport {InfoFocusItem, IShortDescCtx} from \"lib/wsp/item\";\nimport {ItemViewerSingle} from \"back/wsp/views/itemViewerSingle\";\nimport {EItemTypeFamily} from \"lib/wsp/wspMetaUi\";\nimport {DynGen} from \"back/wsp/views/dynGen\";\nimport {ButtonActions, OButtonActionsInit} from \"back/commons/widgets/buttons\";\nimport {SrcExecTransition} from \"back/wsp/actions/lcTaskActions\";\nimport {LIFECYCLE} from \"lib/wsp/lcTask\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\n\n\n/** Items de contenu affichés\n * \t\tRemarque : ce message ne concerne pas l'édition de la task courante et sont donc à envoyer sur l'infoBroker courant, et non pas sur taskEditBroker\n * */\nexport class InfoReqTaskContentItems implements IInfo {\n\t/** null pour signifier aucun item content courant */\n\tentries: {\n\t\tentrySgn: string,\n\t\tsrcUri?: srcUri;\n\t\t/** shortDesc de l'item courant si srcUri non null.*/\n\t\tshortDesc?: JSrcFields;\n\t}[]\n\tinfoHolders?: IInfoProducer[];\n}\n\n/**\n * Message annonçant l'évolution d'affichage d'un taskContent\n * \tRemarque : ce message ne concerne pas l'édition de la task courante et sont donc à envoyer sur l'infoBroker courant, et non pas sur taskEditBroker\n */\nexport class InfoTaskCurrentItemsChange implements IInfo {\n\thandled: boolean;\n\n\tconstructor(public srcRef?: srcRef, public shortDesc?: JSrcFields, public lastDatas?: JLastDatas) {\n\t}\n\n\tinfoHolders?: IInfoProducer[];\n}\n\n/**\n * Edition d'un item lié à une tâche.\n *\n * Config attributes:\n */\nexport interface TaskCtEdit extends BaseElementAsync {\n\tinitialize(init: OTaskCtEditInit): this;\n}\n\nexport interface OTaskCtInit {\n\t/** todo Sélection de l'item à éditer. Par défaut : le 1er ! */\n\t//selectItem?: ()=>srcRef\n\n\t/** Si true, modifie dynamiquement le content en cours d'édition en fonction de l'info \"focusItem\"**/\n\thandleFocusItem: boolean\n}\n\nexport interface OTaskCtEditInit extends OTaskCtInit, OSkinableInit {\n\treg?: IReg<ITaskUiEnv>\n\n\t/** Editor à utiliser (mode 'editor'). */\n\teditorKey?: string\n\n\t/** Permission spécifique à cet éditeur (mode 'editor'). */\n\twritePerms?: string | string[]\n\n\t/** editor : juste l'éditeur spécifié si existant\n\t *  mainView : affiche la vue \"mainView\" (en mode ':hideWspStruct:')\n\t * Si non spécifié : 'editor' si disponible, ou 'mainView' à défaut */\n\tmode?: 'editor' | 'mainView'\n}\n\nexport class TaskCtEdit extends BaseElementAsync implements IView, IInfoConsumer {\n\treg: IReg<ITaskUiEnv>;\n\n\tconfig: OTaskCtEditInit;\n\n\teditor: ItemXmlEd;\n\n\tprotected _currentItemToEdit: JSrcFields;\n\n\t/** Fallback si pas d'éditeur. */\n\titemViewer: ItemViewerSingle;\n\n\tprotected _shown: boolean;\n\n\tasync _initialize(init: OTaskCtEditInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.config = init;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst itemToEdit = findItemToEdit(this.reg, init);\n\t\tthis.reg.env.infoBroker?.addConsumer(this);\n\t\tif (!itemToEdit) {\n\t\t\tsr.appendChild(new MsgLabel().initialize({label: \"Aucun item n'est lié à cette tâche\"}));\n\t\t} else {\n\t\t\tconst srcId = itemToEdit.srcId;\n\t\t\tawait this.initEditor(srcId);\n\t\t}\n\t}\n\n\t/**\n\t * Initialise ou remplace l'éditeur\n\t * @param srcId\n\t */\n\tprotected async initEditor(srcId: srcId, shortDesc?: JSrcFields) {\n\t\tthis.clearContent();\n\t\tconst wspReg = WSP.findWspReg(this.reg);\n\t\tconst wsp = wspReg.env.wsp;\n\t\tif (!shortDesc) shortDesc = await WSP.fetchShortDesc(wsp, this, srcId);\n\t\tthis._currentItemToEdit = shortDesc;\n\t\tconst itemType = wsp.wspMetaUi.getItemType(shortDesc.itModel);\n\t\tif (this.config.mode !== 'mainView' && itemType.getFamily() === EItemTypeFamily.xml && itemType.getEditor(this.config.editorKey)) {\n\t\t\tthis.editor = this.shadowRoot.appendChild(new ItemXmlEd().initialize({\n\t\t\t\treg: wspReg,\n\t\t\t\tsrcRef: srcId,\n\t\t\t\twritePerms: this.config.writePerms,\n\t\t\t\teditorKey: this.config.editorKey,\n\t\t\t\tinitItemReg: (reg) => {\n\t\t\t\t\treg.env.infoBroker = new ItemEditInDialogInfoBroker(wspReg);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tif (this._shown) VIEWS.onViewShown(this.editor);\n\t\t} else {\n\t\t\t//Cet item n'est pas un item XML ou ne possède pas d'éditeur this.config.editorKey\n\t\t\t//On affiche la mainView à la place.\n\t\t\tthis.itemViewer = new ItemViewerSingle({ mainViewCode: \":hideWspStruct:\" });\n\t\t\tconst root = this.shadowRoot.appendChild(<div/>);\n\t\t\tawait this.itemViewer.initViewer(wspReg, root, null, srcId);\n\t\t\tif (this._shown) VIEWS.onViewShown(this.itemViewer);\n\t\t}\n\t}\n\n\tprotected clearContent() {\n\t\tif (this.editor) {\n\t\t\tif (this._shown) VIEWS.onViewHidden(this.editor, true);\n\t\t\tthis.shadowRoot.removeChild(this.editor);\n\t\t\tthis.editor = null;\n\t\t}\n\t\tif (this.itemViewer) {\n\t\t\tif (this._shown) VIEWS.onViewHidden(this.itemViewer, true);\n\t\t\tthis.itemViewer.mainViewParent.remove();\n\t\t\tthis.itemViewer = null;\n\t\t}\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (this.config.handleFocusItem) {\n\t\t\tif (info instanceof InfoFocusItem && !info.handled) {\n\t\t\t\tinfo.handled = true;\n\t\t\t\tthis.initEditor(info.srcRef, info.shortDesc);\n\t\t\t\tthis.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(info.srcRef, info.shortDesc), this);\n\t\t\t}\n\t\t}\n\t\tif (info instanceof InfoReqTaskContentItems) {\n\t\t\tif (this.hidden) return;\n\t\t\tif (this._currentItemToEdit) {\n\t\t\t\tif (!info.entries)\n\t\t\t\t\tinfo.entries = [];\n\t\t\t\tinfo.entries.push({\n\t\t\t\t\tentrySgn: 'taskCtEdit',\n\t\t\t\t\tshortDesc: this._currentItemToEdit,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tonViewShown() {\n\t\tthis._shown = true;\n\t\tif (this.editor) VIEWS.onViewShown(this.editor);\n\t\tif (this.itemViewer) VIEWS.onViewShown(this.itemViewer);\n\t\tif (this._currentItemToEdit) this.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(this._currentItemToEdit.srcUri, this._currentItemToEdit), this);\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tthis._shown = false;\n\t\tif (this.editor) VIEWS.onViewHidden(this.editor, closed);\n\t\tif (this.itemViewer) VIEWS.onViewHidden(this.itemViewer, closed);\n\t\tthis.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(), this);\n\t}\n\n\n}\n\nREG.reg.registerSkin(\"wsp-task-ct-edit\", 1, /* language=CSS */ `\n\t:host,\n\tdiv {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\twsp-item-xmled {\n\t\tflex: 1;\n\t}\n`);\n\ncustomElements.define(\"wsp-task-ct-edit\", TaskCtEdit);\n\n/**\n * DynGen d'un item lié à une tâche.\n *\n * Config attributes:\n */\n\nexport interface TaskCtDynGen extends BaseElement {\n\tinitialize(init: OTaskCtDynGenInit): this;\n}\n\nexport interface OTaskCtDynGenInit extends OTaskCtInit, OItemDynGenInit {\n\treg?: IReg<ITaskUiEnv>\n}\n\nexport class TaskCtDynGen extends BaseElement implements IView, IInfoConsumer {\n\treg: IReg<ITaskUiEnv>;\n\n\tconfig: OTaskCtDynGenInit;\n\n\titemDynGen: ItemDynGen;\n\n\tsrcId: srcId;\n\n\t/** Fallback si pas de dynGen. */\n\titemViewer: ItemViewerSingle;\n\n\tprotected _shown: boolean;\n\n\t_initialize(init: OTaskCtDynGenInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.config = init;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst itemToShow = findItemToEdit(this.reg, init);\n\t\tthis.reg.env.infoBroker?.addConsumer(this);\n\t\tif (!itemToShow)\n\t\t\tthis.appendChild(new MsgLabel().initialize({label: \"Aucun item n'est lié à cette tâche\"}));\n\t\telse\n\t\t\tthis.initDynGen(itemToShow.srcId);\n\t}\n\n\t/**\n\t * Initialise ou remplace la dynGen\n\t * @param srcId\n\t */\n\tprivate initDynGen(srcId: srcId) {\n\t\tthis.clearContent();\n\t\tthis.srcId = srcId;\n\t\tconst wspReg = WSP.findWspReg(this.reg);\n\t\tconst dynGenInit: OItemDynGenInit = BASIS.newInit(this.config, wspReg);\n\t\tdynGenInit.srcRef = srcId;\n\t\tif (!dynGenInit.toolbar) dynGenInit.toolbar = false;\n\t\tthis.itemDynGen = this.shadowRoot.appendChild(new ItemDynGen().initialize(dynGenInit));\n\t\tif (this._shown) VIEWS.onViewShown(this.itemDynGen);\n\t\tthis.itemDynGen.view.onError.add(this.onGenError);\n\t}\n\n\tprotected clearContent() {\n\t\tif (this.itemDynGen) {\n\t\t\tVIEWS.onViewHidden(this.itemDynGen, true);\n\t\t\tthis.shadowRoot.removeChild(this.itemDynGen);\n\t\t\tthis.itemDynGen.view.onError.delete(this.onGenError);\n\t\t\tthis.itemDynGen = null;\n\t\t}\n\t\tif (this.itemViewer) {\n\t\t\tif (this._shown) VIEWS.onViewHidden(this.itemViewer, true);\n\t\t\tthis.itemViewer.mainViewParent.remove();\n\t\t\tthis.itemViewer = null;\n\t\t}\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (this.config.handleFocusItem) {\n\t\t\tif (info instanceof InfoFocusItem && !info.handled) {\n\t\t\t\tinfo.handled = true;\n\t\t\t\tthis.initDynGen(info.srcRef);\n\t\t\t\tthis.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(info.srcRef), this);\n\t\t\t}\n\t\t}\n\t\tif (info instanceof InfoReqTaskContentItems) {\n\t\t\tif (this.hidden || !this._shown) return;\n\t\t\tif (this.srcId) {\n\t\t\t\tif (!info.entries)\n\t\t\t\t\tinfo.entries = [];\n\t\t\t\tinfo.entries.push({\n\t\t\t\t\tentrySgn: 'taskCtDynGen',\n\t\t\t\t\tsrcUri: this.srcId,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t}\n\n\tonViewShown() {\n\t\tthis._shown = true;\n\t\tif (this.itemDynGen) VIEWS.onViewShown(this.itemDynGen);\n\t\tif (this.itemViewer) VIEWS.onViewShown(this.itemViewer);\n\t\tif (this.srcId) this.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(this.srcId), this);\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tthis._shown = false;\n\t\tif (this.itemDynGen) VIEWS.onViewHidden(this.itemDynGen, closed);\n\t\tif (this.itemViewer) VIEWS.onViewHidden(this.itemViewer, closed);\n\t\tthis.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(), this);\n\t}\n\n\tonGenError(this: void, err: 'empty' | 'message', msg: Element, dynGen: DynGen) {\n\t\t//Erreur à l'affichage du dyGen, on bascule sur la mainView.\n\t\tconst me = DOMSH.findHost<TaskCtDynGen>(DOMSH.findHost<ItemDynGen>(dynGen));\n\t\tme.clearContent();\n\t\tme.itemViewer = new ItemViewerSingle();\n\t\tconst root = me.shadowRoot.appendChild(<div/>);\n\t\tme.itemViewer.initViewer(me.reg, root, null, me.srcId);\n\t\tif (me._shown) VIEWS.onViewShown(me.itemViewer);\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-task-ct-dyngen\", 1, /* language=CSS */ `\n\t:host,\n\tdiv {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n`);\n\ncustomElements.define(\"wsp-task-ct-dyngen\", TaskCtDynGen);\n\n\nfunction findItemToEdit(reg: IReg<ITaskUiEnv>, config: OTaskCtInit): JActTouchedContent {\n\tconst taskDesc = reg.env.longDesc;\n\tconst cts = taskDesc.actCts;\n\tif (cts) return cts[0];\n}\n\n\n/**\n * LC sur l'item root associé à la task\n */\nexport interface OTaskCtLcInit extends OTaskCtInit, OButtonActionsInit<IShortDescCtx> {\n\treg?: IReg<ITaskUiEnv>\n\t/** true par défaut */\n\teditable?: boolean\n\t/** Si true, accepte que le champ soit en erreur à l'enregistrement.\n\t * false par défaut */\n\tpermissive?: boolean\n\twritePerms?: string | string[]\n}\n\nexport class TaskCtLc extends ButtonActions<IShortDescCtx> implements IShortDescCtx, IView, IInfoConsumer {\n\treg: IReg<ITaskUiEnv>;\n\n\tconfig: OTaskCtLcInit;\n\n\tsrcId: srcId;\n\n\tsrcLongDesc: JSrcFields;\n\n\tselectedTrans: SrcExecTransition<IShortDescCtx>;\n\n\tprotected onWspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => void;\n\n\tget fieldName() {return 'lcSt' as 'lcSt'}\n\n\tget value(): string {return this.selectedTrans ? this.selectedTrans.trans.targetState : (this.srcLongDesc ? this.srcLongDesc.lcSt : '')}\n\n\tget label() {\n\t\treturn this.reg.env.wsp.wspMetaUi.getLcStateOrUnknown(this.value).name;\n\t}\n\n\tget icon() {\n\t\treturn this.reg.env.wsp.wspMetaUi.getLcStateOrUnknown(this.value).iconUrl;\n\t}\n\n\tget shortDescs() {return [this.srcLongDesc]}\n\n\tget emitter() {return this}\n\n\tprotected _initialize(init: OTaskCtLcInit): void {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.config = init;\n\t\tinit.skinOver = this.localName;\n\t\tinit.groupOrder = this.reg.env.wsp.wspMetaUi.getLcTransitionsGroupOrder();\n\t\tthis.onWspUriChange = this._onWspUriChange.bind(this);\n\t\tthis.reg.env.infoBroker?.addConsumer(this);\n\t\tthis.reg.env.place.eventsMgr.on(\"wspUriChange\", this.onWspUriChange);\n\t\tsuper._initialize(init);\n\t\tconst itemToShow = findItemToEdit(this.reg, this.config);\n\t\tthis.onRefreshTask(itemToShow.srcId);\n\t}\n\n\t/**\n\t * Initialise ou remplace le lc\n\t * @param srcId\n\t */\n\tprivate async onRefreshTask(srcId: srcId, longDesc?: JSrcFields) {\n\t\tthis.innerHTML = \"\";\n\t\tif (!srcId)\n\t\t\tthis.appendChild(new MsgLabel().initialize({label: \"Aucun item n'est lié à cette tâche\"}));\n\t\telse {\n\t\t\tthis.srcId = srcId;\n\t\t\tthis.srcLongDesc = longDesc || await this.reg.env.wsp.fetchLongDesc(this.srcId);\n\t\t\tthis.actions = LIFECYCLE.listAllTransitionActions(this.reg.env.wsp.wspMetaUi);\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tprotected _refresh() {\n\t\tsuper._refresh();\n\t\tthis.disabled = this.config.editable === false || (this.config.writePerms && !this.reg.hasPerm(this.config.writePerms));\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tif (closed) {\n\t\t\tthis.reg.env.place.eventsMgr.removeListener(\"wspUriChange\", this.onWspUriChange);\n\t\t}\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (this.config.handleFocusItem) {\n\t\t\tif (info instanceof InfoFocusItem && !info.handled) {\n\t\t\t\tinfo.handled = true;\n\t\t\t\tthis.reg.env.infoBroker?.dispatchInfo(new InfoTaskCurrentItemsChange(info.shortDesc.srcId), this);\n\t\t\t\tthis.onRefreshTask(info.shortDesc.srcId);//longDesc non fourni ici\n\t\t\t}\n\t\t}\n\t\tif (info instanceof InfoReqTaskContentItems) {\n\t\t\tif (this.hidden) return;\n\t\t\tif (this.srcLongDesc || this.srcId) {\n\t\t\t\tif (!info.entries)\n\t\t\t\t\tinfo.entries = [];\n\t\t\t\tinfo.entries.push({\n\t\t\t\t\tentrySgn: 'taskCtLc',\n\t\t\t\t\tshortDesc: this.srcLongDesc,\n\t\t\t\t\tsrcUri: this.srcId,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _onWspUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') {\n\t\tif (this.srcLongDesc) {\n\t\t\tif (msg.type === EWspChangesEvts.lcSt && SRC.srcRef(this.srcLongDesc) === SRC.srcRef(msg)) {\n\t\t\t\tthis.onRefreshTask(msg.srcId);//longdesc pas disponible\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nREG.reg.registerSkin(\"wsp-task-ct-lc\", 1, /* language=CSS */ `\n\t:host {\n\t\tcolor: var(--edit-color);\n\t}\n\n\t:host([disabled]) {\n\t\topacity: unset;\n\t}\n`);\n\ncustomElements.define(\"wsp-task-ct-lc\", TaskCtLc);"]}