{"version":3,"sources":["/@back@/core/plugins/showPlg.tsx"],"names":["SimpleTagArea","REG","initApp","reg","d","desk","addAppBuilder","ShowAppBuilder","[object Object]","super","env","resolver","resolve","this","data","show","url","alias","ctx","skinOver","whiteDomains","getList","aliasUrls","getListAsMap","newElt","initialize"],"mappings":"OACQA,kBAAc;OACAC,QAAI;OAcpB,SAAUC,QAAQC,IAAuCF,IAAIE,KAClE,MAAMC,EAAIC;AACVD,EAAEE,cAAc,IAAIC,eAAeJ,MAiBpC,MAAMI,uBAAuBP,cAI5BQ,YAAmBL,KAClBM,MAAM,WAAYN,IAAIO,IAAIC,SAASC,QAAQ;AADzBC,KAAAV,IAAAA,IAInBK,cAAcM,MACb,cAAeA,KAAKC,OAAS,WAAcD,KAAKC,KAAKC,KAAO,IAAMF,KAAKC,KAAKE,OAAS,IAGtFT,OAAOU,KACN,IAAKA,IAAIC,SAAUD,IAAIC,SAAWN,KAAKM;AACvC,IAAKD,IAAIE,aAAcF,IAAIE,aAAeF,IAAIf,IAAIkB,QAAQ;AAC1D,IAAKH,IAAII,UAAWJ,IAAII,UAAYJ,IAAIf,IAAIoB,aAAa;AACzDL,IAAIf,IAAMU,KAAKV;AACf,OAAQM,MAAMe,OAAON,KAAiBO,WAAWP","sourcesContent":["import {AppFrameDeskFeat, IApp, IAppBuilder, IAppCtx, JAppDef} from \"back/core/appFrame\";\nimport {SimpleTagArea} from \"lib/commons/areas\";\nimport {IReg, IUiEnv, REG} from 'lib/commons/registry';\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {OShowAppInit, ShowApp} from \"back/core/apps/frameApp\";\nimport {IResolverPointer} from \"lib/commons/io/io\";\n\n/**\n * Résultat d'un service, ou page web affichée comme une vue principale dans une appFrame (contexte authentifié)\n * A appeler au cours du processus d'init du desk (qui doit disposer de AppFrameDeskFeat).\n *\n * @param reg Registre à exploiter, nécessaire en cas de front multi-universe.\n *\n * Registre :\n * \tliste 'plg:show:domains:white'\n */\nexport function initApp(reg: IReg<IResolverPointer & IUiEnv> = REG.reg) {\n\tconst d = desk as AppFrameDeskFeat;\n\td.addAppBuilder(new ShowAppBuilder(reg));\n}\n\n/**\n * Schéma du hash de l'URL pour le ShowApp.\n * exemple : (show(url'http://xxxx/mySvc'))\n */\nexport interface JShowAppDef extends JAppDef {\n\tshow: {\n\t\t/** URL libre (soumise au contrôle {@link IO.isRedirectValid}) */\n\t\turl?: string,\n\t\t/** Ref à une URL du registre */\n\t\talias: string,\n\t}\n}\n\n/** Construction async de l'app ShowApp. */\nclass ShowAppBuilder extends SimpleTagArea<IAppCtx<IUiEnv>, IApp<IUiEnv>> implements IAppBuilder<IUiEnv, IUiEnv> {\n\n\tskinOver?: string;\n\n\tconstructor(public reg: IReg<IResolverPointer & IUiEnv>) {\n\t\tsuper('show-app', reg.env.resolver.resolve(\":back:core/apps/frameApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JShowAppDef) {\n\t\treturn (typeof data.show === 'object') && (data.show.url != '' || data.show.alias != '')\n\t}\n\n\tnewElt(ctx: OShowAppInit): ShowApp {\n\t\tif (!ctx.skinOver) ctx.skinOver = this.skinOver;\n\t\tif (!ctx.whiteDomains) ctx.whiteDomains = ctx.reg.getList(\"plg:show:domains:white\") as (string)[];\n\t\tif (!ctx.aliasUrls) ctx.aliasUrls = ctx.reg.getListAsMap(\"plg:show:alias:url\");\n\t\tctx.reg = this.reg;\n\t\treturn (super.newElt(ctx) as ShowApp).initialize(ctx);\n\t}\n}\n"]}