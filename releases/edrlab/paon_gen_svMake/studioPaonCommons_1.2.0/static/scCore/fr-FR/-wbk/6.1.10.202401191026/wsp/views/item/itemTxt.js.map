{"version":3,"sources":["/@back@/wsp/views/item/itemTxt.tsx"],"names":["BaseElement","installSrcViewFileDrop","REG","JSX","DOMSH","WSP","SRC","ItemTxt","[object Object]","init","this","reg","findReg","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","installSkin","env","_textareaElt","createElement","readonly","appendChild","place","eventsMgr","on","msg","srcRef","longDesc","refreshContent","transform","value","fetchStreamText","wsp","itemType","getMainStreamSrcUri","registerSkin","customElements","define"],"mappings":"OAAQA,gBAA2B;OACfC,2BAAuB;OAC7BC,QAAI;OAEVC,QAAI;OACJC,UAAM;OACYC,QAAI;OACtBC,QAAI;OAgBN,MAAOC,gBAAgBP,YAK5BQ,YAAYC,MACXC,KAAKC,IAAMD,KAAKE,QAAQH;AACxB,MAAMI,GAAKH,KAAKI,aAAaV,MAAMW;AACnCL,KAAKM,oBAAoBN,KAAKO,UAAWR;AACzCC,KAAKC,IAAIO,YAAY,eAAgBL;AAErCZ,uBAAuBS,KAAKC,IAAKD;AACjC,MAAMS,IAACA,KAAOT,KAAKC;AACnBD,KAAKU,aAAejB,IAAAkB,cAAA,WAAA,CAAUC,SAAQ;AACtCT,GAAGU,YAAYb,KAAKU;AAGpBD,IAAIK,MAAMC,UAAUC,GAAG,eAAiBC,MACvC,GAAIrB,IAAIsB,OAAOT,IAAIU,YAAcvB,IAAIsB,OAAOD,KAAM,CACjDjB,KAAKoB,eAAeX,IAAKV,KAAKsB;AAIhCrB,KAAKoB,eAAepB,KAAKC,IAAIQ,IAAKV,KAAKsB,WAGxCvB,qBAAqBW,IAAiBY,WACrCrB,KAAKU,aAAaY,YAAc3B,IAAI4B,gBAAgBd,IAAIe,IAAKxB,KAAMS,IAAIgB,SAASC,oBAAoBjB,IAAIU,UAAWE,YAIrH7B,IAAIS,IAAI0B,aAAa,eAAgB,EAAsB;AAqB3DC,eAAeC,OAAO,eAAgBhC","sourcesContent":["import {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {IItemUiEnv, installSrcViewFileDrop} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JWspUriChangeMsg, WSP} from \"lib/wsp/wsp\";\nimport {SRC} from \"lib/wsp/src\";\n\n/**\n * View du contenu textuel d'un item (RO)\n *\n * Config attributes:\n */\nexport interface OItemTxtInit extends OSkinableInit {\n\treg?: IReg<IItemUiEnv>\n\ttransform?: string\n}\n\nexport interface ItemTxt extends BaseElement {\n\tinitialize(init: OItemTxtInit): this\n}\n\nexport class ItemTxt extends BaseElement implements IView {\n\treg: IReg<IItemUiEnv>;\n\n\tprivate _textareaElt: HTMLTextAreaElement;\n\n\t_initialize(init: OItemTxtInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.reg.installSkin('scroll/large', sr);\n\n\t\tinstallSrcViewFileDrop(this.reg, this);\n\t\tconst {env} = this.reg;\n\t\tthis._textareaElt = <textarea readonly/> as HTMLTextAreaElement;\n\t\tsr.appendChild(this._textareaElt);\n\n\t\t// Listener sur les changements de la ressource\n\t\tenv.place.eventsMgr.on(\"wspUriChange\", (msg: JWspUriChangeMsg) => {\n\t\t\tif (SRC.srcRef(env.longDesc) === SRC.srcRef(msg)) {\n\t\t\t\tthis.refreshContent(env, init.transform);\n\t\t\t}\n\t\t});\n\n\t\tthis.refreshContent(this.reg.env, init.transform);\n\t}\n\n\tasync refreshContent(env: IItemUiEnv, transform: string) {\n\t\tthis._textareaElt.value = await WSP.fetchStreamText(env.wsp, this, env.itemType.getMainStreamSrcUri(env.longDesc), transform);\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-item-txt\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t  flex: 1;\n\t  flex-direction: column;\n\t  padding: 1px;\n  }\n\n  textarea {\n\t  flex: 1;\n\t  border: none;\n\t  resize: none;\n\t  outline: none;\n\t  background-color: var(--bgcolor);\n\t  color: var(--color);\n  }\n`);\n\n\ncustomElements.define(\"wsp-item-txt\", ItemTxt);\n"]}