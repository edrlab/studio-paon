{"version":3,"sources":["/@back@/core/dialogs/userProfile.tsx"],"names":["REG","BaseElementAsync","DOM","JSX","AREAS","Button","POPUP","FORMS","ERROR","EUserAspects","DOMSH","UserProfile","[object Object]","this","buildControlLabel","buildUnlockBtn","users","init","reg","userSelfSrv","env","universe","userSelf","uiContextSgn","_revertBtn","initialize","uiContext","label","disabled","_saveBtn","closeBtn","_form","createElement","id","class","area-ids","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","append","applyLayout","Promise","all","getList","_emptyData","formToJson","_updateForm","checkValidity","_boundUpdateForm","bind","auth","listeners","on","checkDirtyState","user","dirty","JSON","stringify","_userData","checkDirtyRequest","addEventListener","clearTimeout","setTimeout","onclick","findPopupableParent","close","async","reportValidity","authMethod","account","resp","updateCurrentUser","e","report","clear","currentAuthenticatedUser","jsonToForm","fieldset","elements","namedItem","readonly","isReadOnly","isDisabled","hasAspect","updatable","setHidden","closed","removeListener","registerSkin","customElements","define","addSvcToList"],"mappings":"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","sourcesContent":["import {IReg, REG} from \"lib/commons/registry\";\nimport {BaseElementAsync, OSkinableInit} from \"back/commons/basis\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {AREAS, IArea, IControlAreaContext} from \"lib/commons/areas\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {FORMS} from \"lib/commons/forms\";\nimport {IView} from \"lib/commons/views\";\nimport {IBasicUniversePointer} from \"lib/core/universe\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IUserAreaContext} from \"back/core/dialogs/userAreas\";\nimport {EUserAspects, JUser} from \"lib/core/user\";\nimport {UserSelfSrv} from \"lib/core/userSelf\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\n\n/**\n * Écran de modifification du profile d'un utilisateur\n */\nexport interface UserProfile extends BaseElementAsync {\n\tinitialize(init: OUserProfileInit): this\n}\n\nexport interface OUserProfileInit extends OSkinableInit {\n\treg: IReg<IBasicUniversePointer>\n}\n\nexport class UserProfile extends BaseElementAsync implements IView, IControlAreaContext, IUserAreaContext {\n\treg: IReg<IBasicUniversePointer>;\n\n\t// IControlAreaContext\n\tbuildControlLabel = true;\n\tbuildUnlockBtn = true;\n\n\t// IUserAreaContext\n\tuiContextSgn: string;\n\tuserSelfSrv: UserSelfSrv\n\tusers?: JUser[] = null;\n\n\tprotected _form: HTMLFormElement;\n\tprotected _emptyData: any;\n\tprotected _userData: string;\n\tprotected _boundUpdateForm: any;\n\tprotected _revertBtn: Button;\n\tprotected _saveBtn: Button;\n\n\tprotected async _initialize(init: OUserProfileInit) {\n\t\tthis.reg = init.reg;\n\n\t\tthis.userSelfSrv = this.reg.env.universe.userSelf;\n\n\t\tthis.uiContextSgn = \"@user#self#edit\";\n\n\t\tthis._revertBtn = new Button().initialize({uiContext: \"dialog\", label: \"Rétablir\", disabled: true});\n\t\tthis._saveBtn = new Button().initialize({uiContext: \"dialog\", label: \"Enregistrer\", disabled: true});\n\t\tconst closeBtn = new Button().initialize({uiContext: \"dialog\", label: \"Fermer\"});\n\n\t\tthis._form = <form id=\"form\">\n\t\t\t<fieldset id=\"fieldset\">\n\t\t\t\t<div id=\"common\">\n\t\t\t\t\t<div class=\"fields\" area-ids=\"account nickNames authMethod\"/>\n\t\t\t\t\t<div class=\"fields\" area-ids=\"firstName lastName email\"/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"fields\" area-ids=\"*\"/>\n\t\t\t</fieldset>\n\t\t</form> as HTMLFormElement;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"standard-dialog\", sr);\n\t\tthis.reg.installSkin(\"form-control-areas\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tDOM.append(sr,\n\t\t\tthis._form,\n\t\t\t<div id=\"footer\">\n\t\t\t\t{this._revertBtn}\n\t\t\t\t{this._saveBtn}\n\t\t\t\t{closeBtn}\n\t\t\t</div>\n\t\t);\n\n\t\tawait AREAS.applyLayout(this._form, await Promise.all(this.reg.getList<IArea | Promise<IArea>>('userProps:profile')), this);\n\n\t\tthis._emptyData = FORMS.formToJson(this._form);\n\t\tawait this._updateForm(false);\n\t\tthis._form.checkValidity();\n\t\tthis._boundUpdateForm = await this._updateForm.bind(this) as any;\n\t\tthis.reg.env.universe.auth.listeners.on('loggedUserChanged', this._boundUpdateForm);\n\n\t\tconst checkDirtyState = () => {\n\t\t\tconst user = FORMS.formToJson(this._form);\n\t\t\tconst dirty = JSON.stringify(user) !== this._userData;\n\t\t\tthis._revertBtn.disabled = this._saveBtn.disabled = !dirty;\n\t\t};\n\n\t\tlet checkDirtyRequest = 0;\n\t\tthis._form.addEventListener('input', () => {\n\t\t\tif (checkDirtyRequest) {\n\t\t\t\tclearTimeout(checkDirtyRequest);\n\t\t\t\tcheckDirtyRequest = 0;\n\t\t\t}\n\t\t\tcheckDirtyRequest = setTimeout(checkDirtyState, 300) as any;\n\t\t});\n\n\t\tcloseBtn.onclick = () => {\n\t\t\tPOPUP.findPopupableParent(this).close();\n\t\t};\n\n\t\tthis._revertBtn.onclick = this._boundUpdateForm;\n\n\t\tthis._saveBtn.onclick = async () => {\n\t\t\tif (this._form.reportValidity()) {\n\t\t\t\tconst user = FORMS.formToJson(this._form);\n\t\t\t\tdelete user.authMethod;\n\t\t\t\tdelete user.account;\n\t\t\t\ttry {\n\t\t\t\t\tconst resp = await this.reg.env.universe.auth.updateCurrentUser(user);\n\t\t\t\t\tif (resp) {\n\t\t\t\t\t\tawait this._updateForm(true);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow \"User not created\";\n\t\t\t\t} catch (e) {\n\t\t\t\t\tawait ERROR.report(`Une erreur est survenue lors de la mise à jour du profil. Veuillez réessayer ultérieurement.`, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async _updateForm(clear: boolean = true) {\n\t\tconst {auth} = this.reg.env.universe;\n\t\tconst user = auth.currentAuthenticatedUser;\n\t\tthis.users = [auth.currentAuthenticatedUser];\n\t\tif (clear) FORMS.jsonToForm(this._emptyData, this._form);\n\t\tFORMS.jsonToForm(user, this._form, true);\n\t\tthis._userData = JSON.stringify(FORMS.formToJson(this._form));\n\t\t// Désactivation de tout le formulaire si l'utilisateur est readOnly\n\t\tconst fieldset = this._form.elements.namedItem('fieldset') as HTMLFieldSetElement;\n\t\tlet readonly = user.isReadOnly || user.isDisabled || !this.reg.env.universe.userSelf.hasAspect(EUserAspects.updatable);\n\t\tfieldset.disabled = readonly;\n\t\tDOM.setHidden(this._revertBtn, readonly);\n\t\tDOM.setHidden(this._saveBtn, readonly);\n\t\tif (clear) this._revertBtn.disabled = this._saveBtn.disabled = true;\n\t}\n\n\tonViewHidden(closed?: boolean): void {\n\t\tconst {auth} = this.reg.env.universe;\n\t\tif (this._boundUpdateForm) auth.listeners.removeListener('loggedUserChanged', this._boundUpdateForm);\n\t}\n}\n\nREG.reg.registerSkin('c-user-profile', 1, /* language=CSS */ `\n\t:host {\n\t\tmin-width: 40em;\n\t\tmin-height: 12em;\n\t}\n\n\tform {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tflex: 1;\n\t\tpadding: 1em;\n\t}\n\n\tfieldset {\n\t  border: none;\n\t  padding: 0;\n\t  margin: 0;\n  }\n\n  #common {\n\t  display: flex;\n\t  flex: 1;\n\t  min-height: 0;\n\t  min-width: 0;\n\t  flex-wrap: wrap;\n  }\n\n  #common > .fields {\n\t  flex: 1;\n\t  display: flex;\n\t  flex-direction: column;\n\t  min-width: 10em;\n  }\n\n  #common > .fields:first-child {\n\t  margin-inline-end: 2em;\n  }\n\n  .fields div[hidden] {\n\t  display: none !important;\n  }\n\n  div[area-id=authMethod] {\n\t\tflex-direction: column;\n\t}\n\n\tdiv[area-id=authMethod] > div {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n`);\n\ncustomElements.define('c-user-profile', UserProfile);\n\nREG.reg.addSvcToList(\"userProps:profile\", 'account', 1, 'area.users.props');\nREG.reg.addSvcToList(\"userProps:profile\", 'firstName', 1, 'area.users.firstName');\nREG.reg.addSvcToList(\"userProps:profile\", 'lastName', 1, 'area.users.lastName');\nREG.reg.addSvcToList(\"userProps:profile\", 'nickNames.first', 1, 'area.users.nickNames.first');\nREG.reg.addSvcToList(\"userProps:profile\", 'email', 1, 'area.users.email.user');\n\n"]}