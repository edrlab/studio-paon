{"version":3,"sources":["/@back@/wsp/views/item/itemDynGen.tsx"],"names":["BaseElement","REG","DOM","JSX","SRC","DynGen","BarActions","Action","CDM","IO","ERROR","POPUP","ITEM","ButtonActions","Desk","ItemDynGen","[object Object]","this","onViewBehaviour","currentGen","_currentGen","gen","_updateSkins","reloadFrame","currentSkin","_currentSkin","skinCode","refresh","config","view","configs","c","_a","code","gp","Object","assign","_b","genProps","skin","genFrame","src","getDynGenUrl","url","contentWindow","location","reload","init","reg","findReg","generators","length","log","firstGen","srcRef","isHistoryOrTrashUri","env","longDesc","srcUri","_attach","localName","isTrashUri","createElement","label","initialize","w","wsp","r","autoResize","toolbar","toolbarConf","actionsBar","actions","mergeLists","actionsList","actionContext","genActions","genDatas","iconUrl","icon","itemType","datas","wspResUrl","resolve","push","SelectGenAction","genSelector","title","skinSelector","hidden","id","refreshAction","gotoHome","gotoHomeAction","openInNewTab","openInNewTabAction","copyUrl","copyUrlAction","itemDynGenUrl","universe","wspServer","skins","fetchJson","qs","availableSkins","map","SelectSkinAction","setHidden","refreshContent","hasSkinSelector","hasGenSelector","_forceRefreshOnViewShown","refreshFrame","undefined","onViewShown","closed","onViewHidden","visitor","options","Promise","registerSkin","customElements","define","super","ctx","getLabel","getIcon","api","ev","_label","_id","ItemDynGenUrlAction","href","e","dynGen","baseUrl","pp","currentLoc","indexOf","baseUrlObj","URL","appUrl","resolveUrl","stringify","pathname","substr","search","setIcon","setLabel","setExecute","async","_getCurrentAppUrl","navigator","clipboard","writeText","showNotifInfo","showNotifError","electron","resp","openUrlExternal","msg"],"mappings":"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","sourcesContent":["import {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView, IViewContainer, OViewVisitOptions} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {SRC, srcRef} from \"lib/wsp/src\";\nimport {DynGen} from \"back/wsp/views/dynGen\";\nimport {BarActions} from \"back/commons/widgets/bars\";\nimport {Action, IActionToggle} from \"lib/commons/actions\";\nimport {CDM} from \"lib/commons/utils/cdm\";\nimport {IO} from \"lib/commons/io/io\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {ITEM, JGenSkin} from \"lib/wsp/item\";\nimport {ButtonActions} from \"back/commons/widgets/buttons\";\nimport {Desk} from \"lib/commons/desk\";\n\n/**\n * View d'un item via un dynGen.\n */\n\nexport interface OItemDynGenInit extends OSkinableInit {\n\treg?: IReg<IItemUiEnv>\n\tgenerators: IDatasItemDynGen[]\n\tsrcRef?: srcRef,\n\ttoolbar?: OItemDynGenToolbar | false,\n\tautoResize?: boolean\n\t/** Comportement sur le onView, si la frame est déjà loadée :\n\t * \thome : retour à la home (comportement par défaut)\n\t * \trefresh : refresh de la page courante\n\t * \tnothing\n\t */\n\tonViewBehaviour?: 'home' | 'refresh' | 'nothing'\n}\n\nexport interface OItemDynGenToolbar {\n\t/** Code de la liste d'extpoints d'actions à ajouter à la toolbar**/\n\tactionsList?: string\n\t/** true par défaut si pertinent **/\n\tskinSelector?: boolean\n\t/** false par défaut **/\n\trefresh?: boolean\n\t/** true par défaut **/\n\tgotoHome?: boolean\n\t/** true par défaut **/\n\topenInNewTab?: boolean\n\t/** true par défaut **/\n\tcopyUrl?: boolean\n}\n\nexport interface ItemDynGen extends BaseElement {\n\tinitialize(init: OItemDynGenInit): this;\n}\n\nexport interface IDatasItemDynGen {\n\t/** Code du générateur */\n\tcode: string,\n\t/** Libélé court du générateur affiché dans la liste */\n\tlabel: string,\n\t/** Icone custom liée au gen (ie indépendant du skin). Par défaut : icone web. */\n\ticon?: string //path de type :wspRes:...\n\ticonUrl?: string //url résolue dynamiquement à partir de 'icon',\n\t/** genProps (skin, etc) */\n\tgenProps?: Jsonisable\n}\n\nexport class ItemDynGen extends BaseElement implements IViewContainer, IView {\n\treg: IReg<IItemUiEnv>;\n\tavailableSkins: Dict<JGenSkin>;\n\tprotected _currentGen: IDatasItemDynGen;\n\tprotected _currentSkin: string;\n\n\ttoolbar: HTMLDivElement;\n\tactionsBar: BarActions<ItemDynGen>;\n\tgenSelector: ButtonActions<ItemDynGen>;\n\tskinSelector: ButtonActions<ItemDynGen>;\n\tview: DynGen;\n\n\tonViewBehaviour: 'home' | 'refresh' | 'nothing' = 'home';\n\n\tget currentGen(): IDatasItemDynGen {\n\t\treturn this._currentGen;\n\t}\n\n\tset currentGen(gen: IDatasItemDynGen) {\n\t\tthis._currentGen = gen;\n\t\tthis._updateSkins();\n\t\tthis.reloadFrame();\n\t}\n\n\tget currentSkin() {\n\t\treturn this._currentSkin;\n\t}\n\n\tset currentSkin(skinCode: string) {\n\t\tthis._currentSkin = skinCode;\n\t\tthis.refresh();\n\t\tthis.reloadFrame();\n\t}\n\n\treloadFrame() {\n\t\tconst config = this.view.configs;\n\t\tconfig.c = this._currentGen?.code;\n\t\tconfig.gp = Object.assign({}, this._currentGen?.genProps, {skin: this._currentSkin});\n\t\tthis.view.genFrame.src = this.view.getDynGenUrl(config).url;\n\t}\n\n\trefreshFrame() {\n\t\tconst config = this.view.configs;\n\t\tconfig.c = this._currentGen?.code;\n\t\tconfig.gp = Object.assign({}, this._currentGen?.genProps, {skin: this._currentSkin});\n\t\tthis.view.genFrame.contentWindow.location.reload();\n\t}\n\n\n\t_initialize(init: OItemDynGenInit) {\n\t\tthis.reg = this.findReg(init);\n\n\t\tif (init.onViewBehaviour) this.onViewBehaviour = init.onViewBehaviour;\n\n\t\tif (!init.generators || !init.generators.length) {\n\t\t\tERROR.log(\"No generator specified\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstGen = init.generators[0];\n\t\tthis._currentGen = firstGen;\n\t\tthis._currentSkin = (firstGen.genProps && firstGen.genProps.skin) || 'default';\n\n\t\tif (!init.srcRef && ITEM.isHistoryOrTrashUri(this.reg.env.longDesc.srcUri)) {\n\t\t\tthis._attach(this.localName, init, ITEM.isTrashUri(this.reg.env.longDesc.srcUri) ?\n\t\t\t\t<c-msg label=\"Vue non disponible pour un item en corbeille\"/> : <c-msg label=\"Vue non disponible pour une entrée d'historique\"/>);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.view = new DynGen().initialize({\n\t\t\treg: this.reg,\n\t\t\tw: this.reg.env.wsp.code,\n\t\t\tc: this._currentGen?.code,\n\t\t\tr: init.srcRef || SRC.srcRef(this.reg.env.longDesc),\n\t\t\tgp: this._currentGen?.genProps,\n\t\t\tautoResize: init.autoResize\n\t\t});\n\n\t\tif (!(\"toolbar\" in init) || init.toolbar) {\n\t\t\tconst toolbarConf: OItemDynGenToolbar = init.toolbar && typeof init.toolbar === \"object\" ? init.toolbar : {};\n\t\t\tthis.actionsBar = new BarActions<ItemDynGen>().initialize({\n\t\t\t\tactions: this.reg.mergeLists<Action>(\"actions:wsp-item-dyngen\", toolbarConf.actionsList),\n\t\t\t\tactionContext: this\n\t\t\t});\n\n\t\t\tif (init.generators.length > 1) {\n\t\t\t\tconst genActions = [];\n\n\t\t\t\tfor (const genDatas of init.generators) {\n\t\t\t\t\tif (!genDatas.iconUrl) {\n\t\t\t\t\t\tif (genDatas.icon) genDatas.iconUrl = this.reg.env.itemType.datas.wspResUrl.resolve(genDatas.icon).url;\n\t\t\t\t\t\telse genDatas.iconUrl = '/@skin@/wsp/views/generators/gen_web.svg';\n\t\t\t\t\t}\n\t\t\t\t\tgenActions.push(new SelectGenAction(genDatas));\n\t\t\t\t}\n\t\t\t\tthis.genSelector = new ButtonActions<ItemDynGen>().initialize({\n\t\t\t\t\tactions: genActions,\n\t\t\t\t\tactionContext: this,\n\t\t\t\t\ttitle: \"Sélection du rendu\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (toolbarConf.skinSelector !== false) {\n\t\t\t\tthis.skinSelector = new ButtonActions<ItemDynGen>().initialize({\n\t\t\t\t\tactions: [],\n\t\t\t\t\tactionContext: this,\n\t\t\t\t\thidden: true,\n\t\t\t\t\ticon: \"/@skin@/wsp/views/itemDynGen/skinSelect.svg\",\n\t\t\t\t\ttitle: \"Sélection de l'habillage graphique\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.toolbar = <div id=\"toolBar\">\n\t\t\t\t<div id=\"selectors\">\n\t\t\t\t\t{this.genSelector}\n\t\t\t\t\t{this.skinSelector}\n\t\t\t\t</div>\n\t\t\t\t{this.actionsBar}\n\t\t\t</div> as HTMLDivElement;\n\n\t\t\t// Actions par défaut\n\t\t\tif (toolbarConf.refresh === true) this.actionsBar.actions.push(refreshAction);\n\t\t\tif (toolbarConf.gotoHome !== false) this.actionsBar.actions.push(gotoHomeAction);\n\t\t\tif (toolbarConf.openInNewTab !== false) this.actionsBar.actions.push(openInNewTabAction);\n\t\t\tif (toolbarConf.copyUrl !== false) this.actionsBar.actions.push(copyUrlAction);\n\t\t}\n\t\tthis._attach(this.localName, init, this.toolbar, this.view);\n\t\tthis._updateSkins();\n\t}\n\n\tprotected async _updateSkins() {\n\t\tif (this.skinSelector) {\n\t\t\tconst {itemDynGenUrl} = this.reg.env.universe.wspServer.config;\n\t\t\tconst skins = await itemDynGenUrl.fetchJson<JGenSkin[]>(IO.qs(\"cdaction\", \"GetSkins\", \"wspCd\", this.reg.env.wsp.code, \"refUri\", this.view.configs.r, \"cdGen\", this.currentGen.code));\n\t\t\tthis.availableSkins = {};\n\t\t\tfor (const skin of skins) this.availableSkins[skin.code] = skin;\n\t\t\tif (!(this._currentSkin in this.availableSkins) && skins.length > 0) this._currentSkin = skins[0].code;\n\t\t\tif (skins.length > 1) {\n\t\t\t\tthis.skinSelector.actions = skins.map((skin) => new SelectSkinAction(skin.code, skin.title));\n\t\t\t\tDOM.setHidden(this.skinSelector, false);\n\t\t\t} else {\n\t\t\t\tDOM.setHidden(this.skinSelector, true);\n\t\t\t}\n\t\t}\n\t\tthis.refresh();\n\t}\n\n\tprotected _refresh() {\n\t\tif (this.actionsBar) this.actionsBar.refreshContent();\n\t\tif (this.genSelector) {\n\t\t\tconst genDatas = this.currentGen;\n\t\t\tthis.genSelector.icon = genDatas.iconUrl;\n\t\t\tthis.genSelector.label = genDatas.label;\n\t\t}\n\t\tif (this.hasSkinSelector() && this.availableSkins) {\n\t\t\tthis.skinSelector.label = this.availableSkins[this.currentSkin].title;\n\t\t}\n\n\t\t// Hide de la toolbar si rien à afficher\n\t\tif (this.toolbar) DOM.setHidden(this.toolbar, !this.hasGenSelector() && !this.hasSkinSelector() && (!this.actionsBar || this.actionsBar.actions?.length === 0));\n\t}\n\n\tprotected hasGenSelector(): boolean {\n\t\treturn this.genSelector && !this.genSelector.hidden\n\t}\n\n\tprotected hasSkinSelector(): boolean {\n\t\treturn this.skinSelector && !this.skinSelector.hidden\n\t}\n\n\t_forceRefreshOnViewShown: boolean;\n\n\tonViewShown() {\n\t\tif (this.view) {\n\t\t\tif (this.view.genFrame.src === \"about:blank\") {\n\t\t\t\t//rechargement forcé en cas de réaffichage car peut dépendre d'autres items (ressources images)\n\t\t\t\t// non actuellement notifiées pour le refresh du gen auto du dynGen.\n\t\t\t\tthis.reloadFrame();\n\t\t\t} else if (this._forceRefreshOnViewShown) {\n\t\t\t\tthis.refreshFrame();\n\t\t\t\tthis._forceRefreshOnViewShown = undefined;\n\t\t\t}\n\t\t\tthis.view.onViewShown();\n\t\t}\n\t}\n\n\tonViewHidden(closed?: boolean): void {\n\t\tif (this.view) {\n\t\t\tif (!closed) {\n\t\t\t\tif (this.onViewBehaviour == 'home')\n\t\t\t\t\tthis.view.genFrame.src = \"about:blank\"; //on reset la frame pour forcer son refresh au réaffichage de la vue.\n\t\t\t\telse if (this.onViewBehaviour == 'refresh')\n\t\t\t\t\tthis._forceRefreshOnViewShown = true;\n\t\t\t}\n\t\t\tthis.view.onViewHidden(closed);\n\t\t}\n\t}\n\n\tvisitViews(visitor: (view: IView) => any): any {\n\t\tif (this.view) return visitor(this.view);\n\t}\n\n\tvisitViewsAsync(visitor: (view: IView) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn this.view ? visitor(this.view) : Promise.resolve(undefined);\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-item-dyngen\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t}\n\n\t#toolBar {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tjustify-content: space-between;\n\t}\n\n\t#toolBar[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t#selectors {\n\t\tdisplay: flex;\n\t}\n\n\twsp-dyngen {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n`);\n\ncustomElements.define(\"wsp-item-dyngen\", ItemDynGen);\n\nclass SelectGenAction extends Action<ItemDynGen> {\n\tconstructor(protected genDatas: IDatasItemDynGen) {\n\t\tsuper();\n\t}\n\n\tgetLabel(ctx: ItemDynGen): string {\n\t\treturn this.genDatas.label || super.getLabel(ctx);\n\t}\n\n\tgetIcon(ctx: ItemDynGen): string {\n\t\treturn this.genDatas.icon || super.getIcon(ctx);\n\t}\n\n\tisToggle(ctx: ItemDynGen): this is IActionToggle<ItemDynGen> {return true}\n\n\tgetDatas(api: 'toggle', ctx: ItemDynGen): boolean | null {return ctx.currentGen === this.genDatas }\n\n\texecute(ctx: ItemDynGen, ev?: Event): any | \"noPreventDefault\" {\n\t\tctx.currentGen = this.genDatas\n\t}\n}\n\nclass SelectSkinAction extends Action<ItemDynGen> {\n\tconstructor(id: string, label: string) {\n\t\tsuper(id);\n\t\tthis._label = label;\n\t}\n\n\tisToggle(ctx: ItemDynGen): this is IActionToggle<ItemDynGen> {return true}\n\n\tgetDatas(api: 'toggle', ctx: ItemDynGen): boolean | null {return ctx.currentSkin == this._id }\n\n\texecute(ctx: ItemDynGen, ev?: Event): any | \"noPreventDefault\" {\n\t\tctx.currentSkin = this._id\n\t}\n}\n\nclass ItemDynGenUrlAction extends Action {\n\tisEnabled(ctx: ItemDynGen): boolean {\n\t\ttry {\n\t\t\t// Une exception est lancé si bloqué par la sécurité\n\t\t\tctx.view.genFrame.contentWindow.location.href;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t_getCurrentAppUrl(ctx: ItemDynGen) {\n\t\ttry {\n\t\t\tconst dynGen = ctx.view;\n\t\t\tconst baseUrl = dynGen.getDynGenUrl({\n\t\t\t\tw: dynGen.configs.w,\n\t\t\t\tc: dynGen.configs.c,\n\t\t\t\tr: dynGen.configs.r,\n\t\t\t\tgp: dynGen.configs.gp,\n\t\t\t\tpp: \"\"\n\t\t\t});\n\t\t\tconst currentLoc = dynGen.genFrame.contentWindow.location;\n\t\t\tif (currentLoc.href.indexOf(baseUrl.url) == 0) {\n\t\t\t\tconst baseUrlObj = new URL(baseUrl.url);\n\t\t\t\tconst appUrl = IO.resolveUrl(\"#\" + CDM.stringify({\n\t\t\t\t\tdynGen: {\n\t\t\t\t\t\tw: dynGen.configs.w,\n\t\t\t\t\t\tc: dynGen.configs.c,\n\t\t\t\t\t\tr: dynGen.configs.r,\n\t\t\t\t\t\tgp: dynGen.configs.gp,\n\t\t\t\t\t\tpp: currentLoc.pathname.substr(baseUrlObj.pathname.length),\n\t\t\t\t\t\tqs: currentLoc.search ? currentLoc.search.substr(1) : undefined\n\t\t\t\t\t}\n\t\t\t\t}), null);\n\t\t\t\treturn appUrl;\n\t\t\t} else {\n\t\t\t\treturn currentLoc.href;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tERROR.log(\"Unable to retrieve the dynGen url\", e);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nconst refreshAction = new Action<ItemDynGen>('refresh')\n\t.setIcon(\"/@skin@/commons/icons/refresh.svg\")\n\t.setLabel(\"Actualiser\")\n\t.setExecute(function (this: Action, ctx: ItemDynGen) {\n\t\tctx.refreshFrame();\n\t});\n\nconst gotoHomeAction = new Action<ItemDynGen>('gotoHome')\n\t.setIcon(\"/@skin@/wsp/views/itemDynGen/gotoHome.svg\")\n\t.setLabel(\"Accueil\")\n\t.setExecute(function (this: Action, ctx: ItemDynGen) {\n\t\tctx.reloadFrame();\n\t});\n\nconst copyUrlAction = new ItemDynGenUrlAction('copyUrl')\n\t.setIcon(\"/@skin@/wsp/views/itemDynGen/copyUrl.svg\")\n\t.setLabel(\"Copier l'adresse de la page en cours\")\n\t.setExecute(async function (this: ItemDynGenUrlAction, ctx: ItemDynGen) {\n\t\tconst appUrl = this._getCurrentAppUrl(ctx);\n\t\tif (appUrl) {\n\t\t\tawait navigator.clipboard.writeText(appUrl);\n\t\t\tPOPUP.showNotifInfo(\"L'adresse a été copiée dans le presse-papier.\", ctx)\n\t\t} else {\n\t\t\tPOPUP.showNotifError(\"Impossible de copier l'adresse dans le presse-papier. Vérifiez dans votre navigateur que vous avez autorisé ce site à accéder au presse-papier.\", ctx)\n\t\t}\n\t});\n\nconst openInNewTabAction = new ItemDynGenUrlAction('openInNewTab')\n\t.setIcon(\"/@skin@/wsp/views/itemDynGen/openInNewTab.svg\")\n\t.setLabel(Desk.electron ? \"Ouvrir dans le navigateur\" : \"Ouvrir dans un nouvel onglet\")\n\t.setExecute(async function (this: ItemDynGenUrlAction, ctx: ItemDynGen) {\n\t\tconst appUrl = this._getCurrentAppUrl(ctx);\n\t\tif (appUrl) {\n\t\t\tlet resp = await IO.openUrlExternal(appUrl);\n\t\t\tif (typeof resp === \"object\") {\n\t\t\t\tERROR.log(resp.msg);\n\t\t\t\tPOPUP.showNotifError(\"Impossible d'ouvrir l'adresse dans le navigateur.\", ctx)\n\t\t\t}\n\t\t} else POPUP.showNotifError(\"Impossible d'ouvrir l'adresse dans un nouvel onglet.\", ctx)\n\t});\n\n\n"]}