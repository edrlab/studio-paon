{"version":3,"sources":["/@back@/wsp/widgets/wed/ptrSubItem.tsx"],"names":["AgEltBoxSelection","POPUP","SRC","ITEM","REG","AccelKeyMgr","Action","AgEltBoxFloating","DOMSH","renderAppend","xhtml","JSX","AppHeader","SrcGrid","FocusItemSelRef","BoxId","BoxSubItemId","[object Object]","this","refsList","DEFAULT_REFS_LIST","tpl","wedlet","super","configWedletElt","reg","wedMgr","hasAttribute","getAttribute","ev","preventDefault","stopImmediatePropagation","fragmentId","showNotifWarning","sd","Object","create","env","longDesc","itSubItem","id","mo","setShortDescTransferToClipboard","emitter","shortDescs","box","confs","_a","getList","filter","entry","isVisible","call","appHeader","createElement","î","moreActions","mergeLists","moreBar","groupOrder","actionContext","focusedElt","class","confTitle","length","currentDetailsConf","appendChild","label","select","onchange","async","pos","Number","parseInt","value","items","fetchSrcList","grid","srcGridDatas","setDatas","focus","forEach","title","description","initialize","hideHeaders","autoSelOnFocus","itemHandlingReact","infoBroker","defaultAction","SINGLETON","actions","accelKeyMgr","initFromMapActions","mergeListsAsMap","emptyBody","emptyGridMsg","then","resp","selMode","actionsLists","findFocusableOnShown","display","factory","owner","tooltip","findReg","tpb","getSvc","_templateFloating","root","installSkin","localName","attachShadow","SHADOWDOM_INIT","shadowRoot","addEventListener","window","customElements","define","registerSkin","registerSvc","ctx","ascs","fetchSrcNetJson","wsp","makeSrcRefSub","srcRef","getShortDescDef","lnks","map","src","addSvcToList","addToList","setLabel","setDescription","setGroup","setIcon","setExecute","boxId","onClipboard"],"mappings":"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","sourcesContent":["import {AgEltBoxSelection, IEltBoxSelection} from \"back/edit/wed/features/boxSel\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {JSrcFields, JSubItem, SRC} from \"lib/wsp/src\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {AccelKeyMgr, Action} from \"lib/commons/actions\";\nimport {IWedlet, IWedletActionCtx} from \"back/edit/wed/wedlets/wedlet\";\nimport {AgEltBoxFloating} from \"back/edit/wed/features/boxTooltip\";\nimport {TemplateResult} from \"res/litHtml/lib/template-result\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {renderAppend, xhtml} from \"lib/commons/utils/htmlLit\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {AppHeader, OAppHeaderInit} from \"back/core/widgets/appHeader\";\nimport {SrcGrid} from \"back/wsp/widgets/srcGrid\";\nimport {FocusItemSelRef} from \"back/wsp/actions/srcActions\";\nimport {BoxId} from \"back/edit/wed/wedlets/box/boxId\";\nimport {IJmlNode, IJmlSubSet} from \"lib/commons/xml/jml\";\nimport {IXmlMsg} from \"lib/edit/ot/xmlHouse\";\nimport {BoxContainer} from \"back/edit/wed/wedlets/box/boxTags\";\n\n/** Configuration d'une recherche de liens ascendants au subItem */\nexport interface JBoxSubItemIdRefsConf {\n\n\tlabel: string\n\n\tdescription?: string\n\n\temptyGridMsg?: string\n\n\tfetchSrcList: (this: HTMLElement, ctx: IRegPointer<IItemUiEnv>, id: string) => Promise<JSrcFields[]>\n\n\tisVisible?: (this: HTMLElement, ctx: IRegPointer<IItemUiEnv>, id: string) => boolean\n}\n\n/**\n * Ancre pour un id des subItems.\n * <box-subitemid refsList?=\"box.id.refs.confs\"/>\n */\nexport class BoxSubItemId extends BoxId implements IEltBoxSelection {\n\n\tstatic DEFAULT_REFS_LIST = 'box.subitemid.refs.confs';\n\n\treg: IReg<IItemUiEnv>;\n\n\t/** Liste de JBoxSubItemIdRefsConf. */\n\trefsList: string = BoxSubItemId.DEFAULT_REFS_LIST;\n\n\tprivate currentDetailsConf?: JBoxSubItemIdRefsConf;\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tsuper.configWedletElt(tpl, wedlet);\n\t\tthis.reg = wedlet.wedMgr.reg;\n\t\tif (tpl.hasAttribute('refsList')) this.refsList = tpl.getAttribute('refsList');\n\t}\n\n\tonClipboard(ev?: ClipboardEvent): boolean {\n\t\tev?.preventDefault();\n\t\tev?.stopImmediatePropagation();\n\t\tif (!this.fragmentId) {\n\t\t\tPOPUP.showNotifWarning(\"Impossible de copier une ancre vide\", this);\n\t\t} else {\n\t\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\t\tconst sd = Object.create((wedMgr.reg.env as IItemUiEnv).longDesc) as JSrcFields;\n\t\t\tsd.itSubItem = {id: this.fragmentId, mo: this.getAttribute(\"model\")} as JSubItem;\n\t\t\tITEM.setShortDescTransferToClipboard({\n\t\t\t\t\temitter: this,\n\t\t\t\t\treg: wedMgr.reg,\n\t\t\t\t\tshortDescs: [sd]\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn true;\n\t}\n\n\tstatic _templateFloating(this: void, box: BoxSubItemId): TemplateResult {\n\t\tconst id = box.fragmentId;\n\t\tconst wedMgr = box.wedlet.wedMgr;\n\t\tconst reg = wedMgr.reg;\n\n\t\tconst sd = Object.create((wedMgr.reg.env as IItemUiEnv).longDesc) as JSrcFields;\n\t\tsd.itSubItem = {id: box.fragmentId} as JSubItem;\n\n\t\tconst confs: JBoxSubItemIdRefsConf[] = reg.getList<JBoxSubItemIdRefsConf>(box.refsList)?.filter(entry => !entry.isVisible || entry.isVisible.call(box, box, id));\n\n\t\tconst appHeader = <AppHeader î={{\n\t\t\tmoreActions: reg.mergeLists(\"actions:wed:box-subitemid\", \"actions:wed:box-id\"),\n\t\t\tmoreBar: {\n\t\t\t\tgroupOrder: '* edit'\n\t\t\t},\n\t\t\tactionContext: {\n\t\t\t\twedlet: box.wedlet,\n\t\t\t\tfocusedElt: box,\n\t\t\t},\n\t\t} as OAppHeaderInit<IWedletActionCtx>}>\n\t\t\t<div class=\"currentId\">{`Identifiant de l'ancre '${id}'`}</div>\n\t\t</AppHeader> as AppHeader<IWedletActionCtx>;\n\n\t\tconst confTitle = <header/> as HTMLHeadElement;\n\n\t\tif (confs.length === 1) {\n\t\t\tbox.currentDetailsConf = confs[0];\n\t\t\tconfTitle.appendChild(<div>{box.currentDetailsConf.label}</div>);\n\t\t} else {\n\t\t\tconst select = confTitle.appendChild(<select onchange={async () => {\n\t\t\t\t//grid.srcGridDatas.setDatas([]); flash désagréable\n\t\t\t\tconst pos = Number.parseInt(select.value);\n\t\t\t\tbox.currentDetailsConf = confs[pos];\n\t\t\t\tconst items = await box.currentDetailsConf.fetchSrcList.call(box, box, id);\n\t\t\t\tgrid.srcGridDatas.setDatas(items || []);\n\t\t\t\tgrid.focus();\n\t\t\t}}/>) as HTMLSelectElement;\n\t\t\tconfs.forEach((entry, pos) => {\n\t\t\t\tselect.appendChild(<option value={pos} label={entry.label} title={entry.description}/>);\n\t\t\t});\n\t\t}\n\n\t\tconst grid = new SrcGrid().initialize({\n\t\t\treg: reg,\n\t\t\thideHeaders: true,\n\t\t\tautoSelOnFocus: \"first\",\n\t\t\titemHandlingReact: reg.env.infoBroker,\n\t\t\tdefaultAction: FocusItemSelRef.SINGLETON,\n\t\t\tactions: reg.mergeLists(\"actions:boxId:shortDesc\", \"actions:wsp:shortDesc\"),\n\t\t\taccelKeyMgr: new AccelKeyMgr().initFromMapActions(reg.mergeListsAsMap(\"accelkeys:boxId:shortDesc\", \"accelkeys:wsp:shortDesc\")),\n\t\t\temptyBody: () => <span>{box.currentDetailsConf?.emptyGridMsg || 'Aucun item'}</span>\n\t\t});\n\n\t\t// init avec la confs[0]\n\t\tbox.currentDetailsConf = confs[0];\n\t\tconst items = box.currentDetailsConf.fetchSrcList.call(box, box, id).then((resp: JSrcFields[]) => {\n\t\t\tgrid.srcGridDatas.setDatas(resp || []);\n\t\t\tgrid.focus();\n\t\t});\n\n\t\treturn xhtml`<div id=\"main\">\n\t\t\t${appHeader}\n\t\t\t${confTitle}\n\t\t\t${grid}\n\t\t</div>`;\n\t}\n\n}\n\nAgEltBoxSelection(BoxSubItemId, {selMode: 'box', actionsLists: ['actions:wed:box-subitemid', 'actions:wed:box-id', 'actions:wed:box'], groupOrder: '* edit'});\n\nAgEltBoxFloating(BoxSubItemId, {\n\tfindFocusableOnShown: true,\n\tdisplay: ['over'],\n\tfactory: ((owner: BoxSubItemId, tooltip) => {\n\t\tconst reg = REG.findReg(owner);\n\t\tconst tpb: (rib: BoxSubItemId) => TemplateResult = reg.getSvc(\"box.subitemid.tpl.floating\") || BoxSubItemId._templateFloating;\n\t\tif (tpb) {\n\t\t\tconst root = <div id=\"boxIdRoot\"/> as HTMLElement;\n\t\t\treg.installSkin(owner.localName + \"/floating\", root.attachShadow(DOMSH.SHADOWDOM_INIT));\n\t\t\treg.installSkin(\"box-subitemid/floating\", root.shadowRoot);\n\t\t\ttooltip.addEventListener('c-show', (ev: CustomEvent) => {\n\t\t\t\trenderAppend(tpb(owner), root.shadowRoot);\n\t\t\t});\n\t\t\treturn root;\n\t\t}\n\t})\n});\n\nwindow.customElements.define(\"box-subitemid\", BoxSubItemId);\n\nREG.reg.registerSkin(\"box-subitemid/floating\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 0 1 auto;\n\t\tmin-width: 2rem;\n\t\t--row-bgcolor: var(--bgcolor);\n\t  max-width: 40vw;\n  }\n\n  c-appheader {\n\t  min-height: 2rem;\n\t  z-index: 1;\n\t  margin: 0 4px;\n  }\n\n  header {\n\t  display: flex;\n\t  min-height: 0;\n\t  font-size: var(--label-size);\n\t  padding: .2em;\n\t  color: var(--fade-color);\n\t  border-bottom: 1px solid var(--border-color);\n\t  text-align: center;\n\t  justify-content: center;\n  }\n\n  .currentId {\n\t  align-self: center;\n\t  color: var(--alt1-color);\n  }\n\n  select {\n\t  flex: 1;\n\t  min-width: 0;\n\t  border: 1px solid var(--border-color);\n\t  background-color: var(--form-bgcolor);\n\t  color: var(--form-color);\n\t  text-overflow: ellipsis;\n\t  font-size: inherit;\n  }\n\n  wsp-src-grid {\n\t  border: none;\n  }\n\n`);\n\n/** conf : liens inverses */\nREG.reg.registerSvc('box-subitemid.confs.revlinks.sub', 1, {\n\tlabel: \"Références à cette ancre\",\n\tfetchSrcList: async (ctx, id: string) => {\n\t\tconst ascs = await ITEM.fetchSrcNetJson(ctx.reg.env.wsp, this, ITEM.makeSrcRefSub(SRC.srcRef(ctx.reg.env.longDesc), id), ctx.reg.env.wsp.getShortDescDef(),\n\t\t\t\"asc\", true, null, null, 100, 1, null, null);\n\t\treturn ascs?.lnks?.map(entry => entry.src);\n\t},\n} as JBoxSubItemIdRefsConf);\nREG.reg.addSvcToList(BoxSubItemId.DEFAULT_REFS_LIST, 'revlinks.sub', 1, 'box-subitemid.confs.revlinks.sub', -1);\n\n/** Action : copie du srcNode*/\nREG.reg.addToList(\"actions:wed:box-subitemid\", \"copySubItemId\", 1, new Action<IWedletActionCtx>(\"copySubItemId\")\n\t.setLabel(\"Copier\")\n\t.setDescription(\"Copier le lien vers l'ancre\")\n\t.setGroup(\"copy\")\n\t.setIcon(\"/@skin@/commons/icons/copy.svg\")\n\t.setExecute(async (ctx: IWedletActionCtx, ev) => {\n\t\tconst boxId = ctx.focusedElt as BoxSubItemId;\n\t\tboxId.onClipboard();\n\t})\n);\n"]}