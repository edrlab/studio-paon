{"version":3,"sources":["/@back@/wsp/views/task/taskLayout.tsx"],"names":["BaseElementAsync","newSrcView","REG","VIEWS","TaskLayout","[object Object]","init","this","reg","findReg","_attach","localName","sr","shadowRoot","installSkin","v","bodyView","buildSrcView","parent","appendChild","document","createTextNode","tag","children","subV","visitor","options","visitDescendants","visitDescendantsAsync","registerSkin","customElements","define"],"mappings":"OAAqBA,qBAAgC;OACjCC,eAAW;OACjBC,QAAI;OAC2CC,UAAM;OAkB7D,MAAOC,mBAAmBJ,iBAG/BK,kBAAkBC,MACjBC,KAAKC,IAAMD,KAAKE,QAAQH;AACxBC,KAAKG,QAAQH,KAAKI,UAAWL;AAC7B,IAAIM,GAAKL,KAAKM;AACdN,KAAKC,IAAIM,YAAY,eAAgBF;AACrC,IAAK,MAAMG,KAAKT,KAAKU,SAAU,OACxBT,KAAKU,aAAaF,EAAGR,KAAKM,aAIlCR,mBAAmBU,EAAkBG,QACpC,IAAKH,EAAG,OAAO;AACf,UAAWA,IAAM,SAAUG,OAAOC,YAAYC,SAASC,eAAeN;IACjE,CACJ,MAAMO,UAAYrB,WAAWc,EAAGR,KAAKC;AACrC,IAAKc,IAAK,OAAO;AACjBJ,OAAOC,YAAYG;AACnB,GAAIP,EAAEQ,SAAU,IAAK,MAAMC,QAAQT,EAAEQ,SAAU,CAC9C,UAAWC,OAAS,SAAUF,IAAIH,YAAYC,SAASC,eAAeG;WAC3DjB,KAAKU,aAAaO,KAAMF,KAEpC,OAAOA,KAITjB,WAAWoB,QAAkCC,SAC5C,OAAOvB,MAAMwB,iBAAiBpB,KAAKM,WAAYY,SAGhDpB,sBAAsBoB,QAA2CC,SAChE,OAAOvB,MAAMyB,sBAAsBrB,KAAKM,WAAYY,UAItDvB,IAAIM,IAAIqB,aAAa,kBAAmB,EAAsB;AAU9D3B,IAAIM,IAAIqB,aAAa,uBAAwB,EAAsB;AAsEnEC,eAAeC,OAAO,kBAAmB3B","sourcesContent":["import {BaseElement, BaseElementAsync, OSkinableInit} from \"back/commons/basis\";\nimport {IItemUiEnv, newSrcView} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView, IViewApi, IViewsContainer, OViewVisitOptions, VIEWS} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {IDatasTagView} from \"lib/wsp/wspMetaUi\";\n\n/**\n * Mise en page d'une view des tasks.\n *\n * Config attributes:\n */\nexport interface TaskLayout extends BaseElement {\n\tinitialize(init: OTaskLayoutInit): this;\n}\n\nexport interface OTaskLayoutInit extends OSkinableInit {\n\treg?: IReg<IItemUiEnv>\n\tbodyView: IDatasTagView[]\n}\n\nexport class TaskLayout extends BaseElementAsync implements IViewsContainer {\n\treg: IReg<IItemUiEnv>;\n\n\tasync _initialize(init: OTaskLayoutInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis._attach(this.localName, init);\n\t\tlet sr = this.shadowRoot;\n\t\tthis.reg.installSkin(\"scroll/large\", sr);\n\t\tfor (const v of init.bodyView) {\n\t\t\tawait this.buildSrcView(v, this.shadowRoot);\n\t\t}\n\t}\n\n\tasync buildSrcView(v: IDatasTagView, parent: Node): Promise<IView | null> {\n\t\tif (!v) return null;\n\t\tif (typeof v === 'string') parent.appendChild(document.createTextNode(v));\n\t\telse {\n\t\t\tconst tag = await newSrcView(v, this.reg);\n\t\t\tif (!tag) return null;\n\t\t\tparent.appendChild(tag);\n\t\t\tif (v.children) for (const subV of v.children) {\n\t\t\t\tif (typeof subV === 'string') tag.appendChild(document.createTextNode(subV));\n\t\t\t\telse await this.buildSrcView(subV, tag);\n\t\t\t}\n\t\t\treturn tag;\n\t\t}\n\t}\n\n\tvisitViews(visitor: (view: IViewApi) => any, options?: OViewVisitOptions): any {\n\t\treturn VIEWS.visitDescendants(this.shadowRoot, visitor);\n\t}\n\n\tasync visitViewsAsync(visitor: (view: IViewApi) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn VIEWS.visitDescendantsAsync(this.shadowRoot, visitor);\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-task-layout\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n`);\n\nREG.reg.registerSkin(\"wsp-task-layout/edit\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: grid;\n\t\tgrid-template-areas: \"title title\" \"bar body\";\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-template-rows: auto 1fr;\n\t\theight: 100%;\n\t}\n\n  [hidden] {\n\t  display: none;\n  }\n\n  #body {\n\t  grid-area: body;\n\t  overflow: auto;\n\t  padding: .3em;\n  }\n\n  #title {\n\t  grid-area: title;\n\t  border: 1px solid transparent;\n\t  border-bottom: 3px solid var(--alt1-bgcolor);\n  }\n\n  #bar {\n\t  grid-area: bar;\n\t  display: flex;\n\t  min-height: 0;\n\t  min-width: 1.8rem;\n\t  flex-direction: column;\n\t  background-color: var(--alt1-bgcolor);\n  }\n\n  h1 {\n\t  color: var(--alt1-color);\n\t  font-size: 1.2em;\n\t  text-align: center;\n\t  margin: 0;\n\t  padding: .3em;\n  }\n\n  .form {\n\t  display: grid;\n\t  grid-template-columns: auto 1fr;\n\t  grid-template-rows: auto;\n\t  grid-gap: .7em;\n\t  margin-inline-start: .5em;\n  }\n\n  .form > wsp-task-field-lc {\n\t  width: max-content;\n  }\n\n  label {\n\t  color: var(--alt1-color);\n\t  align-self: center;\n  }\n\n  label.top {\n\t  align-self: start;\n  }\n\n  .oneCol {\n\t  grid-column-start: 1;\n\t  grid-column-end: 3;\n  }\n`);\n\ncustomElements.define(\"wsp-task-layout\", TaskLayout);"]}