{"version":3,"sources":["/@back@/wsp/plugins/itemEdPlg.tsx"],"names":["SimpleTagArea","REG","initApp","reg","d","desk","addAppBuilder","ItemEdAppBuilder","[object Object]","super","env","resolver","resolve","this","data","itemEd","ctx","edConfig","Object","assign","newElt","initialize"],"mappings":"OAGQA,kBAAc;OACRC,QAAI;OAWZ,SAAUC,QAAQC,IAAuBF,IAAIE,KAClD,MAAMC,EAAIC;AACVD,EAAEE,cAAc,IAAIC,iBAAiBJ,aAShC,MAAOI,yBAAyBP,cAKrCQ,YAAmBL,KAClBM,MAAM,kBAAmBN,IAAIO,IAAIC,SAASC,QAAQ;AADhCC,KAAAV,IAAAA,IAInBK,cAAcM,MAAsB,cAAcA,KAAKC,SAAW,SAElEP,OAAOQ,KACN,GAAIH,KAAKI,SAAUC,OAAOC,OAAOH,IAAKH,KAAKI;AAC3CD,IAAIb,IAAMU,KAAKV;AACf,OAAQM,MAAMW,OAAOJ,KAAmBK,WAAWL","sourcesContent":["import {AppFrameDeskFeat, IApp, IAppBuilder, IAppCtx, JAppDef} from \"back/core/appFrame\";\nimport {ItemEdApp} from \"back/wsp/apps/itemEdApp\";\nimport {OItemXmlEdInit} from \"back/wsp/views/item/itemXmlEd\";\nimport {SimpleTagArea} from \"lib/commons/areas\";\nimport {IReg, REG} from 'lib/commons/registry';\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {IChainEnv} from \"lib/wsp/chain\";\n\n\n/**\n * Accès direct à un éditeur d'un item.\n * A appeler au cours du processus d'init du desk (qui doit disposer de AppFrameDeskFeat).\n *\n * @param reg Registre à exploiter correspondant au chain, nécessaire en cas de front multi-universe.\n */\nexport function initApp(reg: IReg<IChainEnv> = REG.reg) {\n\tconst d = desk as AppFrameDeskFeat;\n\td.addAppBuilder(new ItemEdAppBuilder(reg));\n}\n\n/** Définition pour une ItemEdApp. */\nexport interface JItemEdAppDef extends JAppDef {\n\titemEd: OItemXmlEdInit\n}\n\n/** Construction async de l'App. */\nexport class ItemEdAppBuilder extends SimpleTagArea<IAppCtx<IChainEnv>, IApp<IChainEnv>> implements IAppBuilder<IChainEnv, IChainEnv> {\n\n\t/** Configuration particulière de l'éditeur. */\n\tedConfig: OItemXmlEdInit;\n\n\tconstructor(public reg: IReg<IChainEnv>) {\n\t\tsuper('wsp-item-ed-app', reg.env.resolver.resolve(\":back:wsp/apps/itemEdApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JItemEdAppDef) {return typeof data.itemEd === 'object'}\n\n\tnewElt(ctx: IAppCtx<IChainEnv>): ItemEdApp {\n\t\tif (this.edConfig) Object.assign(ctx, this.edConfig);\n\t\tctx.reg = this.reg;\n\t\treturn (super.newElt(ctx) as ItemEdApp).initialize(ctx);\n\t}\n}\n"]}