{"version":3,"sources":["/@back@/wsp/areas/drfOverrides.tsx"],"names":["CellBuilderFlagIcon","GridColDef","REG","ITEM","SrcAction","POPUP","UiCritArea","UiCritBase","ButtonToggle","ESearchExportColumnStatus","SearchDrfStates","SearchExportColumn","SearchFuncTranslateStr","DOMSH","JSX","renderAppend","xhtml","RibbonBase","BarActions","WSP_DRF","CellBuilderDrfFlag","[object Object]","this","iconWidth","iconFilter","row","st","super","_getValue","getDrfStateLabel","reg","registerSkin","RevertSrc","_group","_icon","atLeastOne","isNotRemoved","_enableSrcPerms","ctx","shortDescs","length","every","sd","drfState","some","getSrcUriType","srcUri","isEnabled","ev","wsp","env","confirm","srcRevert","emitter","count","okLbl","SINGLETON","registerSvc","CommitSrc","isSrcUriInConflict","srcCommit","RibbonDrf","init","_initialize","longDescChange","add","refresh","bind","setTooltip","_tooltip","rib","longDesc","tooltip","createElement","id","class","Ã®","actions","getSvc","actionContext","shortDescCtx","uiContext","disableFullOverlay","hidden","template","shadowRoot","customElements","define","ItemCritDrfState","notOverriden","_notOverridenBtn","toggleOn","state","overriden","_overridenBtn","created","_createdBtn","erased","_erasedBtn","sr","appendChild","insertAlternativesBtn","btnsBox","onclick","toggleButton","icon","label","title","ui-context","aria-pressed","xml","states","hasAttribute","getAttribute","split","indexOf","push","me","findHost","onChange","AREA","setLabel","setGroup","setBuildAbstract","statesCodesList","statesLabelsList","statesTxt","join","initDrfReg","drfColDef","setFlex","setCellBuilder","setSkin","setDescription","addToList","setColDef","setDict","createdDeleted","notComputed","setExportStatus","exportable","addSrcSvcAction","svc","sortKey","addSvcToList"],"mappings":"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","sourcesContent":["import {CellBuilderFlagIcon} from \"back/commons/widgets/grid-libs\";\nimport {GridColDef, IGridDataRow} from \"back/commons/widgets/grid-core\";\nimport {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {EDrfState} from \"lib/wsp/src\";\nimport {IShortDescCtx, ITEM} from \"lib/wsp/item\";\nimport {SrcAction} from \"back/wsp/actions/srcActions\";\nimport {POPUP, PopupTooltip} from \"back/commons/widgets/popups\";\nimport {IWspUiEnv} from \"lib/wsp/wsp\";\nimport {OUiCritInit, UiCritArea, UiCritBase} from \"back/wsp/widgets/search/uiCrit\";\nimport {ButtonToggle} from \"back/commons/widgets/buttons\";\nimport {ESearchExportColumnStatus, ISearchCrit, SearchDrfStates, SearchExportColumn, SearchFuncTranslateStr} from \"lib/wsp/search\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {TemplateResult} from \"res/litHtml/lib/template-result\";\nimport {renderAppend, xhtml} from \"lib/commons/utils/htmlLit\";\nimport {RibbonBase} from \"back/wsp/widgets/ribbon/ribbon\";\nimport {IView} from \"lib/commons/views\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {WSP_DRF} from \"lib/wsp/drf\";\n\nexport class CellBuilderDrfFlag extends CellBuilderFlagIcon {\n\n\ticonWidth = \".8rem\";\n\n\ticonFilter = \"var(--filter)\";\n\n\tprotected _getIcon(row: IGridDataRow): string {\n\t\tconst st = super._getValue(row);\n\t\treturn st ? \"--drf-\" + st + \"-url\" : \"\";\n\t}\n\n\tprotected _getValue(row: IGridDataRow): any {\n\t\tconst st = super._getValue(row);\n\t\treturn st ? WSP_DRF.getDrfStateLabel(st as EDrfState) : \"\";\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-explorer/grid/drf\", 1, /* language=CSS */ `\n\t:host {\n\t\t--drf-notOverriden-url: url(/@skin@/wsp/objects/drfState/notOverriden.svg);\n\t\t--drf-created-url: url(/@skin@/wsp/objects/drfState/created.svg);\n\t\t--drf-overriden-url: url(/@skin@/wsp/objects/drfState/overriden.svg);\n\t\t--drf-erased-url: url(/@skin@/wsp/objects/drfState/erased.svg);\n\t}\n\n\t.drf {\n\t\tborder: none !important;\n\t}\n`);\n\n\n/**\n *\n */\nexport class RevertSrc extends SrcAction<IShortDescCtx> {\n\n\tstatic SINGLETON = new RevertSrc();\n\n\tconstructor() {\n\t\tsuper('revertSrc');\n\t\tthis._group = \"edit\";\n\t\tthis._icon = \"/@skin@/wsp/actions/drfRevert.svg\";\n\t\tthis.atLeastOne = true;\n\t\tthis.isNotRemoved = false;\n\t\tthis._enableSrcPerms = [\"action.drf#revert\"];\n\t}\n\n\tgetLabel(ctx: IShortDescCtx): string {\n\t\tif (ctx.shortDescs.length === 0) return \"Abandonner toutes les modifications\";\n\t\tif (ctx.shortDescs.every((sd) => sd.drfState === \"erased\")) return ctx.shortDescs.length === 1 ? \"Annuler la suppression\" : \"Annuler les suppressions\";\n\t\treturn \"Abandonner les modifications\";\n\t}\n\n\tisEnabled(ctx: IShortDescCtx): boolean {\n\t\tif (ctx.shortDescs.some((sd) => {\n\t\t\tif (ITEM.getSrcUriType(sd.srcUri) !== \"space\") {\n\t\t\t\tconst st = sd.drfState;\n\t\t\t\treturn st !== \"overriden\" && st !== \"erased\" && st !== \"notComputed\";\n\t\t\t} else {\n\t\t\t\treturn sd.drfState === \"created\";\n\t\t\t}\n\t\t})) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: IShortDescCtx, ev?: Event) {\n\t\tconst wsp = ctx.reg.env.wsp;\n\t\tif (await this.confirm(ctx, ev)) {\n\t\t\tawait WSP_DRF.srcRevert(ctx.reg.env.wsp, ctx.emitter, ctx.shortDescs);\n\t\t}\n\t}\n\n\tconfirm(ctx: IShortDescCtx, ev?: Event): Promise<boolean> {\n\t\tconst count = ctx.shortDescs.length;\n\t\tif (count === 0) return POPUP.confirm(\"Confirmez l'abandon de toutes les modifications de cet atelier de travail. Le contenu original de l'atelier de rÃ©fÃ©rence sera restaurÃ©.\", ctx.emitter, {okLbl: \"Abandonner les modifications\"});\n\t\treturn POPUP.confirm(`Confirmez l'abandon de ces modifications. Le contenu original de l'atelier de rÃ©fÃ©rence sera restaurÃ©.`, ctx.emitter, {okLbl: \"Abandonner les modifications\"});\n\t}\n}\n\nREG.reg.registerSvc('drf/revertAction', 1, RevertSrc.SINGLETON);\n\n/**\n *\n */\nexport class CommitSrc extends SrcAction<IShortDescCtx> {\n\n\tstatic SINGLETON = new CommitSrc();\n\n\tconstructor() {\n\t\tsuper('commitSrc');\n\t\tthis._group = \"edit\";\n\t\tthis._icon = \"/@skin@/wsp/actions/drfCommit.svg\";\n\t\tthis.atLeastOne = true;\n\t\tthis.isNotRemoved = false;\n\t\tthis._enableSrcPerms = [\"action.drf#commit\"];\n\t}\n\n\tgetLabel(ctx: IShortDescCtx): string {\n\t\tif (ctx.shortDescs.length === 0) return \"Valider toutes les modifications\";\n\t\tif (ctx.shortDescs.every((sd) => sd.drfState === \"erased\")) return ctx.shortDescs.length === 1 ? \"Valider la suppression\" : \"Valider les suppressions\";\n\t\treturn \"Valider les modifications\";\n\t}\n\n\tisEnabled(ctx: IShortDescCtx): boolean {\n\t\tif (ctx.shortDescs.some((sd) => {\n\t\t\tif (ITEM.isSrcUriInConflict(sd.srcUri)) return true;\n\t\t\tif (ITEM.getSrcUriType(sd.srcUri) !== \"space\") {\n\t\t\t\tconst st = sd.drfState;\n\t\t\t\treturn st !== \"overriden\" && st !== \"created\" && st !== \"erased\" && st !== \"notComputed\";\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: IShortDescCtx, ev?: Event) {\n\t\tconst wsp = ctx.reg.env.wsp;\n\t\tif (await this.confirm(ctx, ev)) {\n\t\t\tawait WSP_DRF.srcCommit(ctx.reg.env.wsp, ctx.emitter, ctx.shortDescs);\n\t\t}\n\t}\n\n\tconfirm(ctx: IShortDescCtx, ev?: Event): Promise<boolean> {\n\t\tconst count = ctx.shortDescs.length;\n\t\tif (count === 0) return POPUP.confirm(\"Confirmez la validation de toutes les modifications de cet atelier de travail.\", ctx.emitter, {okLbl: \"Valider toutes les modifications\"});\n\t\tif (count === 1) return POPUP.confirm(\"Confirmez la validation de cette modification.\", ctx.emitter, {okLbl: \"Valider la modification\"});\n\t\treturn POPUP.confirm(`Confirmez la validation de ces ${count} modifications.`, ctx.emitter, {okLbl: \"Valider les modifications\"});\n\t}\n}\n\nREG.reg.registerSvc('drf/commitAction', 1, CommitSrc.SINGLETON);\n\n/**\n *\n */\nexport class RibbonDrf extends RibbonBase {\n\n\tprotected _initialize(init: any): void {\n\t\tsuper._initialize(init);\n\t\tthis.reg.env.longDescChange.add(this.refresh.bind(this));\n\t\tthis.setTooltip(this._tooltip, true);\n\t}\n\n\ttemplate(rib: RibbonDrf): TemplateResult {\n\t\treturn xhtml`<div class=\"smallTi\">Calque de travail</div><div id=\"st\" data-drf-state=\"${rib.reg.env.longDesc.drfState}\"><img id=\"ico\"/>${WSP_DRF.getDrfStateLabel(rib.reg.env.longDesc.drfState)}</div>`\n\t}\n\n\t_tooltip(this: void, rib: RibbonDrf, tooltip: PopupTooltip): IView | null {\n\t\treturn <div id=\"ttRoot\">\n\t\t\t<BarActions class=\"vertical\" Ã®={{\n\t\t\t\treg: rib.reg,\n\t\t\t\tactions: [rib.reg.getSvc('drf/revertAction'), rib.reg.getSvc('drf/commitAction')],\n\t\t\t\tactionContext: rib.shortDescCtx,\n\t\t\t\tuiContext: \"dialog\",\n\t\t\t\tdisableFullOverlay: true\n\t\t\t} as OBarActionsInit<IShortDescCtx>}/>\n\t\t</div>;\n\t}\n\n\tprotected _refresh() {\n\t\tif (!this.hidden) renderAppend(this.template(this), this.shadowRoot);\n\t}\n}\n\nREG.reg.registerSkin('wsp-rib-drf', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 0 1 auto;\n\t\tmargin: 0 .2em;\n\t\t--drf-notOverriden-url: url(/@skin@/wsp/objects/drfState/notOverriden.svg);\n\t\t--drf-created-url: url(/@skin@/wsp/objects/drfState/created.svg);\n\t\t--drf-overriden-url: url(/@skin@/wsp/objects/drfState/overriden.svg);\n\t\t--drf-erased-url: url(/@skin@/wsp/objects/drfState/erased.svg);\n\t}\n\n\t#st {\n\t\tflex: 1 0 auto;\n\t\tcolor: var(--alt1-color);\n\t\tfont-weight: bold;\n\t}\n\n\t#ico {\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\tmargin-inline-end: 0.2em;\n\t}\n\n\t#st[data-drf-state='notOverriden'] > #ico {\n\t\tcontent: var(--drf-notOverriden-url);\n\t}\n\n\t#st[data-drf-state='created'] > #ico {\n\t\tcontent: var(--drf-created-url);\n\t}\n\n\t#st[data-drf-state='overriden'] > #ico {\n\t\tcontent: var(--drf-overriden-url);\n\t}\n\n\t#st[data-drf-state='erased'] > #ico {\n\t\tcontent: var(--drf-erased-url);\n\t}\n`);\n\ncustomElements.define('wsp-rib-drf', RibbonDrf);\n\n\n/**\n * CritÃ¨re de recherche DRF : ItemCritDrfState\n *    <wsp-itemcrit-drf-state/>\n */\nexport class ItemCritDrfState extends UiCritBase {\n\n\tstatic AREA = new UiCritArea(\"wsp-itemcrit-drf-state\").setLabel(\"Ãtat du calque de travail\").setGroup(\"item\")\n\t\t.setBuildAbstract((xml: Element, ctx: OUiCritInit): HTMLElement => {\n\t\t\tconst statesCodesList = xml.hasAttribute(\"drfStates\") ? xml.getAttribute(\"drfStates\").split(\" \") : [];\n\t\t\tconst statesLabelsList: string[] = [];\n\t\t\tif (statesCodesList.indexOf(\"notOverriden\") > -1) statesLabelsList.push(\"inchangÃ©\");\n\t\t\tif (statesCodesList.indexOf(\"overriden\") > -1) statesLabelsList.push(\"modifiÃ©\");\n\t\t\tif (statesCodesList.indexOf(\"created\") > -1) statesLabelsList.push(\"crÃ©Ã©\");\n\t\t\tif (statesCodesList.indexOf(\"erased\") > -1) statesLabelsList.push(\"supprimÃ©\");\n\t\t\tif (statesLabelsList.length > 0) {\n\t\t\t\tconst statesTxt = statesLabelsList.join(\" ou \");\n\t\t\t\treturn <span class=\"crit\">Ãtat du calque {statesTxt}</span>;\n\t\t\t}\n\t\t});\n\n\n\tprotected _notOverridenBtn: ButtonToggle;\n\n\tprotected _overridenBtn: ButtonToggle;\n\n\tprotected _createdBtn: ButtonToggle;\n\n\tprotected _erasedBtn: ButtonToggle;\n\n\tget notOverriden(): boolean {return this._notOverridenBtn.toggleOn}\n\n\tset notOverriden(state: boolean) {this._notOverridenBtn.toggleOn = state}\n\n\tget overriden(): boolean {return this._overridenBtn.toggleOn}\n\n\tset overriden(state: boolean) {this._overridenBtn.toggleOn = state}\n\n\tget created(): boolean {return this._createdBtn.toggleOn}\n\n\tset created(state: boolean) {this._createdBtn.toggleOn = state}\n\n\tget erased(): boolean {return this._erasedBtn.toggleOn}\n\n\tset erased(state: boolean) {this._erasedBtn.toggleOn = state}\n\n\tprotected _initialize(init: OUiCritInit): void {\n\t\tsuper._initialize(init);\n\t\tconst sr = this.shadowRoot;\n\n\t\tsr.appendChild(<div class=\"critHead\">\n\t\t\t<span class=\"critTitle\">Ãtat du calque de travail</span>\n\t\t\t{this.insertAlternativesBtn(init)}\n\t\t</div>);\n\n\t\tconst btnsBox = sr.appendChild(<div class=\"btnsbox\"/>);\n\n\t\tthis._notOverridenBtn = btnsBox.appendChild(<ButtonToggle onclick={this.toggleButton} icon=\"/@skin@/wsp/objects/drfState/notOverriden.svg\" label=\"InchangÃ©s\" class=\"notOverriden\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Items non surchargÃ©s dans cet atelier calque de travail\" ui-context=\"dialog\" aria-pressed=\"true\"/>) as ButtonToggle;\n\t\tthis._overridenBtn = btnsBox.appendChild(<ButtonToggle onclick={this.toggleButton} icon=\"/@skin@/wsp/objects/drfState/overriden.svg\" label=\"ModifiÃ©s\" class=\"icon overriden\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t title=\"Items surchargÃ©s dans cet atelier calque de travail\" ui-context=\"dialog\"/>) as ButtonToggle;\n\t\tthis._createdBtn = btnsBox.appendChild(<ButtonToggle onclick={this.toggleButton} icon=\"/@skin@/wsp/objects/drfState/created.svg\" label=\"CrÃ©Ã©s\" class=\"created\" title=\"Items crÃ©Ã©s dans cet atelier calque de travail\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ui-context=\"dialog\"/>) as ButtonToggle;\n\t\tthis._erasedBtn = btnsBox.appendChild(<ButtonToggle onclick={this.toggleButton} icon=\"/@skin@/wsp/objects/drfState/erased.svg\" label=\"SupprimÃ©s\" class=\"erased\" title=\"Items supprimÃ©s dans cet atelier calque de travail\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tui-context=\"dialog\"/>) as ButtonToggle;\n\t}\n\n\tasync initFromXmlCrit(xml: Element): Promise<this> {\n\t\tconst states = xml.hasAttribute(\"drfStates\") ? xml.getAttribute(\"drfStates\").split(\" \") : [];\n\t\tthis.notOverriden = states.indexOf(\"notOverriden\") > -1;\n\t\tthis.overriden = states.indexOf(\"overriden\") > -1;\n\t\tthis.created = states.indexOf(\"created\") > -1;\n\t\tthis.erased = states.indexOf(\"erased\") > -1;\n\t\treturn this;\n\t}\n\n\tbuildCrit(): ISearchCrit | undefined {\n\t\tconst states: EDrfState[] = [];\n\t\tif (this.notOverriden) states.push(\"notOverriden\");\n\t\tif (this.overriden) states.push(\"overriden\");\n\t\tif (this.created) states.push(\"created\");\n\t\tif (this.erased) states.push(\"erased\");\n\t\treturn new SearchDrfStates(states);\n\t}\n\n\tprivate toggleButton(this: ButtonToggle, ev?: Event): void {\n\t\tconst me = DOMSH.findHost(this) as ItemCritDrfState;\n\t\tthis.toggleOn = !this.toggleOn;\n\t\tme.onChange();\n\t}\n}\n\nREG.reg.registerSkin('wsp-itemcrit-drf-state', 1, /* language=CSS */ `\n\t.btnsbox {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n`);\n\ncustomElements.define(\"wsp-itemcrit-drf-state\", ItemCritDrfState);\n\n/**\n * Init du registre spÃ©cifique Ã  un atelier de type DRF\n * \t\tinit du registre **ui** (par app)\n */\nexport function initDrfReg(reg: IReg<IWspUiEnv>) {\n\tconst drfColDef = new GridColDef(\"drf\")\n\t\t.setFlex(\"1rem\", 0, 0)\n\t\t.setCellBuilder(new CellBuilderDrfFlag(\"drfState\"))\n\t\t.setSkin(\"wsp-explorer/grid/drf\")\n\t\t.setLabel(\"\")\n\t\t.setDescription(\"Ãtat du calque de travail\");\n\n\treg.addToList(\"columns:wspExplorer:secondaryCols\", 'drf', 1, drfColDef, 10);\n\treg.addToList(\"columns:netItems:secondaryCols\", 'drf', 1, drfColDef, 10);\n\n\treg.addToList(\"columns:wspApp:searches:item\", \"drf\", 1, drfColDef);\n\n\treg.addToList(\"columns:wspApp:searches-export:item\", \"drf\", 1, new SearchExportColumn<IRegPointer<IWspUiEnv>>('drf').setColDef(\n\t\tnew SearchFuncTranslateStr(\"drfState\").setDict(() => {\n\t\t\tconst states: { [key in EDrfState]: string } = {\n\t\t\t\terased: WSP_DRF.getDrfStateLabel(\"erased\"),\n\t\t\t\tnotOverriden: WSP_DRF.getDrfStateLabel(\"notOverriden\"),\n\t\t\t\toverriden: WSP_DRF.getDrfStateLabel(\"overriden\"),\n\t\t\t\tcreated: WSP_DRF.getDrfStateLabel(\"created\"),\n\t\t\t\tcreatedDeleted: WSP_DRF.getDrfStateLabel(\"createdDeleted\"),\n\t\t\t\tnotComputed: WSP_DRF.getDrfStateLabel(\"notComputed\"),\n\t\t\t};\n\t\t\treturn states;\n\t\t})).setLabel(\"Calque de travail : Ã©tat\").setExportStatus(ESearchExportColumnStatus.exportable));\n\n\tfunction addSrcSvcAction(reg: IReg<IWspUiEnv>, svc: string, sortKey?: number) {\n\t\treg.addSvcToList(\"actions:wsp:shortDesc\", svc, 1, svc, sortKey);\n\t\t// reg.addToList(\"actions:wspApp:explorer\", act.getId(), 1, act, sortKey);\n\t\t// reg.addToList(\"actions:item:burger\", act.getId(), 1, act, sortKey);\n\t\t// reg.addToList(\"actions:searchItem:shortDesc:item\", act.getId(), 1, act, sortKey);\n\t}\n\n\taddSrcSvcAction(reg, 'drf/revertAction', -2);\n\taddSrcSvcAction(reg, 'drf/commitAction', -1);\n\n\treg.addToList(\"ribbon:item\", \"drf\", 1, RibbonDrf, 20);\n\n\tREG.reg.registerSvc(\"wsp-itemcrit-drf-state\", 1, ItemCritDrfState.AREA);\n\treg.addSvcToList(\"wsp.crit.items\", \"wsp-itemcrit-drf-state\", 1, \"wsp-itemcrit-drf-state\");\n}"]}