{"version":3,"sources":["/@back@/edit/wed/wedlets/diff/diffTags.tsx"],"names":["EWedletEditMode","findElementWedlet","IS_EltWedlet","isEditableWedlet","REG","DOM","JSX","DocHolder","applyDiffs","DiffAnnotReplace","EXmlDiffMode","mixCtToForeign","DOMSH","WedEditorFrag","Action","XA","JML","ActionBtn","XmlTypedHouse","SkRuleDoc","SkRuleElt","SkMatcherAnyElt","IS_focusable","WedDiffMark","HTMLElement","wedlet","_a","this","holder","[object Object]","skAnnot","foreignReplace","noAction","wedMgr","wedAnnotDiff","reg","installSkin","localName","attachShadow","SHADOWDOM_INIT","title","diffSession","mode","diff","getLabel","uiType","level","name","classList","add","uiSubType","inCurrent","setAttribute","shadowRoot","appendChild","createElement","Ã®","action","ERASEDIFF","actionContext","uiContext","setStyle","removeAttribute","remove","ctxMenuActions","actions","eraseDiffLabel","batch","fillBatch","parentNode","needAdjustForNextAdds","removeDiffWidget","doBatch","eltWedlet","docHolder","newBatch","xa","wedAnchor","isAttribute","setAttr","deleteSequence","registerSkin","window","customElements","define","WedDiffWrapMark","startMark","append","insertBefore","firstChild","wrap","initDiffWrapAnnot","metaAnnot","Error","WedDiffForeign","annot","house","parentWedlet","replaceOther","parentWedMgr","sr","foreignModel","model","buildModelForFragment","subEditor","initialize","commonBar","wedEditor","wedModel","initFromDocHolder","noAnnots","readOnlyCauses","rootModel","xaRoot","attName","undefined","margin","class","addEventListener","onPointerdown","parent","findParent","start","strValue","insertJml","dom2jml","foreignNode","options","root","rootNode","elt","findFlatNext","focus","ev","findHost","preventDefault","WedDiffValue","stopBoxSelection","inputWidget","document","otherValue","p","getElementById","setText","WedDiffTable","table","insertAdjacentElement","toggle","annots","push","lastElementChild","textContent","diffTable","WedDiffPara","para","foreignDoc","newDomDoc","namespaces","diffRoot","jmlToDom","paraModel","newJml","firstElementChild","initialDoc","schema","skNodePara","schemaDom","schemaDomConfig","rootRule","init","SINGLETON","rule","contentRule","initSkMeta","skMeta","buildOptions","autoMutate","autoComplete","autoNormXml","autoNormChars","genAnnots","listeners","on","diffForeignRedrawAtEnd","subWedMgr","setDiffSession","paraSession","style","position","replaceCt","getContent","spliceSequence","parentElement","findFirstChild","n","initDiffOnPara","initDiffPara","removeDiffOnPara","WedDiffTxtObj","initForeign","skAnnots","txtObj","customImpl","custom","txtObjDepth","length","importNode","findDomLast","getDocument","console","log","redrawDiff","idx","indexOf","splice","documentElement","willRedraw","Promise","resolve","then","_redrawDiff","bind","DiffInMeta","widget","Set","subAnnotsCheck","deadline","timeRemaining","a","anchorNode","Attr","ownerElement","isConnected","removeAnnot","refresh","delete","size","removeListener","setVisible","ctx","editMode","write","setLabel","setIcon","setExecute","eraseDiff","stopPropagation","isDiffAnnot"],"mappings":"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","sourcesContent":["import {EWedletEditMode, findElementWedlet, IElementSkAnnot, IElementWedlet, IS_EltWedlet, isEditableWedlet, IWedAnnotPointer, IWedlet} from \"back/edit/wed/wedlets/wedlet\";\nimport {REG} from \"lib/commons/registry\";\nimport {DOM, IDocumentNs, JSX} from \"lib/commons/xml/dom\";\nimport {DocHolder, IDocBatch} from \"lib/edit/docHolder\";\nimport {applyDiffs, DiffAnnotReplace, EXmlDiffMode, IDiffAnnotForeign, IDiffAnnotMark, IDiffAnnotMixCt, IDiffAnnotValue, ISkDiffAnnot, mixCtToForeign} from \"lib/edit/schema/diff\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {WedEditorFrag} from \"back/edit/wed/wedEditorBox\";\nimport {IContextMenuActions, IContextMenuActionsPointer} from \"back/commons/actionables\";\nimport {Action} from \"lib/commons/actions\";\nimport {IWedEditorCommonBar} from \"back/edit/wed/features/commonBar\";\nimport {XA} from \"lib/commons/xml/xAddr\";\nimport {JML} from \"lib/commons/xml/jml\";\nimport {ActionBtn, OActionBtnInit} from \"back/commons/widgets/buttons\";\nimport {XmlBatch} from \"lib/edit/ot/xmlHouse\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {IBoxStopSelection} from \"back/edit/wed/features/boxSel\";\nimport {IWedletSingleElt} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {XmlTypedHouse} from \"lib/edit/ot/xmlTypedHouse\";\nimport {InlElement, TxtObject, TxtParaLike, TxtTable} from \"back/edit/wed/wedlets/txt/txtTags\";\nimport {ISkAnnot} from \"lib/edit/schema/schemaAnnots\";\nimport {SkRuleDoc, SkRuleElt} from \"lib/edit/schema/schemaPatterns\";\nimport {SkMatcherAnyElt} from \"lib/edit/schema/schemaMatchers\";\nimport IS_focusable = DOM.IS_focusable;\n\nexport interface IWedDiffMargin extends IElementSkAnnot {\n\tskAnnot: ISkDiffAnnot\n\n\t/** Wedlet dans lequel cette margin est placÃ©e. */\n\twedlet: IWedlet\n\n\teraseDiffLabel: string\n\n\t/** Elimine la diffÃ©rence, ie, en fonction du mode, en acceptant la contribution tierce ou annulant les Ã©carts. */\n\teraseDiff(): void\n\n\tremoveDiffWidget(): void\n\n\t/** Pour ajouter le diff des metas correspondant Ã  un tag marquÃ© (WedDiffWrapMark, WedDiffTxtObj). */\n\taddAnnotForMetas?(metaAnnot: ISkDiffAnnot): void\n\n\tremoveAnnotForMetas?(metaAnnot: ISkDiffAnnot): void\n}\n\n\n/**\n * Indicateur d'annotation de diff insÃ©rÃ©e dans un ElementWedlet (margin dans son shadow).\n */\nexport class WedDiffMark extends HTMLElement implements IWedDiffMargin, IContextMenuActionsPointer<IWedDiffMargin> {\n\tskAnnot: ISkDiffAnnot;\n\tholder: HTMLElement & IWedAnnotPointer;\n\n\tforeignReplace?: WedDiffForeign;\n\n\tget wedlet(): IWedlet {return findElementWedlet(this.holder)?.wedlet}\n\n\tinitDiffAnnot(holder: HTMLElement & IWedAnnotPointer, skAnnot: ISkDiffAnnot, wedlet: IWedlet, foreignReplace?: WedDiffForeign, noAction?: boolean): this {\n\t\tconst wedMgr = wedlet.wedMgr;\n\t\tthis.holder = holder;\n\t\tthis.foreignReplace = foreignReplace;\n\t\t//this.tabIndex = 0;\n\t\tholder.wedAnnotDiff = this;\n\t\twedMgr.reg.installSkin(this.localName, this.attachShadow(DOMSH.SHADOWDOM_INIT));\n\t\tthis.skAnnot = skAnnot;\n\t\tthis.title = foreignReplace ? skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"Contenu issu d'un remplacement\" : \"Contenu Ã©liminÃ© par un remplacement\" : skAnnot.getLabel();\n\t\tconst uiType = skAnnot.level.name;\n\t\tthis.classList.add(uiType);\n\t\tif (skAnnot instanceof DiffAnnotReplace) {\n\t\t\tconst uiSubType = skAnnot.inCurrent.level.name;\n\t\t\tthis.classList.add(uiSubType);\n\t\t\tholder.setAttribute(\"annot-diff\", uiSubType);\n\t\t} else {\n\t\t\tholder.setAttribute(\"annot-diff\", uiType);\n\t\t}\n\t\tif (!noAction) this.shadowRoot.appendChild(<ActionBtn Ã®={{reg: wedMgr.reg, action: ERASEDIFF, actionContext: this, uiContext: 'bar'} as OActionBtnInit<IWedDiffMargin>}/>);\n\t\treturn this;\n\t}\n\n\t/** Insertion par dÃ©faut. */\n\tdefaultInject(): this {\n\t\tDOM.setStyle(this.holder, \"position\", \"relative\");\n\t\t(this.holder.shadowRoot || this.holder).appendChild(this);\n\t\treturn this;\n\t}\n\n\tremoveDiffWidget() {\n\t\tthis.holder.wedAnnotDiff = null;\n\t\tthis.holder.removeAttribute(\"annot-diff\");\n\t\tthis.remove();\n\t\tthis.holder = null;\n\t}\n\n\tget ctxMenuActions(): IContextMenuActions<IWedDiffMargin> {\n\t\treturn {\n\t\t\tactions: [ERASEDIFF],\n\t\t\tactionContext: this\n\t\t};\n\t}\n\n\tget eraseDiffLabel() {\n\t\tif (this.foreignReplace) return this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"Annuler ce remplacement\" : \"Valider ce remplacement par l'autre version\";\n\t\treturn this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"Annuler cet ajout\" : \"Valider cette suppression\";\n\t}\n\n\teraseDiff() {\n\t\tconst batch = this.fillBatch();\n\t\tif (this.foreignReplace && this.foreignReplace.parentNode) {\n\t\t\tbatch.needAdjustForNextAdds();\n\t\t\tthis.foreignReplace.fillBatch(batch);\n\t\t\tthis.foreignReplace.removeDiffWidget();\n\t\t}\n\t\tthis.removeDiffWidget();\n\t\tbatch.doBatch();\n\t}\n\n\tfillBatch(batch?: IDocBatch & XmlBatch): IDocBatch & XmlBatch {\n\t\tconst eltWedlet = findElementWedlet(this.holder);\n\t\tif (eltWedlet) {\n\t\t\tif (!batch) batch = eltWedlet.wedlet.wedMgr.docHolder.newBatch();\n\t\t\tconst xa = eltWedlet.wedlet.wedAnchor;\n\t\t\tif (XA.isAttribute(xa)) {\n\t\t\t\tbatch.setAttr(xa, null);\n\t\t\t} else {\n\t\t\t\tbatch.deleteSequence(xa, 1);\n\t\t\t}\n\t\t}\n\t\treturn batch;\n\t}\n}\n\nREG.reg.registerSkin('wed-diff-mark', 1, /* language=CSS */ `\n\t:host {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: flex-end;\n\t\twidth: 10px;\n\t\tbackground-repeat: repeat-y;\n\t\tcursor: default;\n\t}\n\n\t:host(.diffadd) {\n\t\tbackground-color: var(--edit-diffadd-bgcolor);\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/add.svg\");\n\t}\n\n\t:host(.diffrem) {\n\t\tbackground-color: var(--edit-diffrem-bgcolor);\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/rem.svg\");\n\t}\n\n\t:host(.diff) {\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t}\n\n\t#eraseDiff {\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n`);\n\nwindow.customElements.define(\"wed-diff-mark\", WedDiffMark);\n\n/** Marque pour les balises inlines wrappÃ©es. */\nexport class WedDiffWrapMark extends WedDiffMark {\n\tstartMark: WedDiffWrapMark;\n\n\tinitDiffWrapAnnot(holder: InlElement, skAnnot: IDiffAnnotMark, wedlet: IWedlet, startMark?: boolean): this {\n\t\tconst wedMgr = wedlet.wedMgr;\n\t\twedMgr.reg.installSkin(this.localName, this.attachShadow(DOMSH.SHADOWDOM_INIT));\n\t\tthis.skAnnot = skAnnot;\n\t\tthis.title = skAnnot.getLabel();\n\t\tthis.classList.add(skAnnot.level.name);\n\t\tif (startMark) {\n\t\t\tthis.shadowRoot.append(\"[\");\n\t\t\tholder.insertBefore(this, holder.firstChild);\n\t\t} else {\n\t\t\tthis.holder = holder;\n\t\t\tholder.wedAnnotDiff = this;\n\t\t\tthis.shadowRoot.append(\"]\");\n\t\t\tholder.appendChild(this);\n\t\t\tif (skAnnot.wrap === \"full\") this.startMark = new WedDiffWrapMark().initDiffWrapAnnot(holder, skAnnot, wedlet, true);\n\t\t}\n\t\treturn this;\n\t}\n\n\taddAnnotForMetas(metaAnnot: ISkDiffAnnot): void {\n\t\t//TODO pour ajouter les metas quand impl du eraseDiff() interne au para.\n\t}\n\n\tremoveAnnotForMetas(metaAnnot: ISkDiffAnnot): void {\n\t\t//TODO pour ajouter les metas quand impl du eraseDiff() interne au para.\n\t}\n\n\tremoveDiffWidget() {\n\t\tthis.holder.wedAnnotDiff = null;\n\t\tif (this.startMark) {\n\t\t\tthis.startMark.remove();\n\t\t\tthis.startMark = null;\n\t\t}\n\t\tthis.remove();\n\t\tthis.holder = null;\n\t}\n\n\tinitDiffAnnot(holder: HTMLElement & IWedAnnotPointer, skAnnot: ISkDiffAnnot, wedlet: IWedlet, foreignReplace?: WedDiffForeign, noAction?: boolean): this {\n\t\tthrow Error(\"do not use\");\n\t}\n\n\tdefaultInject(): this {\n\t\tthrow Error(\"do not use\");\n\t}\n\n\teraseDiff() {\n\t\t//TODO\n\t}\n}\n\nREG.reg.registerSkin('wed-diff-wrap-mark', 1, /* language=CSS */ `\n\t:host {\n\t\tcursor: default;\n\t}\n\n\t:host(.diffadd) {\n\t\tbackground-color: var(--edit-diffadd-bgcolor);\n\t\tcolor: var(--edit-diffadd-color);\n\t}\n\n\t:host(.diffrem) {\n\t\tbackground-color: var(--edit-diffrem-bgcolor);\n\t\tcolor: var(--edit-diffrem-color);\n\t}\n\n\t:host(.diff) {\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t\tcolor: var(--edit-diff-color);\n\t}\n`);\nwindow.customElements.define(\"wed-diff-wrap-mark\", WedDiffWrapMark);\n\n\n/**\n * ElÃ©ment affichant un contenu issu de la source Ã©trangÃ¨re dans un sous-Ã©diteur dans les modes diff et patch.\n * GÃ¨re aussi le diff de type remplacement d'un autre Ã©lÃ©ment.\n * Doit Ãªtre insÃ©rÃ© en Ã©lÃ©ment frÃ¨re des wedlets au point d'insertion correspondant.\n */\nexport class WedDiffForeign extends HTMLElement implements IWedDiffMargin, IContextMenuActionsPointer<IWedDiffMargin> {\n\tskAnnot: IDiffAnnotForeign;\n\tmargin: HTMLElement;\n\n\t/** Construction d'un editor affichant le fragment (IDiffAnnotForeign) */\n\tsubEditor?: WedEditorFrag;\n\n\t/** Gestion du remplacement. */\n\treplaceOther?: WedDiffMark;\n\n\tget wedlet(): IWedlet {return findElementWedlet(this)?.wedlet}\n\n\tinitDiffForeign(annot: IDiffAnnotForeign, house: XmlTypedHouse, parentWedlet: IWedletSingleElt, replaceOther?: WedDiffMark): this {\n\t\tthis.skAnnot = annot;\n\t\tthis.replaceOther = replaceOther;\n\t\tconst parentWedMgr = parentWedlet.wedMgr;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tparentWedMgr.reg.installSkin(this.localName, sr);\n\t\tthis.classList.add(annot.level.name);\n\t\tconst foreignModel = parentWedlet.model.buildModelForFragment(parentWedlet);\n\t\tif (foreignModel) {\n\t\t\t//Foreign doc\n\t\t\tconst docHolder = new DocHolder(house);\n\t\t\tthis.subEditor = new WedEditorFrag().initialize({reg: parentWedMgr.reg, commonBar: (parentWedMgr.wedEditor as IWedEditorCommonBar).commonBar} as IWedEditorCommonBar);\n\t\t\tthis.subEditor.wedModel = parentWedMgr.wedModel;\n\t\t\t//Init de l'Ã©diteur\n\t\t\tthis.subEditor.initFromDocHolder(docHolder, {noAnnots: true, readOnlyCauses: [\"diffForeign\"], rootModel: foreignModel, xaRoot: annot.attName ? [0] : undefined});\n\t\t\tthis.shadowRoot.appendChild(this.subEditor);\n\t\t} else {\n\t\t\tthis.shadowRoot.append(\"DiffÃ©rence non affichable\");\n\t\t}\n\t\t//Ajout de la margin\n\t\tthis.margin = sr.appendChild(<div class=\"margin\" title={replaceOther ? annot.diffSession.mode === EXmlDiffMode.diff ? \"Contenu Ã©liminÃ© par un remplacement\" : \"Contenu issu d'un remplacement\" : annot.getLabel()}/>);\n\t\tthis.margin.classList.add(annot.level.name);\n\t\tif (replaceOther) this.margin.classList.add(\"replace\");\n\t\tthis.margin.addEventListener(\"pointerdown\", this.onPointerdown);\n\t\tthis.margin.appendChild(<ActionBtn Ã®={{reg: parentWedMgr.reg, action: ERASEDIFF, actionContext: this, uiContext: 'bar'} as OActionBtnInit<IWedDiffMargin>}/>);\n\t\treturn this;\n\t}\n\n\t//get stopBoxSelection(): true {return true}\n\n\tget ctxMenuActions(): IContextMenuActions<IWedDiffMargin> {\n\t\treturn {\n\t\t\tactions: [ERASEDIFF],\n\t\t\tactionContext: this\n\t\t};\n\t}\n\n\tremoveDiffWidget() {\n\t\tthis.remove();\n\t}\n\n\tget eraseDiffLabel() {\n\t\tif (this.replaceOther) return this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"RÃ©tablir ce contenu remplacÃ©\" : \"Valider ce remplacement\";\n\t\treturn this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"Annuler cette suppression\" : \"Valider cet ajout\";\n\t}\n\n\teraseDiff() {\n\t\t//console.log(\":::REVERT:::\", this);\n\t\tconst batch = this.fillBatch();\n\t\tif (this.replaceOther) {\n\t\t\tbatch.needAdjustForNextAdds();\n\t\t\tthis.replaceOther.fillBatch(batch);\n\t\t}\n\t\tthis.remove();\n\t\tbatch.doBatch();\n\t}\n\n\tfillBatch(batch?: IDocBatch & XmlBatch): IDocBatch & XmlBatch {\n\t\tconst parent = DOM.findParent(this, null, IS_EltWedlet);\n\t\tif (!batch) batch = parent.wedlet.wedMgr.docHolder.newBatch();\n\t\tif (this.skAnnot.attName) {\n\t\t\tbatch.setAttr(this.skAnnot.start, this.skAnnot.strValue);\n\t\t} else {\n\t\t\tbatch.insertJml(this.skAnnot.start, JML.dom2jml(this.skAnnot.foreignNode));\n\t\t}\n\t\treturn batch;\n\t}\n\n\tfocus(options?: FocusOptions): void {\n\t\tconst root = this.subEditor.rootNode;\n\t\tconst elt = DOMSH.findFlatNext(root, root, IS_focusable);\n\t\tif (elt) elt.focus(options);\n\t}\n\n\tonPointerdown(this: HTMLDivElement, ev: Event) {\n\t\tDOMSH.findHost<WedDiffForeign>(this).focus();\n\t\tev.preventDefault();\n\t}\n}\n\nREG.reg.registerSkin('wed-diff-foreign', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tclear: both;\n\t}\n\n\t:host(.diffrem) {\n\t\tbackground-color: var(--edit-diffrem-bgcolor);\n\t\t--edit-bgcolor: none;\n\t}\n\n\t:host(.diffadd) {\n\t\tbackground-color: var(--edit-diffadd-bgcolor);\n\t\t--edit-bgcolor: none;\n\t}\n\n\t:host(:focus) {\n\t\toutline: none;\n\t}\n\n\t.margin {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 10px;\n\t\tbackground-repeat: repeat-y;\n\t}\n\n\t.diffrem {\n\t\tbackground-color: var(--edit-diffrem-bgcolor);\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/rem.svg\");\n\t}\n\n\t.diffadd {\n\t\tbackground-color: var(--edit-diffadd-bgcolor);\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/add.svg\");\n\t}\n\n\t.replace {\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t}\n\n\tbox-editor-frag {\n\t\tflex: 1;\n\t}\n\n\t#doDiff {\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tleft: -.5rem;\n\t}\n`);\n\nwindow.customElements.define(\"wed-diff-foreign\", WedDiffForeign);\n\n\n/**\n * ElÃ©ment affichant une valeur issue du document Ã©tranger.\n * Cet Ã©lÃ©ment doit Ãªtre insÃ©rÃ© dans le shadow de l'elementWedlet de type input (ie wedlet bind de type text attribute ou comment).\n */\nexport class WedDiffValue extends HTMLElement implements IWedDiffMargin, IContextMenuActionsPointer<IWedDiffMargin>, IBoxStopSelection {\n\tskAnnot: IDiffAnnotValue;\n\tholder: IElementWedlet & IWedAnnotPointer;\n\tmargin: HTMLElement;\n\n\tget wedlet(): IWedlet {return findElementWedlet(this)?.wedlet}\n\n\tget stopBoxSelection(): true {return true};\n\n\tinitDiffValue(annot: IDiffAnnotValue, holder: IElementWedlet & IWedAnnotPointer, wedMgr: WedMgr, inputWidget?: HTMLElement): this {\n\t\tthis.skAnnot = annot;\n\t\tthis.holder = holder;\n\t\tholder.wedAnnotDiff = this;\n\t\tthis.holder.setAttribute(\"annot-diff\", annot.level.name);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\twedMgr.reg.installSkin(this.localName, sr);\n\t\tthis.classList.add(annot.level.name);\n\t\tsr.appendChild(document.createElement(\"slot\"));\n\t\tthis.margin = sr.appendChild(<div class=\"margin\" title={annot.getLabel()}/>);\n\t\tthis.margin.appendChild(<ActionBtn Ã®={{reg: wedMgr.reg, action: ERASEDIFF, actionContext: this, uiContext: 'bar'} as OActionBtnInit<IWedDiffMargin>}/>);\n\t\tthis.appendChild(inputWidget || <div>{annot.otherValue}</div>);\n\t\tconst p = holder.shadowRoot?.getElementById(\"diffCtn\") || holder.shadowRoot || holder;\n\t\tp.insertBefore(this, p.firstChild);\n\t\treturn this;\n\t}\n\n\t//get stopBoxSelection(): true {return true}\n\n\tget ctxMenuActions(): IContextMenuActions<IWedDiffMargin> {\n\t\treturn {\n\t\t\tactions: [ERASEDIFF],\n\t\t\tactionContext: this\n\t\t};\n\t}\n\n\tget eraseDiffLabel() {\n\t\treturn this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"RÃ©tablir cette valeur\" : \"Valider cette valeur\";\n\t}\n\n\tremoveDiffWidget() {\n\t\tthis.holder.wedAnnotDiff = null;\n\t\tthis.holder.removeAttribute(\"annot-diff\");\n\t\tthis.remove();\n\t\tthis.holder = null;\n\t}\n\n\teraseDiff() {\n\t\tconst wedlet = this.holder.wedlet;\n\t\twedlet.wedMgr.docHolder.newBatch()\n\t\t\t.setText(wedlet.wedAnchor, this.skAnnot.otherValue)\n\t\t\t.doBatch();\n\t\tthis.removeDiffWidget();\n\t}\n}\n\nREG.reg.registerSkin('wed-diff-value', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t\t--edit-bgcolor: none;\n\t\talign-self: stretch;\n\t}\n\n\tslot {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n\n\t.margin {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 10px;\n\t\tbackground-repeat: repeat-y;\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/edit.svg\");\n\t}\n\n\t#doDiff {\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tleft: -.5rem;\n\t}\n`);\n\nwindow.customElements.define(\"wed-diff-value\", WedDiffValue);\n\n\nexport class WedDiffTable extends HTMLElement {\n\ttable: TxtTable;\n\n\tannots: ISkDiffAnnot[];\n\n\tinitTable(table: TxtTable): this {\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\ttable.wedMgr.reg.installSkin(this.localName, sr);\n\t\tthis.shadowRoot.append(<div/>);\n\t\tthis.table = table;\n\t\ttable.insertAdjacentElement(\"beforebegin\", this);\n\t\ttable.classList.toggle(\"diff\", true);\n\t\t//TODO init d'un foreignEditor avec le contenu de table en cours (expurgÃ© du contenu des cells ?).\n\t\tthis.annots = [];\n\t\treturn this;\n\t}\n\n\taddAnnot(annot: ISkDiffAnnot) {\n\t\tthis.annots.push(annot);\n\t\t//TODO\n\t\t// - traduction de annot en msg partant de la table en root.\n\t\t// - adjust du msg avec les msgs prÃ©cÃ©dents.\n\t\t// - application de ce msg au foreignEditor de ce WedDiffTable\n\t\t// - post-balisage de ces structs insÃ©rÃ©es en mode inverse de annot.diffSession.mode\n\t\tthis.shadowRoot.lastElementChild.textContent = `Des modifications de la structure du tableau ne sont pas reprÃ©sentÃ©es`;\n\t}\n\n\tremoveAnnot(annot: ISkDiffAnnot) {\n\t\t//Aujourd'hui pas de suppr d'annot partielles, donc on vire tout ce bloc dÃ¨s le 1er appel au remove d'une annot.\n\t\tthis.table.diffTable = null;\n\t\tthis.table.classList.toggle(\"diff\", false);\n\t\tthis.remove();\n\t}\n}\n\nREG.reg.registerSkin('wed-diff-table', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: block;\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t\t--edit-bgcolor: none;\n\t\tuser-select: none;\n\t}\n\n\tdiv {\n\t\tcolor: var(--fade-color);\n\t\tfont-style: italic;\n\t\ttext-align: center;\n\t\tfont-size: var(--label-size);\n\t}\n`);\n\nwindow.customElements.define(\"wed-diff-table\", WedDiffTable);\n\n/**\n *\n */\nexport class WedDiffPara extends HTMLElement implements IWedDiffMargin {\n\tsubEditor: WedEditorFrag;\n\tskAnnot: ISkDiffAnnot;\n\n\tget wedlet(): IWedlet {return findElementWedlet(this)?.wedlet}\n\n\tget eraseDiffLabel() {return this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"Annuler toutes les modifications de ce paragraphe\" : \"Valider toutes les modifications de ce paragraphe\"}\n\n\tinitDiffPara(para: TxtParaLike, annot: IDiffAnnotMixCt): this {\n\t\t//console.log(\":::setDiffOnPara:::\",annot);\n\t\tthis.skAnnot = annot;\n\t\tconst wedMgr = para.wedMgr;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\twedMgr.reg.installSkin(this.localName, sr);\n\t\tsr.appendChild(<ActionBtn Ã®={{reg: wedMgr.reg, action: ERASEDIFF, actionContext: this, uiContext: 'bar'} as OActionBtnInit<IWedDiffMargin>}/>);\n\t\t//Foreign doc\n\t\tconst foreignDoc = DOM.newDomDoc() as IDocumentNs;\n\t\tforeignDoc.namespaces = wedMgr.docHolder.house.namespaces;\n\t\tmixCtToForeign(annot.diffRoot, JML.jmlToDom([para.paraModel.newJml()], foreignDoc).firstElementChild);\n\t\t//Foreign house\n\t\tconst house = new XmlTypedHouse({\n\t\t\tinitialDoc: foreignDoc,\n\t\t\tschema: annot.skNodePara.schemaDom.schema,\n\t\t\tschemaDomConfig: {rootRule: new SkRuleDoc().init(new SkRuleElt().init(SkMatcherAnyElt.SINGLETON, '1', annot.skNodePara.rule.contentRule).initSkMeta(annot.skNodePara.rule.skMeta))},\n\t\t\tbuildOptions: {autoMutate: true, autoComplete: true, autoNormXml: true, autoNormChars: true, genAnnots: false}\n\t\t});\n\t\tconst docHolder = new DocHolder(house);\n\t\tconst subEditor = this.subEditor = new WedEditorFrag().initialize({reg: wedMgr.reg, commonBar: (wedMgr.wedEditor as IWedEditorCommonBar).commonBar} as IWedEditorCommonBar);\n\t\tsubEditor.wedModel = wedMgr.wedModel;\n\t\t//Init de l'Ã©diteur\n\t\tconst foreignModel = para.model.buildModelForFragment(para);\n\t\tsubEditor.initFromDocHolder(docHolder, {readOnlyCauses: [\"diffForeign\"], rootModel: foreignModel});\n\t\tsubEditor.wedMgr.listeners.on(\"redrawAtEnd\", para.diffForeignRedrawAtEnd);\n\t\tsubEditor.wedMgr.listeners.on(\"redrawAtEnd\", (subWedMgr: WedMgr) => {\n\t\t\tsubWedMgr.docHolder.setDiffSession(annot.paraSession);\n\t\t});\n\t\t//\n\t\tpara.insertAdjacentElement(\"afterbegin\", subEditor);\n\t\tpara.insertAdjacentElement(\"beforeend\", this);\n\t\tpara.setAttribute(\"diff-para\", \"\");\n\t\tpara.style.position = \"relative\"; //Pour txt-member, txt-caption qui n'est pas display:block.\n\t\treturn this;\n\t}\n\n\teraseDiff(): void {\n\t\tconst eltWedlet = findElementWedlet(this) as TxtParaLike;\n\t\tconst replaceCt = this.subEditor.wedMgr.docHolder.getContent();\n\t\treplaceCt[0] = eltWedlet.newJml(); //On remplace le tag racine (cas des sc:caption et sc:member remplacÃ©s par des sc:para dans le foreign)\n\t\teltWedlet.wedlet.wedMgr.docHolder.newBatch().spliceSequence(eltWedlet.wedlet.wedAnchor, 1, replaceCt).doBatch();\n\t\tthis.removeDiffWidget();\n\t}\n\n\tremoveDiffWidget(): void {\n\t\tif (this.parentElement) {\n\t\t\tthis.parentElement.removeAttribute(\"diff-para\");\n\t\t\tDOM.findFirstChild(this.parentNode, (n: Node): n is WedEditorFrag => n instanceof WedEditorFrag)?.remove();\n\t\t\tthis.remove();\n\t\t}\n\t}\n\n}\n\nREG.reg.registerSkin('wed-diff-para', 1, /* language=CSS */ `\n\t:host {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\theight: 100%;\n\t\twidth: 10px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tjustify-items: center;\n\t\talign-items: center;\n\t\talign-content: center;\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t\tbackground-repeat: repeat-y;\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/edit.svg\");\n\t}\n\n\tc-action {\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n`);\nwindow.customElements.define(\"wed-diff-para\", WedDiffPara);\n\nexport function initDiffOnPara(para: TxtParaLike, annot: IDiffAnnotMixCt) {\n\t//console.log(\":::setDiffOnPara:::\",annot);\n\tnew WedDiffPara().initDiffPara(para, annot);\n}\n\nexport function removeDiffOnPara(para: TxtParaLike, annot: IDiffAnnotMixCt) {\n\tDOM.findFirstChild(para, (n: Node): n is WedDiffPara => n instanceof WedDiffPara)?.removeDiffWidget();\n}\n\n\n/**\n * Widget pour les TxtBlock, et TxtEmpty gÃ©rant l'affichage d'une barre de diff avec son action d'erase de la diff.\n * Une implÃ©mentation custom doit Ãªtre passÃ©e en paramÃ¨tre pour afficher le contenu du diff et\n * construire le contenu pour l'erase. cf IWedDiffTxtObjCustom.\n */\nexport class WedDiffTxtObj extends HTMLElement implements IWedDiffMargin {\n\tskAnnots: ISkDiffAnnot[];\n\ttxtObj: TxtObject;\n\n\tforeignDoc: IDocumentNs;\n\tinitForeign = false;\n\ttxtObjDepth: number;\n\n\tget skAnnot(): ISkDiffAnnot {return this.skAnnots[0]}\n\n\tget wedlet(): IWedlet {return findElementWedlet(this)?.wedlet}\n\n\tget eraseDiffLabel() {return this.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"Annuler toutes les modifications de ce bloc\" : \"Valider toutes les modifications de ce bloc\"}\n\n\tprotected custom: IWedDiffTxtObjCustom;\n\n\tinitDiffTxtObj(txtObj: TxtObject, annot: ISkDiffAnnot, customImpl: IWedDiffTxtObjCustom): this {\n\t\ttxtObj.style.position = \"relative\";\n\t\tthis.txtObj = txtObj;\n\t\tthis.custom = customImpl;\n\t\tthis.skAnnots = [annot];\n\t\ttxtObj.wedAnnotDiff = this;\n\t\tconst wedMgr = txtObj.wedMgr;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\twedMgr.reg.installSkin(this.localName, sr);\n\t\tsr.appendChild(<ActionBtn Ã®={{reg: wedMgr.reg, action: ERASEDIFF, actionContext: this, uiContext: 'bar'} as OActionBtnInit<IWedDiffMargin>}/>);\n\t\t// txtObj.insertAdjacentElement(\"afterbegin\", subEditor);\n\t\ttxtObj.insertAdjacentElement(\"beforeend\", this);\n\t\ttxtObj.setAttribute(\"diff-txtblock\", \"\");\n\t\t//Construction du foreign DOM : doit Ãªtre fait maintenant et pas dans _redrawDiff() pour Ã©viter une racecond avec une modif du DOM.\n\t\tthis.foreignDoc = DOM.newDomDoc() as IDocumentNs;\n\t\tthis.foreignDoc.namespaces = wedMgr.docHolder.house.namespaces;\n\t\tconst xa = txtObj.wedlet.wedAnchor;\n\t\tthis.txtObjDepth = xa.length;\n\t\tif (wedMgr.docHolder) {\n\t\t\tthis.foreignDoc.appendChild(this.foreignDoc.importNode(XA.findDomLast(xa, wedMgr.docHolder.getDocument()), true));\n\t\t} else {\n\t\t\tconsole.log(\"TODO fetch async content for WedDiffTxtObj from wedMgr.docHolderAsync\");\n\t\t}\n\t\tthis.redrawDiff();\n\t\treturn this;\n\t}\n\n\taddAnnotForMetas(metaAnnot: ISkDiffAnnot) {\n\t\tthis.skAnnots.push(metaAnnot);\n\t\tthis.redrawDiff();\n\t}\n\n\tremoveAnnotForMetas(metaAnnot: ISkDiffAnnot) {\n\t\tconst idx = this.skAnnots.indexOf(metaAnnot);\n\t\tif (idx >= 0) {\n\t\t\tthis.skAnnots.splice(idx, 1);\n\t\t\tif (this.skAnnots.length === 0) this.removeDiffWidget();\n\t\t\telse this.redrawDiff();\n\t\t}\n\t}\n\n\teraseDiff(): void {\n\t\tconst eltWedlet = findElementWedlet(this) as TxtParaLike;\n\t\tconst replaceCt = JML.dom2jml(this.foreignDoc.documentElement);\n\t\teltWedlet.wedlet.wedMgr.docHolder.newBatch().spliceSequence(eltWedlet.wedlet.wedAnchor, 1, replaceCt).doBatch();\n\t\tthis.removeDiffWidget();\n\t}\n\n\tremoveDiffWidget(): void {\n\t\tif (this.parentElement) {\n\t\t\tthis.skAnnots.length = 0;\n\t\t\tthis.custom.redrawDiff(this);\n\t\t\tthis.parentElement.removeAttribute(\"diff-txtblock\");\n\t\t\tthis.remove();\n\t\t\tthis.txtObj.wedAnnotDiff = null;\n\t\t\tthis.txtObj = null;\n\t\t}\n\t}\n\n\tprotected willRedraw: Promise<void>;\n\n\tredrawDiff() {\n\t\tif (!this.willRedraw) this.willRedraw = Promise.resolve().then(this._redrawDiff.bind(this));\n\t}\n\n\t_redrawDiff() {\n\t\tif (!this.txtObj) return; //racecond\n\t\tthis.willRedraw = null;\n\t\tif (!this.initForeign) {\n\t\t\t//1er redraw, toutes leannots initiales sont dispo, on ajuste le DOM foreign avec les diffs\n\t\t\tapplyDiffs(this.foreignDoc.documentElement, this.skAnnots, this.txtObjDepth);\n\t\t\tthis.initForeign = true;\n\t\t}\n\t\tthis.custom.redrawDiff(this);\n\t}\n\n}\n\n/** Interface Ã  fournir Ã  WedDiffTxtObj pour l'impl custom du TxtObject / TxtEmpty. */\nexport interface IWedDiffTxtObjCustom {\n\t/**\n\t * Redessine la difference Ã  partir de diffTxtObj.skAnnots.\n\t * Peut-Ãªtre rappelÃ© plusieurs fois avec des diffTxtObj.skAnnots diffÃ©rents.\n\t * Si diffTxtObj.skAnnots.length == 0, il faut supprimer tous les widgets de diff insÃ©rÃ©s.\n\t */\n\tredrawDiff(diffTxtObj: WedDiffTxtObj): void\n}\n\nREG.reg.registerSkin('wed-diff-txtobj', 1, /* language=CSS */ `\n\t:host {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\theight: 100%;\n\t\twidth: 10px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tjustify-items: center;\n\t\talign-items: center;\n\t\talign-content: center;\n\t\tbackground-color: var(--edit-diff-bgcolor);\n\t\tbackground-repeat: repeat-y;\n\t\tbackground-image: url(\"/@skin@/edit/wed/diff/edit.svg\");\n\t}\n\n\tc-action {\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n`);\nwindow.customElements.define(\"wed-diff-txtobj\", WedDiffTxtObj);\n\n\nexport class DiffInMeta {\n\n\tskAnnots: Set<ISkAnnot>;\n\n\t/**\n\t * Activation d'un controle asynchrone de la validitÃ© des annot lorsqu'elles sont ancrÃ©s sur des descendants:\n\t * indispensable en cas de suppression d'un container de cet ancrage descendant.\n\t */\n\tsubAnnotsCheck: (wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void;\n\n\tconstructor(public widget: IElementWedlet) {\n\t\tthis.skAnnots = new Set();\n\t\tthis.subAnnotsCheck = (wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline): void | ((wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void) => {\n\t\t\tif (deadline.timeRemaining() < 5) return this.subAnnotsCheck;\n\t\t\tfor (let a of this.skAnnots) {\n\t\t\t\tconst n = a.anchorNode;\n\t\t\t\tif (!(n instanceof Attr ? n.ownerElement?.isConnected : n?.isConnected)) this.removeAnnot(a);\n\t\t\t}\n\t\t}\n\t}\n\n\taddAnnot(annot: ISkAnnot) {\n\t\tthis.skAnnots.add(annot);\n\t\tthis.refresh();\n\t}\n\n\tremoveAnnot(annot: ISkAnnot) {\n\t\tthis.skAnnots.delete(annot);\n\t\tthis.refresh();\n\t}\n\n\trefresh() {\n\t\tswitch (this.skAnnots.size) {\n\t\tcase 1:\n\t\t\tthis.widget.wedlet.wedMgr.listeners.on(\"asyncSkAnnots\", this.subAnnotsCheck);\n\t\t\tthis.widget.classList.add(\"diffInMeta\");\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tthis.widget.wedlet.wedMgr.listeners.removeListener(\"asyncSkAnnots\", this.subAnnotsCheck);\n\t\t\tthis.widget.classList.remove(\"diffInMeta\");\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n\n/** ExÃ©cution du diff. */\nconst ERASEDIFF = new Action<IWedDiffMargin>(\"eraseDiff\")\n\t.setVisible((ctx: IWedDiffMargin) => isEditableWedlet(ctx.wedlet) && ctx.wedlet.editMode === EWedletEditMode.write)\n\t.setLabel((ctx: IWedDiffMargin) => ctx.eraseDiffLabel)\n\t.setIcon((ctx: IWedDiffMargin) => ctx.skAnnot.diffSession.mode === EXmlDiffMode.diff ? \"/@skin@/edit/wed/diff/revert.svg\" : \"/@skin@/edit/wed/diff/valid.svg\")\n\t.setExecute((ctx: IWedDiffMargin, ev: Event) => {\n\t\tctx.eraseDiff();\n\t\tif (ev) {\n\t\t\tev.stopPropagation();\n\t\t\tev.preventDefault();\n\t\t}\n\t});\n\n\nexport function isDiffAnnot(annot: ISkAnnot): annot is ISkDiffAnnot {return (annot as ISkDiffAnnot)?.diffSession != null}"]}