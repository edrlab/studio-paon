{"version":3,"sources":["/@back@/edit/wed/wedlets/box/box.ts"],"names":["AgWedletBoxSelectionSingleElt","AgWedletInsMgr","markInserts","isWedDefaultDisplay","WED","WedletModelBase","WedModel","BoxCreate","IS_EltSkAnnot","IS_EltWedlet","isDisplayedWedlet","WEDLET","AgWedletSingleElt","EWedletArch","isWedletSingleElt","OffView","WEDLET_SINGLEELT","DOM","ENodeType","JML","JmlSubSetIterator","XA","FetchJml","OffscreenEltLeafWedlet","isSkAnnotDrawer","isSkAnnotFocuser","isSkStructDef","isSkTextAnnot","EventMgr","LANG","DOMSH","BOX_NS","BoxModel","isBoxFamily","[object Object]","cnf","this","wedletClass","BoxWedlet","config","childElementCount","Error","ser","nodeLabel","getAttribute","childrenEltsNaturalOrder","extractChildrenNodes","elt","forChidrenElt","findWedSelector","WED_SELECTOR_BOX","length","childrenElts","slice","sort","SORT_ChildrenElts","defaultWedSelector","firstElementChild","parent","displayContext","init","wContainer","insertBefore","wedMgr","wedlet","initAsRoot","insertElement","insertCtx","model","doc","ownerDocument","bind","createElementNS","WED_NS","setAttribute","styleCtn","findHost","elementHost","box","appendChild","XHTML_NS","skins","skinList","split","i","sk","charAt","styleTag","shadowRoot","getElementById","substring","cloneNode","splice","join","boxHost","slot","parentChElts","children","wedMatcher","wedMatchStrict","wedModesNodes","wedModesAtts","wedVariants","wedParams","wedSlotName","wedSelector","wedPreferedModels","wedDisplays","_a","disp","wedletModel","push","attsOrder","_attsOrder","undefined","wedCh","att","nextElementSibling","registerWedletModel","BoxVirtualSwitchModel","BoxVirtualSwitchWedlet","virtualEltWedletConfig","realEltWedletConfig","lastElementChild","chEltsNatOrderVirtual","BoxCommentModel","BoxCommentWedlet","count","textCmtConfig","previousElementSibling","exclCmtConfig","scCmtConfig","wedModel","node","ctx","SELECTOR_PERFECT_MATCH","SELECTOR_REJECT","element","delegatedHost","wedParent","wedAnchor","append","xaPart","getVirtualXaPart","host","displayCtx","createElement","Object","defineProperty","writable","value","xaRoot","freeze","last","_bind","xaOffset","nodeName","nodeType","wedNodeName","jmlNode2name","refreshEditMode","refreshBindValue","promises","appendAttWedlets","xInsertAttWedlet","xAppendChildWedlets","adjustVirtuals","Promise","all","nameAttr","doCustomAdjust","root","document","importNode","configWedletElt","slotName","caller","fromChildrenElt","xaOffest","result","ch","xInsertChildWedlet","visitWedletChildren","Number","MAX_SAFE_INTEGER","w","onDelete","next","isVirtual","remove","docHolderAsync","fetchContent","then","f","isConnected","replaceChildBind","deleteChildNodes","attrName","insertAttrNode","attName","deleteAttrNode","willBeEmptied","onChildEmptied","similarTo","before","after","options","childrenElt","find","c","matchStruct","Attr","matchAttr","Node","matchNode","dom2jmlNode","beforeNode","findPreviousInsBefore","stopPoint","xa","eltName","docHolder","structName","checkSchemaOrder","in","attribute","nextSibling","from","firstChild","target","collapsed","HIDDEN_MUST","READSTATIC_MUST","old","editMode","resolveEditMode","setEditMode","reassessPerms","getRecursiveVirtualButtonTpl","createTextNode","_RecursVirtBtnTpl","index","initViewOff","findChildrenEltForNode","previousNotVirtual","insertChildNode","it","promise","currentIdx","currentNode","currentChildren","clearChildrenAsVirtual","","text","comment","COMMENT","rootWedlet","documentFragment","empty","Infinity","isEmpty","VISITOPTIONS_mainBranch","isCollapsed","onChildWedletsChange","customAdjust","emit","lstn","order","add","annot","offset","a","findFirstChild","n","skAnnot","focus","focusSkAnnot","sh","findNext","wedletArch","dom","isParentWedlet","isCharsWedlet","isVirtualisableWedlet","proxySkAnnots","eltParent","eltBefore","eltSlot","eltCaller","real","parentNode","resetElt","super","bindWithNode","bindWithAttr","datas","call","doAfterBatch","async","cmtHolder","getCmtHouse","cmtHouse","futureHouse","type","window","customElements","get","import","initComment","tpl","oldElt","parentElement","pendingAnnots","an","drawAnnot","localName","indexOf","eraseAnnot","BoxHiddenModel","BoxHiddenWedlet","hidden","style","display","BoxFreeDomModel","drawerLib","drawerMeth","BoxFreeDomWedlet","jsLibs","getDrawer","content","drawer","refreshContent"],"mappings":"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","sourcesContent":["import {AgWedletBoxSelectionSingleElt} from \"back/edit/wed/features/boxSel\";\nimport {AgWedletInsMgr, markInserts} from \"back/edit/wed/features/insMgr\";\nimport {isWedDefaultDisplay, IWedChildrenElt, IWedDisplayElt, IWedletModel, IWedSelector, WED, WedletModelBase, WedModel} from \"back/edit/wed/wedCore\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {BoxCreate, IBoxElement} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {\n\tEWedletEditMode,\n\tICharsWedlet,\n\tIChildWedlet,\n\tIEditableWedlet,\n\tIElementSkAnnot,\n\tIElementWedlet,\n\tIParentWedlet,\n\tIRootWedlet,\n\tIS_EltSkAnnot,\n\tIS_EltWedlet,\n\tisDisplayedWedlet,\n\tISkAnnotListener,\n\tIVirtualisableWedlet,\n\tIWedlet,\n\tIWedletEditModeHint,\n\tWEDLET\n} from \"back/edit/wed/wedlets/wedlet\";\nimport {AgWedletSingleElt, EWedletArch, isWedletSingleElt, IWedletSingleElt, OffView, WEDLET_SINGLEELT} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {DOM, ENodeType} from \"lib/commons/xml/dom\";\nimport {IJmlNode, IJmlObj, IJmlSubSet, JML, JmlSubSetIterator} from \"lib/commons/xml/jml\";\nimport {IXAddr, XA} from \"lib/commons/xml/xAddr\";\nimport {FetchJml, IDocHolderSync} from \"lib/edit/docHolder\";\nimport {CommentHouse} from \"lib/edit/ot/xmlTypedHouse\";\nimport {OSkImportDatas} from \"lib/edit/schema/schemaMeta\";\nimport {OffscreenEltLeafWedlet} from \"back/edit/wed/wedlets/offscreen/offscreen\";\nimport {ISkAnnot, ISkAnnotFocuser, ISkStructDef, isSkAnnotDrawer, isSkAnnotFocuser, isSkStructDef, isSkTextAnnot} from \"lib/edit/schema/schemaAnnots\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {LANG} from \"lib/commons/lang\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\n\n\nexport const BOX_NS = \"scenari.eu:wed:box\";\n\n/** wedlet=\"Box\" */\nexport class BoxModel implements IWedletModel {\n\n\tnodeType: ENodeType;\n\tnodeName: string;\n\tmodes: string[];\n\n\tnodeLabel?: string;\n\n\t/** Liste des childrenElt triés selon l'ordre de priorité de matching. */\n\tchildrenElts: IWedChildrenElt[];\n\n\t/** Liste des childrenElt dans l'ordre naturel. */\n\tchildrenEltsNaturalOrder: IWedChildrenElt[];\n\n\t/** IWedSelector si childrenElts vide. */\n\tdefaultWedSelector?: IWedSelector;\n\n\tconfig: Element;\n\n\twedletClass: Constructor<BoxWedlet>;\n\n\t/** Flag indiquant que ce wedlet est compatible dans l'environnement Box.*/\n\tget isBoxFamily(): boolean {return true}\n\n\tinitModel(cnf: Element) {\n\t\tthis.wedletClass = BoxWedlet;\n\t\tthis.config = cnf;\n\t\tif (cnf.childElementCount !== 1) throw Error(`This wedlet must contain one and only one wedlet element: ${DOM.ser(cnf)}`);\n\t\tthis.nodeLabel = cnf.getAttribute('label');\n\t\tthis.childrenEltsNaturalOrder = WEDLET.extractChildrenNodes(cnf, (elt: Element, forChidrenElt?: IWedChildrenElt) => WEDLET.findWedSelector(elt, forChidrenElt) || WED_SELECTOR_BOX);\n\t\tif (this.childrenEltsNaturalOrder) {\n\t\t\tif (this.childrenEltsNaturalOrder.length > 1) {\n\t\t\t\tthis.childrenElts = this.childrenEltsNaturalOrder.slice();\n\t\t\t\tthis.childrenElts.sort(WED.SORT_ChildrenElts);\n\t\t\t} else {\n\t\t\t\tthis.childrenElts = this.childrenEltsNaturalOrder;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.defaultWedSelector = WEDLET.findWedSelector(cnf.firstElementChild) || WED_SELECTOR_BOX;\n\t\t}\n\t}\n\n\tcreateWedlet(parent: IParentWedlet, displayContext?: IWedDisplayElt): IChildWedlet {\n\t\treturn new this.wedletClass().init(parent, this, displayContext);\n\t}\n\n\tcreateRootWedlet(wContainer: Element, insertBefore: Node, wedMgr: WedMgr): IRootWedlet {\n\t\tconst wedlet = new this.wedletClass().initAsRoot(wedMgr, this) as IRootWedlet & IWedletSingleElt;\n\t\twedlet.insertElement(wContainer, insertBefore);\n\t\treturn wedlet;\n\t}\n\n\tbuildModelForFragment(insertCtx: BoxWedlet): IWedletModel {\n\t\tconst model = new BoxModel();\n\t\tmodel.childrenEltsNaturalOrder = [];\n\t\tconst doc = this.config.ownerDocument;\n\t\t//<wed:bind nodeType=\"all\" wedlet=\"Box\">\n\t\t// <box-static skin=\"box/root\" skinOver=\"box/root/fragment\" skins4frag=\"box/root \">\n\t\t// \t<box-host>\n\t\t// \t\t<wed:slot>...</wed:slot>\n\t\t// \t</box-host>\n\t\t// </box-static>\n\t\t//</wed:bind>\n\t\tconst bind = doc.createElementNS(WED.WED_NS, \"bind\");\n\t\tbind.setAttribute(\"nodeType\", \"all\"); //all = document ou documentFragment\n\t\tbind.setAttribute(\"wedlet\", \"Box\");\n\t\tconst styleCtn = insertCtx ? DOMSH.findHost(insertCtx.elementHost) : null;\n\t\tconst box = bind.appendChild(doc.createElementNS(DOM.XHTML_NS, \"box-static\"));\n\t\tif (styleCtn) {\n\t\t\tlet skins = styleCtn.getAttribute(\"skins4frag\");\n\t\t\tif (skins) {\n\t\t\t\tbox.setAttribute(\"skins4frag\", skins); // en cas d'imbrication de fragments.\n\t\t\t\tconst skinList = skins.split(' ');\n\t\t\t\tfor (let i = 0; i < skinList.length; i++) {\n\t\t\t\t\tconst sk = skinList[i];\n\t\t\t\t\tif (sk.charAt(0) === \"#\") {\n\t\t\t\t\t\t//id de tag style interne au shadowRoot.\n\t\t\t\t\t\tconst styleTag = styleCtn.shadowRoot.getElementById(sk.substring(1));\n\t\t\t\t\t\tif (styleTag) box.appendChild(styleTag.cloneNode(true));\n\t\t\t\t\t\tskins = null;\n\t\t\t\t\t\tskinList.splice(i--, 1); //élimination du skinList pour l'attribut skinOver\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbox.setAttribute(\"skinOver\", skins || skinList.join(' '));\n\t\t\t}\n\t\t}\n\t\tconst boxHost = box.appendChild(doc.createElementNS(DOM.XHTML_NS, \"box-host\"));\n\t\tconst slot = boxHost.appendChild(doc.createElementNS(WED.WED_NS, \"wed:slot\"));\n\t\tif (this.childrenEltsNaturalOrder) for (const parentChElts of this.childrenEltsNaturalOrder) {\n\t\t\tconst children = slot.appendChild(doc.createElementNS(WED.WED_NS, \"children\")) as IWedChildrenElt;\n\t\t\tchildren.wedMatcher = parentChElts.wedMatcher;\n\t\t\tchildren.wedMatchStrict = parentChElts.wedMatchStrict;\n\t\t\tchildren.wedModesNodes = parentChElts.wedModesNodes;\n\t\t\tchildren.wedModesAtts = parentChElts.wedModesAtts;\n\t\t\tchildren.wedVariants = parentChElts.wedVariants;\n\t\t\tchildren.wedParams = parentChElts.wedParams;\n\t\t\tchildren.wedSlotName = \"\";\n\t\t\tchildren.wedSelector = parentChElts.wedSelector;\n\t\t\tchildren.wedPreferedModels = parentChElts.wedPreferedModels;\n\t\t\tif (parentChElts.wedDisplays) {\n\t\t\t\t//pas de display mais on les ajoute alors aux wedPreferedModels si ils sont internalisés.\n\t\t\t\tchildren.wedPreferedModels = children.wedPreferedModels?.slice() || [];\n\t\t\t\tfor (const disp of parentChElts.wedDisplays) {\n\t\t\t\t\tif (disp.wedletModel) children.wedPreferedModels.push(disp.wedletModel);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmodel.childrenEltsNaturalOrder.push(children);\n\t\t}\n\t\tmodel.wedletClass = BoxWedlet;\n\t\tmodel.config = bind;\n\t\tif (model.childrenEltsNaturalOrder.length > 1) {\n\t\t\tmodel.childrenElts = model.childrenEltsNaturalOrder.slice();\n\t\t\tmodel.childrenElts.sort(WED.SORT_ChildrenElts);\n\t\t} else {\n\t\t\tmodel.childrenElts = model.childrenEltsNaturalOrder;\n\t\t}\n\t\treturn model;\n\t}\n\n\tget attsOrder(): string[] | null {\n\t\t//On prend toutes les déclaration nommées d'attribut dans l'odre naturel\n\t\tif (this._attsOrder == undefined) {\n\t\t\tthis._attsOrder = [];\n\t\t\tif (this.childrenEltsNaturalOrder) for (let wedCh of this.childrenEltsNaturalOrder) {\n\t\t\t\tlet bind = wedCh.firstElementChild;\n\t\t\t\twhile (bind) {\n\t\t\t\t\tconst att = bind.getAttribute(\"attName\");\n\t\t\t\t\tif (att) this._attsOrder.push(att);\n\t\t\t\t\tbind = bind.nextElementSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this._attsOrder;\n\t}\n\n\tprotected _attsOrder?: string[] | null\n}\n\nWED.registerWedletModel(\"Box\", BoxModel);\n\n/**\n * Wedlet gérant un widegt en virtual (1er élément fils du wedlet)\n * et un widget en real (2ème élément fils du wedlet).\n * cf le widget <box-create/>, bouton de création de la structure virtuelle\n * à utiliser pour le contexte virtuel. Si ce bouton n'est pas l'élément racine,\n * utiliser un <box-static/> pour container racine.\n */\nexport class BoxVirtualSwitchModel extends BoxModel {\n\n\tvirtualEltWedletConfig: Element;\n\trealEltWedletConfig: Element;\n\n\t/** Liste des childrenElt dans l'ordre naturel pour le bloc virtuel. */\n\tchEltsNatOrderVirtual: IWedChildrenElt[];\n\n\tinitModel(cnf: Element) {\n\t\tthis.wedletClass = BoxVirtualSwitchWedlet;\n\t\tthis.config = cnf;\n\t\tif (cnf.childElementCount !== 2) throw Error(`This wedlet must contain two and only two children elements: ${DOM.ser(cnf)}`);\n\t\tthis.nodeLabel = cnf.getAttribute(\"label\");\n\t\tthis.virtualEltWedletConfig = cnf.firstElementChild;\n\t\tthis.realEltWedletConfig = cnf.lastElementChild;\n\t\tthis.chEltsNatOrderVirtual = WEDLET.extractChildrenNodes(this.virtualEltWedletConfig, (elt: Element, forChidrenElt?: IWedChildrenElt) => WEDLET.findWedSelector(elt, forChidrenElt) || WED_SELECTOR_BOX);\n\t\tthis.childrenEltsNaturalOrder = WEDLET.extractChildrenNodes(this.realEltWedletConfig, (elt: Element, forChidrenElt?: IWedChildrenElt) => WEDLET.findWedSelector(elt, forChidrenElt) || WED_SELECTOR_BOX);\n\t\tif (this.childrenEltsNaturalOrder) {\n\t\t\tthis.childrenElts = this.childrenEltsNaturalOrder.slice();\n\t\t\tthis.childrenElts.sort(WED.SORT_ChildrenElts);\n\t\t} else {\n\t\t\tthis.defaultWedSelector = WEDLET.findWedSelector(this.realEltWedletConfig) || WED_SELECTOR_BOX;\n\t\t}\n\t}\n}\n\nWED.registerWedletModel(\"BoxVirtualSwitch\", BoxVirtualSwitchModel);\n\n\n/**\n * Wedlet pour les commentaires gérant le switch entre\n * commentaire text brut, commentaire structuré XML et commentaire avec les schéma Scenari.\n */\nexport class BoxCommentModel extends BoxModel {\n\n\t/** Wedlet def pour commentaire texte (défaut) */\n\ttextCmtConfig: Element;\n\n\t/** Wedlet def pour commentaire d'exclusion Scenari */\n\texclCmtConfig: Element;\n\n\t/** Wedlet def pour commentaire de discussion Scenari */\n\tscCmtConfig: Element;\n\n\tinitModel(cnf: Element) {\n\t\tthis.wedletClass = BoxCommentWedlet;\n\t\tthis.config = cnf;\n\t\tconst count = cnf.childElementCount;\n\t\tif (count < 2 || count > 3) throw Error(`This wedlet must contain 2 or 3 children elements: ${DOM.ser(cnf)}`);\n\t\tthis.nodeLabel = \"Commentaire\";\n\t\tthis.textCmtConfig = cnf.firstElementChild;\n\t\tif (cnf.lastElementChild.previousElementSibling !== cnf.firstElementChild) {\n\t\t\tthis.exclCmtConfig = cnf.lastElementChild.previousElementSibling;\n\t\t}\n\t\tthis.scCmtConfig = cnf.lastElementChild;\n\t}\n}\n\nWED.registerWedletModel(\"BoxScComment\", BoxCommentModel);\n\n\nexport const WED_SELECTOR_BOX: IWedSelector = function (wedModel: IWedletModel, node: IJmlNode | string, ctx: WedMgr | IWedlet) {\n\tif ((wedModel as BoxModel).isBoxFamily) return WedModel.SELECTOR_PERFECT_MATCH;\n\treturn WedModel.SELECTOR_REJECT;\n};\n\n/**\n *\n */\nexport class BoxWedlet implements IRootWedlet, IParentWedlet, IChildWedlet, ICharsWedlet, IVirtualisableWedlet, IWedletSingleElt, IEditableWedlet, ISkAnnotFocuser {\n\n\tmodel: BoxModel;\n\n\twedParent: IParentWedlet;\n\n\txaPart: number | string | null;\n\n\twedNodeName: string;\n\n\t/** null indique qu'il n'est plus connecté (a été supprimé). */\n\telement: IBoxElement & HTMLElement | null;\n\n\tget elementHost(): HTMLElement {return this.element ? this.element.delegatedHost || this.element : null}\n\n\tget wedMgr(): WedMgr {return this.wedParent.wedMgr}\n\n\tget wedAnchor(): IXAddr {return XA.append(this.wedParent.wedAnchor, this.xaPart != null ? this.xaPart : (this as IVirtualisableWedlet).getVirtualXaPart())}\n\n\tdisplayCtx: IWedDisplayElt;\n\n\teditMode: EWedletEditMode;\n\n\tcustomAdjust?: EventMgr<(w: BoxWedlet) => void>;\n\n\tinit(host: IParentWedlet, model: BoxModel, displayContext?: IWedDisplayElt): this {\n\t\tthis.wedParent = host;\n\t\tthis.model = model;\n\t\tif (displayContext) this.displayCtx = displayContext;\n\t\tthis.createElement(model.config.firstElementChild);\n\t\treturn this;\n\t}\n\n\tinitAsRoot(wedMgr: WedMgr, model: BoxModel): this {\n\t\tObject.defineProperty(this, 'wedMgr', {\n\t\t\twritable: false,\n\t\t\tvalue: wedMgr\n\t\t});\n\t\tthis.model = model;\n\t\tthis.createElement(model.config.firstElementChild);\n\t\treturn this;\n\t}\n\n\tbindRoot(children: IJmlSubSet, node?: IJmlNode, xaRoot?: IXAddr): void | Promise<void> {\n\t\tObject.defineProperty(this, 'wedAnchor', {\n\t\t\twritable: false,\n\t\t\tvalue: XA.freeze(xaRoot || [])\n\t\t});\n\t\tthis.xaPart = XA.last(this.wedAnchor) || 0;\n\t\treturn this._bind(node, children);\n\t}\n\n\tbindWithNode(xaOffset: number, node: IJmlNode, children: IJmlSubSet): void | Promise<void> {\n\t\tthis.xaPart = xaOffset;\n\t\tif (!this.model.nodeName && this.model.nodeType === ENodeType.element) {\n\t\t\tthis.wedNodeName = JML.jmlNode2name(node);\n\t\t}\n\t\treturn this._bind(node, children);\n\t}\n\n\t_bind(node: IJmlNode, children: IJmlSubSet) {\n\t\tthis.refreshEditMode();\n\t\tthis.element.refreshBindValue(node, children);\n\t\tlet promises = WEDLET.appendAttWedlets(this, node, this.xInsertAttWedlet);\n\t\tif (children) promises = this.xAppendChildWedlets(children, promises);\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t\tif (promises != null) return Promise.all(promises) as any;\n\t}\n\n\tbindWithAttr(nameAttr: string, value: string): void | Promise<void> {\n\t\tthis.xaPart = nameAttr;\n\t\tif (!this.model.nodeName) this.wedNodeName = nameAttr;\n\t\t/*if (this.element)*/\n\t\tthis.refreshEditMode();\n\t\tthis.element.refreshBindValue(value);\n\t\t//WEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder); pas de fils, pas de sens !\n\t\tthis.doCustomAdjust();\n\t}\n\n\tprotected createElement(root: Element) {\n\t\tthis.element = document.importNode(root, false) as IElementWedlet;\n\t\tthis.element.configWedletElt(root, this);\n\t}\n\n\tinsertElement(parent: Element, insertBefore?: Node, slotName?: string, caller?: IWedChildrenElt) {\n\t\tif (slotName) this.element.setAttribute(\"slot\", slotName);\n\t\tif (caller) this.element.fromChildrenElt = caller;\n\t\tparent.insertBefore(this.element, insertBefore);\n\t}\n\n\n\tinsertChildNode(xaOffest: number, node: IJmlNode, children: IJmlSubSet): void | Promise<void> {\n\t\tlet result;\n\t\t//on cherche le point d'insertion et on décale les autres binds\n\t\tfor (let ch = this.elementHost.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (IS_EltWedlet(ch)) {\n\t\t\t\tconst xaPart = ch.wedlet.xaPart;\n\t\t\t\tif (xaPart > xaOffest) {\n\t\t\t\t\tch.wedlet.xaPart = (xaPart as number) + 1;\n\t\t\t\t} else if (xaPart === xaOffest) {\n\t\t\t\t\tresult = this.xInsertChildWedlet(xaOffest, node, children, ch) || null;\n\t\t\t\t\tch.wedlet.xaPart = (xaPart as number) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//si pas trouvé on insère à la fin.\n\t\tif (result === undefined) result = this.xInsertChildWedlet(xaOffest, node, children, null);\n\t\treturn result;\n\t}\n\n\tonDelete() {\n\t\t(this as IParentWedlet).visitWedletChildren(-1, Number.MAX_SAFE_INTEGER, (w: IWedlet) => {\n\t\t\tif ('onDelete' in w) w.onDelete();\n\t\t});\n\t\tthis.element = null;\n\t}\n\n\tonChildNodesInserted() {\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t}\n\n\n\treplaceChildBind(xaOffest: number, node: IJmlNode, children: IJmlSubSet): void | Promise<void> {\n\t\tfor (let ch = this.elementHost.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (IS_EltWedlet(ch)) {\n\t\t\t\tif (ch.wedlet.xaPart === xaOffest) {\n\t\t\t\t\tlet next = ch.nextElementSibling;\n\t\t\t\t\twhile (IS_EltWedlet(next) && next.wedlet.isVirtual()) next = next.nextElementSibling;\n\t\t\t\t\tif ('onDelete' in ch.wedlet) ch.wedlet.onDelete();\n\t\t\t\t\tch.remove(); //supprimé avant sinon le display virtuel correspondant n'est pas remplacé car offset incorrect.\n\t\t\t\t\tconst result = this.xInsertChildWedlet(xaOffest, node, children, next);\n\t\t\t\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Redessine ce wedlet en réinterrogeant le jml intégral (sans threshold).  */\n\tredrawFull() {\n\t\tif (typeof this.xaPart === 'number') {\n\t\t\t//élement réel\n\t\t\tthis.wedMgr.docHolderAsync.fetchContent([new FetchJml(this.wedAnchor)]).then(([f]) => {\n\t\t\t\tif (this.element.isConnected) this.wedParent.replaceChildBind(this.xaPart as number, f.result[0], f.result[1]);\n\t\t\t});\n\t\t}\n\t}\n\n\tdeleteChildNodes(xaOffest: number, count: number) {\n\t\tWEDLET_SINGLEELT.deleteChildNodes(this, xaOffest, count);\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t}\n\n\tinsertAttrNode(attrName: string, value: string): void | Promise<void> {\n\t\tconst result = this.xInsertAttWedlet(attrName, value);\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t\treturn result;\n\t}\n\n\tprotected xInsertAttWedlet(attrName: string, value: string): void | Promise<void> {\n\t\treturn WEDLET_SINGLEELT.insertAttrNode(this, attrName, value, this.model.childrenElts, this.model.defaultWedSelector);\n\t}\n\n\tdeleteAttrNode(attName: string) {\n\t\tWEDLET_SINGLEELT.deleteAttrNode(this, attName);\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t}\n\n\tonChildEmptied(willBeEmptied: (xa: IXAddr) => boolean): IXAddr {\n\t\t//si ce wedlet n'est pas affiché systématiquement, il n'est pas supprimable par vidage des ses fils.\n\t\tif (!isDisplayedWedlet(this) || isWedDefaultDisplay(this.displayCtx)) return null;\n\t\treturn WEDLET.onChildEmptied(this as IParentWedlet, willBeEmptied);\n\t}\n\n\tinjectForeignChild(similarTo: IJmlObj | ISkStructDef | Node | Attr, elt: HTMLElement, before?: IWedlet, after?: IWedlet, options?: Dict<any>) {\n\t\tconst model = this.model;\n\t\t//Recherche du slot\n\t\tlet slot = null;\n\t\tif (model.childrenElts) {\n\t\t\tif (model.childrenElts.length === 1) {\n\t\t\t\tslot = model.childrenElts[0].wedSlotName;\n\t\t\t} else {\n\t\t\t\tlet childrenElt: IWedChildrenElt;\n\t\t\t\tif (isSkStructDef(similarTo)) {\n\t\t\t\t\tchildrenElt = model.childrenElts.find((c: IWedChildrenElt) => c.wedMatcher.matchStruct(similarTo));\n\t\t\t\t} else if (similarTo instanceof Attr) {\n\t\t\t\t\tchildrenElt = model.childrenElts.find((c: IWedChildrenElt) => c.wedMatcher.matchAttr(similarTo.nodeName));\n\t\t\t\t} else if (similarTo instanceof Node) {\n\t\t\t\t\tchildrenElt = model.childrenElts.find((c: IWedChildrenElt) => c.wedMatcher.matchNode(JML.dom2jmlNode(similarTo)));\n\t\t\t\t} else {\n\t\t\t\t\t// similarTo is IJmlObj\n\t\t\t\t\tchildrenElt = model.childrenElts.find((c: IWedChildrenElt) => c.wedMatcher.matchNode(similarTo));\n\t\t\t\t}\n\t\t\t\tif (childrenElt) slot = childrenElt.wedSlotName;\n\t\t\t}\n\t\t}\n\t\tif (slot) elt.setAttribute(\"slot\", slot);\n\t\t//Recherche du point d'insertion\n\t\tconst parent = this.elementHost;\n\t\tlet beforeNode: Node;\n\t\tif (isWedletSingleElt(before)) {\n\t\t\tbeforeNode = this.findPreviousInsBefore(parent, before.element, similarTo);\n\t\t} else if (isWedletSingleElt(after)) {\n\t\t\tlet stopPoint = after.element.nextElementSibling;\n\t\t\tlet doc: IDocHolderSync;\n\t\t\tlet xa: IXAddr;\n\t\t\tlet eltName: string;\n\t\t\twhile (stopPoint) {\n\t\t\t\tif (IS_EltWedlet(stopPoint)) {\n\t\t\t\t\tif (stopPoint.wedlet.isVirtual()) {\n\t\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\t\tdoc = this.wedMgr.docHolder;\n\t\t\t\t\t\t\txa = this.wedAnchor;\n\t\t\t\t\t\t\teltName = isSkStructDef(similarTo) ? similarTo.structName :\n\t\t\t\t\t\t\t\tsimilarTo instanceof Node ? similarTo.nodeName : JML.jmlNode2name(similarTo)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (doc.checkSchemaOrder(xa, eltName, stopPoint.wedlet.model.nodeName)) break;\n\t\t\t\t\t} else if (LANG.in(stopPoint.wedlet.model.nodeType, ENodeType.element, ENodeType.attribute)) {\n\t\t\t\t\t\t//autre élément ou attribut non virtuel on arrête.\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstopPoint = stopPoint.nextElementSibling;\n\t\t\t}\n\t\t\tbeforeNode = stopPoint || after.element.nextSibling;\n\t\t} else {\n\t\t\tbeforeNode = this.findPreviousInsBefore(parent, null, similarTo);\n\t\t}\n\t\tparent.insertBefore(elt, beforeNode);\n\t}\n\n\tprotected findPreviousInsBefore(parent: HTMLElement, from: HTMLElement | null, similarTo: IJmlObj | ISkStructDef | Node | Attr): Node {\n\t\tlet stopPoint = from == null ? parent.lastElementChild : from.previousElementSibling;\n\t\tlet doc: IDocHolderSync;\n\t\tlet xa: IXAddr;\n\t\tlet eltName: string;\n\t\twhile (stopPoint) {\n\t\t\tif (IS_EltWedlet(stopPoint)) {\n\t\t\t\tif (stopPoint.wedlet.isVirtual()) {\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tdoc = this.wedMgr.docHolder;\n\t\t\t\t\t\txa = this.wedAnchor;\n\t\t\t\t\t\teltName = isSkStructDef(similarTo) ? similarTo.structName :\n\t\t\t\t\t\t\tsimilarTo instanceof Node ? similarTo.nodeName : JML.jmlNode2name(similarTo)\n\t\t\t\t\t}\n\t\t\t\t\tif (doc.checkSchemaOrder(xa, stopPoint.wedlet.model.nodeName, eltName) === false) {\n\t\t\t\t\t\tstopPoint = stopPoint.previousElementSibling;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn stopPoint ? stopPoint.nextSibling : parent.firstChild;\n\t}\n\n\tgetEditModeForDesc(target: IWedlet | null): IWedletEditModeHint | undefined {\n\t\t//On force le mode readStatic si on est collapsé et hidden si on est virtuel.\n\t\tif (this.element?.collapsed) return target?.isVirtual() ? WEDLET.HIDDEN_MUST : WEDLET.READSTATIC_MUST;\n\t\treturn undefined;\n\t}\n\n\trefreshEditMode() {\n\t\tconst old = this.editMode;\n\t\tthis.editMode = WEDLET.resolveEditMode(this);\n\t\tif (this.element && old !== this.editMode && 'setEditMode' in this.element) this.element.setEditMode(this.editMode);\n\t\telse if (typeof this.element.reassessPerms === \"function\") this.element.reassessPerms();\n\t}\n\n\tswitchToRecursiveVirtualButton(): void {\n\t\tthis.xaPart = null;\n\t\tthis.element = new BoxCreate();\n\t\tthis.element.configWedletElt(BoxWedlet.getRecursiveVirtualButtonTpl(), this);\n\t\tif (this.model.nodeLabel) (this.element as HTMLElement).appendChild(document.createElement('span')).appendChild(document.createTextNode(this.model.nodeLabel));\n\t}\n\n\tprotected static _RecursVirtBtnTpl: Element;\n\n\tprotected static getRecursiveVirtualButtonTpl(): Element {\n\t\tif (!BoxWedlet._RecursVirtBtnTpl) {\n\t\t\tconst elt = BoxWedlet._RecursVirtBtnTpl = new BoxCreate();\n\t\t\telt.setAttribute(\"skinOver\", \"box-create/recursive\");\n\t\t}\n\t\treturn BoxWedlet._RecursVirtBtnTpl;\n\t}\n\n\tprotected xInsertChildWedlet(index: number, node: IJmlNode | number, children: IJmlSubSet, insertBefore?: Element): void | Promise<void> {\n\t\tif (typeof node === 'number') {\n\t\t\tconst elt = new OffView().initViewOff(this, index, node);\n\t\t\t// XXX cas multi-slots pour les children : risque de se tromper de childrenElt.\n\t\t\t// => Insérer des BoxOffView slaves dans les autres slots (qui ne sont pas un chilrenElt d'attributs) ?\n\t\t\tconst childrenElt = WEDLET.findChildrenEltForNode(this.model.childrenElts, null, this, index); //on cherche le childrenElt par défaut.\n\t\t\tif (childrenElt && childrenElt.wedSlotName) elt.setAttribute(\"slot\", childrenElt.wedSlotName);\n\t\t\t(elt as IElementWedlet).fromChildrenElt = childrenElt;\n\t\t\t//On replace l'espion off-view avant les virtual nodes.\n\t\t\tlet previousNotVirtual = insertBefore ? insertBefore.previousElementSibling : this.elementHost.lastElementChild;\n\t\t\twhile (previousNotVirtual && IS_EltWedlet(previousNotVirtual) && previousNotVirtual.wedlet.isVirtual()) {\n\t\t\t\tinsertBefore = previousNotVirtual;\n\t\t\t\tpreviousNotVirtual = previousNotVirtual.previousElementSibling;\n\t\t\t}\n\t\t\tthis.elementHost.insertBefore(elt, insertBefore);\n\t\t} else {\n\t\t\treturn WEDLET_SINGLEELT.insertChildNode(this, index, node, children, this.model.childrenElts, this.model.defaultWedSelector, insertBefore);\n\t\t}\n\t}\n\n\tprotected xAppendChildWedlets(children: IJmlSubSet, promises?: Promise<void>[]): Promise<void>[] {\n\t\tconst it = new JmlSubSetIterator(children);\n\t\twhile (it.next()) {\n\t\t\tconst promise = this.xInsertChildWedlet(it.currentIdx, it.currentNode, it.currentChildren);\n\t\t\tif (promise) {\n\t\t\t\tif (!promises) promises = [promise];\n\t\t\t\telse promises.push(promise);\n\t\t\t}\n\t\t}\n\t\treturn promises;\n\t}\n\n\tisVirtual() {return this.xaPart === null}\n\n\tbindAsVirtual() {\n\t\tthis.xaPart = null;\n\t\tif (!this.model.nodeName && (this.model.nodeType === ENodeType.element || this.model.nodeType === ENodeType.attribute)) {\n\t\t\t//On est obligé de mettre un nom valide en cas de création forcé de l'arbo par la création d'un descendant virtuel.\n\t\t\tthis.wedNodeName = (this.displayCtx ? this.displayCtx.wedNodeName : null) || \"x\";\n\t\t}\n\t\t/*if (this.element) { ...*/\n\t\tthis.refreshEditMode();\n\t\tWEDLET_SINGLEELT.clearChildrenAsVirtual(this);\n\t\tthis.element.refreshBindValue(null);\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.childrenEltsNaturalOrder);\n\t}\n\n\tdeleteVirtualWedlet() {\n\t\tthis.element.remove();\n\t}\n\n\tnewJml(): IJmlNode {\n\t\tswitch (this.model.nodeType) {\n\t\tcase ENodeType.element:\n\t\t\treturn {'': this.wedNodeName || this.model.nodeName};\n\t\tcase ENodeType.text:\n\t\t\treturn \"\";\n\t\tcase ENodeType.comment:\n\t\t\treturn {'': JML.COMMENT};\n\t\t}\n\t\treturn null;\n\t}\n\n\tisEmpty(): boolean {\n\t\tif (this.isVirtual()) return true;\n\t\t//un contenu qui n'est pas issu d'un display systématique (non 'default') est considéré comme jamais vide.\n\t\tif ((!isDisplayedWedlet(this) || isWedDefaultDisplay(this.displayCtx)) && this.wedMgr.rootWedlet !== this) return false;\n\t\tswitch (this.model.nodeType) {\n\t\tcase ENodeType.element:\n\t\tcase ENodeType.document:\n\t\tcase ENodeType.documentFragment:\n\t\t\tlet empty = true;\n\t\t\t(this as IParentWedlet).visitWedletChildren(-1, Infinity, (wedlet: IChildWedlet) => {\n\t\t\t\tif (!wedlet.isEmpty()) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\treturn 'stop';\n\t\t\t\t}\n\t\t\t}, WEDLET.VISITOPTIONS_mainBranch);\n\t\t\treturn empty;\n\t\tcase ENodeType.text:\n\t\tcase ENodeType.attribute:\n\t\t\treturn this.element.isEmpty();\n\t\tdefault: //ENodeType.document, ENodeType.comment\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget isCollapsed() {return false}\n\n\tdoCustomAdjust() {\n\t\tif (this.element.onChildWedletsChange) this.element.onChildWedletsChange();\n\t\tif (this.customAdjust) this.customAdjust.emit(this);\n\t}\n\n\taddCustomAdjust(lstn: (w: BoxWedlet) => void, order?: number) {\n\t\tif (!this.customAdjust) this.customAdjust = new EventMgr();\n\t\tthis.customAdjust.add(lstn, order);\n\t}\n\n\tfocusSkAnnot(annot: ISkAnnot): boolean {\n\t\tif (typeof annot.offset === \"number\") {\n\t\t\t//insertion entre wedlets => wedletOwner est le père.\n\t\t\tconst a = DOM.findFirstChild(this.elementHost, (n: Node): n is IElementSkAnnot => IS_EltSkAnnot(n) && n.skAnnot === annot);\n\t\t\tif (a) {\n\t\t\t\ta.focus();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (isSkTextAnnot(annot)) {\n\t\t\t//Annotation dans un text ou attr, on cherche un widget qui pourrait le gérer plus finement.\n\t\t\tif (isSkAnnotFocuser(this.element) && this.element.focusSkAnnot(annot)) return true;\n\t\t\tconst sh = this.element.shadowRoot;\n\t\t\tif (sh) return DOM.findNext(sh, sh, (n): n is Node => isSkAnnotFocuser(n) ? n.focusSkAnnot(annot) : false) != null;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nAgWedletInsMgr(AgWedletBoxSelectionSingleElt(AgWedletSingleElt(BoxWedlet, {wedletArch: EWedletArch.dom, isParentWedlet: true, isCharsWedlet: true, isVirtualisableWedlet: true, proxySkAnnots: true})));\n\n\n/**\n *\n */\nexport class BoxVirtualSwitchWedlet extends BoxWedlet {\n\tmodel: BoxVirtualSwitchModel;\n\n\tinit(host: IParentWedlet, model: BoxVirtualSwitchModel, displayContext?: IWedDisplayElt): this {\n\t\tthis.wedParent = host;\n\t\tthis.model = model;\n\t\tif (displayContext) this.displayCtx = displayContext;\n\t\treturn this;\n\t}\n\n\tprotected eltParent: Element;\n\tprotected eltBefore: Node;\n\tprotected eltSlot: string;\n\tprotected eltCaller: IWedChildrenElt;\n\n\tinsertElement(parent: Element, insertBefore?: Node, slotName?: string, caller?: IWedChildrenElt) {\n\t\tthis.eltParent = parent;\n\t\tthis.eltBefore = insertBefore;\n\t\tthis.eltSlot = slotName;\n\t\tthis.eltCaller = caller;\n\t}\n\n\tprotected resetElt(real: boolean) {\n\t\tlet parent: Node;\n\t\tlet insertBefore: Node;\n\t\tlet slot: string;\n\t\tlet caller: IWedChildrenElt;\n\t\tif (this.element) {\n\t\t\tparent = this.element.parentNode;\n\t\t\tinsertBefore = this.element.nextSibling;\n\t\t\tslot = this.element.getAttribute(\"slot\");\n\t\t\tcaller = this.element.fromChildrenElt;\n\t\t\tthis.element.remove();\n\t\t} else {\n\t\t\tparent = this.eltParent;\n\t\t\tinsertBefore = this.eltBefore;\n\t\t\tslot = this.eltSlot;\n\t\t\tcaller = this.eltCaller;\n\t\t\tthis.eltParent = undefined;\n\t\t\tthis.eltBefore = undefined;\n\t\t\tthis.eltSlot = undefined;\n\t\t\tthis.eltCaller = undefined;\n\t\t}\n\t\tthis.createElement(real ? this.model.realEltWedletConfig : this.model.virtualEltWedletConfig);\n\t\tif (slot) this.element.setAttribute(\"slot\", slot);\n\t\tif (caller) this.element.fromChildrenElt = caller;\n\t\tparent.insertBefore(this.element, insertBefore);\n\t}\n\n\tbindWithNode(xaOffset: number, node: IJmlNode, children: IJmlSubSet): void | Promise<void> {\n\t\tthis.resetElt(true);\n\t\tsuper.bindWithNode(xaOffset, node, children);\n\t}\n\n\n\tbindWithAttr(nameAttr: string, value: string): void | Promise<void> {\n\t\tthis.resetElt(true);\n\t\tsuper.bindWithAttr(nameAttr, value);\n\t}\n\n\tbindAsVirtual() {\n\t\tif (!this.model.nodeName && (this.model.nodeType === ENodeType.element || this.model.nodeType === ENodeType.attribute)) {\n\t\t\t//On est obligé de mettre un nom valide en cas de création forcée de l'arbo par la création d'un descendant virtuel.\n\t\t\tthis.wedNodeName = (this.displayCtx ? this.displayCtx.wedNodeName : null) || \"x\";\n\t\t}\n\t\tthis.resetElt(false);\n\t\tthis.xaPart = null;\n\t\tthis.refreshEditMode();\n\t\t//WEDLET_SINGLEELT.clearChildrenAsVirtual(this);\n\t\tthis.element.refreshBindValue(null);\n\t\tWEDLET_SINGLEELT.adjustVirtuals(this, this.model.chEltsNatOrderVirtual);\n\t}\n\n\tget isCollapsed() {return this.isVirtual()}\n\n\t/**\n\t * Surcharge de AgWedletInsMgr.\n\t * @override IInsMgrWedlet.markInserts\n\t */\n\tmarkInserts(datas: OSkImportDatas): \"next\" | \"nextSibling\" {\n\t\tif (this.isVirtual()) return \"nextSibling\";\n\t\treturn markInserts.call(this, datas);\n\t}\n}\n\n\nexport class BoxCommentWedlet extends BoxWedlet {\n\n\tmodel: BoxCommentModel;\n\n\tcmtHouse: Promise<CommentHouse>;\n\n\t/** Reprise du texte en création de thread (stocké en lastDatas). */\n\tinitText?: string;\n\n\tprotected createElement(root: Element) {\n\t\t//création d'un élément temporaire, transformé après analyse du comment\n\t\tthis.element = document.createElement(\"template\") as any as Readonly<IElementWedlet>;\n\t\tthis.element.configWedletElt = () => {};\n\t\t(this.element as any).wedlet = this;\n\t}\n\n\tbindWithNode(xaOffset: number, node: IJmlNode, children: IJmlSubSet) {\n\t\tthis.xaPart = xaOffset;\n\t\tthis.wedMgr.doAfterBatch(async () => {\n\t\t\t//Après le batch pour que this.wedAnchor soit synchro avec le docHolder\n\t\t\tconst cmtHolder = this.wedMgr.docHolderAsync.getCmtHouse(this.wedAnchor);\n\t\t\tif (cmtHolder) {\n\t\t\t\tthis.cmtHouse = cmtHolder.futureHouse;\n\t\t\t\tif (cmtHolder.type === \"scCmt\" && this.model.scCmtConfig) {\n\t\t\t\t\tif (!window.customElements.get(\"box-sccomment\")) await import(\"back/edit/wed/wedlets/box/boxScComment.js\");\n\t\t\t\t\tthis.initComment(this.model.scCmtConfig, node);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (cmtHolder.type === \"scExcl\" && this.model.exclCmtConfig) {\n\t\t\t\t\tif (!window.customElements.get(\"box-scexclude\")) await import(\"back/edit/wed/wedlets/box/boxScExclude.js\");\n\t\t\t\t\tthis.initComment(this.model.exclCmtConfig, node);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.initComment(this.model.textCmtConfig, node);\n\t\t});\n\t}\n\n\tbindAsVirtual() {\n\t\tthis.xaPart = null;\n\t\treturn import(\"back/edit/wed/wedlets/box/boxScComment.js\").then(() => {\n\t\t\tthis.initComment(this.model.scCmtConfig, null);\n\t\t});\n\t}\n\n\tinitComment(tpl: Element, node: IJmlNode) {\n\t\tconst oldElt = this.element;\n\t\tsuper.createElement(tpl);\n\t\tthis.insertElement(oldElt.parentElement, oldElt, oldElt.getAttribute(\"slot\"), oldElt.fromChildrenElt);\n\t\toldElt.remove();\n\t\tthis.refreshEditMode();\n\t\tthis.element.refreshBindValue(node);\n\t\tthis.doCustomAdjust();\n\t\tif (this.pendingAnnots && isSkAnnotDrawer(this.element)) {\n\t\t\tfor (const an of this.pendingAnnots) this.element.drawAnnot(an);\n\t\t\tthis.pendingAnnots = null;\n\t\t}\n\t}\n\n\tpendingAnnots: ISkAnnot[];\n\n\tonAddedSkAnnot(annot: ISkAnnot): void {\n\t\tif (this.element.localName === \"template\") {\n\t\t\t//comment en construction async\n\t\t\tif (!this.pendingAnnots) this.pendingAnnots = [annot];\n\t\t\telse this.pendingAnnots.push(annot);\n\t\t} else {\n\t\t\tif (isSkAnnotDrawer(this.element)) this.element.drawAnnot(annot);\n\t\t}\n\t}\n\n\tonRemovedSkAnnot(annot: ISkAnnot): void {\n\t\tif (this.element.localName === \"template\") {\n\t\t\t//comment en construction async\n\t\t\tif (this.pendingAnnots) {\n\t\t\t\tconst i = this.pendingAnnots.indexOf(annot);\n\t\t\t\tif (i >= 0) this.pendingAnnots.splice(i, 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (isSkAnnotDrawer(this.element)) this.element.eraseAnnot(annot);\n\t\t}\n\t}\n\n\tisEmpty(): boolean {return false}\n\n\tbindRoot() {throw Error(\"BoxCommentWedlet not implemented in root position\")}\n\n\tbindWithAttr() {throw Error(\"BoxCommentWedlet not usable with attr binding\")}\n}\n\nexport class BoxHiddenModel extends WedletModelBase {\n\tnodeLabel?: string;\n\n\tget isBoxFamily(): boolean {return true}\n\n\tinitModel(cnf: Element): void {\n\t\tthis.config = cnf;\n\t\tthis.nodeLabel = cnf.getAttribute('label');\n\t}\n\n\tcreateWedlet(parent: IParentWedlet, displayContext?: IWedDisplayElt): IChildWedlet | null {\n\t\treturn new BoxHiddenWedlet(this, parent, displayContext);\n\t}\n}\n\nWED.registerWedletModel(\"BoxHidden\", BoxHiddenModel);\n\nexport class BoxHiddenWedlet extends OffscreenEltLeafWedlet implements IWedletSingleElt, IVirtualisableWedlet, ISkAnnotListener {\n\tmodel: BoxFreeDomModel;\n\n\telement: IElementWedlet;\n\n\tdisplayCtx: IWedDisplayElt;\n\n\tget elementHost(): HTMLElement {return this.element}\n\n\tisVirtual(): this is IVirtualisableWedlet {return this.xaPart == null}\n\n\tconstructor(model: IWedletModel, wedParent: IParentWedlet, displayContext?: IWedDisplayElt) {\n\t\tsuper(model, wedParent);\n\t\tif (displayContext) this.displayCtx = displayContext;\n\t}\n\n\tbindWithNode(xaOffset: number, node: IJmlNode, children: IJmlSubSet): void | Promise<void> {\n\t\tthis.xaPart = xaOffset;\n\t}\n\n\tbindAsVirtual(): void {\n\t\tthis.xaPart = null;\n\t}\n\n\tinsertElement(parent: Element, insertBefore?: Node, slotName?: string, caller?: IWedChildrenElt): void {\n\t\tconst elt = document.createElement(\"box-hidden\") as IElementWedlet;\n\t\telt.hidden = true;\n\t\telt.style.display = \"none\";\n\t\telt.configWedletElt = () => {};\n\t\t(elt as any).wedlet = this;\n\t\telt.fromChildrenElt = caller;\n\t\tthis.element = elt;\n\t\tif (slotName) elt.setAttribute(\"slot\", slotName);\n\t\tparent.insertBefore(elt, insertBefore);\n\t}\n\n\tonAddedSkAnnot(annot: ISkAnnot) {};\n\n\tonRemovedSkAnnot(annot: ISkAnnot): void {};\n\n\tonDelete() {\n\t\tthis.element = null;\n\t}\n\n\tdeleteVirtualWedlet(): void {\n\t\tif (this.element) this.element.remove();\n\t}\n\n\tisEmpty(): boolean {return this.xaPart != null}\n\n\tnewJml(): IJmlObj | string {throw Error()}\n}\n\nAgWedletSingleElt(BoxHiddenWedlet, {wedletArch: EWedletArch.dom, isVirtualisableWedlet: true});\n\n/**\n * Wedlet dont le contenu est construit et mis à jour par une lib JS implémentant l'interface IBoxFreeDomDrawer.\n */\nexport class BoxFreeDomModel extends WedletModelBase {\n\tnodeLabel?: string;\n\n\t/** Fonction de redessinement du wedlet suite à création/modification/suppression des metas. */\n\tdrawerLib: string;\n\tdrawerMeth: string;\n\n\tget isBoxFamily(): boolean {return true}\n\n\tinitModel(cnf: Element): void {\n\t\tif (this.nodeType !== ENodeType.element) throw Error(\"BoxFreeDom wedlet can only be bound with element.\");\n\t\tthis.config = cnf;\n\t\tthis.nodeLabel = cnf.getAttribute('label');\n\t\tthis.drawerLib = cnf.getAttribute('lib');\n\t\tthis.drawerMeth = cnf.getAttribute('method');\n\t}\n\n\tcreateWedlet(parent: IParentWedlet, displayContext?: IWedDisplayElt): IChildWedlet | null {\n\t\treturn new BoxFreeDomWedlet(this, parent);\n\t}\n\n\tgetDrawer(wedMgr: WedMgr): IBoxFreeDomDrawer {\n\t\treturn wedMgr.wedModel.jsLibs[this.drawerLib][this.drawerMeth];\n\t}\n}\n\nWED.registerWedletModel(\"BoxFreeDom\", BoxFreeDomModel);\n\n/**\n * Interface à implémenter par la lib.\n */\nexport interface IBoxFreeDomDrawer {\n\n\t/**\n\t * Initialisation du noeud et insertion dans son contexte.\n\t * wedlet.element DOIT être renseigné.\n\t */\n\tcreateElement(wedlet: BoxFreeDomWedlet, parent: Element, insertBefore?: Node, slotName?: string, caller?: IWedChildrenElt): HTMLElement\n\n\t/** Appelé à chaque changement du contenu. */\n\trefreshContent(wedlet: BoxFreeDomWedlet): void\n\n\t/** */\n\tonDelete?(wedlet: BoxFreeDomWedlet): void\n}\n\nexport class BoxFreeDomWedlet extends OffscreenEltLeafWedlet implements IWedletSingleElt {\n\tmodel: BoxFreeDomModel;\n\n\telement: IElementWedlet;\n\n\tget elementHost(): HTMLElement {return this.element}\n\n\tinsertElement(parent: Element, insertBefore?: Node, slotName?: string, caller?: IWedChildrenElt): void {\n\t\tconst elt = this.model.getDrawer(this.wedMgr).createElement(this, parent, insertBefore, slotName, caller) as any;\n\t\tif (!IS_EltWedlet(elt)) (elt as IElementWedlet).configWedletElt = () => {};\n\t\telt.wedlet = this;\n\t\tthis.element = elt;\n\t\tif (slotName) elt.setAttribute(\"slot\", slotName);\n\t\tparent.insertBefore(elt, insertBefore);\n\t}\n\n\tprotected setContent(content: Element) {\n\t\tthis.content = content;\n\t\tconst drawer = this.model.getDrawer(this.wedMgr);\n\t\tif (content) drawer.refreshContent(this);\n\t\telse if ('onDelete' in drawer) drawer.onDelete(this);\n\t}\n}\n"]}