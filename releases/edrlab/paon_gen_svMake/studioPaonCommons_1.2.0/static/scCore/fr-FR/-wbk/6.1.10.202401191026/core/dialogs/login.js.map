{"version":3,"sources":["/@back@/core/dialogs/login.tsx"],"names":["REG","BaseElement","initLoginForm","initRenewPwdForm","JSX","DOMSH","Action","POPUP","UiLangDeskFeat","ActionBtn","LoginDialog","[object Object]","init","reg","this","findReg","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","loginForm","getSvc","appendChild","createElement","style","name","type","universe","env","userSelf","auth","defaultAccount","localStorage","getItem","showRenewPwd","renewForm","hidden","hideRenewPwd","remove","registerSkin","customElements","define","ChangePwdDialog","changePwdForm","renewPwdDone","findPopupableParent","close","registerSvc","id","method","class","langSelector","for","autocomplete","spellcheck","disabled","actionChangePwd","setLabel","setVisible","ctx","currentAuthenticatedUser","setEnabled","currentUser","isReadOnly","isDisabled","setExecute","event","showDialog","fixSize","titleBar","barLabel","label","window","desk","isIn","î","action","newLangMenu","uiContext"],"mappings":"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","sourcesContent":["import {IReg, REG} from 'lib/commons/registry';\nimport {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {initLoginForm, initRenewPwdForm} from \"back/core/userSelfForms\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IBasicUniversePointer, IUniverseEnv} from \"lib/core/universe\";\nimport {Action} from \"lib/commons/actions\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {UiLangDeskFeat} from \"back/core/plugins/optionsPlg\";\nimport {ActionBtn, OActionBtnInit} from \"back/commons/widgets/buttons\";\n\nexport class LoginDialog extends BaseElement {\n\n\tprotected _initialize(init: OSkinableInit) {\n\t\tconst reg = this.findReg<IBasicUniversePointer>(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\treg.installSkin(\"webzone:panel\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst loginForm = reg.getSvc<(reg: IReg<IUniverseEnv>) => HTMLFormElement>('userLoginForm')(reg);\n\t\tsr.appendChild(loginForm);\n\t\t// Hack pour faire fonctionner l'enregistrement des mots de passe sur Chrome : ajout d'un input password caché en dehors du shadow !\n\t\tthis.appendChild(<form style=\"display: none\"><input name=\"password\" type=\"password\"/></form>);\n\t\tconst universe = reg.env.universe;\n\t\tinitLoginForm(loginForm, universe.userSelf, universe.auth, {\n\t\t\tdefaultAccount: localStorage.getItem(\"login:lastAccount\"),\n\t\t\tshowRenewPwd: () => {\n\t\t\t\tconst renewForm = reg.getSvc<(reg: IReg<IUniverseEnv>) => HTMLFormElement>('userRenewPwdForm')(reg);\n\t\t\t\tloginForm.hidden = true;\n\t\t\t\tsr.appendChild(renewForm);\n\t\t\t\treturn renewForm;\n\t\t\t},\n\t\t\thideRenewPwd: (renewForm) => {\n\t\t\t\trenewForm.remove();\n\t\t\t\tloginForm.hidden = false;\n\t\t\t}\n\t\t});\n\t}\n\n}\n\nREG.reg.registerSkin('c-login', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tpadding: 1em;\n\t}\n\n\t:focus-visible {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t.fields {\n\t\tmax-width: 30em;\n\t\twidth: 85vw;\n\t\tmargin: auto;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-row-gap: 0.5em;\n\t\tgrid-column-gap: 0.5em;\n\t}\n\n\tlabel {\n\t\ttext-align: end;\n\t\tcolor: var(--alt1-color);\n\t\tuser-select: none;\n\t}\n\n\tinput {\n\t\tbackground-color: var(--form-bgcolor);\n\t\tcolor: var(--form-color);\n\t\tborder: 1px solid var(--border-color);\n\t}\n\n\tinput:invalid {\n\t\tborder: 1px solid var(--error-color);\n\t\tbox-shadow: 0 0 2px var(--error-color);\n\t}\n\n\t.message {\n\t\tmargin: 1em;\n\t}\n\n\t.message[data-type='pending'] {\n\t\ttext-align: end;\n\t\tfont-style: italic;\n\t}\n\n\t.error {\n\t\tcolor: var(--error-color);\n\t\tmargin: 1em;\n\t}\n\n\t#langCtn {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin-bottom: .5em;\n\t}\n\n\t.footer {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tjustify-content: flex-end;\n\t\tmargin-block: 1em 0;\n\t\tmargin-inline: 0;\n\t}\n\n\t.spacer {\n\t\tflex: 1;\n\t}\n\n\tbutton {\n\t\tpadding: 0.5em;\n\t\tborder-radius: 5px;\n\t\tborder: 1px solid var(--border-color);\n\t\tbackground-color: var(--bgcolor);\n\t\tcolor: var(--color);\n\t\tcursor: pointer;\n\t\tmargin-block: 0;\n\t\tmargin-inline: 1em 0;\n\t}\n\n\tbutton:hover {\n\t\tbackground-color: var(--pressed-bgcolor);\n\t}\n\n\tbutton[type=submit] {\n\t\tborder: none;\n\t\tcolor: var(--inv-color);\n\t\tbackground-color: var(--inv-bgcolor);\n\t}\n\n\tbutton[type=submit]:hover {\n\t\tbackground-image: linear-gradient(var(--inv-pressed-bgcolor), var(--inv-pressed-bgcolor));\n\t}\n`);\n\ncustomElements.define('c-login', LoginDialog);\n\n/**\n *\n */\nexport class ChangePwdDialog extends BaseElement {\n\n\tprotected _initialize(init: OSkinableInit) {\n\t\tconst reg = this.findReg<IBasicUniversePointer>(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\treg.installSkin(\"webzone:panel\", sr);\n\t\tthis._initAndInstallSkin('c-login', init);\n\t\tconst changePwdForm = reg.getSvc<(reg: IReg<IUniverseEnv>) => HTMLFormElement>('userChangePwdForm')(reg);\n\t\tsr.appendChild(changePwdForm);\n\t\tconst universe = reg.env.universe;\n\t\tinitRenewPwdForm(changePwdForm, universe.userSelf, universe.auth, {\n\t\t\trenewPwdDone: () => {\n\t\t\t\tPOPUP.findPopupableParent(this).close();\n\t\t\t}\n\t\t});\n\t}\n}\n\ncustomElements.define('c-change-pwd', ChangePwdDialog);\n\nREG.reg.registerSvc('userLoginForm', 1, (reg: IReg<IUniverseEnv>) => <form id=\"loginForm\" method=\"post\">\n\t<section>\n\t\t<p class=\"message\" hidden=\"\"/>\n\t\t<p class=\"error\" hidden=\"\"/>\n\t\t{langSelector(reg)}\n\t\t<section class=\"fields\">\n\t\t\t<label for=\"loginAccount\">Compte</label>\n\t\t\t<input name=\"account\" id=\"loginAccount\" autocomplete=\"username\" spellcheck=\"false\"/>\n\t\t\t<label for=\"loginPassword\">Mot de passe</label>\n\t\t\t<input name=\"password\" type=\"password\" id=\"loginPassword\" autocomplete=\"current-password\"/>\n\t\t</section>\n\t\t<div class=\"footer\" id=\"loginActions\">\n\t\t\t<button class=\"pwdLost\" type=\"button\">Mot de passe perdu</button>\n\t\t\t<div class=\"spacer\"/>\n\t\t\t<button type=\"submit\">Se connecter</button>\n\t\t</div>\n\t</section>\n</form>);\n\nREG.reg.registerSvc('userRenewPwdForm', 1, (reg: IReg<IUniverseEnv>) => <form id=\"renewPwdForm\" method=\"post\">\n\t<section>\n\t\t<h3>Renouvellement de votre mot de passe</h3>\n\t\t<p class=\"message\" hidden=\"\"/>\n\t\t<p class=\"error\" hidden=\"\"/>\n\t\t{langSelector(reg)}\n\t\t<section class=\"fields\">\n\t\t\t<label for=\"renewAccount\">Compte</label>\n\t\t\t<input name=\"account\" id=\"renewAccount\" autocomplete=\"username\" spellcheck=\"false\"/>\n\t\t\t<label for=\"currentPwd\">Mot de passe actuel</label>\n\t\t\t<input name=\"currentPwd\" type=\"password\" id=\"currentPwd\" autocomplete=\"current-password\"/>\n\t\t\t<label for=\"newPwd\">Nouveau mot de passe</label>\n\t\t\t<input name=\"newPwd\" type=\"password\" id=\"newPwd\" autocomplete=\"new-password\"/>\n\t\t\t<label for=\"confirmPwd\">Confirmation du mot de passe</label>\n\t\t\t<input name=\"confirmPwd\" type=\"password\" id=\"confirmPwd\" autocomplete=\"new-password\"/>\n\t\t</section>\n\t\t<div class=\"footer\" id=\"renewPwdActions\">\n\t\t\t<button type=\"submit\">Valider</button>\n\t\t</div>\n\t</section>\n</form>);\n\nREG.reg.registerSvc('userChangePwdForm', 1, (reg: IReg<IUniverseEnv>) => <form id=\"changePwdForm\" method=\"post\">\n\t<section>\n\t\t<p class=\"message\" hidden=\"\"/>\n\t\t<p class=\"error\" hidden=\"\"/>\n\t\t{langSelector(reg)}\n\t\t<section class=\"fields\">\n\t\t\t<label for=\"renewAccount\">Compte</label>\n\t\t\t<input name=\"account\" id=\"renewAccount\" autocomplete=\"username\" disabled=\"\" spellcheck=\"false\"/>\n\t\t\t<label for=\"currentPwd\">Mot de passe actuel</label>\n\t\t\t<input name=\"currentPwd\" type=\"password\" id=\"currentPwd\" autocomplete=\"current-password\"/>\n\t\t\t<label for=\"newPwd\">Nouveau mot de passe</label>\n\t\t\t<input name=\"newPwd\" type=\"password\" id=\"newPwd\" autocomplete=\"new-password\"/>\n\t\t\t<label for=\"confirmPwd\">Confirmation du mot de passe</label>\n\t\t\t<input name=\"confirmPwd\" type=\"password\" id=\"confirmPwd\" autocomplete=\"new-password\"/>\n\t\t</section>\n\t\t<div class=\"footer\" id=\"changePwdActions\">\n\t\t\t<button type=\"submit\">Valider</button>\n\t\t</div>\n\t</section>\n</form>);\n\nconst actionChangePwd = new Action<HTMLElement>(\"actionChangePwd\")\n\t.setLabel(\"Modifier le mot de passe...\")\n\t.setVisible(function (ctx: HTMLElement) {\n\t\tconst reg = REG.findReg<IBasicUniversePointer>(ctx);\n\t\treturn reg.env.universe.auth.currentAuthenticatedUser !== null;\n\t})\n\t.setEnabled(function (ctx: HTMLElement) {\n\t\tconst reg = REG.findReg<IBasicUniversePointer>(ctx);\n\t\tlet currentUser = reg.env.universe.auth.currentAuthenticatedUser;\n\t\tif (currentUser && (currentUser.isReadOnly || currentUser.isDisabled))\n\t\t\treturn false;\n\t})\n\t.setExecute(function (ctx: HTMLElement, event: Event) {\n\t\tPOPUP.showDialog(new ChangePwdDialog(), ctx, {fixSize: false, titleBar: {barLabel: {label: \"Changement de votre mot de passe\"}}});\n\t});\n\nREG.reg.registerSvc('actionChangePwd', 1, actionChangePwd);\n\nfunction langSelector(reg: IReg<IUniverseEnv>): HTMLElement | undefined {\n\tif (!window.desk) return;\n\tif (UiLangDeskFeat.isIn(desk)) {\n\t\treturn <div id=\"langCtn\"><ActionBtn id=\"langBtn\" î={{\n\t\t\treg,\n\t\t\taction: desk.newLangMenu(),\n\t\t\tuiContext: \"bar\"\n\t\t} as OActionBtnInit<HTMLElement>}/></div>;\n\t}\n}\n"]}