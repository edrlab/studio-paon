{"version":3,"sources":["/@back@/edit/wed/wedlets/box/boxScComment.tsx"],"names":["POPUP","AgEltBoxSelection","WedModel","WedEditAction","BoxCommentModel","BoxCommentWedlet","EWedletEditMode","EWedletEditModeLabel","WEDLET","WedletActionCtx","isWedletSingleElt","REG","DOM","ENodeType","JSX","DOMSH","XA","InitSlaveRep","ResetStatesMsg","isXmlMsg","XmlBatch","XmlDeleteMsg","XmlInsertMsg","XmlStrMsg","SkSearchCommentAnnot","insertAnnot","removeAnnot","ACTION","HistoEditPoint","BoxScComment","HTMLElement","[object Object]","tpl","wedlet","this","installSkins","attachShadow","SHADOWDOM_INIT","localName","setAttribute","shadowRoot","addEventListener","ev","sel","findDocumentOrShadowRoot","target","getSelection","type","rg","getRangeAt","clipboardData","setData","cloneContents","textContent","stopImmediatePropagation","preventDefault","cmtHouse","drawThread","then","cmtH","cmtHouseDoor","openPublicDoor","_threadSrcElt","document","documentElement","addMsgListener","msg","getMeta","_applyXmlMsg","annot","searchAnnots","Map","eltComment","subAnnot","anchorNode","parentElement","annots","get","push","set","_redrawCmAnnots","element","length","idx","indexOf","splice","threadClosed","getAttribute","xa","append","fromNode","receiveMsg","init","setMeta","text","startEdition","_cmtsCtn","appendChild","createElement","class","offs","children","cmt","overwriteText","txt","by","wedAnchor","root","createElementNS","Date","now","toString","createTextNode","wedMgr","docHolder","newBatch","insertJml","","=","escapeComment","ser","doBatch","deleteVirtualWedlet","_a","config","histoEditPointsMgr","addEditEntry","house","histoEditHolder","cmNode","author","creationTime","jml","computeOffset","lastElementChild","_b","cmtSrc","nextElementSibling","previousElementSibling","deleteSequence","updtBy","create","updatedBy","updateTime","m","add","threadHtml","last","remove","threadBar","id","isVirtual","cm","initText","_closedCheckbox","onchange","onToggleState","drawState","style","title","onclick","addComment","asSvg","viewBox","d","firstElementChild","_drawCm","setEditMode","editMode","mode","sr","readOnly","write","findNext","n","HTMLInputElement","HTMLButtonElement","disabled","setAttr","stClosed","classList","toggle","checked","insertBefore","user","date","dateFormatter","format","Number","parseInt","meta","account","updt","cmHtml","ondblclick","editComment","delComment","_getContent","xmlSrc","htmlElt","querySelector","content","res","an","start","offsetStart","end","len","substring","act","delCm","next","isConnected","addCm","findDomLast","nextHtml","nextCmtSrc","childNodes","forEach","e","msgs","find","Error","val","chars","isEditing","contains","editing","_lstn_beforeHide","close","showNotifWarning","focus","input","_lstn_builsLastDatas","lastDatas","textarea","value","closest","scCmtsPd","undefined","dt","listeners","on","beforeHideAsync","removeListener","selMode","actionsLists","Promise","resolve","Intl","DateTimeFormat","year","month","day","hour","minute","second","findHost","toggleCloseState","addCmt","execDelCm","boxCmts","overwrite","isWritableWedlet","startHeight","Math","max","offsetHeight","valid","txtArea","cancel","setEditing","secCtx","reg","env","securityCtx","execUpdtCm","execAddCm","parent","wedParent","onChildWedletsChange","label","ui-context","txtarea","onkeydown","async","isAccelPressed","key","isAnyControlPressed","confirm","onkeypress","oncontextmenu","oncopy","oncut","onpaste","registerSkin","window","customElements","define","initLastDatasScComments","comments","cmtPending","cmtWedlet","findWedlet","rootWedlet","forceFetch","showLostComment","boxCmt","getCmt","editCmt","insAct","InsertScComment","up","lastAncestorIfNone","ctx","isAvailable","execute","console","log","_label","_icon","_group","xaPart","super","isVisible","childrenElt","findChildrenEltForComment","model","childrenEltsNaturalOrder","slot","wedSlotName","wedModel","findModelForVirtual","comment","scCommentSelector","createWedlet","elementHost","insertElement","bindAsVirtual","node","params","SELECTOR_PERFECT_MATCH","SELECTOR_REJECT"],"mappings":"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","sourcesContent":["import {POPUP} from \"back/commons/widgets/popups\";\nimport {AgEltBoxSelection, IEltBoxSelection, JLDScCommentPending, JLDScComments} from \"back/edit/wed/features/boxSel\";\nimport {IWedletModel, IWedSelector, WedModel} from \"back/edit/wed/wedCore\";\nimport {WedEditAction, WedMgr} from \"back/edit/wed/wedEditor\";\nimport {BoxCommentModel, BoxCommentWedlet, BoxModel} from \"back/edit/wed/wedlets/box/box\";\nimport {EWedletEditMode, EWedletEditModeLabel, IElementWedlet, IWedlet, IWedletActionCtx, WEDLET, WedletActionCtx} from \"back/edit/wed/wedlets/wedlet\";\nimport {isWedletSingleElt, IWedletSingleElt} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {REG} from \"lib/commons/registry\";\nimport {ISecurityCtxPointer} from \"lib/commons/security\";\nimport {DOM, ENodeType, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IJmlNode, IJmlSubSet} from \"lib/commons/xml/jml\";\nimport {XA} from \"lib/commons/xml/xAddr\";\nimport {InitSlaveRep, IPublicDoor, Msg, ResetStatesMsg} from \"lib/edit/ot/urban\";\nimport {isXmlMsg, IXmlMsg, XmlBatch, XmlDeleteMsg, XmlInsertMsg, XmlStrMsg} from \"lib/edit/ot/xmlHouse\";\nimport {CommentHouse} from \"lib/edit/ot/xmlTypedHouse\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {ISkAnnot, ISkAnnotDrawer} from \"lib/edit/schema/schemaAnnots\";\nimport {SkSearchCommentAnnot, SkSearchTextAnnot} from \"lib/edit/schema/schemaSearch\";\nimport {insertAnnot, removeAnnot} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {ACTION} from \"lib/commons/actions\";\nimport {HistoEditPoint} from \"lib/edit/histoEditPoints\";\n\n/**\n * ScComment (schéma XML dédié dans un commentaire).\n */\nexport class BoxScComment extends HTMLElement implements IElementWedlet, IEltBoxSelection, ISkAnnotDrawer {\n\n\twedlet: BoxCommentWedlet;\n\n\tcmtHouse: CommentHouse | null;\n\tcmtHouseDoor: IPublicDoor;\n\n\tprotected _threadSrcElt: Element;\n\n\t_cmtsCtn: HTMLElement;\n\tprotected _closedCheckbox: HTMLInputElement;\n\n\t/** Map des annots par élément source <comment>. */\n\tprotected searchAnnots: Map<Element, SkSearchCommentAnnot[]>;\n\n\tconfigWedletElt(tpl: Element, wedlet: BoxCommentWedlet) {\n\t\tthis.wedlet = wedlet;\n\t\tWEDLET.installSkins(tpl, this.attachShadow(DOMSH.SHADOWDOM_INIT), wedlet, this.localName);\n\t\tthis.setAttribute(\"sc-comments\", \"no\");\n\t\tthis.shadowRoot.addEventListener(\"copy\", (ev: ClipboardEvent) => {\n\t\t\tconst sel = DOMSH.findDocumentOrShadowRoot(ev.target as HTMLElement).getSelection();\n\t\t\tif (sel.type === \"Range\") {\n\t\t\t\tconst rg = sel.getRangeAt(0);\n\t\t\t\tev.clipboardData.setData(\"text/plain\", rg.cloneContents().textContent);\n\t\t\t}\n\t\t\tev.stopImmediatePropagation();\n\t\t\tev.preventDefault();\n\t\t});\n\t\tif (wedlet.cmtHouse == null) {\n\t\t\t//création d'un nouveau comment.\n\t\t\tthis.drawThread();\n\t\t} else {\n\t\t\twedlet.cmtHouse.then((cmtH) => {\n\t\t\t\tthis.cmtHouse = cmtH;\n\t\t\t\tthis.cmtHouseDoor = cmtH.openPublicDoor();\n\t\t\t\tthis._threadSrcElt = this.cmtHouse.document.documentElement;\n\t\t\t\tthis.drawThread();\n\t\t\t\tthis.cmtHouseDoor.addMsgListener((msg: Msg) => {\n\t\t\t\t\t//console.log(\"cmtMsg:::\", msg);\n\t\t\t\t\tif (msg.getMeta('$cmAct')) {\n\t\t\t\t\t\t//Msg comment standard\n\t\t\t\t\t\tthis._applyXmlMsg(msg);\n\t\t\t\t\t} else if (isXmlMsg(msg) || msg.type === ResetStatesMsg.type || msg.type === InitSlaveRep.type) {\n\t\t\t\t\t\t//Autre msg, On redessine tout.\n\t\t\t\t\t\tthis.drawThread();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tdrawAnnot(annot: ISkAnnot): boolean {\n\t\tif (annot instanceof SkSearchCommentAnnot) {\n\t\t\tif (!this.searchAnnots) this.searchAnnots = new Map();\n\t\t\tconst eltComment = annot.subAnnot.anchorNode.parentElement;\n\t\t\tif (!eltComment) return false;\n\t\t\tlet annots = this.searchAnnots.get(eltComment);\n\t\t\tif (annots) annots.push(annot);\n\t\t\telse {\n\t\t\t\tannots = [annot];\n\t\t\t\tthis.searchAnnots.set(eltComment, annots);\n\t\t\t}\n\t\t\tthis._redrawCmAnnots(eltComment, annots);\n\t\t\treturn true;\n\t\t} else if (this === this.wedlet.element) {\n\t\t\t//diffad/rem\n\t\t\tinsertAnnot(this, annot);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\teraseAnnot(annot: ISkAnnot): boolean {\n\t\tif (annot instanceof SkSearchCommentAnnot && this.searchAnnots) {\n\t\t\tconst eltComment = annot.subAnnot.anchorNode.parentElement;\n\t\t\tif (!eltComment) return false;\n\t\t\tconst annots = this.searchAnnots.get(eltComment);\n\t\t\tif (annots) {\n\t\t\t\tif (annots.length === 1 && annots[0] === annot) {\n\t\t\t\t\tthis.searchAnnots.set(eltComment, null);\n\t\t\t\t\tthis._redrawCmAnnots(eltComment, null);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tconst idx = annots.indexOf(annot);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tannots.splice(idx, 1);\n\t\t\t\t\t\tthis._redrawCmAnnots(eltComment, annots);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this === this.wedlet.element) {\n\t\t\t//diff add/rem\n\t\t\treturn removeAnnot(this, annot);\n\t\t}\n\t\treturn false;\n\t}\n\n\tget threadClosed(): boolean {return this._threadSrcElt && this._threadSrcElt.getAttribute(\"threadClosed\") === 'true'}\n\n\ttoggleCloseState() {\n\t\tconst xa = XA.append(XA.fromNode(this._threadSrcElt), \"threadClosed\");\n\t\tif (this.threadClosed) {\n\t\t\tthis.cmtHouseDoor.receiveMsg(new XmlStrMsg().init(xa, null).setMeta('$cmAct', 'state'));\n\t\t} else {\n\t\t\tthis.cmtHouseDoor.receiveMsg(new XmlStrMsg().init(xa, \"true\").setMeta('$cmAct', 'state'));\n\t\t}\n\t}\n\n\taddCmt(text?: string) {\n\t\tstartEdition(this, this._cmtsCtn.appendChild(<div class=\"cmt\"/>), text);\n\t}\n\n\tgetCmt(offs: number): HTMLElement & IScCmtXmlSrc {\n\t\treturn this._cmtsCtn.children[offs] as HTMLElement & IScCmtXmlSrc;\n\t}\n\n\teditCmt(cmt: HTMLElement & IScCmtXmlSrc, overwriteText?: string) {\n\t\tstartEdition(this, cmt, overwriteText);\n\t}\n\n\texecAddCm(txt: string, by?: string) {\n\t\tif (!this._threadSrcElt) {\n\t\t\t//On est en virtual, création du 1er comment\n\t\t\tconst xa = this.wedlet.wedAnchor;\n\t\t\tconst root = document.createElementNS(\"scenari.eu:comment:1.0\", \"comment\");\n\t\t\troot.setAttribute(\"type\", \"thread\");\n\t\t\tconst cmt = root.appendChild(document.createElementNS(\"scenari.eu:comment:1.0\", \"comment\"));\n\t\t\tif (by) cmt.setAttribute(\"author\", by);\n\t\t\tcmt.setAttribute(\"creationTime\", Date.now().toString(10));\n\t\t\tcmt.appendChild(document.createTextNode(txt || \"\"));\n\t\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\t\twedMgr.docHolder.newBatch().insertJml(xa, [{'': '!', '=': DOM.escapeComment(DOM.ser(root))}]).doBatch();\n\t\t\tthis.wedlet.deleteVirtualWedlet();\n\t\t\twedMgr.config.histoEditPointsMgr?.addEditEntry(new HistoEditPoint(xa, wedMgr.docHolder.house), null, wedMgr.config.histoEditHolder);\n\t\t} else {\n\t\t\tconst cmNode = {'': 'comment'} as any;\n\t\t\tif (by) cmNode.author = by;\n\t\t\tcmNode.creationTime = Date.now().toString(10);\n\t\t\tconst jml = [cmNode, [txt || \"\"]];\n\t\t\tconst xa = XA.append(XA.fromNode(this._threadSrcElt), DOM.computeOffset(this._threadSrcElt.lastElementChild, -1) + 1);\n\t\t\tthis.cmtHouseDoor.receiveMsg(new XmlInsertMsg().init(xa, jml).setMeta('$cmAct', 'cm'));\n\t\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\t\twedMgr.config.histoEditPointsMgr?.addEditEntry(new HistoEditPoint(this.wedlet.wedAnchor, wedMgr.docHolder.house), null, wedMgr.config.histoEditHolder);\n\t\t}\n\t}\n\n\texecDelCm(cmtSrc: Element) {\n\t\tif (!cmtSrc.nextElementSibling && !cmtSrc.previousElementSibling) {\n\t\t\t//C'est le 1er et dernier, on supprime tout le commentaire\n\t\t\tthis.wedlet.wedMgr.docHolder.newBatch().deleteSequence(this.wedlet.wedAnchor, 1).doBatch();\n\t\t} else {\n\t\t\t//On suppr ce comment dans le thread.\n\t\t\tthis.cmtHouseDoor.receiveMsg(new XmlDeleteMsg().init(XA.fromNode(cmtSrc), 1).setMeta('$cmAct', 'cm'));\n\t\t}\n\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\twedMgr.config.histoEditPointsMgr?.addEditEntry(new HistoEditPoint(this.wedlet.wedAnchor, wedMgr.docHolder.house), null, wedMgr.config.histoEditHolder);\n\t}\n\n\texecUpdtCm(cmtSrc: Element, txt: string, updtBy?: string) {\n\t\tconst by = cmtSrc.getAttribute(\"author\");\n\t\tconst create = cmtSrc.getAttribute(\"creationTime\");\n\t\tconst xa = XA.fromNode(cmtSrc);\n\t\tconst cmNode = {'': 'comment'} as any;\n\t\tif (by) cmNode.author = by;\n\t\tif (create) cmNode.creationTime = create;\n\t\tif (updtBy) cmNode.updatedBy = updtBy;\n\t\tcmNode.updateTime = Date.now().toString(10);\n\t\tconst jml = [cmNode, [txt || \"\"]];\n\t\tconst m = new XmlBatch()\n\t\t\t.add(new XmlDeleteMsg().init(xa, 1))\n\t\t\t.add(new XmlInsertMsg().init(xa, jml))\n\t\t\t.setMeta('$cmAct', 'cm');\n\t\tthis.cmtHouseDoor.receiveMsg(m);\n\t}\n\n\tprotected drawThread() {\n\t\tconst threadHtml = this.shadowRoot;\n\t\tlet last: Element;\n\t\twhile ((last = threadHtml.lastElementChild) && last.localName !== 'style') last.remove();\n\n\t\tconst threadBar = threadHtml.appendChild(<div id=\"cmtsBar\"/>);\n\t\tthis._cmtsCtn = threadHtml.appendChild(<div id=\"cmts\"/>);\n\n\t\tif (this.wedlet.isVirtual()) {\n\t\t\t//thread de comment en création\n\t\t\tconst cm = this._cmtsCtn.appendChild(<div class=\"cmt\"/>);\n\t\t\tstartEdition(this, cm, this.wedlet.initText);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._closedCheckbox = threadBar.appendChild(<input id=\"close\" type=\"checkbox\" onchange={onToggleState}/>) as HTMLInputElement;\n\t\tthis.drawState();\n\n\t\tthreadBar.appendChild(<span style=\"flex:1\"/>);\n\t\tthreadBar.appendChild(<button id=\"addCm\" title=\"Répondre\" onclick={addComment}>{JSX.asSvg(() =>\n\t\t\t<svg viewBox=\"0 0 448 512\">\n\t\t\t\t<path\n\t\t\t\t\td=\"m 393.22034,234.84746 v 42.30508 c 0,8.72543 -7.13898,15.86441 -15.86441,15.86441 H 261.01695 v 116.33898 c 0,8.72543 -7.13898,15.86441 -15.86441,15.86441 h -42.30508 c -8.72543,0 -15.86441,-7.13898 -15.86441,-15.86441 V 293.01695 H 70.644068 c -8.725424,0 -15.864407,-7.13898 -15.864407,-15.86441 v -42.30508 c 0,-8.72543 7.138983,-15.86441 15.864407,-15.86441 H 186.98305 V 102.64407 c 0,-8.725426 7.13898,-15.864409 15.86441,-15.864409 h 42.30508 c 8.72543,0 15.86441,7.138983 15.86441,15.864409 v 116.33898 h 116.33898 c 8.72543,0 15.86441,7.13898 15.86441,15.86441 z\"/>\n\t\t\t</svg>)\n\t\t}</button>);\n\n\t\tfor (let cm = this._threadSrcElt.firstElementChild; cm; cm = cm.nextElementSibling) {\n\t\t\tthis._drawCm(cm);\n\t\t}\n\n\t\tthis.setEditMode(this.wedlet.editMode);\n\t}\n\n\tsetEditMode(mode: EWedletEditMode): void {\n\t\tconst sr = this.shadowRoot;\n\t\tconst readOnly = mode !== EWedletEditMode.write;\n\t\tDOM.findNext(sr, sr, (n: Node): n is Node => {\n\t\t\tif (n instanceof HTMLInputElement || n instanceof HTMLButtonElement) n.disabled = readOnly;\n\t\t\treturn false;\n\t\t});\n\t\tDOM.setAttr(this, \"edit-mode\", EWedletEditModeLabel[mode]);\n\t}\n\n\tprotected drawState() {\n\t\tconst stClosed = this.threadClosed;\n\t\tthis._closedCheckbox.title = stClosed ? \"Réactiver ce commentaire\" : \"Clore ce commentaire\";\n\t\tthis.classList.toggle(\"closed\", stClosed);\n\t\tif (this._closedCheckbox.checked !== stClosed) this._closedCheckbox.checked = stClosed;\n\t}\n\n\t_drawCm(cm: Element, insertBefore?: Node) {\n\t\tif (cm.localName !== 'comment') return;\n\t\tlet user = cm.getAttribute(\"author\");\n\t\tlet date = dateFormatter.format(new Date(Number.parseInt(cm.getAttribute(\"creationTime\"))));\n\t\tlet meta: HTMLElement;\n\t\tif (user) {\n\t\t\tmeta = <span class=\"meta\">{`Créé le ${date} par `}\n\t\t\t\t<c-userref account={user}/></span>\n\t\t} else {\n\t\t\tmeta = <span class=\"meta\">{`Créé le ${date}`}</span>\n\t\t}\n\t\tconst updt = cm.getAttribute(\"updateTime\");\n\t\tif (updt) {\n\t\t\tdate = dateFormatter.format(new Date(Number.parseInt(updt)));\n\t\t\tuser = cm.getAttribute(\"updatedBy\");\n\t\t\tif (user) {\n\t\t\t\tmeta.append(\n\t\t\t\t\t` (modifié le ${date} par `,\n\t\t\t\t\t<c-userref account={user}/>,\n\t\t\t\t\t`)`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmeta.append(` (modifié le ${date})`);\n\t\t\t}\n\t\t}\n\t\tconst cmHtml = this._cmtsCtn.insertBefore(<div class=\"cmt\" ondblclick={editComment}>\n\t\t\t<div class=\"cmtHead\">\n\t\t\t\t{meta}\n\t\t\t\t<button class=\"editCm\" onclick={editComment} title=\"Éditer ce commentaire\">\n\t\t\t\t\t{JSX.asSvg(() => <svg viewBox=\"0 0 512 512\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"/>\n\t\t\t\t\t</svg>)}\n\t\t\t\t</button>\n\t\t\t\t<button class=\"delCm\" onclick={delComment} title=\"Supprimer ce commentaire\">\n\t\t\t\t\t{JSX.asSvg(() => <svg viewBox=\"0 0 448 512\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"/>\n\t\t\t\t\t</svg>)}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"content\">{this._getContent(cm.textContent, this.searchAnnots?.get(cm))}</div>\n\t\t</div>, insertBefore) as HTMLElement & IScCmtXmlSrc;\n\t\tcmHtml.xmlSrc = cm;\n\t}\n\n\tprotected _redrawCmAnnots(cm: Element, annots: SkSearchCommentAnnot[] | null) {\n\t\tif (this._cmtsCtn) for (const cmHtml of this._cmtsCtn.children) {\n\t\t\tif ((cmHtml as IScCmtXmlSrc).xmlSrc === cm) {\n\t\t\t\tconst htmlElt = cmHtml.querySelector(\".content\");\n\t\t\t\tif (htmlElt) {\n\t\t\t\t\thtmlElt.textContent = null;\n\t\t\t\t\thtmlElt.append(...this._getContent(cm.textContent, annots));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getContent(content: string, annots: SkSearchCommentAnnot[] | null): string | Array<string | Node> {\n\t\tif (!annots) return content;\n\t\tconst res: Array<string | Node> = [];\n\t\tlet idx = 0;\n\t\tfor (const an of annots) {\n\t\t\tconst start = (an.subAnnot as SkSearchTextAnnot).offsetStart;\n\t\t\tconst end = start + an.subAnnot.len;\n\t\t\tif (idx < start) res.push(content.substring(idx, start));\n\t\t\tres.push(<mark>{content.substring(start, end)}</mark>);\n\t\t\tidx = end;\n\t\t}\n\t\tif (idx < content.length) res.push(content.substring(idx));\n\t\treturn res;\n\t}\n\n\t/** Redraw suite à chgt issu de la house. */\n\tprotected _applyXmlMsg(msg: Msg) {\n\t\t//On ne gère que les évènements : chgt état closed, supp d'un comment (entier), add d'un comment (entier).\n\t\tconst act = msg.getMeta('$cmAct');\n\t\tif (act === 'state') {\n\t\t\t//Etat close du thread\n\t\t\tthis.drawState();\n\t\t} else if (act === 'cm') {\n\t\t\tconst delCm = (m: XmlDeleteMsg) => {\n\t\t\t\tfor (let cm = this._cmtsCtn.firstElementChild as HTMLElement & IScCmtXmlSrc; cm;) {\n\t\t\t\t\tconst next = cm.nextElementSibling as HTMLElement & IScCmtXmlSrc;\n\t\t\t\t\tif (!cm.xmlSrc.isConnected) cm.remove();\n\t\t\t\t\tcm = next;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst addCm = (m: XmlInsertMsg) => {\n\t\t\t\tconst cm = XA.findDomLast(m.xa, this.cmtHouse.root) as Element;\n\t\t\t\tif (cm) {\n\t\t\t\t\tlet nextHtml: Node;\n\t\t\t\t\tconst nextCmtSrc = cm.nextElementSibling;\n\t\t\t\t\tif (nextCmtSrc) this._cmtsCtn.childNodes.forEach((e: Node) => {\n\t\t\t\t\t\tif ((e as IScCmtXmlSrc).xmlSrc === nextCmtSrc) nextHtml = e;\n\t\t\t\t\t});\n\t\t\t\t\tthis._drawCm(cm, nextHtml);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (msg instanceof XmlDeleteMsg) {\n\t\t\t\t//Suppr d'un comment\n\t\t\t\tdelCm(msg);\n\t\t\t} else if (msg instanceof XmlInsertMsg) {\n\t\t\t\t//Ajout d'un comment\n\t\t\t\taddCm(msg);\n\t\t\t} else if (msg instanceof XmlBatch) {\n\t\t\t\t//Update d'un comment\n\t\t\t\tdelCm(msg.msgs.find((m) => m instanceof XmlDeleteMsg) as XmlDeleteMsg);\n\t\t\t\taddCm(msg.msgs.find((m) => m instanceof XmlInsertMsg) as XmlInsertMsg);\n\t\t\t}\n\t\t} else throw Error(\"Unknown ScComment act msg: \" + act);\n\t}\n\n\trefreshBindValue(val: IJmlNode | string, children?: IJmlSubSet): void {\n\t}\n\n\t/** Appelé en mode remoteOT : la house holder et la commentHouse sont modifiés en // par leur master respectif, la couche slave ne resynch pas. */\n\treplaceChars(chars: string, msg: IXmlMsg) {}\n\n\tget isEditing(): boolean {return this.classList.contains(\"editing\")}\n\n\tsetEditing(editing: boolean) {\n\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\tif (editing) {\n\t\t\tthis.classList.add(\"editing\");\n\t\t\tif (!this._lstn_beforeHide) this._lstn_beforeHide = (wedMgr: WedMgr, close: boolean): undefined | false => {\n\t\t\t\tif (close) {\n\t\t\t\t\tPOPUP.showNotifWarning(\"Veuillez valider ou abandonner votre commentaire.\", this);\n\t\t\t\t\tthis.focus();\n\t\t\t\t\tconst input = this.shadowRoot.querySelector('textarea');\n\t\t\t\t\tif (input) input.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!this._lstn_builsLastDatas) this._lstn_builsLastDatas = (wedMgr: WedMgr, lastDatas: JLDScComments) => {\n\t\t\t\tconst textarea = this.shadowRoot.querySelector('textarea');\n\t\t\t\tif (!textarea || !textarea.value) return;\n\t\t\t\tconst xmlSrc = (textarea.closest('.cmt') as IScCmtXmlSrc).xmlSrc;\n\t\t\t\tif (xmlSrc && xmlSrc.textContent === textarea.value) return;\n\t\t\t\tif (!lastDatas.scCmtsPd) lastDatas.scCmtsPd = [];\n\t\t\t\tlastDatas.scCmtsPd.push({\n\t\t\t\t\txa: this.wedlet.wedAnchor,\n\t\t\t\t\ttxt: textarea.value,\n\t\t\t\t\toffs: xmlSrc ? DOM.computeOffset(xmlSrc) : this.wedlet.isVirtual() ? undefined : -1,\n\t\t\t\t\tdt: xmlSrc ? xmlSrc.getAttribute(\"updateTime\") || xmlSrc.getAttribute(\"creationTime\") : undefined\n\t\t\t\t});\n\t\t\t};\n\t\t\twedMgr.listeners.on(\"beforeHide\", this._lstn_beforeHide);\n\t\t\twedMgr.listeners.on(\"beforeHideAsync\", beforeHideAsync);\n\t\t\twedMgr.listeners.on(\"buildLastDatas\", this._lstn_builsLastDatas);\n\t\t} else {\n\t\t\tthis.classList.remove(\"editing\");\n\t\t\twedMgr.listeners.removeListener(\"beforeHide\", this._lstn_beforeHide);\n\t\t\twedMgr.listeners.removeListener(\"beforeHideAsync\", beforeHideAsync);\n\t\t\twedMgr.listeners.removeListener(\"buildLastDatas\", this._lstn_builsLastDatas);\n\t\t}\n\t}\n\n\t_lstn_beforeHide: (wedMgr: WedMgr, close: boolean) => undefined | false;\n\t_lstn_builsLastDatas: (wedMgr: WedMgr, lastDatas: JLastDatas) => void;\n}\n\nAgEltBoxSelection(BoxScComment, {selMode: \"box\", actionsLists: ['actions:wed:box-sccomment', 'actions:wed:box']});\n\ntype IScCmtXmlSrc = { xmlSrc?: Element, txtArea?: HTMLTextAreaElement }\n\nfunction beforeHideAsync(wedMgr: WedMgr, close: boolean): Promise<undefined | false> {return Promise.resolve(close ? false : undefined) as Promise<undefined | false>}\n\nconst dateFormatter = new Intl.DateTimeFormat('fr', {\n\tyear: 'numeric', month: 'numeric', day: 'numeric',\n\thour: 'numeric', minute: 'numeric', second: 'numeric'\n});\n\nfunction onToggleState(this: HTMLInputElement, ev: Event) {\n\t(DOMSH.findHost(this) as BoxScComment).toggleCloseState();\n}\n\nfunction addComment(this: HTMLElement, ev: Event) {\n\t(DOMSH.findHost(this) as BoxScComment).addCmt();\n}\n\nfunction delComment(this: HTMLElement, ev: Event) {\n\t(DOMSH.findHost(this) as BoxScComment).execDelCm((this.closest('.cmt') as IScCmtXmlSrc).xmlSrc);\n}\n\nfunction editComment(this: HTMLElement, ev: Event) {\n\tconst cmt = this.closest('.cmt') as HTMLElement & IScCmtXmlSrc;\n\tstartEdition(DOMSH.findHost(this) as BoxScComment, cmt);\n}\n\nfunction startEdition(boxCmts: BoxScComment, cmt: HTMLElement & IScCmtXmlSrc, overwrite?: string): void {\n\tif (!boxCmts || boxCmts.isEditing || boxCmts.threadClosed || !WEDLET.isWritableWedlet(boxCmts.wedlet)) return;\n\n\tconst startHeight = cmt.xmlSrc ? Math.max(cmt.querySelector<HTMLElement>(':scope>.content').offsetHeight, 50) : 50;\n\n\tfunction valid(this: void, ev: Event) {\n\t\tconst val = cmt.txtArea.value;\n\t\tif (val === (cmt.xmlSrc ? cmt.xmlSrc.textContent : \"\")) {\n\t\t\tcancel(ev);\n\t\t\treturn;\n\t\t}\n\t\tboxCmts.setEditing(false);\n\t\tconst secCtx = (boxCmts.wedlet.wedMgr.reg.env as ISecurityCtxPointer).securityCtx;\n\t\tconst user = secCtx ? secCtx.account : null;\n\t\tif (cmt.xmlSrc) {\n\t\t\tboxCmts.execUpdtCm(cmt.xmlSrc, val, user);\n\t\t} else {\n\t\t\tcmt.remove();\n\t\t\tboxCmts.execAddCm(val, user);\n\t\t}\n\t\tboxCmts.focus();\n\t}\n\n\tfunction cancel(this: void, ev: Event) {\n\t\tboxCmts.setEditing(false);\n\t\tif (cmt.xmlSrc) {\n\t\t\t//abandon de l'update, on redessine ce comment\n\t\t\tboxCmts._drawCm(cmt.xmlSrc, cmt);\n\t\t\tboxCmts.setEditMode(boxCmts.wedlet.editMode);\n\t\t\tcmt.remove();\n\t\t} else if (boxCmts.wedlet.isVirtual()) {\n\t\t\t//abandon création d'un thread de comment\n\t\t\tconst parent = boxCmts.wedlet.wedParent;\n\t\t\tboxCmts.wedlet.deleteVirtualWedlet();\n\t\t\tif (isWedletSingleElt(parent) && parent.element.onChildWedletsChange) parent.element.onChildWedletsChange();\n\t\t} else {\n\t\t\t//abandon création d'un comment dans un thread\n\t\t\tcmt.remove();\n\t\t}\n\t\tboxCmts.focus();\n\t}\n\n\tboxCmts.setEditing(true);\n\tcmt.classList.add(\"editing\");\n\tcmt.textContent = null;\n\tcmt.txtArea = <textarea style={startHeight ? `height:${startHeight}px` : 'height:3em'}>{cmt.xmlSrc ? cmt.xmlSrc.textContent : \"\"}</textarea> as HTMLTextAreaElement;\n\tcmt.appendChild(<div class=\"cmEdit\">\n\t\t{cmt.txtArea}\n\t\t<div class=\"editBar\">\n\t\t\t<c-button class=\"edit valid\" onclick={valid} label=\"Valider\" ui-context=\"dialog\"/>\n\t\t\t<c-button class=\"edit cancel\" onclick={cancel} label=\"Annuler\" ui-context=\"dialog\"/>\n\t\t</div>\n\t</div>);\n\tconst txtarea = cmt.querySelector('textarea');\n\tcmt.onkeydown = async (ev: KeyboardEvent) => {\n\t\tev.stopImmediatePropagation(); //on bloque les comportements du wed au dessus.\n\t\tif (ACTION.isAccelPressed(ev) && ev.key === \"s\") {\n\t\t\tev.preventDefault(); //bloque l'enreg par le navigateur de la page web\n\t\t\tvalid(ev);\n\t\t} else if (!ACTION.isAnyControlPressed(ev) && ev.key === \"Escape\") {\n\t\t\tif (cmt.txtArea.value === (cmt.xmlSrc ? cmt.xmlSrc.textContent : \"\") || await POPUP.confirm(\"Confirmez-vous l'abandon de vos modifications de ce commentaire ?\", cmt)) {\n\t\t\t\tcancel(ev);\n\t\t\t}\n\t\t}\n\t};\n\t//On reste sur les actions standard dans le textarea.\n\ttxtarea.onkeypress = txtarea.oncontextmenu = txtarea.oncopy = txtarea.oncut = txtarea.onpaste = (ev: Event) => ev.stopImmediatePropagation();\n\n\t//Focus en async dans le cas de l'insertion d'un comment, car pas encore dans l'arbre\n\tPromise.resolve().then(() => {\n\t\tboxCmts.focus(); //on focus d'abord le boxWidget (gestion du boxSel), puis on y entre\n\t\ttxtarea.focus();\n\t\tif (overwrite) txtarea.value = overwrite; //FIXME comment permettre ctrl+Z et retrouver la val originale.\n\t});\n}\n\n\nREG.reg.registerSkin('box-sccomment', 1, /* language=CSS */ `\n\t:host {\n\t\tcolor: var(--edit-cmt-color);\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tmargin: .5em;\n\t\tbox-shadow: .1em .1em .5em .1em var(--edit-cmt-shadow-color);\n\t\tclear: both;\n\t\tfont-size: 1rem;\n\t}\n\n\t::selection {\n\t\tcolor: currentColor;\n\t\tbackground: var(--edit-seltext-bgcolor);\n\t}\n\n\t:host(:focus) {\n\t\toutline: var(--edit-box-focus);\n\t}\n\n\t:host(.closed) {\n\t\ttext-decoration: line-through;\n\t}\n\n\t:host(.closed) button,\n\t:host(.editing) button:not(.edit),\n\t:host(.editing) input {\n\t\tdisplay: none;\n\t}\n\n\t:host([edit-mode=rs]) {\n\t\tdisplay: none;\n\t}\n\n  :focus-visible {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t#cmtsBar {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tfont-size: var(--label-size);\n\t\tbackground: linear-gradient(var(--edit-cmt-bgcolor), var(--edit-cmt-bgcolor)), var(--edit-cmt-bgcolor);/*double l'opacité == .cmtHead*/\n\t\tborder-inline-end: 1px solid var(--edit-cmt-border-color);\n\t\talign-content: center;\n\t\twidth: 2em;\n\t}\n\n\t#cmts {\n\t\tflex: 1;\n\t\tbackground-color: var(--edit-cmt-bgcolor);\n\t}\n\n\t.cmt:not(:first-child) {\n\t\tborder-top: 1px solid var(--edit-cmt-border-color);\n\t}\n\n\t.cmtHead {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\talign-items: center;\n\t\tbackground-color: var(--edit-cmt-bgcolor);\n\t\tfont-size: var(--label-size);\n\t\tfont-style: italic;\n\t\tfill: var(--edit-cmt-color);\n\t  padding: .2em;\n\t}\n\n\t.content {\n\t\twhite-space: pre-wrap;\n\t\tpadding: .2em;\n\t  min-height: 1em;\n\t\tmin-height: 1 lh;\n\t\tuser-select: text;\n\t}\n\n\t.meta {\n\t\tflex: 1;\n\t}\n\n\tc-userref {\n\t\tdisplay: inline-flex;\n\t}\n\n\t.editBar {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tjustify-content: flex-end;\n\t}\n\n\tbutton {\n\t\t-webkit-appearance: none;\n\t\tborder: 1px solid var(--edit-cmt-border-color);\n\t\tborder-radius: .2em;\n\t\tpadding: .2em;\n\t\tbackground-color: var(--edit-cmt-bgcolor);\n\t\twidth: 1.5em;\n\t\theight: 1.5em;\n\t\tfont-size: var(--label-size);\n\t\tmargin: 2px;\n\t\tcursor: pointer;\n\t\tfill: var(--edit-cmt-color);\n\t\topacity: .8;\n\t}\n\n\tbutton:disabled {\n\t\topacity: .4;\n\t\tcursor: auto;\n\t}\n\n\tbutton:hover:not(:disabled) {\n\t\tfilter: brightness(1.2);\n\t}\n\n\t.cm.editing {\n\t\tposition: relative;\n\t}\n\n\ttextarea {\n\t\twidth: 100%;\n\t\tresize: vertical;\n\t\tbox-sizing: border-box;\n\t\tborder: none;\n\t\tborder-bottom: 1px solid var(--edit-cmt-border-color);\n\t\tpadding: 1px;\n\t\tfont-size: 1em;\n\t\tbackground: var(--edit-bgcolor);\n\t\tcolor: var(--edit-color);\n\t}\n\n\t.cmEdit {\n\t\t/*position: absolute;*/\n\t\t/*top: 0;*/\n\t\tbox-shadow: .1em .1em .5em .1em var(--edit-cmt-shadow-color);\n\t\tbackground-color: var(--edit-cmt-bgcolor);\n\t}\n\n\tc-button {\n\t\tmargin: .2em .5em;\n\t}\n\t\n\t#close {\n\t\t\tcursor: pointer;\n  }\n\n  ::selection {\n\t\tcolor: currentColor;\n\t  background-color: var(--edit-seltext-bgcolor);\n  }\n`);\n\nwindow.customElements.define(\"box-sccomment\", BoxScComment);\n\n\nexport function initLastDatasScComments(wedMgr: WedMgr, comments: JLDScCommentPending[]) {\n\tfor (const cmtPending of comments) {\n\t\t//console.log(\"reinject comment::\", cmtPending);\n\t\tif (cmtPending.offs !== undefined) {\n\t\t\tconst cmtWedlet = WEDLET.findWedlet(wedMgr.rootWedlet, cmtPending.xa, {forceFetch: true});\n\t\t\tif (!cmtWedlet || !(cmtWedlet instanceof BoxCommentWedlet) || !(cmtWedlet.element instanceof BoxScComment)) showLostComment(cmtPending);\n\t\t\telse {\n\t\t\t\tconst boxCmt = cmtWedlet.element;\n\t\t\t\tif (cmtPending.offs === -1) {\n\t\t\t\t\tboxCmt.addCmt(cmtPending.txt);\n\t\t\t\t} else {\n\t\t\t\t\tconst cmt = boxCmt.getCmt(cmtPending.offs);\n\t\t\t\t\tif (!cmt) {\n\t\t\t\t\t\tboxCmt.addCmt(cmtPending.txt);\n\t\t\t\t\t\t//TODO ajout warning commentaire édité non retrouvé.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//TODO check cmtPending.dt et warning si dt !=. Quid si un cmt a été supprimé : offset faux.\n\t\t\t\t\t\tboxCmt.editCmt(cmt, cmtPending.txt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst insAct = new InsertScComment();\n\t\t\tconst parent = WEDLET.findWedlet(wedMgr.rootWedlet, XA.up(cmtPending.xa), {forceFetch: true, lastAncestorIfNone: true});\n\t\t\tif (!parent || !isWedletSingleElt(parent)) showLostComment(cmtPending);\n\t\t\telse {\n\t\t\t\tconst ctx = new WedletActionCtx(parent.element);\n\t\t\t\tif (insAct.isAvailable(ctx)) insAct.execute(ctx, null, cmtPending.txt);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction showLostComment(cmt: JLDScCommentPending) {\n\t//FIXME show lost cmt\n\tconsole.log(\"Last comment lost:\", cmt);\n}\n\nexport class InsertScComment extends WedEditAction<IWedletActionCtx> {\n\t_label = \"Ajouter un commentaire\";\n\t_icon = \"/@skin@/edit/wed/comment.svg\";\n\t_group = \"insObj\";\n\n\tisVisible(ctx: IWedletActionCtx): boolean {\n\t\tconst wedlet = ctx.wedlet as IWedletSingleElt;\n\t\tif (wedlet.isVirtual() || !(typeof wedlet.xaPart === \"number\")) return false;\n\t\tif (!wedlet.element || wedlet.element.getAttribute(\"sc-comments\") === 'no') return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync execute(ctx: IWedletActionCtx, ev?: Event, text?: string) {\n\t\tconst wedlet = ctx.wedlet as IWedletSingleElt;\n\t\tconst childrenElt = WEDLET.findChildrenEltForComment((wedlet.model as BoxModel).childrenEltsNaturalOrder);\n\t\tconst slot = childrenElt ? childrenElt.wedSlotName : null;\n\t\tconst model = ctx.wedMgr.wedModel.findModelForVirtual(ENodeType.comment, null, null, null, wedlet, scCommentSelector);\n\t\tconst cmtWedlet = model.createWedlet(wedlet) as BoxCommentWedlet;\n\t\tif (text) cmtWedlet.initText = text;\n\t\tconst parent = wedlet.elementHost;\n\t\tcmtWedlet.insertElement(parent, parent.firstElementChild, slot);\n\t\tawait cmtWedlet.bindAsVirtual();\n\t\tif (text) cmtWedlet.initText = null;\n\t\tif (wedlet.element.onChildWedletsChange) wedlet.element.onChildWedletsChange();\n\t}\n}\n\nconst scCommentSelector: IWedSelector = function (this: void, wedModel: IWedletModel, node: IJmlNode | string, ctx: WedMgr | IWedlet, params: any): number {\n\treturn wedModel instanceof BoxCommentModel ? WedModel.SELECTOR_PERFECT_MATCH : WedModel.SELECTOR_REJECT;\n};"]}