{"version":3,"sources":["/@back@/core/widgets/cidUi.tsx"],"names":["DOM","JSX","REG","DOMSH","BaseElementAsync","POPUP","CID","CidExchangeStep","CidSession","CidUploadStep","ECidSessionState","parseCidStepUrl","ERROR","UiThemeDeskFeat","LANG","CidInteractionByStepsUi","[object Object]","init","sr","this","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","reg","findReg","conf","cidManifestHead","appendChild","createElement","id","cidProcessHead","cidDetails","cidInteractions","isIn","desk","injectTheme","allHosts","cidHostUse","getCidHostsForInput","getCidHostsForOutput","getCidHosts","cidInfo","cidHosts","cidHostIs","Array","from","filterIsOr","cidManifestUrlInput","length","cidSeletHost","lastManifest","fetchManifest","cidOnManifestKnown","ctx","metasIn","foreignMetas","setHidden","textContent","group","i","s","host","onclick","onCidSelectHost","href","label","buildInputManifest","ev","preventDefault","me","findHost","parseInt","getAttribute","manifest","getCidManifestLabel","class","icon","title","prcs","cidProcesses","cidProcessSelector","uiContext","processes","cidProcessIs","PRC_IS_DEFAULT","cidSelectProcess","cidOnProcessKnown","parent","type","oninput","onManifestInput","onchange","onManifestChange","Ã®","disabled","cidUseManifest","cidManifest","noShadow","input","msg","shadowRoot","getElementById","btn","validity","valid","setCustomMsg","getCidManifest","value","e","_cidMnInputWaiter","clearTimeout","setTimeout","prc","onCidSelectProcess","getStr","process","cidRefreshOnSessionChange","cidSession","createCidSession","onStateChange","add","doSession","state","failed","reportError","cidSessionConfig","Object","assign","uiHandler","overrideMetas","authenticating","inStep","uiProcessSel","notStarted","uiAuth","ended","aborted","onInteractionEndHandler","session","step","frame","style","dialog","showDialog","initHeight","initWidth","titleBar","barLabel","closeButton","onNextClose","then","r","onCidFrameMessage","cidAuth","res","initFrame","close","choices","console","trace","values","next","registerSkin","window","customElements","define","CidLcTransitionParamsProvider","config","params","shortDescs","emitter","ct","initialize","skinOver","isArray","cidProcessFilter","cidPassOptionalInteraction","customUpload","async","uploadStep","webUpload","sessionProps","uploadUrl","uploadUrlMethod","Response","status","showError","details","failedReason","metasOut","cidInteractStep","cidProcess","steps","systemWaitDef","getSystemWaitDef","systemWaitUrlObj","systemWaitUrl","cidExchangeStep","promisesMap","shortDesc","doStep","srcUri","scCidSessId","popup","env","uiRoot","resizer","abortUrl","_a","logError","abortUrlObj","URL","searchParams","set","fetch","method","credentials"],"mappings":"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","sourcesContent":["import {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {BaseElementAsync, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {\n\tCID,\n\tCidExchangeStep,\n\tCidHost,\n\tCidManifest,\n\tCidProcess,\n\tCidSession,\n\tCidStep,\n\tCidUploadStep,\n\tCidWebAuthStep,\n\tECidSessionState,\n\tICidManifestPointer,\n\tICidStepResult,\n\tICidUiHandler,\n\tICidWebUploadDef,\n\tOCidSessionConfig,\n\tparseCidStepUrl\n} from \"lib/core/cid\";\nimport {IUniverseEnv} from \"lib/core/universe\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {UiThemeDeskFeat} from \"back/core/plugins/optionsPlg\";\nimport {ILcTransitionParamsProvider} from \"lib/wsp/wspMetaUi\";\nimport {JSrcFields} from \"lib/wsp/src\";\nimport {IWspUiEnv} from \"lib/wsp/wsp\";\nimport {LANG} from \"lib/commons/lang\";\n\n/**\n * IntÃ©raction CID avec sÃ©lection du manifest et du process si besoin\n */\nexport interface CidInteractionByStepsUi extends BaseElementAsync {\n\tinitialize(init?: OCidInteractionByStepsUiInit): this;\n}\n\nexport interface OCidInteractionByStepsUiInit extends OSkinableInit {\n\t/** Restriction des serveurs cid possibles fournit par le serveur via un is. */\n\tcidHostIs?: string[] | string[][]\n\n\t/** Ajoute un champ libre de saisie de l'URL du manifest CID. */\n\tcidManifestUrlInput?: boolean\n\n\t/** Filtre des hosts par rapport au \"use\"\n\t * 'both' par dÃ©faut\n\t **/\n\tcidHostUse?: 'input' | 'output' | 'both'\n\n\t/** Alternative : imposition d'un manifest prÃ©cis (independamment de ceux fournis par le serveur).*/\n\t//manifestUrl?: string A voir si usage...\n\n\t/** Restriction des process possibles via une fonction. */\n\tcidProcessSelector?: (ctx: ICidCtx) => Promise<CidProcess[]>\n\n\t/** Si cidProcessSelector null, restriction des process possibles via un is.\n\t * @see CID.filterIsFirst */\n\tcidProcessIs?: string[] | string[][]\n\n\tcidSessionConfig?: OCidSessionConfig;\n\n\t/** Ignorer les steps d'interaction optionnelles **/\n\tcidPassOptionalInteraction?: boolean;\n\n\t/** AppelÃ© Ã  la fin des intÃ©ractions CID **/\n\tonInteractionEndHandler?: (cidSession: CidSession) => Promise<void>;\n}\n\n\nexport class CidInteractionByStepsUi extends BaseElementAsync implements ICidUiHandler {\n\treg: IReg<IUniverseEnv>;\n\n\tconf: OCidInteractionByStepsUiInit;\n\n\tcidManifestHead: HTMLElement;\n\tcidProcessHead: HTMLElement;\n\tcidDetails: HTMLElement; //select manifest, select process, userWait\n\tcidInteractions: HTMLIFrameElement;\n\n\tcidInfo?: ICidInfos;\n\n\tasync _initialize(init: OCidInteractionByStepsUiInit) {\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.reg = this.findReg(init);\n\n\t\tthis.conf = init;\n\n\t\t// Init UI\n\t\tthis.cidManifestHead = sr.appendChild(<div id=\"cidManifest\"/>);\n\t\tthis.cidProcessHead = sr.appendChild(<div id=\"cidProcess\"/>);\n\t\tthis.cidDetails = sr.appendChild(<div id=\"cidDetails\"/>);\n\t\tthis.cidInteractions = sr.appendChild(<iframe id=\"cidInteractions\"/>) as HTMLIFrameElement;\n\t\tif (UiThemeDeskFeat.isIn(desk)) (this.cidInteractions as any).injectTheme = UiThemeDeskFeat.injectTheme;\n\n\t\t// Init de l'interraction CID\n\t\tlet allHosts: CidHost[];\n\t\tswitch (init.cidHostUse) {\n\t\tcase \"input\":\n\t\t\tallHosts = await CID.getCidHostsForInput(this.reg);\n\t\t\tbreak;\n\t\tcase \"output\":\n\t\t\tallHosts = await CID.getCidHostsForOutput(this.reg);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// both\n\t\t\tallHosts = await CID.getCidHosts(this.reg);\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.cidInfo = {\n\t\t\tcidHosts: init.cidHostIs ? Array.from(CID.filterIsOr<CidHost>(allHosts, init.cidHostIs)) : allHosts\n\t\t};\n\n\t\t//Fixation des donnÃ©es connues\n\t\tif (init.cidManifestUrlInput || this.cidInfo.cidHosts.length !== 1) {\n\t\t\t//Interface de sÃ©lection du serveur\n\t\t\tthis.cidSeletHost();\n\t\t} else {\n\t\t\t// 1 seul serveur connu\n\t\t\tthis.cidInfo.lastManifest = await this.cidInfo.cidHosts[0].fetchManifest();\n\t\t\tthis.cidOnManifestKnown();\n\t\t}\n\t}\n\n\tasync overrideMetas(ctx: ICidCtx, metasIn: Dict<any>, foreignMetas: { is: string[], value: string | ((session: CidSession) => string) }[]): Promise<void> {}\n\n\n\t/**\n\t * Gestion du CID host\n\t */\n\tprotected cidSeletHost() {\n\t\tDOM.setHidden(this.cidProcessHead, true);\n\t\tDOM.setHidden(this.cidInteractions, true);\n\t\tthis.cidDetails.textContent = null;\n\n\t\tif (this.cidInfo.cidHosts.length > 0) {\n\t\t\tthis.cidManifestHead.textContent = \"SÃ©lection du serveur cible\";\n\t\t\tconst group = this.cidDetails.appendChild(<ul/>);\n\t\t\tfor (let i = 0, s = this.cidInfo.cidHosts.length; i < s; i++) {\n\t\t\t\tconst host = this.cidInfo.cidHosts[i];\n\t\t\t\tgroup.appendChild(<li><a onclick={this.onCidSelectHost} href={i}>{host.label}</a></li>);\n\t\t\t}\n\t\t\tif (this.conf.cidManifestUrlInput) this.buildInputManifest(group.appendChild(<li/>), \"Autre\");\n\t\t} else {\n\t\t\tthis.cidManifestHead.textContent = \"DÃ©finition du serveur cible\";\n\t\t\tthis.buildInputManifest(this.cidDetails.appendChild(<div id=\"manifestAlone\"/>), \"URL du serveur\");\n\t\t}\n\t}\n\n\tprotected async onCidSelectHost(this: HTMLAnchorElement, ev: MouseEvent) {\n\t\tev.preventDefault();\n\t\tconst me = DOMSH.findHost<CidInteractionByStepsUi>(this);\n\t\tme.cidInfo.lastManifest = await me.cidInfo.cidHosts[parseInt(this.getAttribute('href'))].fetchManifest();\n\t\tme.cidOnManifestKnown();\n\t}\n\n\t/** ctx.cidInfo.lastManifest renseignÃ© */\n\tprotected async cidOnManifestKnown() {\n\t\tconst manifest = this.cidInfo.lastManifest;\n\t\tif (!manifest) return this.cidSeletHost();\n\t\tthis.cidManifestHead.textContent = \"Serveur : \" + CID.getCidManifestLabel(this.cidInfo.cidHosts, manifest);\n\t\tif (this.conf.cidManifestUrlInput || this.cidInfo.cidHosts.length !== 1) {\n\t\t\t//PossibilitÃ© de changer\n\t\t\tthis.cidManifestHead.appendChild(<c-button class=\"changeBtn\" icon=\"/@skin@/core/actions/cid/change.svg\" title=\"Changer de serveur\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t onclick={function (this: Button, ev: MouseEvent) {return DOMSH.findHost<CidInteractionByStepsUi>(this).cidSeletHost()}}/>);\n\t\t}\n\n\t\tDOM.setHidden(this.cidProcessHead, true);\n\t\t//Eval des process\n\t\tconst prcs = this.cidInfo.cidProcesses = this.conf.cidProcessSelector ? await this.conf.cidProcessSelector({\n\t\t\t\treg: this.reg,\n\t\t\t\tuiContext: this\n\t\t\t}) :\n\t\t\tArray.from(CID.filterIsOr(manifest.processes, this.conf.cidProcessIs || [CidInteractionByStepsUi.PRC_IS_DEFAULT]));\n\t\tif (prcs.length !== 1) {\n\t\t\tthis.cidSelectProcess();\n\t\t} else {\n\t\t\t//1 seul process\n\t\t\tthis.cidOnProcessKnown(prcs[0]);\n\t\t}\n\t}\n\n\t/**\n\t * Host - gestion du manifest libre\n\t */\n\tbuildInputManifest(parent: HTMLElement, label: string) {\n\t\tparent.appendChild(<div>{label}</div>);\n\t\tparent.appendChild(<div id=\"manifestEdit\">\n\t\t\t<input id=\"manifestInput\" type=\"url\" oninput={this.onManifestInput} onchange={function (this: HTMLInputElement) {DOMSH.findHost<CidInteractionByStepsUi>(this).onManifestChange(this)}}/>\n\t\t\t<c-button id=\"manifestValid\" Ã®={{reg: this.reg, label: \"Valider\", disabled: true}} onclick={function (this: HTMLInputElement & ICidManifestPointer) {DOMSH.findHost<CidInteractionByStepsUi>(this).cidUseManifest(this.cidManifest)}}/>\n\t\t</div>);\n\t\tparent.appendChild(<c-msg id=\"manifestInputResult\" Ã®={{noShadow: true}}/>);\n\t}\n\n\tasync onManifestChange(input: HTMLInputElement) {\n\t\tconst msg = this.shadowRoot.getElementById(\"manifestInputResult\") as MsgLabel;\n\t\tconst btn = this.shadowRoot.getElementById(\"manifestValid\") as Button & ICidManifestPointer;\n\t\tbtn.cidManifest = null;\n\t\tif (!input.validity.valid) {\n\t\t\tmsg.setCustomMsg(\"Saisissez une URL valide permettant d'obtenir les caractÃ©ristiques du serveur (manifeste CID)\", \"info\");\n\t\t\tbtn.cidManifest = null;\n\t\t\tbtn.disabled = true;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tbtn.cidManifest = await CID.getCidManifest(input.value);\n\t\t\t} catch (e) {}\n\t\t\tif (btn.cidManifest) {\n\t\t\t\tmsg.setCustomMsg(\"Serveur reconnu : \" + CID.getCidManifestLabel(this.cidInfo.cidHosts, btn.cidManifest), \"info\");\n\t\t\t\tbtn.disabled = false;\n\t\t\t} else {\n\t\t\t\tmsg.setCustomMsg(\"Aucun serveur reconnu Ã  cette URL (manifeste CID non trouvÃ©), ou politique de sÃ©curitÃ© du serveur incompatible\", \"error\");\n\t\t\t\tbtn.disabled = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _cidMnInputWaiter: number;\n\n\tonManifestInput(this: HTMLInputElement, ev: Event) {\n\t\tconst me = DOMSH.findHost<CidInteractionByStepsUi>(this);\n\t\tif (me._cidMnInputWaiter) clearTimeout(me._cidMnInputWaiter);\n\t\tme._cidMnInputWaiter = setTimeout(() => me.onManifestChange(this), 800) as any;\n\t}\n\n\tcidUseManifest(manifest: CidManifest) {\n\t\tif (!manifest) return;\n\t\tthis.cidInfo.lastManifest = manifest;\n\t\tthis.cidOnManifestKnown();\n\t}\n\n\n\t/**\n\t * Gestion des process\n\t */\n\tprotected cidSelectProcess() {\n\t\tDOM.setHidden(this.cidInteractions, true);\n\t\tDOM.setHidden(this.cidProcessHead, true);\n\t\t//this.cidProcessHead.textContent = \"SÃ©lection du processus d'envoi\";\n\t\tthis.cidDetails.textContent = null;\n\t\tconst group = this.cidDetails.appendChild(<ul/>);\n\t\tfor (let i = 0, s = this.cidInfo.cidProcesses.length; i < s; i++) {\n\t\t\tconst prc = this.cidInfo.cidProcesses[i];\n\t\t\tgroup.appendChild(<li><a onclick={this.onCidSelectProcess} href={i}>{prc.label.getStr(\"fr\")}</a></li>);\n\t\t}\n\t}\n\n\tprotected onCidSelectProcess(this: HTMLAnchorElement, ev: MouseEvent) {\n\t\tev.preventDefault();\n\t\tconst me = DOMSH.findHost<CidInteractionByStepsUi>(this);\n\t\tme.cidOnProcessKnown(me.cidInfo.cidProcesses[parseInt(this.getAttribute('href'))]);\n\t}\n\n\n\t/**\n\t * IntÃ©ractions CID\n\t */\n\tprotected async cidOnProcessKnown(process: CidProcess) {\n\t\tDOM.setHidden(this.cidManifestHead, true);\n\t\tDOM.setHidden(this.cidProcessHead, true);\n\t\tDOM.setHidden(this.cidInteractions, false);\n\t\t/* header redondant avec les Ã©lÃ©ments UI HTML des intÃ©ractions\n\t\tthis.cidProcessHead.textContent = \"Processus : \" + this.cidInfo.lastProcess.label.getLabel(\"fr\");\n\t\tif (this.cidInfo.cidProcesses.length > 1) {\n\t\t\tthis.cidProcessHead.appendChild(<c-button class=\"changeBtn\" icon=\"/@skin@/wsp/views/generators/change.svg\" title=\"Changer de processus\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={function (this: Button, ev: MouseEvent) {return DOMSH.findHost<CidInteractionByStepsUi>(this).cidSelectProcess()}}/>);\n\t\t}\n\t\t*/\n\n\t\tawait this.cidRefreshOnSessionChange();\n\n\t\tconst cidSession = this.cidInfo.cidSession = await this.createCidSession(process);\n\t\tcidSession.onStateChange.add(() => this.cidRefreshOnSessionChange());\n\t\tawait cidSession.doSession();\n\t\tif (cidSession.state === ECidSessionState.failed) {\n\t\t\t//FIXME affichage erreur CID....\n\t\t\tERROR.reportError({\n\t\t\t\tmsg: \"Ãchec au dÃ©ploiement...\"\n\t\t\t});\n\t\t}\n\n\t}\n\n\tprotected async createCidSession(process: CidProcess): Promise<CidSession> {\n\t\tconst cidSessionConfig = Object.assign({\n\t\t\t\tmanifest: this.cidInfo.lastManifest,\n\t\t\t\tmetasIn: {},\n\t\t\t\tprocess: process,\n\t\t\t\tuiHandler: this,\n\t\t\t},\n\t\t\tthis.conf.cidSessionConfig) as OCidSessionConfig;\n\t\tawait this.overrideMetas({\n\t\t\treg: this.reg,\n\t\t\tuiContext: this\n\t\t}, cidSessionConfig.metasIn, cidSessionConfig.foreignMetas);\n\n\t\treturn new CidSession(cidSessionConfig);\n\t}\n\n\tasync cidRefreshOnSessionChange() {\n\t\tif (this.cidInfo.cidSession) {\n\t\t\t//console.log(\"cidRefreshOnSessionChange::::\", ctx.cidInfo.cidSession);\n\t\t\tswitch (this.cidInfo.cidSession.state) {\n\t\t\tcase ECidSessionState.authenticating:\n\t\t\t\tthis.cidDetails.textContent = null;\n\t\t\t\tthis.cidDetails.appendChild(<div class=\"cidUploading\"><span>Authentification en cours...</span></div>);\n\t\t\t\treturn;\n\t\t\tcase ECidSessionState.inStep:\n\t\t\tcase ECidSessionState.uiProcessSel: //en principe impossible\n\t\t\tcase ECidSessionState.notStarted: //en principe impossible\n\t\t\t\tthis.cidDetails.textContent = null;\n\t\t\t\tthis.cidDetails.appendChild(<div class=\"cidUploading\"><span>Action en cours...</span></div>);\n\t\t\t\treturn;\n\t\t\tcase ECidSessionState.uiAuth:\n\t\t\t\t// uiWait en cours\n\t\t\t\treturn;\n\t\t\tcase ECidSessionState.failed:\n\t\t\tcase ECidSessionState.ended:\n\t\t\tcase ECidSessionState.aborted:\n\t\t\t\tthis.cidDetails.textContent = null;\n\t\t\t\tthis.cidDetails.appendChild(<div class=\"cidEnd\"><span>Fin de session CID</span></div>);\n\t\t\t\t// FIXME : afficher ici l'Ã©tat de la diffusion CID ?\n\t\t\t\tif (this.conf.onInteractionEndHandler)\n\t\t\t\t\tawait this.conf.onInteractionEndHandler(this.cidInfo.cidSession);\n\n\t\t\t\t//on rÃ©affiche l'Ã©tat de la derniÃ¨re diffusion rÃ©ussie.\n\t\t\t}\n\t\t}\n\t\tthis.cidDetails.textContent = null;\n\t}\n\n\tstatic PRC_IS_DEFAULT = [\"scenari.eu:cid:selectResourceAction\", \"http://schema.org/FindAction\", \"http://schema.org/DiscoverAction\"];\n\n\n\t//*** ICidUiHandler ***\n\n\tasync webAuth(session: CidSession, step: CidWebAuthStep): Promise<ICidStepResult> {\n\t\tconst frame = <iframe style=\"flex:1\"/> as HTMLIFrameElement;\n\t\tconst dialog = POPUP.showDialog<'ok' | null>(frame, this, {initHeight: \"60vh\", initWidth: \"60vh\", titleBar: {barLabel: {label: \"Authentification\"}, closeButton: {}},});\n\t\tdialog.onNextClose().then((r) => {if (!r) session.onCidFrameMessage({cidAuth: \"failed\"})});\n\t\tconst res = await step.initFrame(frame, session);\n\t\tdialog.close('ok');\n\t\treturn res;\n\t}\n\n\tasync uiWait(session: CidSession, step: CidStep): Promise<ICidStepResult | null> {\n\t\tthis.cidDetails.textContent = null;\n\t\treturn await step.initFrame(this.cidInteractions, session);\n\t}\n\n\tasync interact(session: CidSession, step: CidStep): Promise<ICidStepResult> {\n\t\tthis.cidDetails.textContent = null;\n\t\treturn await step.initFrame(this.cidInteractions, session);\n\t}\n\n\tasync selectProcess(session: CidSession, choices: Set<CidProcess>): Promise<CidProcess | null> {\n\t\tconsole.trace(\"TODO selectProcess UI\");\n\t\treturn choices.values().next().value;\n\t}\n\n}\n\n/** Contexte pour les propriÃ©tÃ©s CID . */\nexport interface ICidCtx {\n\treg: IReg<IUniverseEnv>\n\tuiContext: HTMLElement\n}\n\nexport interface ICidInfos {\n\t/** Liste des servers CID connus compatibles respectant les contraintes dÃ©finies dans IDatasItemCidNode (cidHostIs...). */\n\tcidHosts?: CidHost[]\n\t/** Manifest sÃ©lectionnÃ©. */\n\tlastManifest?: CidManifest\n\t/** Liste des process CID de ce serveur compatibles respectant les contraintes dÃ©finies dans IDatasItemCidNode (cidProcessIs...). */\n\tcidProcesses?: CidProcess[]\n\t/**\n\t * CidEnPoints pour cet item.\n\t * undefined : pas encore chargÃ©\n\t * Promise<JCidEnPoints | null> : chargement en cours\n\t * null : aucune donnÃ©e dispo pour cet item.\n\t * JCidProps : CidProps dÃ©jÃ  enregistrÃ©es. Plusieurs entrÃ©es peuvent Ãªtre enregistrÃ©es en cas de multiples\n\t * servers CID ou cidProcess exploitÃ©s pour ce mÃªme IItemPubNode\n\t */\n\tlastCidProps?: JCidStoredProps | null | Promise<JCidStoredProps | null>\n\t/**\n\t * CidEnPoints pour cet item.\n\t * undefined : pas encore chargÃ©\n\t * Promise<JCidEnPoints | null> : chargement en cours\n\t * null : aucune donnÃ© dispo pour cet item.\n\t * JCidEnPoints : EndPoints existant pour cet item.\n\t * @deprecated\n\t */\n\tlastCidEndPoints?: JCidEnPoints | null | Promise<JCidEnPoints | null>\n\t/** Session prÃªte Ã  Ãªtre dÃ©marrÃ©e, en cours ou achevÃ©e. */\n\tcidSession?: CidSession\n}\n\nexport interface JCidStoredProps {\n\tstore: [{\n\t\tmanifestUrl: string\n\t\tcidProcessIs?: string[] //pas encore utilisÃ©, pourra servir Ã  resÃ©lectionner le bon process\n\t\tcidProps: Dict<Jsonisable>\n\t}]\n}\n\n/** @deprecated */\nexport interface JCidEnPoints {\n\tmvcc: number\n\tendPoints: [\n\t\t{\n\t\t\tmanifestUrl: string,\n\t\t\tcidProps: any\n\t\t}\n\t]\n}\n\nREG.reg.registerSkin('cid-process-steps', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\tinput,\n\tselect,\n\ttextarea {\n\t\tbackground-color: var(--form-bgcolor);\n\t\tcolor: var(--form-color);\n\t\tborder: 1px solid var(--border-color);\n\t}\n\n\tinput:invalid,\n\tselect:invalid,\n\ttextarea:invalid {\n\t\toutline: solid 1px #b86262;\n\t}\n\n\t#cidRoot,\n\t#cidDetails {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t#cidInteractions {\n\t\tflex: 1;\n\t\tborder: none;\n\t}\n\n\t#cidRoot {\n\t\toverflow: auto;\n\t}\n\n\t#cidManifest {\n\t\tmargin: .2em;\n\t\tfont-weight: bold;\n\t\tfont-size: 1.2em;\n\t\ttext-align: center;\n\t}\n\n\t#cidProcess {\n\t\tmargin: .2em;\n\t\tfont-weight: bold;\n\t\ttext-align: center;\n\t}\n\n\t#manifestInput {\n\t\tflex: 1;\n\t}\n\n\t#manifestAlone {\n\t\tmargin: 2em;\n\t}\n\n\t#manifestEdit {\n\t\tdisplay: flex;\n\t}\n\n\t#manifestInput:focus {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t#manifestInputResult {\n\t\tfont-style: italic;\n\t\tcolor: var(--fade-color);\n\t}\n\n\t.changeBtn {\n\t\tdisplay: inline-flex;\n\t}\n\n\t.cidWaiting {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tborder-top: 1px solid var(--border-color);\n\t}\n\n  .cidUploading {\n\t  flex: 1;\n\t  display: flex;\n\t  align-items: center;\n\t  font-style: italic;\n\t  margin: 0 2em;\n  }\n\n  .cidEnd {\n\t  flex: 1;\n\t  display: flex;\n\t  align-items: center;\n\t  font-style: italic;\n\t  margin: 0 2em;\n  }\n\n`);\n\nwindow.customElements.define(\"cid-process-steps\", CidInteractionByStepsUi);\n\n/**\n * Fournisseur de params CID\n */\nexport class CidLcTransitionParamsProvider implements ILcTransitionParamsProvider {\n\tconstructor(protected readonly config: OCidLcTransitionParamsProviderConfig) {}\n\n\tasync computeParams(params: { [refUri: string]: { [key: string]: Jsonisable } }, shortDescs: JSrcFields[], reg: IReg<IWspUiEnv>, emitter: HTMLElement): Promise<boolean> {\n\t\tconst ct = <CidInteractionByStepsUi/>;\n\n\t\tct.initialize({\n\t\t\treg: reg,\n\t\t\tskinOver: \"webzone:panel\",\n\t\t\tcidProcessIs: Array.isArray(this.config.cidProcessFilter) ? this.config.cidProcessFilter : this.config.cidProcessFilter({reg: reg}),\n\t\t\tcidHostIs: this.config.cidHostIs,\n\t\t\tcidManifestUrlInput: this.config.cidManifestUrlInput,\n\t\t\tcidPassOptionalInteraction: (\"cidPassOptionalInteraction\" in this.config) ? this.config.cidPassOptionalInteraction : true,\n\t\t\tcidHostUse: this.config.cidHostUse,\n\t\t\tcidSessionConfig: {\n\t\t\t\tcustomUpload: async (session: CidSession, uploadStep: CidUploadStep, webUpload: ICidWebUploadDef): Promise<null | Response> => {\n\t\t\t\t\tsession.sessionProps.uploadUrl = uploadStep.uploadUrl;\n\t\t\t\t\tsession.sessionProps.uploadUrlMethod = 'PUT';\n\t\t\t\t\t// Upload reportÃ© dans les steps du LC\n\t\t\t\t\treturn new Response(null, {status: 200});\n\t\t\t\t}\n\t\t\t} as OCidSessionConfig,\n\t\t\tonInteractionEndHandler: async (cidSession: CidSession) => {\n\t\t\t\tswitch (cidSession.state) {\n\t\t\t\tcase ECidSessionState.failed:\n\t\t\t\t\tawait ERROR.showError({\n\t\t\t\t\t\tmsg: \"Ãchec d'interaction avec le serveur de ressources\",\n\t\t\t\t\t\tdetails: cidSession.failedReason\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase ECidSessionState.ended:\n\t\t\t\t\tif (!params['*'])\n\t\t\t\t\t\tparams['*'] = {};\n\t\t\t\t\tObject.assign(params['*'], cidSession.metasOut);\n\t\t\t\t\t//params['*'].scCidSessId = cidSession.sessionProps.scCidSessId;\n\t\t\t\t\tparams['*'].uploadUrl = cidSession.sessionProps.uploadUrl;\n\t\t\t\t\tparams['*'].uploadUrlMethod = cidSession.sessionProps.uploadUrlMethod;\n\n\t\t\t\t\tconst cidInteractStep: CidUploadStep = cidSession.cidProcess.steps[1] instanceof CidUploadStep ? cidSession.cidProcess.steps[1] : null;\n\t\t\t\t\tconst systemWaitDef = cidInteractStep?.getSystemWaitDef();\n\t\t\t\t\tconst systemWaitUrlObj = systemWaitDef ? parseCidStepUrl(systemWaitDef) : null;\n\t\t\t\t\tconst systemWaitUrl = systemWaitUrlObj ? systemWaitUrlObj.getStr(\"fr\") : null;\n\t\t\t\t\tif (systemWaitUrl) params['*'].systemWaitUrl = systemWaitUrl;\n\n\t\t\t\t\t// Recherche des \"scCidSessId\" : une session cid par item puschÃ©\n\t\t\t\t\t// FIXME : traitement par lot cid ?\n\t\t\t\t\tconst cidExchangeStep: CidExchangeStep = cidSession.cidProcess.steps[0] instanceof CidExchangeStep ? cidSession.cidProcess.steps[0] : null;\n\t\t\t\t\tawait LANG.promisesMap(shortDescs, async (shortDesc, i) => {\n\t\t\t\t\t\t// RÃ©utilisation de la session existante pour le premier item\n\t\t\t\t\t\tif (i != 0) await cidExchangeStep?.doStep(cidSession);\n\t\t\t\t\t\tif (!params[shortDesc.srcUri])\n\t\t\t\t\t\t\tparams[shortDesc.srcUri] = {};\n\t\t\t\t\t\tparams[shortDesc.srcUri].scCidSessId = cidSession.sessionProps.scCidSessId;\n\t\t\t\t\t}, 10);\n\t\t\t\t\tpopup.close(true);\n\t\t\t\t}\n\t\t\t\tpopup.close(false);\n\t\t\t}\n\t\t} as OCidInteractionByStepsUiInit);\n\n\t\tconst popup = POPUP.showDialog(ct, reg.env.uiRoot, {\n\t\t\ttitleBar: {barLabel: {label: this.config.label || \"Serveur de ressources...\"}, closeButton: {}},\n\t\t\tinitWidth: '70vw',\n\t\t\tinitHeight: '70vh',\n\t\t\tresizer: {}\n\t\t});\n\n\t\treturn await popup.onNextClose() as boolean;\n\t}\n\n\tasync rollbackTransition(params: { [refUri: string]: { [key: string]: Jsonisable } }, shortDescs: JSrcFields[], ) {\n\t\tconst abortUrl = params['*']?.systemWaitUrl;\n\t\tif (!abortUrl) await ERROR.logError({ msg: \"Unable to abort the transition CID sessions: no systemWaitUrl available\"});\n\t\tconst abortUrlObj = new URL(abortUrl);\n\t\tabortUrlObj.searchParams.set(\"scResp\", \"200-202-403\");\n\t\tabortUrlObj.searchParams.set(\"abortSession\", \"\");\n\t\tawait LANG.promisesMap(shortDescs, async (shortDesc) => {\n\t\t\tconst scCidSessId = params[shortDesc.srcUri]?.scCidSessId;\n\t\t\tabortUrlObj.searchParams.set(\"scCidSessId\", scCidSessId);\n\t\t\treturn fetch(abortUrlObj.href, {method: \"POST\", credentials: \"include\"});\n\t\t}, 10);\n\t}\n}\n\nexport interface OCidLcTransitionParamsProviderConfig {\n\n\tlabel?: string\n\n\tcidProcessFilter: string[] | string[][] | ((ctx: { reg: IReg<IWspUiEnv> }) => CidProcess[]);\n\n\tcidHostIs?: string[] | string[][];\n\n\tcidManifestUrlInput?: boolean;\n\n\tcidPassOptionalInteraction?: boolean;\n\n\tcidHostUse?: 'input' | 'output' | 'both';\n}"]}