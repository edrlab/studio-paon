{"version":3,"sources":["/@back@/wsp/widgets/wed/txtMetaRemote.tsx"],"names":["BaseElement","BASIS","REG","REMOTE","RemoteRes","DOM","JSX","DOMSH","POPUP","Button","OpenMetaDialog","LANG","RemoteResRenderer","TxtMetaRemote","[object Object]","metas","this","config","txtElt","_a","findNext","n","nodeName","textContent","url","fetchResDesc","reg","status","newUrl","extractRemoteUrl","lastRemoteUrl","lastRemoteDesc","internalRefresh","newDesc","fetchResDescFromClient","titleRoot","updateTitle","previewRoot","updatePreview","openBtn","updateopenBtn","buildTitle","call","setTextContent","_b","title","st","setHiddenProp","setRemoteRes","remoteResSelector","findOpenView","editor","findEditorInResDesc","view","findFullViewInResDesc","previewTags","resShown","getTags","arrayEquals","body","_c","tags","web","_d","init","wedMgr","previewInit","forceWebRender","resDesc","remoteResAsVideo","remoteResAsAudio","remoteResForPreview","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","buildStruct","createElement","id","metaBtn","initialize","icon","uiContext","onclick","onMetaBtn","hidden","onopenBtn","shadowRoot","appendChild","append","preview","î","newInit","promiseTooltip","async","TxtMetaRemoteTt","hoverAllowed","me","findHost","openMetaDialog","ev","window","open","buildUrlFromResDesc","TxtMetaRemoteInline","registerSkin","customElements","define","TxtMetaRemoteBlock"],"mappings":"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","sourcesContent":["import {BaseElement, BASIS, OSkinableInit} from \"back/commons/basis\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {TxtElement} from \"back/edit/wed/wedlets/txt/txtTags\";\nimport {JRemoteResDescFromClient, REMOTE, RemoteRes} from \"lib/core/remote\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IWspUiEnv} from \"lib/wsp/wsp\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IBasicUniversePointer} from \"lib/core/universe\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {OpenMetaDialog} from \"back/edit/wed/wedlets/txt/txtActions\";\nimport {LANG} from \"lib/commons/lang\";\nimport {ORemoteResRendererInit, RemoteResRenderer} from \"back/core/widgets/remoteResRenderer\";\n\n\n/**\n * Affichage des metas du texte contenant un lien Remote.\n * Cf sous-classes en fonction des différents contextes d'appels (tooltip, inline, block).\n */\nexport interface TxtMetaRemote extends BaseElement {\n\tinitialize(init: OTxtMetaRemoteInit): this\n}\n\nexport interface OTxtMetaRemoteInit extends OSkinableInit {\n\treg?: IReg<IWspUiEnv>\n\ttxtElt: TxtElement\n\tremoteResSelector?: (reg: IReg<IBasicUniversePointer>, resDesc: JRemoteResDescFromClient) => RemoteRes | null\n\t/** Construction du titre. Si null ou ne retourne pas 'done', le titre =  RemoteRes.title || RemoteRes.url || \"[url non renseignée]\" */\n\tbuildTitle?: (this: TxtMetaRemote, target: HTMLSpanElement, txtElt: TxtElement, resMetas: JRemoteResDescFromClient | null) => 'done' | void\n\tpreview?: 'shown'/*par défaut*/ | 'none' | 'tooltip'\n\tpreviewInit?: ORemoteResRendererInit\n\tmetaBtn?: 'shown'/*par défaut*/ | 'none'\n\topenBtn?: 'shown'/*par défaut*/ | 'none'\n}\n\nexport abstract class TxtMetaRemote extends BaseElement {\n\n\tprotected config: OTxtMetaRemoteInit;\n\n\tprotected titleRoot?: HTMLSpanElement;\n\tprotected previewRoot?: RemoteResRenderer;\n\tprotected metaBtn: Button;\n\tprotected openBtn: Button;\n\n\tprotected lastRemoteUrl: string | null;\n\tprotected lastRemoteDesc?: JRemoteResDescFromClient | null;\n\n\t/** Recherche le 1er lien Remote dans les metas. */\n\tprotected extractRemoteUrl(): string | null {\n\t\tconst metas = this.config.txtElt.metas;\n\t\treturn metas ? DOM.findNext(metas, metas, (n): n is Element => n.nodeName === \"sc:location\")?.textContent : null;\n\t}\n\n\tprotected async fetchResDescFromClient(url: string): Promise<JRemoteResDescFromClient> {\n\t\treturn (await REMOTE.fetchResDesc(url, this.config.reg)) || {url, status: -1};\n\t}\n\n\tasync _refresh() {\n\t\tconst newUrl = this.extractRemoteUrl();\n\t\tif (newUrl != this.lastRemoteUrl) {\n\t\t\tthis.lastRemoteUrl = newUrl;\n\t\t\tthis.lastRemoteDesc = null;\n\t\t\tthis.internalRefresh();\n\t\t\tif (newUrl) {\n\t\t\t\tconst newDesc = await this.fetchResDescFromClient(newUrl);\n\t\t\t\tif (this.lastRemoteUrl !== newUrl) return; //raceCond\n\t\t\t\tthis.lastRemoteDesc = newDesc;\n\t\t\t}\n\t\t}\n\t\tthis.internalRefresh();\n\t}\n\n\tprotected internalRefresh() {\n\t\tif (this.titleRoot) this.updateTitle();\n\t\tif (this.previewRoot) this.updatePreview();\n\t\tif (this.openBtn) this.updateopenBtn();\n\t}\n\n\n\t/** Rafraichit la zone de Titre */\n\tprotected updateTitle() {\n\t\tif (this.config.buildTitle?.call(this, this.titleRoot, this.config.txtElt, this.lastRemoteDesc) == 'done') return;\n\t\tDOM.setTextContent(this.titleRoot, this.lastRemoteDesc?.title || this.lastRemoteUrl || \"[URL non renseignée]\");\n\t}\n\n\t/** Rafraichit la zone de Preview */\n\tprotected updatePreview() {\n\t\tconst st = this.lastRemoteDesc?.status || 0;\n\t\tif (st < 200 || st > 299) {\n\t\t\tDOM.setHiddenProp(this.previewRoot, true);\n\t\t\treturn;\n\t\t}\n\t\tDOM.setHiddenProp(this.previewRoot, false);\n\t\tthis.previewRoot.setRemoteRes(this.lastRemoteDesc ? this.config.remoteResSelector(this.config.reg, this.lastRemoteDesc) : null);\n\t}\n\n\t/** Rafraichit l'état du bouton d'édition de la ressource */\n\tprotected updateopenBtn() {\n\t\tDOM.setHiddenProp(this.openBtn, this.findOpenView() == null);\n\t}\n\n\tprotected findOpenView() {\n\t\tconst editor = REMOTE.findEditorInResDesc(this.lastRemoteDesc);\n\t\tif (editor) return editor;\n\t\t//Recherche d'une view complète différente de celle affichéee preview.\n\t\tconst view = REMOTE.findFullViewInResDesc(this.lastRemoteDesc);\n\t\tif (!view) return null;\n\t\tconst previewTags = this.previewRoot?.resShown?.getTags();\n\t\treturn !LANG.arrayEquals(previewTags.body, view.tags?.body) || !LANG.arrayEquals(previewTags.web, view.tags?.web) ? view : null;\n\t}\n\n\tprotected _initialize(init: OTxtMetaRemoteInit) {\n\t\tif (!init.reg) init.reg = init.txtElt.wedMgr.reg;\n\t\tif (!init.remoteResSelector) {\n\t\t\t//Affectation du remoteResSelector.\n\t\t\tswitch (init.previewInit?.forceWebRender) {\n\t\t\tcase \"download\" :\n\t\t\tcase \"window\" :\n\t\t\t\tinit.remoteResSelector = (reg: IReg<IBasicUniversePointer>, resDesc: JRemoteResDescFromClient) => new RemoteRes(reg, resDesc);\n\t\t\t\tbreak;\n\t\t\tcase \"video\" :\n\t\t\t\tinit.remoteResSelector = REMOTE.remoteResAsVideo;\n\t\t\t\tbreak;\n\t\t\tcase \"audio\" :\n\t\t\t\tinit.remoteResSelector = REMOTE.remoteResAsAudio;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tinit.remoteResSelector = REMOTE.remoteResForPreview;\n\t\t\t}\n\t\t}\n\t\tthis.config = init;\n\t\tthis.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.buildStruct(init);\n\t}\n\n\tprotected buildStruct(init: OTxtMetaRemoteInit) {\n\t\tthis.titleRoot = <div id=\"title\"/>;\n\t\tif (!init.metaBtn || init.metaBtn === \"shown\") {\n\t\t\tthis.metaBtn = new Button().initialize({reg: this.config.reg, title: \"Métadonnées d'accès à cette ressource...\", icon: \"/@skin@/edit/wed/txt/showMeta.svg\", uiContext: \"bar\"});\n\t\t\tthis.metaBtn.id = \"metaBtn\";\n\t\t\tthis.metaBtn.onclick = this.onMetaBtn;\n\t\t}\n\t\tif (!init.openBtn || init.openBtn === \"shown\") {\n\t\t\tthis.openBtn = new Button().initialize({reg: this.config.reg, title: \"Ouvrir cette ressource...\", icon: \"/@skin@/core/widgets/remote/externalOpen.svg\", uiContext: \"bar\"});\n\t\t\tthis.openBtn.hidden = true;\n\t\t\tthis.openBtn.id = \"openBtn\";\n\t\t\tthis.openBtn.onclick = this.onopenBtn;\n\t\t}\n\t\tif (this.metaBtn || this.openBtn) {\n\t\t\tthis.shadowRoot.appendChild(<div id=\"head\">{this.titleRoot}{this.metaBtn}{this.openBtn}</div>);\n\t\t} else {\n\t\t\tthis.shadowRoot.append(this.titleRoot);\n\t\t}\n\n\t\tif (!init.preview || init.preview === 'shown') {\n\t\t\tthis.previewRoot = <RemoteResRenderer id=\"preview\" î={BASIS.newInit(init.previewInit, init.reg)}/> as RemoteResRenderer;\n\t\t} else if (init.preview === 'tooltip') {\n\t\t\tPOPUP.promiseTooltip(this, async (txtElt) => {\n\t\t\t\treturn new TxtMetaRemoteTt().initialize({\n\t\t\t\t\ttxtElt: this.config.txtElt,\n\t\t\t\t\tbuildTitle: () => 'done',\n\t\t\t\t\tmetaBtn: \"none\",\n\t\t\t\t\topenBtn: \"none\",\n\t\t\t\t\tpreviewInit: this.config.previewInit\n\t\t\t\t})\n\t\t\t}, {hoverAllowed: true});\n\t\t}\n\t\tif (this.previewRoot) this.shadowRoot.appendChild(this.previewRoot);\n\t}\n\n\tonMetaBtn() {\n\t\tconst me = DOMSH.findHost<TxtMetaRemote>(this);\n\t\tOpenMetaDialog.openMetaDialog(me.config.txtElt);\n\t}\n\n\tonopenBtn(this: Button, ev: MouseEvent) {\n\t\tconst me = DOMSH.findHost<TxtMetaRemote>(this);\n\t\tconst view = me.findOpenView();\n\t\tif (view) window.open(REMOTE.buildUrlFromResDesc(me.lastRemoteDesc, view), \"_blank\");\n\t}\n}\n\n\n/**\n * Affichage des metas avec un lien remote en objet inline : pour emptyLeaf.\n */\nexport class TxtMetaRemoteInline extends TxtMetaRemote {\n}\n\nREG.reg.registerSkin(\"wsp-txtmetaremoteinline\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: inline;\n\t\tborder: 1px solid var(--border-color);\n\t\tcursor: pointer;\n\t\tbackground-color: var(--alt1-bgcolor);\n\t\tmax-height: 3em;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t#head,\n\t#title {\n\t\tdisplay: inline;\n\t}\n\n\tc-button {\n\t\tdisplay: inline-flex;\n\t\t--icon-size: 1em;\n\t}\n\n\t#preview {\n\t\tdisplay: inline-flex;\n\t}\n`);\ncustomElements.define(\"wsp-txtmetaremoteinline\", TxtMetaRemoteInline);\n\n\n/**\n * Affichage des metas avec un lien remote en Block : pour emptyBlock.\n */\nexport class TxtMetaRemoteBlock extends TxtMetaRemote {\n}\n\nREG.reg.registerSkin(\"wsp-txtmetaremoteblock\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tborder: 1px solid var(--border-color);\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tmargin: 0 3%;\n\t\tbackground-color: var(--alt1-bgcolor);\n\t}\n\n\t[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t#head {\n\t\tdisplay: flex;\n\t}\n\n\t#head > #title {\n\t\tflex: 1;\n\t}\n\n\t#title {\n\t\ttext-align: center;\n\t}\n`);\ncustomElements.define(\"wsp-txtmetaremoteblock\", TxtMetaRemoteBlock);\n\n\n/**\n * Affichage des metas avec un lien remote en Tooltip : pour phraseTag ou textLeafTag\n */\nexport class TxtMetaRemoteTt extends TxtMetaRemoteBlock {\n}\n\nREG.reg.registerSkin(\"wsp-txtmetaremotett\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: var(--alt1-bgcolor);\n\t\tpadding: .5em;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t#head {\n\t\tdisplay: flex;\n\t}\n\n\t#head > #title {\n\t\tflex: 1;\n\t}\n\n\t#title {\n\t\ttext-align: center;\n\t}\n`);\ncustomElements.define(\"wsp-txtmetaremotett\", TxtMetaRemoteTt);"]}