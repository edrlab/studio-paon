{"version":3,"sources":["/@back@/edit/wed/features/boxSel.tsx"],"names":["BarActions","IS_Popupable","POPUP","EWedletEditMode","findElementWedlet","IS_EltWedlet","isDisplayedWedlet","isEditableWedlet","isParentWedlet","WEDLET","WedletActionCtx","isWedletSingleElt","AccelKeyMgr","ACTION","Action","ActionMenu","ActionSeparator","ActionWrapperFromSvc","REG","DOM","ENodeType","JSX","DOMSH","JML","XA","isXmlMsg","XmlBatch","XmlInsertMsg","XmlRangeState","EPastePos","EFuzzyType","SkRuleElt","CONVERT","GFX","BASIS","LANG","HistoEditPoint","AgBoxSelEditor","cls","proto","prototype","superInit","initialize","config","call","this","boxSelMgr","BoxSelMgr","disableBoxSelection","addEventListener","onPointerDown","accelKeyMgr","initFromMapActions","reg","findReg","getListAsMap","addAccelKey","copyXmlMenu","onKeyDown","wedMgr","listeners","on","onFocus","onBlur","onClipboardEvent","onReadOnlyChange","async","lastDatas","scCmtsPd","import","then","exports","rootWedlet","initLastDatasScComments","hookMsgAfter","hookMsgForNextSel","getCurrentSel","setLabel","setExecute","ctx","ev","rg","range","isCollapsed","writeRangeToClipboardAsXml","isWedletBoxSelection","w","AgWedletBoxSelectionSingleElt","focusWedlet","drawBoxSelection","wedlet_drawBoxSelection","drawBoxSelActions","wedlet_drawBoxSelActions","highlightFromLink","isEltBoxSelection","elt","Element","AgEltBoxSelection","options","selMode","connectedCallback","wedlet","noFocus","focusableElement","tabIndex","drawEltBoxSelection","drawEltBoxSelActions","actionsLists","groupOrderPref","groupOrder","force_ctxMenuActions","Object","defineProperty","get","ctxMenuActions","force_focusBar","focusBar","getFocusable","ensureContainersUncollapsed","focus","blockPos","element","preventScroll","ensureVisible","wedEditor","scrollContainer","from","IS_focusable","findFlatNext","findFlatParentElt","rootNode","inSel","parent","elementHost","ch","firstElementChild","nextElementSibling","show","focusActionWidgets","what","wedParent","[object Object]","editor","init","htmlSel","window","getSelection","multiSelBaseIsStart","_selHidden","activeWedlet","xUnactiveWedlet","_drawSelMulti","empty","setRange","_drawSelSingle","wedletToSel","anchor","wedAnchor","isVirtual","selInVirtual","isAttribute","newBd","incrAtDepth","xa","showSel","extent","multiSelBaseWasStart","base","end","start","selectWedlet","up","wedletElt","isAnc","isBefore","isEquals","focusAroundXAddr","findWedlet","FINDOPTIONS_lastAncestorIfNone","extendSelTo","find","lastAncestorIfNone","wedletNotFoundDepth","forceFetch","mainBranch","notFound","prev","findWedletChild","findAroundXAddr","matches","focused","findDeepActiveElement","findDocumentOrShadowRoot","root","findFocusFirst","visitWedletChildren","Infinity","VISITOPTIONS_mainBranch","isConnected","clearSel","isSingleSel","batchIn","batch","docHolder","newBatch","editMode","write","onChildEmptied","subXa","deleteSequence","setAttr","allowed","visitRange","deleteRange","absorbContainersOnDelete","doBatch","cb","attWedlet","r","undefined","forEach","remove","_a","length","select","toString","registerSvc","setIcon","setVisible","setEnabled","readOnly","deleteContentSelection","isInSameSeq","resolveEditMode","txt","exportRange","rootTagNs","rootTagName","last","insertJml","","COMMENT","=","escapeComment","delFromKeyboard","setWrappedSvcCd","composedPath","getWrapped","execute","addToList","node","i","HTMLElement","scrollCtn","scrollRect","getBoundingClientRect","rect","top","scrollBy","Math","min","height","findFlatPrevUncle","isBox","preventDefault","crossNav","bottom","next","findFlatNextUncle","findFlatPrevious","n","getComputedStyle","display","setAttribute","removeAttribute","isWritableWedlet","hasAttribute","descEditMode","getEditModeForDesc","insideEditable","na","addForVirtualNode","target","structs","model","nodeType","attribute","getAlternateStructs","nodeName","buildVirtualPath","getVirtualXaPart","insertables","getInsertableStructs","getAttribute","push","cleanupStructList","findVirtualWedletsBefore","isTextBindBefore","findVirtualWedletsAfter","isTextBindAfter","insertReplaceBtnIn","createInsertBtn","getContainerOrient","getParentElt","xaPart","countBefore","countAfter","structsBefore","structsAfter","structsReplace","doAlterPart","comment","virtuals","isText","ctnOrient","forceSpace","fontSize","parseInt","clientHeight","missingSp","createReplaceBtn","insChildren","insAtts","subStructs","getInsertableStructsAll","s","findAllChildrenVirtualWedlets","createInsertChildBtn","predicate","findFlatParentEltOrSelf","replIn","findLastChild","replaceInSelector1","replaceInSelector2","currWedlet","wedNodeName","pos","btn","document","createElement","sr","attachShadow","SHADOWDOM_INIT","installSkin","localName","appendChild","createTextNode","title","execBtnAdd","structPos","style","position","setStyleStart","setStyleEnd","shadowRoot","setStyle","insertBefore","firstChild","parentSel","querySelector","parentElt","insPath","execBtnReplace","p","startsWith","subP","substring","before","parentNode","registerSkin","topPos","InsertAction","struct","super","structLabel","structName","insertStruct","jml","atts","convertFrom","src","outStruct","doc","getDocument","cnv","findConverter","dst","convert","getDstAsJml","finalName","create","partialName","createContentAsync","createContent","prompt","structType","elements","value","required","pattern","titleBar","structMatch","showNotifInfo","attributes","nm","findDomLast","Error","attNames","keys","findDomContainer","setAtDepth","childNodes","in","getInsertableOffset","append","text","insertDatasFromDisplay","xaParent","freeze","ReplaceAction","buildAddActions","actions","showPopupActionsFromEvent","actionContext","restoreFocus","stopImmediatePropagation","buildReplaceActions","msg","update","transac","getMeta","docHolderAsync","isMsgFromUs","metas","undo","redo","redrawSelection","setSelection","lengthJmlOrText","histoEditPointsMgr","addEditEntry","house","_b","histoEditHolder","selAfter","addr","_c","_d","_e","_f","virtualPath","startInText","sel","cloneRange","endInText","shiftKey","path","stopBoxSelection","focusElt","removeAllRanges","onEditPointFocus","relatedTarget","logicalParent","hideSel","onClipboard","type","writeRangeToClipboard","clipboardData","doPaste","dataTrsf","txStamp","menuPos","posFrom","fromY","targetY","finalPaste","imp","doImport","pasteWithPos","replace","newSiblingContext","after","parentEditable","showPopupActions","pasteSelected","asChild","needAsyncBuild","buildContentToImport","newChildContext","pastePos","tryPasteAsChild","siblingImp","siblingCtx","siblingMinMalue","canAdd","firstFound","Number","MAX_SAFE_INTEGER","classList","contains","childCtx","cache","originalDom","childImports","schemaDom","tryPasteNodes","childMinMalus","reduce","acc","malus","selectImporters","showNotifWarning","imToSel","sort","a","b","getLabel","importers","tryPaste","minMalus","handleKeyboardEvent","buildActions","actW","subBefore","setGroup","setActions","subIn","newAct","getId","nextSubIn","isFlatAncestor","subAfter","subReplace","injectSepByGroup","getPref","_focusBar","datas","getDatasForModel","focusedElt","mergeLists","getList","addSvcToList"],"mappings":"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","sourcesContent":["import {IContextMenuActions, IContextMenuActionsPointer} from \"back/commons/actionables\";\nimport {BarActions} from \"back/commons/widgets/bars\";\nimport {IS_Popupable, ORelativePosition} from \"back/commons/widgets/popupable\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {IWedFocusBarPointer} from \"back/edit/wed/features/commonBar\";\nimport {IWedEditor, IWedMgrPointer, WedMgr} from \"back/edit/wed/wedEditor\";\nimport {OWedEditorBoxConfig} from \"back/edit/wed/wedEditorBox\";\nimport {\n\tEWedletEditMode,\n\tfindElementWedlet,\n\tIChildWedlet,\n\tIElementWedlet,\n\tIParentWedlet,\n\tIS_EltWedlet,\n\tisDisplayedWedlet,\n\tisEditableWedlet,\n\tisParentWedlet,\n\tITargetableWedlet,\n\tIVirtualisableWedlet,\n\tIWedlet,\n\tIWedletActionCtx,\n\tOFindWedletOptions,\n\tWEDLET,\n\tWedletActionCtx\n} from \"back/edit/wed/wedlets/wedlet\";\nimport {isWedletSingleElt, IWedletSingleElt} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {AccelKeyMgr, ACTION, Action, ActionMenu, ActionSeparator, ActionWrapperFromSvc, IAction} from \"lib/commons/actions\";\nimport {IDomLogical, REG} from 'lib/commons/registry';\nimport {DOM, ENodeType, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IJmlObj, IJmlSet, JML} from \"lib/commons/xml/jml\";\nimport {IXAddr, IXAddrRange, IXAddrRangeSel, XA} from \"lib/commons/xml/xAddr\";\nimport {IDocBatch} from \"lib/edit/docHolder\";\nimport {Msg} from \"lib/edit/ot/urban\";\nimport {isXmlMsg, XmlBatch, XmlInsertMsg, XmlRangeState} from \"lib/edit/ot/xmlHouse\";\nimport {EPastePos} from \"lib/edit/schema/schema\";\nimport {EFuzzyType, ISkStructDef} from \"lib/edit/schema/schemaAnnots\";\nimport {ISkImporter, OSkImportDatas, OSkPasteContext} from \"lib/edit/schema/schemaMeta\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {SkRuleElt} from \"lib/edit/schema/schemaPatterns\";\nimport {CONVERT} from \"lib/edit/import/convert\";\nimport {IBoxElement} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {GFX} from \"lib/commons/utils/gfx\";\nimport {BASIS} from \"back/commons/basis\";\nimport {LANG} from \"lib/commons/lang\";\nimport {HistoEditPoint} from \"lib/edit/histoEditPoints\";\n\n\n//######### Couche Editor #########\n\n\nexport interface IWedEditorBoxSel extends IWedEditor {\n\tboxSelMgr?: BoxSelMgr;\n}\n\nexport interface JLDScComments extends JLastDatas {\n\tscCmtsPd?: JLDScCommentPending[]\n}\n\nexport interface JLDScCommentPending extends JLastDatas {\n\t/** Addr du thread de commentaire.*/\n\txa: IXAddr\n\t/** Contenu du comment sauvé. */\n\ttxt: string\n\t/** Offset du commentaire édité (si existe), -1 si dernier comment d'un thread existant. */\n\toffs?: number\n\t/** Date de dernière édition du commentaire (att updateTime || creationTime).*/\n\tdt?: string\n}\n\n/**\n * Agregation pour les IWedEditor.\n */\nexport function AgBoxSelEditor(cls: any): any {\n\tconst proto = cls.prototype as IWedEditorBoxSel;\n\tconst superInit = proto.initialize;\n\tproto.initialize = function (this: IWedEditorBoxSel, config: OWedEditorBoxConfig): IWedEditorBoxSel {\n\t\tsuperInit.call(this, config);\n\t\tthis.boxSelMgr = new BoxSelMgr(this);\n\t\tif (!config.disableBoxSelection) {\n\t\t\tthis.addEventListener(\"pointerdown\", onPointerDown);\n\t\t\tthis.boxSelMgr.accelKeyMgr = new AccelKeyMgr<IWedEditorBoxSel>().initFromMapActions((config.reg || REG.findReg<any>(this)).getListAsMap<Action<IWedEditorBoxSel>>(\"wed:box:sel:accelkeys\"));\n\t\t\tthis.boxSelMgr.accelKeyMgr.addAccelKey(\"c\", \"accel,shift\", copyXmlMenu);\n\t\t\tthis.addEventListener(\"keydown\", onKeyDown, false);\n\t\t\tthis.wedMgr.listeners.on(\"getFocus\", onFocus);\n\t\t\tthis.wedMgr.listeners.on(\"looseFocus\", onBlur);\n\t\t\tthis.wedMgr.listeners.on(\"clipboard\", onClipboardEvent);\n\t\t\tthis.wedMgr.listeners.on(\"readOnlyChangeAfter\", onReadOnlyChange);\n\t\t}\n\t\tthis.wedMgr.listeners.on(\"initLastDatas\", async function (wedMgr: WedMgr, lastDatas: JLDScComments) {\n\t\t\tif (!lastDatas.scCmtsPd) return;\n\t\t\t//cas rare : un comment était en cours d'édition\n\t\t\timport(\"back/edit/wed/wedlets/box/boxScComment.js\").then((exports) => {\n\t\t\t\tif (!wedMgr.rootWedlet) return; //raceCond\n\t\t\t\texports.initLastDatasScComments(wedMgr, lastDatas.scCmtsPd);\n\t\t\t});\n\t\t});\n\t\tthis.wedMgr.listeners.on(\"hookMsgAfter\", hookMsgAfter);\n\t\tthis.wedMgr.listeners.on(\"hookMsgForNextSel\", hookMsgForNextSel);\n\t\tthis.wedMgr.listeners.on(\"getCurrentSel\", getCurrentSel);\n\t\treturn this;\n\t};\n\treturn cls;\n}\n\nconst copyXmlMenu = new Action<IWedEditorBoxSel>(\"copyXml\")\n\t.setLabel(\"Copier en XML\")\n\t.setExecute((ctx: IWedEditorBoxSel, ev) => {\n\t\tconst rg = ctx.boxSelMgr.range;\n\t\tif (!rg.isCollapsed) ctx.wedMgr.writeRangeToClipboardAsXml(rg);\n\t});\n\n\n//######### Couche Wedlet #########\n\n/** Gestion de la selection 'Box' par les IWedlet.*/\nexport interface IWedletBoxSelection extends IWedlet, ITargetableWedlet {\n\tfocusWedlet(): void\n\n\tdrawBoxSelection(inSel: boolean): void\n\n\tdrawBoxSelActions(show: boolean, focusActionWidgets: HTMLElement[], what?: 'after'): void\n}\n\nexport function isWedletBoxSelection(w: IWedlet): w is IWedletBoxSelection {return w && (\"drawBoxSelection\" in w)}\n\n\n/**\n * Agregation pour les wedlets qui implémentent IWedletSingleElt.\n */\nexport function AgWedletBoxSelectionSingleElt(cls: any): any {\n\tconst proto = cls.prototype as IWedletBoxSelection & IWedletSingleElt;\n\tproto.focusWedlet = focusWedlet;\n\tproto.drawBoxSelection = wedlet_drawBoxSelection;\n\tproto.drawBoxSelActions = wedlet_drawBoxSelActions;\n\tproto.highlightFromLink = highlightFromLink;\n\treturn cls;\n}\n\n\n//######### Couche Element #########\n\n/** Gestion de la selection 'Box' par les custom elements.*/\nexport interface IEltBoxSelection extends IBoxElement, IContextMenuActionsPointer<IWedMgrPointer>, IWedFocusBarPointer {\n\n\t/**\n\t * box : container d'autres box\n\t * caret : input de type text avec caret\n\t * input : box terminal de type field sans caret (date, nombre, enum, radio, check, ptritem...)\n\t */\n\tselMode?: 'box' | 'input' | 'caret'\n\n\tdrawEltBoxSelection?(inSel: boolean): void\n\n\tdrawEltBoxSelActions?(show: boolean, focusActionWidgets: HTMLElement[], what?: 'after'): void\n\n\t/** permet au widget de spécifier un sous-element détenteur du focus principal. */\n\tfocusableElement?: HTMLElement\n\n\t/**\n\t * Listes des actions pour le menu contextuel et la focusBar.\n\t * Toute Action<IWedMgrPointer> peut être acceptée\n\t * L'implémentation par défaut diffuse le IWedlet en contexte : Action<IWedlet>.\n\t */\n\tactionsLists?: string[]\n\n\t/** Key de la Pref pour ordonner les ations. */\n\tgroupOrderPref?: string\n\n\t/** OU groupOrder explicite */\n\tgroupOrder?: string\n\n\t/**\n\t * [Optionnel] Personnalisation de l'actionContext pour le menu contextuel et la focusBar.\n\t * Par défaut, c'est le IWedlet de l'élément.\n\t */\n\tactionContext?: IWedletActionCtx\n\n\t/**\n\t * Propriétés pour le menu contextuel\n\t */\n\tctxMenuActions?: IContextMenuActions<IWedMgrPointer> | null\n\n\t/** Implémentation de la focusBar*/\n\tfocusBar?: BarActions<IWedletActionCtx> | null;\n\t/** Interne, cache du focusBar construit mutualisé par modèle. */\n\t_focusBar?: BarActions<IWedletActionCtx> | null;\n\n\t/** Surcharge des fonctions du clipboard si cet élément détient le focus. */\n\tonClipboard?(ev: ClipboardEvent): boolean\n\n\t/** Permet à un élément de type input de récupérer l'évènement capté par son container qui va lui transmettre. */\n\thandleEventFromContainer?(ev: KeyboardEvent | MouseEvent): void\n}\n\nexport function isEltBoxSelection(elt: any): elt is IEltBoxSelection {return elt instanceof Element && (\"drawEltBoxSelection\" in elt)}\n\ninterface OBoxSelectionOptions {\n\t/**\n\t * box : container d'autres box\n\t * caret : input de type text avec caret\n\t * input : box terminal de type field sans caret (date, nombre, enum, radio, check, ptritem...)\n\t */\n\tselMode?: 'box' | 'input' | 'caret'\n\n\t/**\n\t * Permet de désactiver le caractère focusable du container lui-même,\n\t * tout en gérant les boutons d'insertion/remplacement lorsque le focus est dans\n\t * sa descendance : cf box-ctn-input.\n\t * Valeur par défaut : 0 (focusable).\n\t */\n\ttabIndex?: 0 | -1\n\n\t/** Listes des actions pour le menu contextuel et la focusBar. */\n\tactionsLists?: string[]\n\n\t/** Ordonnancement des actions : via liste ou explicite */\n\tgroupOrderPref?: string\n\n\tgroupOrder?: string\n\n\tforce_ctxMenuActions?: boolean\n\tforce_focusBar?: boolean\n}\n\n/**\n * Agregation pour les IElementWedlet qui implémentent IEltBoxSelection.\n */\nexport function AgEltBoxSelection(cls: any, options: OBoxSelectionOptions): any {\n\tconst proto = cls.prototype as IEltBoxSelection;\n\tif (options.selMode) proto.selMode = options.selMode;\n\tconst connectedCallback = proto.connectedCallback;\n\tproto.connectedCallback = function (this: IEltBoxSelection) {\n\t\tif (connectedCallback) connectedCallback.call(this);\n\t\tif (!this.wedlet.wedMgr.config.noFocus) (this.focusableElement || this).tabIndex = options.tabIndex || 0; //On rend la Box focusable\n\t};\n\tproto.drawEltBoxSelection = drawEltBoxSelection;\n\tproto.drawEltBoxSelActions = drawEltBoxSelActions;\n\tif (options.actionsLists) proto.actionsLists = options.actionsLists;\n\tif (options.groupOrderPref) proto.groupOrderPref = options.groupOrderPref;\n\tif (options.groupOrder) proto.groupOrder = options.groupOrder;\n\tif (options.force_ctxMenuActions || !('ctxMenuActions' in proto)) Object.defineProperty(proto, \"ctxMenuActions\", {\n\t\tget: ctxMenuActions\n\t});\n\tif (options.force_focusBar || !('focusBar' in proto)) Object.defineProperty(proto, \"focusBar\", {\n\t\tget: focusBar\n\t});\n\treturn cls;\n}\n\n\n//######### interne Wedlets #########\n\nfunction focusWedlet(this: IWedletSingleElt & IWedletBoxSelection): HTMLElement {\n\tconst elt = getFocusable(this);\n\tif (elt) {\n\t\tWEDLET.ensureContainersUncollapsed(elt);\n\t\telt.focus();\n\t}\n\treturn elt;\n}\n\nasync function highlightFromLink(this: IWedletSingleElt, blockPos: 'nearest' | 'start') {\n\tconst elt = getFocusable(this) || this.element;\n\t//On force le decollapse d'abord: nécessaire si contenu passé en display:none ou visibility:hidden car focus() non opértaionnel.\n\tWEDLET.ensureContainersUncollapsed(elt);\n\telt.focus({preventScroll: true});\n\tBASIS.ensureVisible(elt, this.wedMgr.wedEditor.scrollContainer, blockPos);\n}\n\nfunction getFocusable(from: IWedletSingleElt): HTMLElement {\n\tlet elt = (from.element as IEltBoxSelection).focusableElement;\n\tif (!elt) {\n\t\telt = from.element;\n\t\tif (!DOM.IS_focusable(elt)) {\n\t\t\telt = DOMSH.findFlatNext(elt, elt, DOM.IS_focusable) || DOMSH.findFlatParentElt(elt, from.wedMgr.wedEditor.rootNode, DOM.IS_focusable);\n\t\t}\n\t}\n\treturn elt;\n}\n\nfunction wedlet_drawBoxSelection(this: IWedletSingleElt, inSel: boolean) {\n\tif (isEltBoxSelection(this.element)) {\n\t\tthis.element.drawEltBoxSelection(inSel);\n\t} else {\n\t\tconst parent = this.elementHost;\n\t\tif (parent) for (let ch = parent.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (IS_EltWedlet(ch) && isWedletBoxSelection(ch.wedlet)) {\n\t\t\t\tch.wedlet.drawBoxSelection(inSel);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction wedlet_drawBoxSelActions(this: IWedletBoxSelection & IWedletSingleElt, show: boolean, focusActionWidgets: HTMLElement[], what?: 'after') {\n\tif (isEltBoxSelection(this.element)) {\n\t\tthis.element.drawEltBoxSelActions(show, focusActionWidgets, what);\n\t} else if (isWedletBoxSelection(this.wedParent)) {\n\t\tthis.wedParent.drawBoxSelActions(show, focusActionWidgets, 'after');\n\t\t// let parent = this.element.delegatedHost || this.element;\n\t\t// for (let ch = parent.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t// \tif (IS_EltWedlet(ch) && isWedletBoxSelection(ch.wedlet)) {\n\t\t// \t\tch.wedlet.drawBoxSelActions(show);\n\t\t// \t}\n\t\t// }\n\t}\n}\n\n\n//######### BoxSelMgr #########\n\nexport class BoxSelMgr {\n\n\t/** Navigation clavier. */\n\taccelKeyMgr: AccelKeyMgr<IWedEditorBoxSel>;\n\n\t/** Sel courante. */\n\trange: XmlRangeState = new XmlRangeState().init(\"sel\", null, [], []);\n\n\thtmlSel: Selection = window.getSelection();\n\n\tactiveWedlet: IWedletBoxSelection | null;\n\n\tselInVirtual: boolean;\n\n\t/**\n\t * Ancre de départ de la sélection multiple (start ou end du range).\n\t * null si la sel actuelle n'est pas multiple.\n\t */\n\tprotected multiSelBaseIsStart: boolean | null = null;\n\n\t/** Widgets actifs liés au focus en cours (à supprimer sur la perte du focus) */\n\tfocusActionWidgets?: HTMLElement[] = [];\n\n\n\tconstructor(public editor: IWedEditorBoxSel) {\n\t}\n\n\tisSingleSel() {return this.activeWedlet && this.multiSelBaseIsStart === null}\n\n\tclearSel() {\n\t\tif (!this.activeWedlet) return;\n\t\tthis.xUnactiveWedlet();\n\t\tthis._drawSelMulti(this.range, false);\n\t\tconst empty = [] as IXAddr;\n\t\tthis.range.setRange(empty, empty);\n\t}\n\n\t_selHidden = false;\n\n\thideSel() {\n\t\tthis._selHidden = true;\n\t\tif (this.activeWedlet) this._drawSelSingle(this.activeWedlet, false);\n\t\tthis._drawSelMulti(this.range, false);\n\t}\n\n\tshowSel() {\n\t\tthis._selHidden = false;\n\t\tif (this.activeWedlet) this._drawSelSingle(this.activeWedlet, true);\n\t\tthis._drawSelMulti(this.range, true);\n\t}\n\n\tselectWedlet(wedletToSel: IWedletBoxSelection) {\n\t\tif (this.activeWedlet === wedletToSel && !this._selHidden) return;\n\t\tif (!wedletToSel.wedParent) return; //pas de wedlet parent, pas sélectionnable (diff foreign)\n\t\tif (this._selHidden) {\n\t\t\tthis._selHidden = false;\n\t\t} else {\n\t\t\tthis.xUnactiveWedlet();\n\t\t\tthis._drawSelMulti(this.range, false);\n\t\t}\n\t\tthis.activeWedlet = wedletToSel;\n\t\tconst anchor = wedletToSel.wedAnchor;\n\t\tif (wedletToSel.isVirtual()) {\n\t\t\tthis.selInVirtual = true;\n\t\t\tthis.range.setRange(anchor, anchor);\n\t\t} else {\n\t\t\tthis.selInVirtual = false;\n\t\t\tif (XA.isAttribute(anchor)) {\n\t\t\t\tthis.range.setRange(anchor, anchor);\n\t\t\t} else {\n\t\t\t\tthis.range.setRange(anchor, XA.newBd(anchor).incrAtDepth(-1, 1).xa);\n\t\t\t}\n\t\t}\n\t\tthis._drawSelSingle(wedletToSel, true);\n\t}\n\n\textendSelTo(wedletToSel: IWedletBoxSelection) {\n\t\tif (this._selHidden) this.showSel();\n\t\tlet extent = wedletToSel.wedAnchor;\n\t\tconst multiSelBaseWasStart = this.multiSelBaseIsStart;\n\t\tlet base = multiSelBaseWasStart === false ? this.range.end : this.range.start;\n\t\tif (!base) {\n\t\t\tthis.selectWedlet(wedletToSel);\n\t\t} else {\n\t\t\tthis.xUnactiveWedlet();\n\t\t\tthis._drawSelMulti(this.range, false);\n\t\t\tthis.selInVirtual = false;\n\t\t\tif (XA.isAttribute(base)) base = XA.up(base);\n\t\t\tif (XA.isAttribute(extent)) {\n\t\t\t\textent = XA.up(extent);\n\t\t\t\tconst wedletElt = wedletToSel.wedParent;\n\t\t\t\tif (!isWedletBoxSelection(wedletElt)) {\n\t\t\t\t\tthis.selectWedlet(wedletToSel);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twedletToSel = wedletElt;\n\t\t\t}\n\t\t\tthis.activeWedlet = wedletToSel; //courtcircuite BoxSelMgr.selectWedlet();\n\t\t\twedletToSel.focusWedlet();\n\t\t\tif (XA.isAnc(extent, base) || XA.isBefore(extent, base)) {\n\t\t\t\t//extent avant base\n\t\t\t\tif (multiSelBaseWasStart !== false) base = XA.incrAtDepth(base, -1, 1); //on passe de l'autre coté de la base\n\t\t\t\tthis.multiSelBaseIsStart = false;\n\t\t\t\tthis.range.setRange(extent, base);\n\t\t\t} else {\n\t\t\t\t//base avant extent\n\t\t\t\tif (multiSelBaseWasStart === false) base = XA.incrAtDepth(base, -1, -1); //on passe de l'autre coté de la base\n\t\t\t\textent = XA.incrAtDepth(extent, -1, 1);\n\t\t\t\tthis.multiSelBaseIsStart = true;\n\t\t\t\tthis.range.setRange(base, extent);\n\t\t\t}\n\t\t\tthis._drawSelMulti(this.range, true);\n\t\t}\n\t}\n\n\t/** ATTENTION rg.end est inclus dans la sélection. */\n\tsetSelection(rg: IXAddrRange): boolean {\n\t\tif (!rg.end || XA.isEquals(rg.start, rg.end)) {\n\t\t\t//Si sel collapsed, on passe par focusAroundXAddr pour ne pas changer la sel si ce wedlet a déjà le focus :\n\t\t\t// sinon on tue l'event 'input' et l'ins du 1er caractère dans un context virtuel d'un txt (pb beforeInput not cancelable).\n\t\t\treturn this.focusAroundXAddr(rg.start);\n\t\t}\n\t\tlet start = WEDLET.findWedlet(this.editor.wedMgr.rootWedlet, rg.start, WEDLET.FINDOPTIONS_lastAncestorIfNone);\n\t\twhile (!isWedletBoxSelection(start)) {\n\t\t\tif (start == null) return false;\n\t\t\tstart = start.wedParent;\n\t\t}\n\t\tlet end = WEDLET.findWedlet(this.editor.wedMgr.rootWedlet, rg.end, WEDLET.FINDOPTIONS_lastAncestorIfNone);\n\t\twhile (end && !isWedletBoxSelection(end)) end = end.wedParent;\n\t\tif (!end || start === end) {\n\t\t\t//pour ne pas perdre une sel interne dans ce widget.\n\t\t\treturn this.focusAroundXAddr(rg.start);\n\t\t} else {\n\t\t\tthis.selectWedlet(start);\n\t\t\tif (end) this.extendSelTo(end as IWedletBoxSelection);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/** Force la construction des offscreen en synchrone MAIS ne gère pas le cas des chargements asynchrones (XXX ajouter méth async ?). */\n\tfindAroundXAddr(xa: IXAddr): IWedletBoxSelection {\n\t\tconst find = {lastAncestorIfNone: true, wedletNotFoundDepth: -1, forceFetch: true, mainBranch: true} as OFindWedletOptions;\n\t\tlet wedlet = WEDLET.findWedlet(this.editor.wedMgr.rootWedlet, xa, find);\n\t\tif (wedlet && find.wedletNotFoundDepth > 0 && isParentWedlet(wedlet)) {\n\t\t\tconst notFound = xa[find.wedletNotFoundDepth];\n\t\t\tif (typeof notFound === 'number') {\n\t\t\t\tconst prev = wedlet.findWedletChild(notFound - 1, {mainBranch: true, forceFetch: true}) as IWedlet;\n\t\t\t\tif (prev) wedlet = prev;\n\t\t\t}\n\t\t}\n\t\twhile (!isWedletBoxSelection(wedlet)) {\n\t\t\tif (wedlet == null) return null;\n\t\t\twedlet = wedlet.wedParent;\n\t\t}\n\t\treturn wedlet;\n\t}\n\n\tfocusAroundXAddr(xa: IXAddr): boolean {\n\t\tconst wedlet = this.findAroundXAddr(xa);\n\t\t//On vérifie que le focus actuel ne soit pas déjà dans notre cible (cas des virtual wedlets qui se concrétisent ou des box-inputs).\n\t\tif (isWedletSingleElt(wedlet)) {\n\t\t\tconst elt = wedlet.element as HTMLElement;\n\t\t\tif (elt.matches(\":focus-within\")) {\n\t\t\t\t//On s'assure d'etre dans le viewPort.\n\t\t\t\tconst focused = DOMSH.findDeepActiveElement(DOMSH.findDocumentOrShadowRoot(elt));\n\t\t\t\t//console.log(\"focused:::::\", focused);\n\t\t\t\tif (focused) BASIS.ensureVisible(focused as HTMLElement, this.editor.scrollContainer, \"nearest\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (wedlet) {\n\t\t\twedlet.focusWedlet();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfocusFirst(root: IParentWedlet) {\n\t\tfunction findFocusFirst(w: IChildWedlet): 'stop' | void {\n\t\t\tif (isWedletBoxSelection(w)) {\n\t\t\t\tw.focusWedlet();\n\t\t\t\treturn \"stop\";\n\t\t\t}\n\t\t\tif (isParentWedlet(w)) (w as IParentWedlet).visitWedletChildren(-1, Infinity, findFocusFirst, WEDLET.VISITOPTIONS_mainBranch);\n\t\t}\n\n\t\troot.visitWedletChildren(-1, Infinity, findFocusFirst, WEDLET.VISITOPTIONS_mainBranch);\n\t}\n\n\t/** Suite à chgt state readOnly ou passage d'un contenu virtuel à réel... */\n\tredrawSelection() {\n\t\tif (this._selHidden) return;\n\t\tif (isWedletSingleElt(this.activeWedlet) && (!this.activeWedlet.element || !this.activeWedlet.element.isConnected)) {\n\t\t\t//this.activeWedlet perdu, on sort XXX envisager api IWeldet.isConnected ?\n\t\t\tthis.clearSel();\n\t\t\treturn;\n\t\t}\n\t\tif (this.isSingleSel()) {\n\t\t\tif (this.selInVirtual && !this.activeWedlet.isVirtual()) {\n\t\t\t\t//On est plus virtuel\n\t\t\t\tconst wedlet = this.activeWedlet;\n\t\t\t\tthis.clearSel();\n\t\t\t\tthis.selectWedlet(wedlet);\n\t\t\t} else {\n\t\t\t\tthis._drawSelSingle(this.activeWedlet, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Change la sélection SANS FOCUS. */\n\tmarkWedlet(wedletToSel: IWedletBoxSelection, ensureVisible: boolean = false) {\n\t\tif (!wedletToSel) return;\n\t\tthis.xUnactiveWedlet();\n\t\tif (this._selHidden) {\n\t\t\tthis._selHidden = false;\n\t\t} else {\n\t\t\tthis._drawSelMulti(this.range, false);\n\t\t}\n\t\tconst anchor = wedletToSel.wedAnchor;\n\t\tif (wedletToSel.isVirtual()) {\n\t\t\tthis.selInVirtual = true;\n\t\t\tthis.range.setRange(anchor, anchor);\n\t\t} else {\n\t\t\tthis.selInVirtual = false;\n\t\t\tif (XA.isAttribute(anchor)) {\n\t\t\t\tthis.range.setRange(anchor, anchor);\n\t\t\t} else {\n\t\t\t\tthis.range.setRange(anchor, XA.newBd(anchor).incrAtDepth(-1, 1).xa);\n\t\t\t}\n\t\t}\n\t\tif (ensureVisible && isWedletSingleElt(wedletToSel)) {\n\t\t\tBASIS.ensureVisible(wedletToSel.element, this.editor.scrollContainer, \"nearest\");\n\t\t}\n\t\twedletToSel.drawBoxSelection(true);\n\t}\n\n\t/** Supprime le contenu de la sélection courante. */\n\tdeleteContentSelection(batchIn?: IDocBatch) {\n\t\tthis._drawSelMulti(this.range, false);\n\t\tconst batch = batchIn || this.editor.wedMgr.docHolder.newBatch();\n\t\tif (XA.isAttribute(this.range.start)) {\n\t\t\t//sel unique d'un attribut\n\t\t\tconst wedlet = WEDLET.findWedlet(this.editor.wedMgr.rootWedlet, this.range.start);\n\t\t\tif (wedlet) {\n\t\t\t\tif (isEditableWedlet(wedlet) && wedlet.editMode !== EWedletEditMode.write) return;\n\t\t\t\tconst xa = wedlet.wedParent.onChildEmptied((subXa: IXAddr) => XA.isEquals(this.range.start, subXa));\n\t\t\t\tif (xa) batch.deleteSequence(xa, 1);\n\t\t\t\telse batch.setAttr(this.range.start, null);\n\t\t\t} //else batch.setAttr(this.range.start, null); pourquoi ? pb mode readonly non controlable.\n\t\t} else if (!this.range.isCollapsed) {\n\t\t\tlet allowed = true;\n\t\t\tWEDLET.visitRange(this.editor.wedMgr.rootWedlet, this.range, w => {\n\t\t\t\tif (isEditableWedlet(w) && w.editMode !== EWedletEditMode.write) {\n\t\t\t\t\tallowed = false;\n\t\t\t\t\treturn 'stop';\n\t\t\t\t}\n\t\t\t}, WEDLET.VISITOPTIONS_mainBranch);\n\t\t\tif (!allowed) return;\n\t\t\tbatch.deleteRange(WEDLET.absorbContainersOnDelete(this.editor.wedMgr.rootWedlet, this.range));\n\t\t}\n\t\tif (!batchIn) batch.doBatch();\n\t}\n\n\tvisitSelectedWedlets<T>(cb: (w: IWedlet) => T): T | undefined {\n\t\tif (XA.isAttribute(this.range.start)) {\n\t\t\t//Sel d'un seul attribut\n\t\t\tconst attWedlet = WEDLET.findWedlet(this.editor.wedMgr.rootWedlet, this.range.start);\n\t\t\tif (isWedletBoxSelection(attWedlet)) return cb(attWedlet);\n\t\t} else {\n\t\t\t//Sel d'un range\n\t\t\tlet r: T;\n\t\t\tWEDLET.visitRange(this.editor.wedMgr.rootWedlet, this.range, w => {\n\t\t\t\tif (isWedletBoxSelection(w)) {\n\t\t\t\t\tr = cb(w);\n\t\t\t\t\tif (r !== undefined) return 'stop';\n\t\t\t\t}\n\t\t\t}, WEDLET.VISITOPTIONS_mainBranch);\n\t\t\treturn r;\n\t\t}\n\n\t}\n\n\tprotected _drawSelSingle(wedletToSel: IWedletBoxSelection, show: boolean) {\n\t\tthis.focusActionWidgets.forEach(elt => {try {elt.remove()} catch {}});\n\t\tthis.focusActionWidgets.length = 0;\n\t\twedletToSel.drawBoxSelection(show);\n\t\twedletToSel.drawBoxSelActions(show, this.focusActionWidgets);\n\t}\n\n\tprotected _drawSelMulti(range: IXAddrRange, select: boolean) {\n\t\tif (!select) this.multiSelBaseIsStart = null;\n\t\tif (XA.isAttribute(range.start)) {\n\t\t\t//Sel d'un seul attribut\n\t\t\tconst attWedlet = WEDLET.findWedlet(this.editor.wedMgr.rootWedlet, range.start);\n\t\t\tif (isWedletBoxSelection(attWedlet)) attWedlet.drawBoxSelection(select);\n\t\t} else {\n\t\t\t//Sel d'un range\n\t\t\tWEDLET.visitRange(this.editor.wedMgr.rootWedlet, range, w => {\n\t\t\t\tif (isWedletBoxSelection(w)) w.drawBoxSelection(select);\n\t\t\t}, WEDLET.VISITOPTIONS_mainBranch);\n\t\t}\n\t}\n\n\tprotected xUnactiveWedlet() {\n\t\tif (this.activeWedlet) {\n\t\t\tif (!this._selHidden) this._drawSelSingle(this.activeWedlet, false);\n\t\t\tthis.activeWedlet = null;\n\t\t\tthis.selInVirtual = false;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn this.range.toString();\n\t}\n\n}\n\n//######### Default Actions #########\n\nREG.reg.registerSvc('wedBoxSelDelete', 1, new Action<IWedEditorBoxSel | IWedletActionCtx>('wedBoxSelDelete')\n\t.setLabel(\"Supprimer la sélection\")\n\t.setIcon(\"/@skin@/edit/wed/deleteTag.svg\")\n\t.setVisible((ctx: IWedEditorBoxSel | IWedletActionCtx) => {\n\t\tconst wedMgr = ctx.wedMgr;\n\t\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\t\treturn boxSelMgr && !boxSelMgr.selInVirtual && !(wedMgr.wedEditor.config as OWedEditorBoxConfig).disableBoxSelection;\n\t})\n\t.setEnabled((ctx: IWedEditorBoxSel | IWedletActionCtx) => !ctx.wedMgr.readOnly)\n\t.setExecute(function (this: Action<IWedEditorBoxSel | IWedletActionCtx>, ctx: IWedEditorBoxSel | IWedletActionCtx, ev: Event) {\n\t\tconst boxSelMgr = (ctx.wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\t\tif (boxSelMgr) boxSelMgr.deleteContentSelection();\n\t}));\n\n\nREG.reg.registerSvc('wedBoxSelExclude', 1, new Action<IWedEditorBoxSel | IWedletActionCtx>('wedBoxSelExclude')\n\t.setLabel(\"Exclure la sélection\")\n\t.setIcon(\"/@skin@/edit/wed/box/excludeTag.svg\")\n\t.setVisible((ctx: IWedEditorBoxSel | IWedletActionCtx) => {\n\t\tconst wedMgr = ctx.wedMgr;\n\t\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\t\treturn (boxSelMgr && !boxSelMgr.selInVirtual && !(wedMgr.wedEditor.config as OWedEditorBoxConfig).disableBoxSelection && !boxSelMgr.range.isCollapsed && XA.isInSameSeq(boxSelMgr.range.start, boxSelMgr.range.end));\n\t})\n\t.setEnabled((ctx) => {\n\t\t//setVisible() a déjà vérifié une sélection valide (sameSeq en particulier),\n\t\t//boxSelMgr.activeWedlet est donc nécessairement un des wedlets sélectionnés, on peut remonter au père pour valider la permission en écriture.\n\t\treturn WEDLET.resolveEditMode((ctx.wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr.activeWedlet.wedParent) === EWedletEditMode.write;\n\t})\n\t.setExecute(function (this: Action<IWedEditorBoxSel | IWedletActionCtx>, ctx: IWedEditorBoxSel | IWedletActionCtx, ev: Event) {\n\t\tconst wedMgr = ctx.wedMgr;\n\t\tconst rg = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr.range;\n\t\tif (!rg.isCollapsed && XA.isInSameSeq(rg.start, rg.end)) {\n\t\t\tconst txt = wedMgr.docHolder.exportRange(rg, 'application/xml', {rootTagNs: \"scenari.eu:exclude:1.0\", rootTagName: \"sexc:exclude\"});\n\t\t\tconst batch = wedMgr.docHolder.newBatch(rg);\n\t\t\tbatch.deleteSequence(rg.start, XA.last(rg.end) as number - (XA.last(rg.start) as number));\n\t\t\tbatch.insertJml(rg.start, [{'': JML.COMMENT, '=': DOM.escapeComment(txt)}]);\n\t\t\tbatch.doBatch();\n\t\t}\n\t}));\n\n//XXX à réactiver quand https://www.w3.org/TR/clipboard-apis/#async-clipboard-api généralisé.\n// reg.registerSvc('wedBoxSelCopy', 1, new Action<IWedEditorBoxSel>('wedBoxSelCopy').setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n// \tlet from = ev.composedPath()[0];\n// \tif (IS_EltWedlet(from) && isWedletBoxSelection(from.wedlet)) {\n// \t\t...\n// \t\tev.stopImmediatePropagation();\n// \t\tev.preventDefault();\n// \t}\n// }));\n//\n// reg.registerSvc('wedBoxSelCut', 1, new Action<IWedEditorBoxSel>('wedBoxSelCut').setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n// \tlet from = ev.composedPath()[0];\n// \tif (IS_EltWedlet(from) && isWedletBoxSelection(from.wedlet)) {\n// \t\t...\n// \t\tev.stopImmediatePropagation();\n// \t\tev.preventDefault();\n// \t}\n// }));\n//\n// reg.registerSvc('wedBoxSelPaste', 1, new Action<IWedEditorBoxSel>('wedBoxSelPaste').setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n// \tlet from = ev.composedPath()[0];\n// \tif (IS_EltWedlet(from) && isWedletBoxSelection(from.wedlet)) {\n// \t\t...\n// \t\tev.stopImmediatePropagation();\n// \t\tev.preventDefault();\n// \t}\n// }));\n\n//######### Default AccelKeys #########\n\nconst delFromKeyboard = new ActionWrapperFromSvc('deleteBox')\n\t.setWrappedSvcCd('wedBoxSelDelete')\n\t.setExecute(function (this: ActionWrapperFromSvc<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n\t\tconst from = ev.composedPath()[0];\n\t\tif (IS_EltWedlet(from) && isWedletBoxSelection(from.wedlet)) {\n\t\t\tthis.getWrapped(ctx).execute(ctx, ev);\n\t\t} else return 'noPreventDefault';\n\t});\n\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'Delete', 1, delFromKeyboard);\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'Backspace', 1, delFromKeyboard);\n\n//XXX à réactiver quand https://www.w3.org/TR/clipboard-apis/#async-clipboard-api généralisé.\n// reg.addSvcToList(\"wed:box:sel:accelkeys\", 'C-accel', 1, 'wedBoxSelCopy');\n// reg.addSvcToList(\"wed:box:sel:accelkeys\", 'X-accel', 1, 'wedBoxSelCut');\n// reg.addSvcToList(\"wed:box:sel:accelkeys\", 'V-accel', 1, 'wedBoxSelPaste');\n\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'Escape', 1, new Action<IWedEditorBoxSel>(\"boxEscape\").setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n\tconst from = ev.composedPath().find((node: IEltBoxSelection, i: number) => node.selMode === 'box' && i > 0) as IElementWedlet;\n\tif (from) {\n\t\t(from.wedlet as IWedletBoxSelection).focusWedlet();\n\t} else return 'noStopPropag-noPreventDefault';\n}));\n\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'ArrowUp', 1, new Action<IWedEditorBoxSel>(\"boxArrowUp\").setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n\tconst from = ev.composedPath()[0];\n\tif (isEltBoxSelection(from)) {\n\t\tif (from instanceof HTMLElement) {\n\t\t\tconst scrollCtn = ctx.scrollContainer;\n\t\t\tif (scrollCtn) {\n\t\t\t\tconst scrollRect = scrollCtn.getBoundingClientRect();\n\t\t\t\tconst rect = (from as HTMLElement).getBoundingClientRect();\n\t\t\t\tif (rect.top < scrollRect.top) {\n\t\t\t\t\tscrollCtn.scrollBy(0, -Math.min(scrollRect.height * .8, scrollRect.top - rect.top + scrollRect.height * .1));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst prev = DOMSH.findFlatPrevUncle(from, ctx.rootNode, isBox);\n\t\tif (prev) {\n\t\t\t((prev as IEltBoxSelection).wedlet as IWedletBoxSelection).focusWedlet();\n\t\t\tev.preventDefault();\n\t\t} else if (ctx.config.crossNav) return 'noStopPropag-noPreventDefault';\n\t} else return 'noPreventDefault';\n}));\n\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'ArrowDown', 1, new Action<IWedEditorBoxSel>(\"ArrowDown\").setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n\tconst from = ev.composedPath()[0];\n\tif (isEltBoxSelection(from)) {\n\t\tif (from instanceof HTMLElement) {\n\t\t\tconst scrollCtn = ctx.scrollContainer;\n\t\t\tif (scrollCtn) {\n\t\t\t\tconst scrollRect = scrollCtn.getBoundingClientRect();\n\t\t\t\tconst rect = (from as HTMLElement).getBoundingClientRect();\n\t\t\t\tif (rect.bottom > scrollRect.bottom) {\n\t\t\t\t\tscrollCtn.scrollBy(0, Math.min(scrollRect.height * .8, rect.bottom - scrollRect.bottom + scrollRect.height * .1));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst next = DOMSH.findFlatNextUncle(from, ctx.rootNode, isBox);\n\t\tif (next) {\n\t\t\t((next as IEltBoxSelection).wedlet as IWedletBoxSelection).focusWedlet();\n\t\t\tev.preventDefault();\n\t\t} else if (ctx.config.crossNav) return 'noStopPropag-noPreventDefault';\n\t} else return 'noPreventDefault';\n}));\n\n\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'ArrowLeft', 1, new Action<IWedEditorBoxSel>(\"ArrowLeft\").setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n\tconst from = ev.composedPath()[0];\n\tif (isEltBoxSelection(from)) {\n\t\tconst prev = DOMSH.findFlatPrevious(from, ctx.rootNode, isBox);\n\t\tif (prev) {\n\t\t\t((prev as IEltBoxSelection).wedlet as IWedletBoxSelection).focusWedlet();\n\t\t\tev.preventDefault();\n\t\t} else if (ctx.config.crossNav) return 'noStopPropag-noPreventDefault';\n\t} else return 'noPreventDefault';\n}));\n\nREG.reg.addToList(\"wed:box:sel:accelkeys\", 'ArrowRight', 1, new Action<IWedEditorBoxSel>(\"ArrowRight\").setExecute(function (this: Action<IWedEditorBoxSel>, ctx: IWedEditorBoxSel, ev: Event) {\n\tconst from = ev.composedPath()[0];\n\tif (isEltBoxSelection(from)) {\n\t\tconst next = DOMSH.findFlatNext(from, ctx.rootNode, isBox);\n\t\tif (next) {\n\t\t\t(next.wedlet as IWedletBoxSelection).focusWedlet();\n\t\t\tev.preventDefault();\n\t\t} else if (ctx.config.crossNav) return 'noStopPropag-noPreventDefault';\n\t} else return 'noPreventDefault';\n}));\n\nfunction isBox(n: Node): n is IEltBoxSelection {return isEltBoxSelection(n) && n.selMode === 'box' && getComputedStyle(n).display !== 'none'}\n\n//######### interne IEltBoxSelection #########\n\nfunction drawEltBoxSelection(this: IEltBoxSelection, inSel: boolean) {\n\tif (this.selMode === 'box') {\n\t\tif (inSel) this.setAttribute(\"selected\", \"\");\n\t\telse this.removeAttribute(\"selected\");\n\t}\n}\n\nfunction drawEltBoxSelActions(this: IEltBoxSelection, show: boolean, focusActionWidgets: HTMLElement[], what?: 'after') {\n\tif (!show || !WEDLET.isWritableWedlet(this.wedlet.wedParent) || this.hasAttribute(\"hide-actions\")) return;\n\tconst descEditMode = (isEditableWedlet(this.wedlet) && \"getEditModeForDesc\" in this.wedlet) ? this.wedlet.getEditModeForDesc(null) : undefined;\n\tconst insideEditable = (descEditMode ? descEditMode.editMode === EWedletEditMode.write || descEditMode.editMode === EWedletEditMode.na : true) && WEDLET.isWritableWedlet(this.wedlet);\n\tconst addForVirtualNode = (wedlet: IVirtualisableWedlet, wedMgr: WedMgr, target: IElementWedlet): boolean => {\n\t\tif (!wedlet.wedParent || (this === target && wedlet.element.hasAttribute(\"replace-here\"))) {\n\t\t\t//On exclu la recherche d'alternatives si on est dans un contexte d'un replace-in forcé (widget porté par le père).\n\t\t\treturn false;\n\t\t}\n\t\tlet structs: ISkStructDef[];\n\t\tif (wedlet.model.nodeType === ENodeType.attribute) {\n\t\t\tstructs = wedMgr.docHolder.getAlternateStructs(wedlet.wedParent.wedAnchor, 0, ENodeType.attribute, wedlet.model.nodeName, WEDLET.buildVirtualPath(wedlet.wedParent) as Array<IJmlObj>);\n\t\t} else if (wedlet.wedParent.isVirtual()) {\n\t\t\tstructs = wedMgr.docHolder.getAlternateStructs(wedlet.wedParent.wedAnchor, wedlet.getVirtualXaPart() as number, ENodeType.element, wedlet.model.nodeName, WEDLET.buildVirtualPath(wedlet.wedParent) as Array<IJmlObj>);\n\t\t} else {\n\t\t\t//context parent non virtuel, on cherche tout ce qui est insérable à ce point (donc aussi ce qui peut remplacer ce wedlet virtuel)\n\t\t\tconst insertables = wedMgr.docHolder.getInsertableStructs(wedlet.wedParent.wedAnchor, wedlet.getVirtualXaPart() as number, null, this.getAttribute(\"replace-in\") != null);\n\t\t\tif (insertables[1]) {\n\t\t\t\tinsertables[1].push(...insertables[0]);\n\t\t\t\tstructs = insertables[1];\n\t\t\t} else {\n\t\t\t\tstructs = insertables[0];\n\t\t\t}\n\t\t}\n\t\tif (WEDLET.cleanupStructList(structs, WEDLET.findVirtualWedletsBefore(target, true), WEDLET.isTextBindBefore(target)) === 0) return false;\n\t\tif (WEDLET.cleanupStructList(structs, WEDLET.findVirtualWedletsAfter(target), WEDLET.isTextBindAfter(target)) === 0) return false;\n\t\tif (this !== target) {\n\t\t\t//Remplacement d'un fils skippped.\n\t\t\tinsertReplaceBtnIn(wedMgr, this, this.getAttribute(\"replace-in\"), wedlet, structs, focusActionWidgets);\n\t\t} else {\n\t\t\tfocusActionWidgets.push(createInsertBtn(wedMgr, 'middle', structs, target, GFX.getContainerOrient(DOMSH.getParentElt(target))));\n\t\t}\n\t\treturn true;\n\t};\n\n\tconst wedlet = this.wedlet;\n\tconst wedMgr = wedlet.wedMgr;\n\tif (wedlet.wedParent) {\n\t\tconst xaPart = wedlet.xaPart;\n\t\t//on n'est pas à la racine\n\t\tlet countBefore: number, countAfter: number;\n\t\tif (what !== 'after') {\n\t\t\tif (typeof xaPart === 'number' || typeof xaPart === 'string') {\n\t\t\t\tlet structsBefore: ISkStructDef[], structsAfter: ISkStructDef[], structsReplace: ISkStructDef[];\n\t\t\t\t//On exclu la recherche d'alternatives si on est dans un contexte d'un replace-in forcé (widget porté par le père).\n\t\t\t\tconst doAlterPart = isWedletSingleElt(wedlet) && wedlet.element.hasAttribute(\"replace-here\") ? undefined : xaPart;\n\t\t\t\tif (typeof xaPart === 'number') {\n\t\t\t\t\t//On est ni attribut ni virtuel.\n\t\t\t\t\t[structsBefore, structsAfter, structsReplace] = wedMgr.docHolder.getInsertableStructs(wedlet.wedParent.wedAnchor, xaPart, xaPart + 1, false, doAlterPart);\n\t\t\t\t\tif (wedlet.model.nodeType == ENodeType.comment) {\n\t\t\t\t\t\t//Un commentaire n'est pas structurant, donc on élimine les virtuals et textes avant ET après.\n\t\t\t\t\t\t//console.log(\"wedlet.model.nodeType::::::\", wedlet.model.nodeType);\n\t\t\t\t\t\tconst virtuals = WEDLET.findVirtualWedletsAfter(this, WEDLET.findVirtualWedletsBefore(this));\n\t\t\t\t\t\tconst isText = WEDLET.isTextBindBefore(this) || WEDLET.isTextBindAfter(this);\n\t\t\t\t\t\tcountBefore = WEDLET.cleanupStructList(structsBefore, virtuals, isText);\n\t\t\t\t\t\tcountAfter = WEDLET.cleanupStructList(structsAfter, virtuals, isText);\n\t\t\t\t\t\tstructsReplace = null; //pas de remplacement possible.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcountBefore = WEDLET.cleanupStructList(structsBefore, WEDLET.findVirtualWedletsBefore(this), WEDLET.isTextBindBefore(this));\n\t\t\t\t\t\tcountAfter = WEDLET.cleanupStructList(structsAfter, WEDLET.findVirtualWedletsAfter(this), WEDLET.isTextBindAfter(this));\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"getInsertableStructs:::\", structsBefore, structsAfter, structsReplace);\n\t\t\t\t} else if (doAlterPart != null) {\n\t\t\t\t\t//On est un attribut non virtuel => remplacement possibles\n\t\t\t\t\tstructsReplace = wedMgr.docHolder.getAlternateStructs(wedlet.wedParent.wedAnchor, 0, ENodeType.attribute, doAlterPart as string);\n\t\t\t\t}\n\t\t\t\tif (structsReplace && structsReplace.length === 0) structsReplace = null;\n\t\t\t\tif (countBefore > 0 || countAfter > 0 || structsReplace != null) {\n\t\t\t\t\tconst ctnOrient = GFX.getContainerOrient(DOMSH.getParentElt(this));\n\t\t\t\t\tlet forceSpace = 0;\n\t\t\t\t\tif (ctnOrient === \"v\" && structsReplace != null && countBefore > 0 && countAfter > 0) {\n\t\t\t\t\t\t//Pb de positionnement si 3 btns et haueur faible.\n\t\t\t\t\t\tconst fontSize = parseInt(getComputedStyle(this).fontSize);\n\t\t\t\t\t\tconst height = this.clientHeight;\n\t\t\t\t\t\tlet missingSp = fontSize * 2.5 - height;\n\t\t\t\t\t\tif (missingSp > 0) forceSpace = missingSp / 2 / fontSize;\n\t\t\t\t\t}\n\t\t\t\t\tif (countBefore > 0) focusActionWidgets.push(createInsertBtn(wedMgr, 'before', structsBefore, this, ctnOrient, forceSpace));\n\t\t\t\t\tif (structsReplace != null) focusActionWidgets.push(createReplaceBtn(wedMgr, structsReplace, this, ctnOrient, countBefore > 0 ? .8 - forceSpace : 0));\n\t\t\t\t\tif (countAfter > 0) focusActionWidgets.push(createInsertBtn(wedMgr, 'after', structsAfter, this, ctnOrient, forceSpace));\n\t\t\t\t}\n\t\t\t} else if (wedlet.isVirtual()) {\n\t\t\t\taddForVirtualNode(wedlet, wedMgr, this);\n\t\t\t}\n\t\t\tif (insideEditable) {\n\t\t\t\tconst insChildren = wedlet.model.config.getAttribute(\"insertUiForChildren\");\n\t\t\t\tconst insAtts = wedlet.model.config.getAttribute(\"insertUiForAtts\");\n\t\t\t\tif ((insChildren || insAtts) && isWedletSingleElt(wedlet)) {\n\t\t\t\t\t//Demande de gestion de l'insertion de fils\n\t\t\t\t\tconst subStructs = wedMgr.docHolder.getInsertableStructsAll(insChildren ? insAtts ? 'both' : 'children' : 'atts', wedlet.wedAnchor, WEDLET.buildVirtualPath(wedlet) as Array<IJmlObj>);\n\t\t\t\t\tif (insAtts) {\n\t\t\t\t\t\tconst s = subStructs[insChildren ? 1 : 0];\n\t\t\t\t\t\tif (WEDLET.cleanupStructList(s, WEDLET.findAllChildrenVirtualWedlets(this)) > 0) { //on élimine les wedlets virtuels déjà affichés\n\t\t\t\t\t\t\tfocusActionWidgets.push(createInsertChildBtn(wedMgr, s, wedlet.element, insAtts, \"att\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (insChildren && WEDLET.cleanupStructList(subStructs[0], WEDLET.findAllChildrenVirtualWedlets(this)) > 0) { //on élimine les wedlets virtuels déjà affichés\n\t\t\t\t\t\tfocusActionWidgets.push(createInsertChildBtn(wedMgr, subStructs[0], wedlet.element, insChildren));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!countAfter && wedlet.model.nodeType !== ENodeType.attribute) {\n\t\t\t//On va chercher un ancêtre après qui permettrait une insertion (pour faciliter la poursuite de l'écriture).\n\t\t\tconst predicate = (elt: Element): elt is Element => {\n\t\t\t\tif (isEltBoxSelection(elt) && !elt.wedlet.isVirtual()) {\n\t\t\t\t\tconst parent = elt.wedlet.wedParent;\n\t\t\t\t\tif (parent && parent.wedParent && WEDLET.isWritableWedlet(parent.wedParent) && isWedletSingleElt(parent) && !parent.element.hasAttribute(\"hide-actions\")) {\n\t\t\t\t\t\tconst [structsAfter] = wedMgr.docHolder.getInsertableStructs(parent.wedAnchor, elt.wedlet.xaPart as number + 1);\n\t\t\t\t\t\tcountAfter = WEDLET.cleanupStructList(structsAfter, WEDLET.findVirtualWedletsAfter(elt), WEDLET.isTextBindAfter(elt));\n\t\t\t\t\t\tif (countAfter > 0) {\n\t\t\t\t\t\t\tfocusActionWidgets.push(createInsertBtn(wedMgr, 'after', structsAfter, elt, GFX.getContainerOrient(DOMSH.getParentElt(elt))));\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\t\tif (what !== 'after') DOMSH.findFlatParentElt((wedlet as IWedletSingleElt).element, wedMgr.wedEditor.rootNode, predicate);\n\t\t\telse DOMSH.findFlatParentEltOrSelf((wedlet as IWedletSingleElt).element, wedMgr.wedEditor.rootNode, predicate);\n\t\t}\n\n\t\tconst replIn = insideEditable ? (wedlet as IWedletSingleElt).element.getAttribute(\"replace-in\") : null;\n\t\tif (replIn != null) {\n\t\t\t//Recherche des containers skipped fils pour activer le ReplaceBtn\n\t\t\tlet elt = DOM.findLastChild((wedlet as IWedletSingleElt).elementHost, replaceInSelector1) || DOM.findLastChild((wedlet as IWedletSingleElt).elementHost, replaceInSelector2);\n\t\t\twhile (elt) {\n\t\t\t\tconst currWedlet = elt.wedlet;\n\t\t\t\tif (currWedlet.isVirtual()) {\n\t\t\t\t\tif (addForVirtualNode(currWedlet, wedMgr, elt)) break;\n\t\t\t\t} else if (currWedlet.wedParent) {\n\t\t\t\t\tlet structsReplace: ISkStructDef[];\n\t\t\t\t\tif (currWedlet.model.nodeType === ENodeType.attribute) {\n\t\t\t\t\t\tstructsReplace = wedMgr.docHolder.getAlternateStructs(currWedlet.wedParent.wedAnchor, 0, ENodeType.attribute, currWedlet.xaPart as string);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstructsReplace = wedMgr.docHolder.getAlternateStructs(currWedlet.wedParent.wedAnchor, currWedlet.xaPart as number, currWedlet.model.nodeType as ENodeType, currWedlet.wedNodeName || currWedlet.model.nodeName);\n\t\t\t\t\t}\n\t\t\t\t\tif (structsReplace != null) {\n\t\t\t\t\t\tinsertReplaceBtnIn(wedMgr, this, replIn, currWedlet, structsReplace, focusActionWidgets);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//On s'enfonce dans la hiérarchie\n\t\t\t\telt = DOM.findLastChild((currWedlet as IWedletSingleElt).elementHost, replaceInSelector1) || DOM.findLastChild((currWedlet as IWedletSingleElt).elementHost, replaceInSelector2);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction replaceInSelector1(elt: any): elt is IElementWedlet {\n\treturn elt.hasAttribute(\"replace-here\") && IS_EltWedlet(elt);\n}\n\nfunction replaceInSelector2(elt: any): elt is IElementWedlet {\n\treturn IS_EltWedlet(elt) && !isEltBoxSelection(elt);\n}\n\ninterface IBoxBtns {\n\tstructs?: ISkStructDef[]\n\tstructPos?: 'before' | 'after' | 'replace' | 'child'\n\t/** Pour les remplacements dans les fils. */\n\twedlet?: IWedlet\n}\n\n/** Bouton injectés autour du box sélectionné. */\nfunction createInsertBtn(wedMgr: WedMgr, pos: 'before' | 'after' | 'middle', structs: ISkStructDef[], target: HTMLElement, ctnOrient: 'h' | 'v', forceSpace?: number): HTMLElement {\n\tconst btn = document.createElement(\"box-btnadd\") as HTMLElement & IBoxBtns;\n\t// BASIS.makeClickable(btn);\n\t// btn.setAttribute(\"role\", \"button\");\n\tbtn.setAttribute(\"pos\", pos);\n\tconst sr = btn.attachShadow(DOMSH.SHADOWDOM_INIT);\n\twedMgr.reg.installSkin(btn.localName, sr);\n\tsr.appendChild(document.createTextNode(pos === 'middle' ? \"+⇄\" : \"+\"));\n\tbtn.title = pos === 'before' ? \"Insérer avant...\" : (pos === 'after' ? \"Insérer après...\" : \"Insérer autour ou remplacer...\");\n\tbtn.addEventListener(\"pointerdown\", execBtnAdd);\n\tbtn.structs = structs;\n\tbtn.structPos = pos === 'middle' ? 'before' : pos;\n\tbtn.style.position = \"absolute\";\n\tif (ctnOrient === 'v') {\n\t\tDOM.setStyleStart(btn, \"-1em\", target);\n\t\tswitch (pos) {\n\t\tcase 'after':\n\t\t\tbtn.style.bottom = forceSpace ? `-${.8 + forceSpace}em` : \"-.8em\";\n\t\t\tbreak;\n\t\tcase 'before':\n\t\t\tbtn.style.top = forceSpace ? `-${.8 + forceSpace}em` : \"-.8em\";\n\t\t\tbreak;\n\t\tcase 'middle':\n\t\t\t//btn.style.top = \".5em\";\n\t\t\tbreak;\n\t\t}\n\t} else {\n\t\tbtn.style.top = \"-1em\";\n\t\tswitch (pos) {\n\t\tcase 'after':\n\t\t\tDOM.setStyleEnd(btn, \"-1em\", target);\n\t\t\tbreak;\n\t\tcase 'before':\n\t\t\tDOM.setStyleStart(btn, \"-1em\", target);\n\t\t\tbreak;\n\t\tcase 'middle':\n\t\t\tDOM.setStyleStart(btn, \"50%\", target);\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst parent = target.shadowRoot || target;\n\tDOM.setStyle(target, \"position\", \"relative\");\n\tparent.insertBefore(btn, parent.firstChild); //pos === 'after' ? null :\n\treturn btn;\n}\n\nfunction createInsertChildBtn(wedMgr: WedMgr, structs: ISkStructDef[], target: HTMLElement, parentSel: string, pos: 'child' | 'att' = \"child\"): HTMLElement {\n\tconst btn = document.createElement(\"box-btnadd\") as HTMLElement & IBoxBtns;\n\tbtn.setAttribute(\"pos\", pos);\n\tconst sr = btn.attachShadow(DOMSH.SHADOWDOM_INIT);\n\twedMgr.reg.installSkin(btn.localName, sr);\n\tsr.appendChild(document.createTextNode(\"+\"));\n\tbtn.structs = structs;\n\tbtn.structPos = 'child';\n\tbtn.title = pos === \"child\" ? \"Insérer dedans...\" : \"Insérer un attribut...\";\n\tbtn.style.position = pos === \"child\" ? \"absolute\" : \"relative\";\n\tbtn.addEventListener(\"pointerdown\", execBtnAdd);\n\tDOM.setStyle(target, \"position\", \"relative\");\n\t((parentSel && target.shadowRoot?.querySelector(parentSel)) || target.shadowRoot || target).appendChild(btn);\n\treturn btn;\n}\n\n/** Bouton inséré en fils lorsque que le fils est skipped mais peut être remplacé (ex/internalisation). */\nfunction insertReplaceBtnIn(wedMgr: WedMgr, parentElt: IEltBoxSelection, insPath: string, wedlet: IWedlet, structs: ISkStructDef[], focusActionWidgets: HTMLElement[]) {\n\tDOM.setStyle(parentElt, \"position\", \"relative\");\n\tconst btn = document.createElement(\"box-btnreplace-in\") as HTMLElement & IBoxBtns;\n\tconst sr = btn.attachShadow(DOMSH.SHADOWDOM_INIT);\n\twedMgr.reg.installSkin(\"box-btnreplace\", sr);\n\tsr.appendChild(document.createTextNode(\"⇄\"));\n\tbtn.title = \"Remplacer...\";\n\tbtn.wedlet = wedlet;\n\tbtn.addEventListener(\"pointerdown\", wedlet.isVirtual() ? execBtnAdd : execBtnReplace);\n\tbtn.structs = structs;\n\tbtn.structPos = 'before';\n\tconst p = parentElt.shadowRoot || parentElt;\n\tif (insPath === \"\") {\n\t\tp.appendChild(btn);\n\t} else if (insPath.startsWith(\"append:\")) {\n\t\tconst subP = p.querySelector(insPath.substring(7));\n\t\tsubP.appendChild(btn);\n\t} else if (insPath.startsWith(\"insBefore:\")) {\n\t\tconst before = p.querySelector(insPath.substring(10));\n\t\tbefore.parentNode.insertBefore(btn, before);\n\t}\n\tfocusActionWidgets.push(btn);\n}\n\nREG.reg.registerSkin('box-btnadd', 1, /* language=CSS */ `\n\t:host {\n\t\tborder-radius: .2rem;\n\t\tbackground: var(--insbtn-bg);\n\t\tcolor: var(--insbtn-color);\n\t\tfont-size: .8rem;\n\t\tcursor: pointer;\n\t\twidth: .9rem;\n\t\ttext-align: center;\n\t\tz-index: 700;\n\t\tuser-select: none;\n\t}\n\n\t:host([pos=middle]) {\n\t\tline-height: 85%;\n\t}\n\n\t:host(:hover) {\n\t\tbackground: var(--insbtn-hover-bg);\n\t}\n`);\n\nfunction createReplaceBtn(wedMgr: WedMgr, structs: ISkStructDef[], target: HTMLElement, ctnOrient: 'h' | 'v', topPos: number): HTMLElement {\n\tconst btn = document.createElement(\"box-btnreplace\") as HTMLElement & IBoxBtns;\n\t// BASIS.makeClickable(btn);\n\t// btn.setAttribute(\"role\", \"button\");\n\tconst sr = btn.attachShadow(DOMSH.SHADOWDOM_INIT);\n\twedMgr.reg.installSkin(btn.localName, sr);\n\tsr.appendChild(document.createTextNode(\"⇄\"));\n\tbtn.title = \"Remplacer ou transformer...\";\n\tbtn.addEventListener(\"pointerdown\", execBtnReplace);\n\tbtn.structs = structs;\n\tbtn.style.position = \"absolute\";\n\tif (ctnOrient === 'v') {\n\t\tDOM.setStyleStart(btn, \"-1em\", target);\n\t\tbtn.style.top = `${topPos}em`;\n\t} else {\n\t\tDOM.setStyleStart(btn, \"-1em\", target);\n\t}\n\tDOM.setStyle(target, \"position\", \"relative\");\n\tconst parent = target.shadowRoot || target;\n\tparent.insertBefore(btn, parent.firstChild);\n\treturn btn\n}\n\nREG.reg.registerSkin('box-btnreplace', 1, /* language=CSS */ `\n\t:host {\n\t\tborder-radius: .2rem;\n\t\tbackground: var(--insbtn-bg);\n\t\tcolor: var(--insbtn-color);\n\t\tfont-size: .8rem;\n\t\twidth: .9rem;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t}\n\n\t:host(:hover) {\n\t\tbackground: var(--insbtn-hover-bg);\n\t}\n`);\n\nexport class InsertAction extends Action<IWedlet> {\n\tconstructor(public struct: ISkStructDef, public wedlet: IWedlet, public pos: \"before\" | \"after\" | \"replace\" | \"child\") {\n\t\tsuper();\n\t}\n\n\tgetLabel() {return this.struct.structLabel || this.struct.structName}\n\n\texecute(ctx: IWedlet, ev?: Event) {\n\t\tInsertAction.insertStruct(ctx.wedMgr, this.struct, this.wedlet, this.pos);\n\t}\n\n\tstatic async insertStruct(wedMgr: WedMgr, struct: ISkStructDef, wedlet: IWedlet, pos: \"before\" | \"after\" | \"replace\" | \"child\") {\n\t\tconst batch: IDocBatch = wedMgr.docHolder.newBatch();\n\t\tlet xa = wedlet.wedAnchor;\n\t\tlet jml: IJmlSet;\n\t\tlet atts: IJmlObj;\n\t\tif (pos === 'replace' && struct instanceof SkRuleElt && struct.convertFrom) {\n\t\t\t//On tente une conversion\n\t\t\tconst src = {\n\t\t\t\toutStruct: struct,\n\t\t\t\tdoc: wedMgr.docHolder.getDocument(),\n\t\t\t\txa\n\t\t\t};\n\t\t\tconst cnv = struct.convertFrom.findConverter(src);\n\t\t\tif (cnv) {\n\t\t\t\tconst dst = await cnv.convert(src);\n\t\t\t\tif (dst) jml = CONVERT.getDstAsJml(dst);\n\t\t\t}\n\t\t}\n\t\tlet finalName = struct.structName;\n\t\tif (!jml) {\n\t\t\t//Pas de conversion, construction du contenu par la struct\n\t\t\tjml = [];\n\t\t\tatts = Object.create(null);\n\t\t\tconst partialName = pos === 'replace' && struct.createContentAsync ? await struct.createContentAsync(jml, atts, wedMgr.wedEditor.rootNode) : struct.createContent(jml, atts);\n\t\t\tif (partialName === false) return; //false => cancel by user\n\t\t\tif (typeof partialName === 'string') {\n\t\t\t\t//Insertion d'une struct générique\n\t\t\t\t//TODO écran de validation complet du name fusionné avec BoxNameInput pour passer l'input du name en dialogue flottant ?.\n\t\t\t\tfinalName = await POPUP.prompt(\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<div>{struct.structType === EFuzzyType.elements ? \"Nom de cet élément\" : \"Nom de cet attribut\"}</div>\n\t\t\t\t\t\t<input value={partialName} required pattern=\"^[A-Za-z_:][\\w\\-.:]*\"/>\n\t\t\t\t\t</label>,\n\t\t\t\t\twedMgr.wedEditor.rootNode, {titleBar: EFuzzyType.elements ? \"Ajout d'un élément\" : \"Ajout d'un attribut\"});\n\t\t\t\tif (!finalName) return;\n\t\t\t\tif (!struct.structMatch(struct.structType === EFuzzyType.elements ? ENodeType.element : ENodeType.attribute, finalName)) {\n\t\t\t\t\tPOPUP.showNotifInfo(\"Ce nom n'est pas autorisé\", wedMgr.wedEditor.rootNode);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (struct.structType === EFuzzyType.elements) {\n\t\t\t\t\tjml.push({'': finalName || \"x\"})\n\t\t\t\t} else if (struct.structType === EFuzzyType.attributes) {\n\t\t\t\t\tlet nm = finalName || \"x\";\n\t\t\t\t\tif (!wedlet.isVirtual()) {\n\t\t\t\t\t\tconst elt = XA.findDomLast(xa, wedMgr.docHolder.getDocument()) as Element;\n\t\t\t\t\t\twhile (elt.hasAttribute(nm)) nm += 'x';\n\t\t\t\t\t}\n\t\t\t\t\tatts[nm] = \"\";\n\t\t\t\t} else throw Error();\n\t\t\t}\n\t\t}\n\t\tif (isWedletSingleElt(wedlet) && !wedlet.element.isConnected) return; //détection d'une suppr concurrente\n\n\t\t//Liste finale des attributs à insérer\n\t\tlet attNames = atts ? Object.keys(atts) : null;\n\t\tif (attNames?.length === 0) attNames = null;\n\n\t\t//Ajustement de xa d'insertion et élimination de la source en cas de \"replace\"\n\t\tif (pos === 'after') {\n\t\t\tXA.incrAtDepth(xa, -1, 1);\n\t\t} else if (pos === 'replace') {\n\t\t\tif (XA.isAttribute(xa)) {\n\t\t\t\t//On était sur un attribut\n\t\t\t\tbatch.setAttr(xa, null);\n\t\t\t\tif (jml.length > 0) {\n\t\t\t\t\t//Cas du remplacement d'un attribut par un fils.\n\t\t\t\t\t//On pointait un attribut, on doit chercher l'offset d'insertion des noeuds fils.\n\t\t\t\t\t//*** Algo théorique, mais getInsertableOffset() prend en compte l'existance de l'attribut et rejette donc l'insertion du tag fils.\n\t\t\t\t\t// xa = XA.up(xa);\n\t\t\t\t\t// let firstNode = jml[0];\n\t\t\t\t\t// let offset = wedMgr.docHolder.getInsertableOffset(xa, struct.structType as ENodeType, \"end\", JML.isElt(firstNode) ? firstNode[''] : null);\n\t\t\t\t\t// if(offset<0) return;\n\t\t\t\t\t// xa = XA.append(xa, offset);\n\t\t\t\t\t//*** Algo simple : on ajoute en dernier fils.\n\t\t\t\t\tif (!wedlet.wedParent.isVirtual()) {\n\t\t\t\t\t\tconst node = XA.findDomContainer(xa, wedMgr.docHolder.getDocument());\n\t\t\t\t\t\txa = XA.setAtDepth(xa, -1, node.childNodes.length);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//contexte virtuel : on remplace l'attr par offset 0\n\t\t\t\t\t\txa = XA.setAtDepth(xa, -1, 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\txa = XA.up(xa);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//On était sur un noeud, on le suppr\n\t\t\t\tbatch.deleteSequence(xa, 1);\n\t\t\t\tif (jml.length === 0 && attNames != null) xa = XA.up(xa); //le remplacement sont des atts sur le parent, on remonte\n\t\t\t}\n\t\t} else if (pos === 'child') {\n\t\t\tif (LANG.in(struct.structType, ENodeType.element, EFuzzyType.elements)) {\n\t\t\t\t//On cherche l'offset d'insertion du noeud fils\n\t\t\t\tconst pos = wedlet.isVirtual() ? 0 : wedMgr.docHolder.getInsertableOffset(xa, ENodeType.element, 'end', finalName); //XXX si fuzzy ? passer struct en param ?\n\t\t\t\tif (pos < 0) return; //contenu possiblement modifié entre temmps\n\t\t\t\tXA.append(xa, pos);\n\t\t\t} else if (struct.structType == ENodeType.text) {\n\t\t\t\tconst pos = wedlet.isVirtual() ? 0 : wedMgr.docHolder.getInsertableOffset(xa, ENodeType.text, 'end');\n\t\t\t\tif (pos < 0) return; //contenu possiblement modifié entre temmps\n\t\t\t\tXA.append(xa, pos);\n\t\t\t}\n\t\t}\n\n\t\t//Concrétisation du wedlet virtuel\n\t\tif (pos === 'child') {\n\t\t\tif (wedlet.isVirtual()) WEDLET.insertDatasFromDisplay(wedlet, batch);\n\t\t} else {\n\t\t\tif (wedlet.wedParent.isVirtual()) WEDLET.insertDatasFromDisplay(wedlet.wedParent, batch);\n\t\t}\n\t\t//Insertion du nouveau contenu\n\t\tif (attNames) {\n\t\t\tif (attNames.length > 1 || jml.length > 0) {\n\t\t\t\t//On insert plusieurs noeuds (atts ou children)\n\t\t\t\tconst xaParent = XA.freeze(XA.up(xa));\n\t\t\t\tfor (let i = 0; i < attNames.length; i++) {\n\t\t\t\t\tbatch.setAttr(XA.append(xaParent, attNames[i]), atts[attNames[i]] || \"\");\n\t\t\t\t}\n\t\t\t\tif (jml.length > 0) {\n\t\t\t\t\tif (XA.isAttribute(xa)) xa = XA.setAtDepth(xa, -1, 0); // on pointait un attr en alternative avec des noeuds fils.\n\t\t\t\t\tbatch.insertJml(xa, jml);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//On insert un seul attribut\n\t\t\t\txa = XA.append((pos === 'before' || XA.isAttribute(xa)) ? XA.up(xa) : xa, attNames[0]);\n\t\t\t\tbatch.setAttr(xa, atts[attNames[0]] || \"\")\n\t\t\t}\n\t\t} else {\n\t\t\t//On insert que des noeuds fils\n\t\t\tif (XA.isAttribute(xa)) xa = XA.setAtDepth(xa, -1, 0); // on pointait un attr en alternative avec des noeuds fils.\n\t\t\tbatch.insertJml(xa, jml);\n\t\t}\n\t\tbatch.doBatch();\n\t}\n}\n\nclass ReplaceAction extends InsertAction {\n\texecute(ctx: IWedlet, ev?: Event) {\n\t\tInsertAction.insertStruct(ctx.wedMgr, this.struct, this.wedlet, 'replace');\n\t}\n}\n\nfunction buildAddActions(wedlet: IWedlet, pos: \"before\" | \"after\" | \"replace\" | \"child\", structs: ISkStructDef[]): InsertAction[] {\n\tconst actions = [];\n\tfor (let i = 0; i < structs.length; i++) {\n\t\tconst struct = structs[i];\n\t\tif (struct === null) continue;\n\t\tactions.push(new InsertAction(struct, wedlet, pos));\n\t}\n\treturn actions;\n}\n\nfunction execBtnAdd(this: HTMLButtonElement & IBoxBtns, ev: Event) {\n\tconst wedlet = this.wedlet || (findElementWedlet(this) as IEltBoxSelection).wedlet;\n\tconst actions = buildAddActions(wedlet, this.structPos, this.structs);\n\tPOPUP.showPopupActionsFromEvent({actions, actionContext: wedlet, restoreFocus: this}, ev);\n\tev.stopImmediatePropagation();\n\tev.preventDefault();\n}\n\nfunction buildReplaceActions(structs: ISkStructDef[], wedlet: IWedlet) {\n\tconst actions = [];\n\tfor (let i = 0; i < structs.length; i++) {\n\t\tconst struct = structs[i];\n\t\tif (struct !== null) actions.push(new ReplaceAction(struct, wedlet, 'replace'));\n\t}\n\treturn actions;\n}\n\nfunction execBtnReplace(this: HTMLButtonElement & IBoxBtns, ev: Event) {\n\tconst wedlet = this.wedlet || (findElementWedlet(this) as IEltBoxSelection).wedlet;\n\tconst actions = buildReplaceActions(this.structs, wedlet);\n\tPOPUP.showPopupActionsFromEvent({actions, actionContext: wedlet, restoreFocus: this}, ev);\n\tev.stopImmediatePropagation();\n\tev.preventDefault();\n}\n\n\n//######### interne IWedEditorBoxSel #########\n\nfunction hookMsgAfter(wedMgr: WedMgr, msg: Msg) {\n\tif (isXmlMsg(msg)) {\n\t\t//XmlInsertMsg, XmlDeleteMsg, XmlStrMsg\n\t\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\t\tif (!boxSelMgr.selInVirtual) boxSelMgr.range.update(msg);\n\t}\n}\n\nfunction hookMsgForNextSel(wedMgr: WedMgr, transac: Msg, msg: Msg): void | true {\n\tif (!msg || transac.getMeta('noFocus') === true) return;\n\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\t//Ce msg devrait provoquer le focus.\n\tif (wedMgr.docHolderAsync.isMsgFromUs(transac)) {\n\t\t//On est à l'origine de ce msg, on prend le Focus.\n\t\t//console.log(\"transac:::\", transac);\n\t\tif (boxSelMgr.selInVirtual && (!transac.metas || !(transac.metas.undo || transac.metas.redo))) {\n\t\t\t//On reset le range par rapport au wedlet virtuel sel car msg peut être une insertion d'un container ancêtre.\n\t\t\tconst anchor = boxSelMgr.activeWedlet.wedAnchor;\n\t\t\tboxSelMgr.range.setRange(anchor, anchor);\n\t\t\tboxSelMgr.redrawSelection(); //à la dévirtualisation, les boutons d'actions peuvent changer.\n\t\t}\n\t\tif (isXmlMsg(msg)) {\n\t\t\tif (msg instanceof XmlInsertMsg) {\n\t\t\t\tboxSelMgr.setSelection({start: msg.xa, end: XA.newBd(msg.xa).incrAtDepth(-1, JML.lengthJmlOrText(msg.jml) - 1).xa});\n\t\t\t} else {\n\t\t\t\tif (!boxSelMgr.focusAroundXAddr(msg.xa)) boxSelMgr.redrawSelection();\n\t\t\t}\n\t\t\twedMgr.config.histoEditPointsMgr?.addEditEntry(new HistoEditPoint(msg.xa, wedMgr.docHolder.house), boxSelMgr.activeWedlet?.wedAnchor.length, wedMgr.config.histoEditHolder);\n\t\t} else if (msg instanceof XmlBatch && msg.selAfter) {\n\t\t\tif (msg.selAfter.end && typeof XA.last(msg.selAfter.end) === 'number') {\n\t\t\t\tboxSelMgr.setSelection({start: msg.selAfter.addr, end: XA.newBd(msg.selAfter.end).incrAtDepth(-1, -1).xa});\n\t\t\t\twedMgr.config.histoEditPointsMgr?.addEditEntry(new HistoEditPoint(msg.selAfter.end, wedMgr.docHolder.house), boxSelMgr.activeWedlet?.wedAnchor.length, wedMgr.config.histoEditHolder);\n\t\t\t} else {\n\t\t\t\tif (!boxSelMgr.focusAroundXAddr(msg.selAfter.addr)) boxSelMgr.redrawSelection();\n\t\t\t\twedMgr.config.histoEditPointsMgr?.addEditEntry(new HistoEditPoint(msg.selAfter.addr, wedMgr.docHolder.house), boxSelMgr.activeWedlet?.wedAnchor.length, wedMgr.config.histoEditHolder);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t//todo marque éphémère d'une édition concurrente par un autre user ?\n\t}\n}\n\nfunction getCurrentSel(wedMgr: WedMgr): IXAddrRangeSel | undefined {\n\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\tif (!boxSelMgr.activeWedlet) return undefined;\n\tif (boxSelMgr.selInVirtual) {\n\t\tlet w: IWedlet = boxSelMgr.activeWedlet;\n\t\tconst virtualPath = WEDLET.buildVirtualPath(w);\n\t\twhile (w.wedParent && w.wedParent.isVirtual()) w = w.wedParent;\n\t\treturn {start: w.wedAnchor, startInText: false, virtualPath}; //point d'insertion\n\t}\n\tconst sel = XA.cloneRange(boxSelMgr.range) as IXAddrRangeSel;\n\tsel.startInText = false;\n\tsel.endInText = false;\n\treturn sel;\n}\n\nfunction onPointerDown(this: IWedEditorBoxSel, ev: MouseEvent) {\n\tif (ev.shiftKey) {\n\t\tconst path = ev.composedPath();\n\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\tconst elt = path[i];\n\t\t\tif (isEltBoxSelection(elt) && elt.wedlet.wedMgr === this.wedMgr && !(elt as IBoxStopSelection).stopBoxSelection) {\n\t\t\t\tif (this.boxSelMgr.activeWedlet !== elt.wedlet) {\n\t\t\t\t\tthis.boxSelMgr.extendSelTo(elt.wedlet as IWedletBoxSelection);\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Dans l'éditeur, pour les sous contexte wed indépendant : contenu diff, bloc exclus...\n * Indique que c'est un contexte isolé de sélection.\n */\nexport interface IBoxStopSelection {\n\tstopBoxSelection?: true\n}\n\nfunction onFocus(this: void, wedMgr: WedMgr, focusElt: Element) {\n\tconst elt = DOMSH.findFlatParentEltOrSelf(focusElt, wedMgr.wedEditor.rootNode, (n: Node): n is Element => isEltBoxSelection(n) || (n as IBoxStopSelection).stopBoxSelection);\n\t//console.log(\"::onFocusBOX:\",focusElt, elt);\n\tconst editor = wedMgr.wedEditor as IWedEditorBoxSel;\n\tif (isEltBoxSelection(elt) && elt.wedlet.wedMgr === wedMgr) {\n\t\tif (elt.selMode !== 'caret') editor.boxSelMgr.htmlSel.removeAllRanges();\n\t\teditor.boxSelMgr.selectWedlet(elt.wedlet as IWedletBoxSelection);\n\t\twedMgr.config.histoEditPointsMgr?.onEditPointFocus(elt.wedlet.wedAnchor, wedMgr.config.histoEditHolder);\n\t}\n\t//  else {\n\t// \teditor.boxSelMgr.clearSel();\n\t// }\n}\n\nfunction onBlur(this: void, wedMgr: WedMgr, ev: FocusEvent) {\n\tif (ev.relatedTarget instanceof Element) {\n\t\t//Si menu contextuel de cet éditeur, on garde la selection visible.\n\t\t//NOTE: usage de findFlatParentEltOrSelf(ev.relatedTarget) ici car ev.relatedTarget peut être le IS_Popupable lui-même si aucune action dans le menu n'est enabled.\n\t\tif (findElementWedlet((DOMSH.findFlatParentEltOrSelf(ev.relatedTarget, null, IS_Popupable) as IDomLogical)?.logicalParent)?.wedlet.wedMgr === wedMgr) return;\n\t}\n\t(wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr.hideSel();\n}\n\nfunction onClipboardEvent(wedMgr: WedMgr, ev: ClipboardEvent, focusElt: Element): void | true {\n\tif (IS_EltWedlet(focusElt) && isWedletBoxSelection(focusElt.wedlet)) {\n\t\t//Le focus est sur un élément de type 'Box'.\n\t\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\t\tif (!boxSelMgr) return;\n\t\tif (boxSelMgr.isSingleSel() && isEltBoxSelection(focusElt) && (\"onClipboard\" in focusElt)) {\n\t\t\tif (focusElt.onClipboard(ev)) return true;\n\t\t}\n\t\tconst rg = boxSelMgr.range;\n\t\tswitch (ev.type) {\n\t\tcase 'copy':\n\t\t\tif (XA.isAttribute(rg.start) || !rg.isCollapsed) wedMgr.writeRangeToClipboard(rg, ev.clipboardData);\n\t\t\treturn true;\n\t\tcase 'cut':\n\t\t\tif (XA.isAttribute(rg.start) || !rg.isCollapsed) {\n\t\t\t\twedMgr.writeRangeToClipboard(rg, ev.clipboardData);\n\t\t\t\tboxSelMgr.deleteContentSelection();\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 'paste':\n\t\t\tdoPaste(wedMgr, focusElt, boxSelMgr, ev.clipboardData);\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nfunction onReadOnlyChange(wedMgr: WedMgr) {\n\tconst boxSelMgr = (wedMgr.wedEditor as IWedEditorBoxSel).boxSelMgr;\n\tboxSelMgr.redrawSelection();\n}\n\n/** Tentative d'insertion autour ou de remplacement de elt par le presse-papier. */\nasync function doPaste(this: void, wedMgr: WedMgr, elt: IElementWedlet, boxSelMgr: BoxSelMgr, dataTrsf: DataTransfer) {\n\tconst txStamp = wedMgr.txStamp;\n\tconst menuPos = {posFrom: elt, fromY: 'middle', targetY: 'middle'} as ORelativePosition;\n\n\tfunction finalPaste(imp: ISkImporter, ctx: OSkPasteContext) {\n\t\t//execution de l'import.\n\t\tconst batch = wedMgr.docHolder.newBatch();\n\t\timp.doImport(ctx, batch);\n\t\tbatch.doBatch();\n\t}\n\n\t//note: jamais appelé pour import en fils.\n\tfunction pasteWithPos(imp: ISkImporter, ctx: OSkPasteContext, pos: EPastePos | EPastePos) {\n\t\tif (!elt.isConnected) return;\n\t\tif (!pos || pos === EPastePos.replace || ctx.virtualPath) {\n\t\t\tif (!WEDLET.isWritableWedlet(elt.wedlet)) return;\n\t\t\tif (txStamp !== wedMgr.txStamp) ctx = newSiblingContext();\n\t\t\tfinalPaste(imp, ctx);\n\t\t} else if (pos === EPastePos.before) {\n\t\t\tif (!WEDLET.isWritableWedlet(elt.wedlet.wedParent)) return;\n\t\t\tfinalPaste(imp, {sel: {start: boxSelMgr.range.start}});\n\t\t} else if (pos === EPastePos.after) {\n\t\t\tif (!WEDLET.isWritableWedlet(elt.wedlet.wedParent)) return;\n\t\t\tfinalPaste(imp, {sel: {start: XA.newBd(boxSelMgr.range.start).incrAtDepth(-1, 1).xa}});\n\t\t} else {\n\t\t\tconst parentEditable = WEDLET.isWritableWedlet(elt.wedlet.wedParent);\n\t\t\tconst actions: IAction<void>[] = [];\n\t\t\tif ((pos & EPastePos.before) > 0 && parentEditable) actions.push(new Action<void>('before').setLabel(\"Insérer avant\").setExecute(() => {pasteWithPos(imp, ctx, EPastePos.before)}));\n\t\t\tif ((pos & EPastePos.replace) > 0 && WEDLET.isWritableWedlet(elt.wedlet)) actions.push(new Action<void>('replace').setLabel(\"Remplacer\").setExecute(() => {pasteWithPos(imp, ctx, EPastePos.replace)}));\n\t\t\tif ((pos & EPastePos.after) > 0 && parentEditable) actions.push(new Action<void>('after').setLabel(\"Insérer après\").setExecute(() => {pasteWithPos(imp, ctx, EPastePos.after)}));\n\t\t\tif (actions.length === 1) {\n\t\t\t\tactions[0].execute();\n\t\t\t} else if (actions.length > 0) {\n\t\t\t\tPOPUP.showPopupActions({actions, restoreFocus: elt}, menuPos, elt);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function pasteSelected(imp: ISkImporter, ctx: OSkPasteContext, asChild: boolean) {\n\t\tif (imp.needAsyncBuild && await imp.buildContentToImport(elt) === 'stop') return;\n\t\tif (!elt.isConnected) return;\n\t\tif (txStamp !== wedMgr.txStamp) {\n\t\t\t//des modif concurentes ont eu lieu (pendant l'async de tryPaste() et buildContentToImport())\n\t\t\t// => on reset le contexte pour forcer le recalcul.\n\t\t\tctx = asChild ? newChildContext() : newSiblingContext();\n\t\t}\n\t\tif (!asChild && boxSelMgr.isSingleSel()) {\n\t\t\tpasteWithPos(imp, ctx, imp.pastePos);\n\t\t} else {\n\t\t\tfinalPaste(imp, ctx);\n\t\t}\n\t}\n\n\t//Cas des box de type \"part\" qui absorbent la balise racine du modèle fils.\n\t//Recherche d'import en fils si : 1 seul sous-box wedlet non \"forbidden\" est displayed non focusable (ie box-static).\n\t//Correspond à une part d'une compo qui affiche son .model en masquant la racine.\n\tasync function tryPasteAsChild(siblingImp?: ISkImporter[], siblingCtx?: OSkPasteContext, siblingMinMalue?: number) {\n\t\tlet canAdd = true;\n\t\tlet firstFound: boolean;\n\t\t(elt.wedlet as IParentWedlet).visitWedletChildren(0, Number.MAX_SAFE_INTEGER, (ch: IChildWedlet) => {\n\t\t\tif ((ch.model.nodeType === ENodeType.element || ch.model.nodeType === ENodeType.text) && isWedletSingleElt(ch) && !ch.element.classList.contains(\"forbidden\")) {\n\t\t\t\tif (firstFound || ch.element.tabIndex >= 0) {\n\t\t\t\t\t//élément fils non unique ou fils sélectionnable\n\t\t\t\t\tcanAdd = false;\n\t\t\t\t\treturn 'stop';\n\t\t\t\t}\n\t\t\t\t//trouvé, on poursuit pour vérifier l'unicité.\n\t\t\t\tif (isDisplayedWedlet(ch)) firstFound = true;\n\t\t\t}\n\t\t});\n\t\tif (canAdd) {\n\t\t\tconst childCtx = newChildContext();\n\t\t\tconst doc = wedMgr.docHolder;\n\t\t\tif (cache.originalDom) {\n\t\t\t\tconst childImports = await doc.house.schemaDom.tryPasteNodes(childCtx, cache.originalDom, cache);\n\t\t\t\tif (childImports) {\n\t\t\t\t\tconst childMinMalus = childImports.reduce((acc, imp) => Math.min(acc, imp.malus), Infinity);\n\t\t\t\t\tif (siblingImp && siblingMinMalue <= childMinMalus) {\n\t\t\t\t\t\tselectImporters(siblingImp, siblingCtx, false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectImporters(childImports, childCtx, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (siblingImp) {\n\t\t\tselectImporters(siblingImp, siblingCtx, false);\n\t\t} else {\n\t\t\tPOPUP.showNotifWarning(\"Aucun contenu du presse-papier n'a pu être importé.\", elt);\n\t\t}\n\t}\n\n\tfunction selectImporters(imToSel: ISkImporter[], ctx: OSkPasteContext, asChild: boolean) {\n\t\tif (imToSel.length === 1 && imToSel[0].malus === 0) {\n\t\t\t//Une seule solution et import parfait.\n\t\t\tpasteSelected(imToSel[0], ctx, asChild);\n\t\t} else {\n\t\t\tconst actions = [];\n\t\t\timToSel.sort((a, b) => a.malus - b.malus);\n\t\t\tfor (const imp of imToSel) actions.push(new Action().setLabel(imp.getLabel()).setExecute(() => {pasteSelected(imp, ctx, asChild)}));\n\t\t\tPOPUP.showPopupActions({actions, restoreFocus: elt}, menuPos, wedMgr.wedEditor);\n\t\t}\n\t}\n\n\tfunction newSiblingContext(): OSkPasteContext {\n\t\treturn {sel: boxSelMgr.range, virtualPath: WEDLET.buildVirtualPath(elt.wedlet.wedParent)};\n\t}\n\n\tfunction newChildContext(): OSkPasteContext {\n\t\treturn {sel: {start: XA.append(elt.wedlet.wedAnchor, 0)}, virtualPath: WEDLET.buildVirtualPath(elt.wedlet)};\n\t}\n\n\tconst cache: OSkImportDatas = {};\n\tconst siblingCtx = newSiblingContext();\n\tconst importers = await wedMgr.tryPaste(siblingCtx, cache, dataTrsf);\n\tif (!importers) {\n\t\tawait tryPasteAsChild();\n\t} else {\n\t\tconst minMalus = importers.reduce((acc, imp) => Math.min(acc, imp.malus), Infinity);\n\t\tif (minMalus > 0/* && !cache.deepFindDone*/) await tryPasteAsChild(importers, siblingCtx, minMalus);\n\t\telse selectImporters(importers, siblingCtx, false);\n\t}\n}\n\n\nfunction onKeyDown(this: IWedEditorBoxSel, ev: KeyboardEvent) {\n\t//console.log(\"onKeyDown:::::\", ev);\n\tthis.boxSelMgr.accelKeyMgr.handleKeyboardEvent(ev, this);\n}\n\nfunction ctxMenuActions(this: IEltBoxSelection): IContextMenuActions<IWedMgrPointer> {\n\tconst wedMgr = this.wedlet.wedMgr;\n\tconst editor = wedMgr.wedEditor as IWedEditorBoxSel;\n\tif (!editor.boxSelMgr) return null; //cas des renditions simples imbriquées dans un editeur.\n\tlet actions = buildActions(this, wedMgr);\n\tconst focusActionWidgets = editor.boxSelMgr.focusActionWidgets;\n\tfor (let i = 0; i < focusActionWidgets.length; i++) {\n\t\tconst actW = focusActionWidgets [i];\n\t\tif (actW.localName === 'box-btnadd') {\n\t\t\tconst structs = (actW as IBoxBtns).structs;\n\t\t\tswitch ((actW as IBoxBtns).structPos) {\n\t\t\tcase \"before\":\n\t\t\t\tconst subBefore = buildAddActions(this.wedlet, \"before\", structs);\n\t\t\t\tif (subBefore.length > 0) (actions || (actions = [])).push(new ActionMenu<IWedMgrPointer>('insBefore')\n\t\t\t\t\t.setLabel(this.wedlet.isVirtual() ? \"Insérer autour ou remplacer...\" : \"Insérer avant...\").setGroup(\"ins\").setActions(subBefore));\n\t\t\t\tbreak;\n\t\t\tcase \"child\":\n\t\t\t\tconst subIn: IAction<IWedMgrPointer>[] = buildAddActions(this.wedlet, \"child\", structs);\n\t\t\t\tif (subIn.length > 0) {\n\t\t\t\t\tlet last;\n\t\t\t\t\tif (!actions) actions = [];\n\t\t\t\t\telse last = actions[actions.length - 1];\n\t\t\t\t\tconst newAct = new ActionMenu<IWedMgrPointer>('insInside').setLabel(\"Insérer dedans...\").setGroup(\"ins\").setActions(subIn);\n\t\t\t\t\tif (last?.getId() === 'insAfter') {\n\t\t\t\t\t\tactions[actions.length - 1] = newAct;\n\t\t\t\t\t\tactions.push(last);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactions.push(newAct);\n\t\t\t\t\t}\n\t\t\t\t\tconst next = focusActionWidgets[i + 1];\n\t\t\t\t\tif (next?.localName === 'box-btnadd' && ((next as IBoxBtns).structPos) === 'child') {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t//On fusionne les listes (children et attributs)\n\t\t\t\t\t\tconst nextSubIn = buildAddActions(this.wedlet, \"child\", (next as IBoxBtns).structs);\n\t\t\t\t\t\tif (nextSubIn.length > 0) {\n\t\t\t\t\t\t\tsubIn.push(new ActionSeparator());\n\t\t\t\t\t\t\tsubIn.push(...nextSubIn);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"after\":\n\t\t\t\tif (DOMSH.isFlatAncestor(this, actW)) {\n\t\t\t\t\tconst subAfter = buildAddActions(this.wedlet, \"after\", structs);\n\t\t\t\t\tif (subAfter.length > 0) (actions || (actions = [])).push(new ActionMenu<IWedMgrPointer>('insAfter')\n\t\t\t\t\t\t.setLabel(\"Insérer après...\").setGroup(\"ins\").setActions(subAfter));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (actW.localName === 'box-btnreplace') {\n\t\t\tconst subReplace = buildReplaceActions((actW as IBoxBtns).structs, this.wedlet);\n\t\t\tif (subReplace.length > 0) (actions || (actions = [])).push(new ActionMenu<IWedMgrPointer>('replace')\n\t\t\t\t.setLabel(\"Remplacer...\").setGroup(\"ins\").setActions(subReplace));\n\t\t}\n\t}\n\tif (!actions || actions.length === 0) return null;\n\tactions = ACTION.injectSepByGroup(actions, this.groupOrder || wedMgr.reg.getPref(this.groupOrderPref || \"groupOrder.wed.box\", \"ins insObj *\"), this.wedlet);\n\treturn {\n\t\tactions,\n\t\tactionContext: this.actionContext || new WedletActionCtx(this)\n\t}\n}\n\nfunction focusBar(this: IEltBoxSelection): BarActions<IWedMgrPointer> {\n\tif (this._focusBar === undefined) {\n\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\tconst datas = wedMgr.getDatasForModel(this.wedlet.model) as IWedFocusBarPointer;\n\t\tif (\"focusBar\" in datas) {\n\t\t\tthis._focusBar = datas.focusBar;\n\t\t\tif (!this._focusBar) return null;\n\t\t\tthis._focusBar.actionContext.focusedElt = this;\n\t\t\treturn this.focusBar;\n\t\t}\n\t\tlet actions = buildActions(this, wedMgr);\n\t\tif (!actions || actions.length === 0) {\n\t\t\tthis._focusBar = datas.focusBar = null;\n\t\t} else {\n\t\t\tactions = ACTION.injectSepByGroup(actions, this.groupOrder || wedMgr.reg.getPref(this.groupOrderPref || \"groupOrder.wed.box\", \"ins insObj *\"), this.wedlet);\n\t\t\tthis._focusBar = datas.focusBar = new BarActions<IWedletActionCtx>().initialize({\n\t\t\t\tactions: actions,\n\t\t\t\tactionContext: this.actionContext || new WedletActionCtx()\n\t\t\t});\n\t\t}\n\t}\n\tif (this._focusBar === null) return null;\n\tthis._focusBar.actionContext.focusedElt = this;\n\treturn this._focusBar;\n}\n\n/** Actions pour le menu contextuel et la toolbar commune. */\nfunction buildActions(this: void, elt: IEltBoxSelection, wedMgr: WedMgr): IAction<IWedMgrPointer>[] {\n\tif (wedMgr.config.noFocus) return null;\n\tlet actions: IAction<IWedMgrPointer>[];\n\tif (elt.actionsLists) {\n\t\tactions = wedMgr.reg.mergeLists(...elt.actionsLists, \"actions:wed:global\");\n\t} else {\n\t\tactions = wedMgr.reg.getList(\"actions:wed:global\");\n\t}\n\treturn actions;\n}\n\nREG.reg.addSvcToList(\"actions:wed:global\", \"exclude\", 1, 'wedBoxSelExclude', 10);\nREG.reg.addSvcToList(\"actions:wed:global\", \"delete\", 1, 'wedBoxSelDelete', 20);\n"]}