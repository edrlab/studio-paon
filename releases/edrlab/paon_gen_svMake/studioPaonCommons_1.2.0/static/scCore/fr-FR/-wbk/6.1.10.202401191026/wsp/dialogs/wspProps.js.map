{"version":3,"sources":["/@back@/wsp/dialogs/wspProps.tsx"],"names":["REG","MsgLabel","MsgOver","DOM","JSX","AreaAsync","AREAS","Button","POPUP","FORMS","ERROR","WSP","DOMSH","Tabs","BaseAreaViewAsync","WSP_DRF","WSP_DRV","IO","WspsMonitoring","ACTION","ExportWspAction","AppFrameDeskFeat","WspProps","[object Object]","this","_emptyData","_fixedWspData","_onSaveShowWaitMsg","_listenLiveStateChange","wsp","reg","env","init","config","Object","create","createSubReg","place","newPlaceWsp","eventsMgr","on","onWspLiveStateChange","bind","disableRevert","_revertBtn","createElement","Ã®","disabled","label","uiContext","onclick","onRevert","_saveBtn","class","onSave","_closeBtn","onClose","exportScwsp","hasPerm","_exportBtn","onExport","_form","id","_msg","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","append","style","undefined","checkDirtyRequest","checkBtnsState","clearTimeout","setTimeout","refreshBtnsState","addEventListener","ev","key","isAccelPressed","preventDefault","stopImmediatePropagation","click","form","initFormELt","applyLayout","mergeLists","areaList","areasContext","formToJson","appendChild","area-ids","setStandardMsg","waitForWspMetaUiAvailable","then","async","initForm","updateForm","catch","buildControlLabel","assign","makeParamsForUpdate","me","findHost","reportValidity","setCustomMsg","showMsgOver","waitFor","_doExecuteValid","showNotifWarning","checkDirtyOnClose","isDirty","confirm","cancelLbl","okLbl","_doClose","returnValue","findPopupableParent","close","_doRevert","execute","wspData","JSON","stringify","_lastWspData","isPendingState","dirty","checkValidity","clear","currentUpdtFormCycle","_pendingUpdtFormCycle","Date","now","setHidden","_a","waitForLoad","_b","migrating","_c","fullLoading","jsonToForm","getIniParams","checkAsyncValidity","e","log","closed","closePlace","isDeleted","showNotif","autoHide","registerSkin","WspCreateProps","super","_initialize","areaListBase","list","universe","backEnd","push","datas","title","alias","code","wspTypeDiv","querySelector","wspTypeSelector","params","getParamsToSave","_existingWspmetaOnPathFs","fetchExistWspFsOnPath","wspServer","folderContent","wspTypeInst","fillWspTypeInst","resp","createWsp","report","customElements","define","WspCreateFromScwspProps","scWspInput","elements","namedItem","files","length","importWsp","item","WspCreatDrfProps","createWspDrf","WspCreatDrvProps","createWspDrv","WspEditProps","addToList","setLabel","setBodyBuilder","ctx","WspEditProps_info","WspEditProps_advanced","_tabs","areas-context","areas-list","tabAreasLists","registerSvc","_attach","tagName","shadowRoot","checkWspSvc","addTab","setDescription","WspEditProps_skins","position","selectedTab","view","onViewWaitForHide","visitor","options","visitViews","visitViewsAsync","wspDefProps","drfRefWsp","drvAxis","allFormsDatas","newParams","hasNewParams","props","updateWspProps","wspType","isMigrationNeeded","updateWspType","result","confirmCheck","msg","getAttribute","showNotifError","noCloseBtn","kind","fieldsetElt","WspRemoveProps","wspTitle","insertBefore","firstElementChild","_ctrlElt","msgs","infoWsp","adminWspUrl","fetchJson","qs","drvWspUsedBy","wspListArray","split","wspList","join","listDrvs","listDrfs","chain","drf","msgsElt","forEach","mainApp","desk","getMainApp","equals","isIn","gotoHome","delete","WspsRemoveProps","MSG_CONFIRM","MSG_CONFIRM_MULTI","MSG_ERROR","MSG_STATUS_REMOVED","MSG_BTN","wspsReg","regs","cplt","drv","wsps","entry","sortWspsByDeep","reverse","count","defaultStateKey","states","level","wspTitleErrosArray","dialog","wspsMonitoring","showDialog","skinOver","fixSize","titleBar","initWidth","errorsArray","updateWspStatus","doDelete","Promise","resolve","WspsRemovePermanentlyProps","deletePermanently","WspsEditModelProps"],"mappings":"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","sourcesContent":["import {IReg, IRegPointer, IRegsPointer, REG} from \"lib/commons/registry\";\nimport {MsgLabel, MsgOver, OSkinableInit} from \"back/commons/basis\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {AreaAsync, AREAS, ControlArea, IControlAreaContext} from \"lib/commons/areas\";\nimport {Button, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {FORMS} from \"lib/commons/forms\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IChainEnv} from \"lib/wsp/chain\";\nimport {IWspEnv, IWspUiEnv, JInfoWsp, JWspTypeInst, WSP, Wsp} from \"lib/wsp/wsp\";\nimport \"back/wsp/dialogs/wspPropsAreas\";\nimport {WspTypeSelector} from \"back/wsp/widgets/wspType/wspTypeSelector\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {Tabs} from \"back/commons/widgets/tabs\";\nimport {BaseAreaViewAsync, IView, IViewsContainer, OViewVisitOptions} from \"lib/commons/views\";\nimport {WSP_DRF} from \"lib/wsp/drf\";\nimport {WSP_DRV} from \"lib/wsp/drv\";\nimport {IO} from \"lib/commons/io/io\";\nimport {OWspsMonitoringInit, WspsMonitoring} from \"back/wsp/widgets/wsp/wspsMonitoring\";\nimport {IPopupable} from \"back/commons/widgets/popupable\";\nimport {ACTION} from \"lib/commons/actions\";\nimport {ExportWspAction} from \"back/wsp/actions/wspActions\";\nimport {AppFrameDeskFeat, IApp} from \"back/core/appFrame\";\n\n\n/**\n * Ãcran des propriÃ©tÃ©s d'un atelier\n */\n\nexport interface OWspPropsInit<E> extends OSkinableInit {\n\treg: IReg<E>\n\tcheckDirtyOnClose?: boolean\n\tdisableRevert?: boolean\n\texportScwsp?: boolean\n}\n\nabstract class WspProps<E extends IWspUiEnv | IChainEnv> extends BaseAreaViewAsync<E> {\n\tpublic reg: IReg<E>;\n\tprotected config: OWspPropsInit<E>;\n\n\t/**\n\t * Lists extpoints des areas de la fenÃªtre\n\t */\n\tabstract get areaList(): string[];\n\n\tprotected _form: HTMLFormElement;\n\tprotected _msg: MsgLabel;\n\tprotected _emptyData: Dict<any> = {};\n\tprotected _lastWspData: Jsonisable;\n\tprotected _fixedWspData: Jsonisable = {};\n\n\tprotected _revertBtn: Button;\n\tprotected _saveBtn: Button;\n\tprotected _closeBtn: Button;\n\tprotected _exportBtn: Button;\n\n\tget wsp(): Wsp | null {return (this.reg.env as IWspUiEnv).wsp || null};\n\n\tprotected async _initialize(init: OWspPropsInit<E>): Promise<void> {\n\t\tthis.config = Object.create(init);// L'objet init est mutable et mÃ©morisÃ© => clone sans modifier l'objet initial\n\t\tthis.reg = REG.createSubReg(init.reg);\n\t\tif (this.wsp) {\n\t\t\t(this.reg.env as IWspUiEnv).place = this.wsp.newPlaceWsp();\n\t\t\t(this.reg.env as IWspUiEnv).place.eventsMgr.on(\"wspLiveStateChange\", this.onWspLiveStateChange.bind(this));\n\t\t\t(this.reg.env as IWspUiEnv).place.eventsMgr.on(\"wspLiveFullLoadStateChange\", this.onWspLiveStateChange.bind(this));\n\t\t}\n\n\t\tif (!this.config.disableRevert) this._revertBtn = <Button Ã®={{disabled: true, label: \"RÃ©tablir\", uiContext: \"dialog\"} as OButtonInit} onclick={this.onRevert}/> as Button;\n\t\tthis._saveBtn = <Button Ã®={{disabled: true, label: \"Enregistrer\", uiContext: \"dialog\"} as OButtonInit} class=\"default\" onclick={this.onSave}/> as Button;\n\t\tthis._closeBtn = <Button Ã®={{disabled: false, label: \"Annuler\", uiContext: \"dialog\"} as OButtonInit} onclick={this.onClose}/> as Button;\n\t\tif(init.exportScwsp && this.reg.hasPerm(\"read.node.export\")) this._exportBtn = <Button Ã®={{label: \"Exporter une archive de l'atelier\", uiContext: \"dialog\"} as OButtonInit} onclick={this.onExport}/> as Button;\n\n\t\tthis._form = <form id=\"form\"/> as HTMLFormElement;\n\t\tthis._msg = <MsgLabel/> as MsgLabel;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"standard-dialog\", sr);\n\t\tthis.reg.installSkin(\"form-control-areas\", sr);\n\t\tthis.reg.installSkin(\"c-wsp-props\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tDOM.append(sr, this._msg,\n\t\t\tthis._form,\n\t\t\t<div id=\"footer\">\n\t\t\t\t{this._exportBtn ? [\n\t\t\t\t\tthis._exportBtn,\n\t\t\t\t\t<div style=\"flex:1000\"/>\n\t\t\t\t] : undefined}\n\t\t\t\t{this._revertBtn}\n\t\t\t\t{this._saveBtn}\n\t\t\t\t{this._closeBtn}\n\t\t\t</div>\n\t\t);\n\n\t\tlet checkDirtyRequest = 0;\n\t\tconst checkBtnsState = () => {\n\t\t\tif (checkDirtyRequest) {\n\t\t\t\tclearTimeout(checkDirtyRequest);\n\t\t\t\tcheckDirtyRequest = 0;\n\t\t\t}\n\t\t\tcheckDirtyRequest = setTimeout(this.refreshBtnsState.bind(this), 300) as any;\n\t\t};\n\t\tthis._form.addEventListener('input', checkBtnsState);\n\t\tthis._form.addEventListener('change', checkBtnsState);\n\n\t\tthis.addEventListener('keydown', (ev) => {\n\t\t\tif (ev.key === 'Enter' && ACTION.isAccelPressed(ev)) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\tthis._saveBtn.click();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t}\n\n\tprotected async initForm(form: HTMLFormElement): Promise<void> {\n\t\tthis.initFormELt(form);\n\t\tawait AREAS.applyLayout(this._form, this.reg.mergeLists<ControlArea>(...this.areaList), this.areasContext(), true);\n\t\tthis._emptyData = FORMS.formToJson(this._form);\n\t}\n\n\tprotected initFormELt(form: HTMLFormElement): void {\n\t\tform.appendChild(\n\t\t\t<fieldset class=\"fieldslist\">\n\t\t\t\t<div class=\"fields\" area-ids=\"*\"/>\n\t\t\t</fieldset>);\n\t}\n\n\tonViewShown(): void {\n\t\tif (this.wsp) {\n\t\t\tthis._msg.setStandardMsg(\"loading\");\n\t\t\t// ATTENTION : l'init du form est dÃ©pendante du reg enrichi par wspMetaUi. Le load de wspMetaUi est donc nÃ©cessaire\n\t\t\tthis.wsp.waitForWspMetaUiAvailable().then(async (wsp) => {\n\t\t\t\tawait this.initForm(this._form);\n\t\t\t\tawait this.updateForm(false);\n\t\t\t\tthis._msg.setStandardMsg(null);\n\t\t\t}).catch(async () => {\n\t\t\t\tawait this.initForm(this._form);\n\t\t\t\tawait this.updateForm(false);\n\t\t\t\tthis._msg.setStandardMsg(null);//statut dÃ©jÃ  affichÃ© par ailleurs\n\t\t\t\t//this._msg.setCustomMsg(\"Chargement de l'atelier partiel\", \"error\");\n\t\t\t});\n\t\t} else\n\t\t\tthis.initForm(this._form).then(async () => {\n\t\t\t\tawait this.updateForm(false);\n\t\t\t});\n\t}\n\n\t/**\n\t * Contexte des areas\n\t */\n\tprotected areasContext(): IControlAreaContext & IRegPointer<E> {\n\t\treturn {\n\t\t\treg: this.reg,\n\t\t\tbuildControlLabel: true\n\t\t};\n\t}\n\n\t/**\n\t * Construit la liste des propriÃ©tÃ©s Ã  exploiter (fournies par le FORM et les fixed)\n\t */\n\tprotected async getParamsToSave(): Promise<Jsonisable> {\n\t\treturn Object.assign(FORMS.formToJson(this._form), this._fixedWspData);\n\t}\n\n\t/**\n\t * Construit la liste des propriÃ©tÃ©s courantes du wsp (ie initiales : non modifiÃ©es par le form)\n\t */\n\tprotected async getIniParams(): Promise<Jsonisable> {\n\t\treturn this.wsp ? this.wsp.makeParamsForUpdate() : this._emptyData;\n\t}\n\n\t/**\n\t * Action de validation\n\t * @param ev\n\t */\n\tprotected _onSaveShowWaitMsg: boolean = true;\n\n\tprotected async onSave(this: Button, ev: Event): Promise<void> {\n\t\tif (!this.disabled) {\n\t\t\tconst me = DOMSH.findHost<WspProps<E>>(this);\n\t\t\tif (me._form.reportValidity()) {\n\t\t\t\tme._listenLiveStateChange = false;\n\t\t\t\ttry {\n\t\t\t\t\tthis.disabled = true;\n\t\t\t\t\tif (me._onSaveShowWaitMsg) {\n\t\t\t\t\t\tawait new MsgOver().setCustomMsg(\"Veuillez patienter...\", \"info\").showMsgOver(me).waitFor(\n\t\t\t\t\t\t\tme._doExecuteValid()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else\n\t\t\t\t\t\tawait me._doExecuteValid();\n\t\t\t\t} finally {\n\t\t\t\t\tme._listenLiveStateChange = true;\n\t\t\t\t\t// DÃ©sactivation du listner d'update auto de l'interface le temps du save async (via _listenLiveStateChange)\n\t\t\t\t\t// => update explicite utile\n\t\t\t\t\tme.onWspLiveStateChange(me.wsp);\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\tPOPUP.showNotifWarning(\"Veuillez corriger le formulaire.\", this);\n\t\t}\n\t}\n\n\t/**\n\t * Action de validation (sans contrÃ´le dÃ©jÃ  rÃ©alisÃ©)\n\t * @param ev\n\t */\n\tabstract _doExecuteValid(): Promise<void>;\n\n\t/**\n\t * Action de fermeture / abandon\n\t * @param ev\n\t */\n\tprotected async onClose(this: Button, ev: Event): Promise<void> {\n\t\tconst me = DOMSH.findHost<WspProps<E>>(this);\n\t\tif (!me.config.checkDirtyOnClose || !await me.isDirty() || await POPUP.confirm(\"Attention, vos modifications n'ont pas Ã©tÃ© enregistrÃ©es.\", me, {cancelLbl: \"Annuler\", okLbl: \"Quitter sans enregistrer\"})) {\n\t\t\treturn me._doClose();\n\t\t}\n\t}\n\n\t/**\n\t * Action de la fermeture\n\t * @param ev\n\t */\n\tasync _doClose(returnValue?: any): Promise<void> {\n\t\tPOPUP.findPopupableParent(this).close(returnValue);\n\t}\n\n\t/**\n\t * Action de revert des modifications\n\t * @param ev\n\t */\n\tprotected async onRevert(this: Button, ev: Event): Promise<void> {\n\t\tif (!this.disabled) {\n\t\t\tconst me = DOMSH.findHost<WspProps<E>>(this);\n\t\t\treturn me._doRevert();\n\t\t}\n\t}\n\n\t/**\n\t * Action de revert\n\t * @param ev\n\t */\n\tasync _doRevert(): Promise<void> {\n\t\treturn this.updateForm(true);\n\t}\n\n\tprotected onExport(this: Button, ev: Event) {\n\t\tconst me = DOMSH.findHost<WspProps<E>>(this);\n\t\tnew ExportWspAction().execute(me);\n\t}\n\n\t/**\n\t * Retourne true si au moins une valeur du formulaire a changÃ©\n\t */\n\tprotected async isDirty(): Promise<boolean> {\n\t\tconst wspData = FORMS.formToJson(this._form);\n\t\t/*console.log(\"DIRTY :: \", JSON.stringify(wspData) !== JSON.stringify(this._lastWspData));\n\t\tconsole.log(\"LAST :: \", JSON.stringify(this._lastWspData));\n\t\tconsole.log(\"NEW  :: \", JSON.stringify(wspData));*/\n\t\treturn JSON.stringify(wspData) !== JSON.stringify(this._lastWspData);\n\t}\n\n\t/**\n\t * Rafraichissement des boutons\n\t */\n\tprotected async refreshBtnsState(isPendingState?:true|undefined): Promise<void> {\n\t\tconst dirty = await this.isDirty();\n\t\tthis._closeBtn.label = \"Fermer\";\n\t\tif (this._revertBtn) this._revertBtn.disabled = isPendingState || !dirty;\n\t\tif (this._exportBtn) this._exportBtn.disabled = isPendingState;\n\t\tthis._form.checkValidity()\n\t\tthis._saveBtn.disabled = isPendingState || !dirty;\n\t}\n\n\tprivate _pendingUpdtFormCycle: number;\n\tprotected async updateForm(clear: boolean = true): Promise<void> {\n\t\tconst currentUpdtFormCycle = this._pendingUpdtFormCycle = Date.now();\n\t\tthis._msg.setStandardMsg(\"loading\");\n\t\tDOM.setHidden(this._form, true);\n\t\ttry {\n\t\t\tawait this.refreshBtnsState(true);\n\t\t\tif (currentUpdtFormCycle != this._pendingUpdtFormCycle) return;//raceCond\n\t\t\tawait this.wsp?.waitForLoad();\n\t\t\tif (currentUpdtFormCycle != this._pendingUpdtFormCycle) return;//raceCond\n\t\t\tif (this.wsp?.migrating) {\n\t\t\t\tthis._msg.setCustomMsg(\"Migration de l'atelier en cours...\");\n\t\t\t\tawait this.wsp.migrating;\n\t\t\t\tif (currentUpdtFormCycle != this._pendingUpdtFormCycle) return;//raceCond\n\t\t\t} else if (this.wsp?.fullLoading) {\n\t\t\t\tthis._msg.setCustomMsg(\"Chargement de l'atelier en cours...\");\n\t\t\t\tawait this.wsp.fullLoading;\n\t\t\t\tif (currentUpdtFormCycle != this._pendingUpdtFormCycle) return;//raceCond\n\t\t\t}\n\t\t\tif (clear) FORMS.jsonToForm(this._emptyData, this._form);\n\t\t\tFORMS.jsonToForm(await this.getIniParams(), this._form, true, true);\n\t\t\tawait FORMS.checkAsyncValidity(this._form);\n\t\t\tif (currentUpdtFormCycle != this._pendingUpdtFormCycle) return;//raceCond\n\t\t\tthis._lastWspData = FORMS.formToJson(this._form);\n\t\t\tawait this.refreshBtnsState();\n\t\t\tif (currentUpdtFormCycle != this._pendingUpdtFormCycle) return;//raceCond\n\t\t\tthis._msg.setStandardMsg(null);\n\t\t\tthis._form.checkValidity();\n\t\t\tDOM.setHidden(this._form, false);\n\t\t} catch (e) {\n\t\t\tthis._msg.setCustomMsg(\"Chargement des propriÃ©tÃ©s de l'atelier en erreur\", \"error\");\n\t\t\treturn ERROR.log(e);\n\t\t}\n\t}\n\n\tonViewHidden(closed?: boolean): void {\n\t\tif (closed && this.wsp)\t(this.reg.env as IWspUiEnv).place.closePlace();\n\t}\n\n\tonViewBeforeHide(close?: boolean): boolean {\n\t\treturn false;\n\t}\n\n\tasync onViewWaitForHide(close?: boolean): Promise<boolean> {\n\t\tif (!this.config.checkDirtyOnClose || !await this.isDirty() || await POPUP.confirm(\"Attention, vos modifications n'ont pas Ã©tÃ© enregistrÃ©es.\", this, {cancelLbl: \"Annuler\", okLbl: \"Quitter sans enregistrer\"})) {\n\t\t\tawait this._doRevert();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t_listenLiveStateChange: boolean = true;\n\n\tasync onWspLiveStateChange(wsp: Wsp) {\n\t\tif (wsp !== this.wsp || !wsp) return;\n\t\tif (wsp.isDeleted === true) {\n\t\t\tPOPUP.showNotif(\"L'atelier a Ã©tÃ© supprimÃ©\", POPUP.findPopupableParent(this), {autoHide: 3000});\n\t\t\treturn this._doClose();\n\t\t} else {\n\t\t\tif (this._listenLiveStateChange)\n\t\t\t\treturn this.updateForm(false);\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin('c-wsp-props', 1, /* language=CSS */ `\n\t:host {\n\t\tmin-height: 12em;\n\t}\n\n\t#form {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tflex: 1;\n\t\tpadding: 1em;\n\t\toverflow: auto;\n\t}\n\n\t#form[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t.fieldslist {\n\t\tborder: none;\n\t\tpadding: .5rem;\n\t\tmargin: .5rem;\n\t\tmin-width: 0;\n\t}\n\n\t.fieldslist > .fields {\n\t\tdisplay: grid;\n\t\tmin-width: 0;\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-row-gap: .7rem;\n\t\tgrid-auto-rows: max-content;\n\t}\n\n\t.fieldslist > .fields:first-child {\n\t\tmargin-inline-end: 2em;\n\t}\n\n\t.fields > div {\n\t\tdisplay: contents;\n\t}\n\n\t.fields > *.allCols {\n\t\tgrid-column-start: 1;\n\t\tgrid-column-end: 3;\n\t}\n\n\t.fields div[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\tc-action {\n\t\tmargin: 0 .5em 0 0;\n\t}\n\n\ttextarea[name=desc] {\n\t\theight: 3em;\n\t\tresize: none;\n\t}\n\n\t.details {\n\t\tfont-size: .8em;\n\t}\n\n\t.deprecated {\n\t\tfont-style: italic;\n\t\tcolor: var(--fade-color);\n\t}\n\n\t.titleDeprecated {\n\t\tfont-variant-position: sub;\n\t\tfont-size: .8em;\n\t\tmargin-inline-start: .5rem;\n\t\tcolor: var(--warning-color);\n\t}\n\n\t.important {\n\t\tfont-weight: bolder;\n\t\tcolor: var(--alt1-color)\n\t}\n`);\n\n//customElements.define('c-wsp-props', WspProps);\n\n/**\n * CrÃ©ation d'un atelier\n * @return sur le close : Wsp crÃ©Ã© ou null\n */\nexport class WspCreateProps extends WspProps<IChainEnv> {\n\tprotected async _initialize(init: OWspPropsInit<IChainEnv>) {\n\t\tinit.disableRevert = true;\n\t\tawait super._initialize(init);\n\t\tthis._saveBtn.label = \"CrÃ©er\";\n\t}\n\n\tget areaListBase(): string[] {\n\t\t//\n\t\tlet list: string[] = [\"wspProps:create:commons\"];\n\t\tswitch (this.reg.env.universe.config.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:create:fs\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:create:db\", \"wspProps:create:db:other\");\n\t\t\tbreak;\n\t\t}\n\t\treturn list;\n\t}\n\n\tget areaList(): string[] {\n\t\tlet list = this.areaListBase;\n\t\tlist.push(\"wspProps:create:fromScratch\");\n\t\treturn list;\n\t}\n\n\tprotected async getIniParams(): Promise<Jsonisable> {\n\t\tlet datas = await super.getIniParams();\n\t\t/// PropriÃ©tÃ©s jamais rÃ©cupÃ©rÃ©es dans le cas de crÃ©ationn d'un atelier Ã  partir d'un autre\n\t\tdelete datas.title;\n\t\tdelete datas.alias;\n\t\tdelete datas.code;\n\t\treturn datas;\n\t}\n\n\tprivate _existingWspmetaOnPathFs: JWspTypeInst | null;\n\n\tprotected async refreshBtnsState(): Promise<void> {\n\t\tif (this.reg.env.universe.config.backEnd === \"fs\") {\n\t\t\tlet wspTypeDiv = this._form.querySelector(\"*[area-id='wspType']\") as HTMLDivElement;\n\t\t\tlet wspTypeSelector = this._form.querySelector(\"wsptype-selector\") as WspTypeSelector;\n\t\t\t// On vÃ©rifie l'existence de contenus Ã  l'emplacement\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\tthis._existingWspmetaOnPathFs = params.code ? await WSP.fetchExistWspFsOnPath(this.reg.env.universe.wspServer, params.code, params.folderContent) : null;\n\t\t\tthis._saveBtn.label = this._existingWspmetaOnPathFs ? \"CrÃ©er (rÃ©cupÃ©rer l'atelier existant)\" : \"CrÃ©er\";\n\t\t\tif (wspTypeDiv) DOM.setHidden(wspTypeDiv, this._existingWspmetaOnPathFs != null);\n\t\t\tif (wspTypeSelector) wspTypeSelector.disabled = this._existingWspmetaOnPathFs != null;\n\t\t}\n\t\treturn super.refreshBtnsState();\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\ttry {\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\tlet wspTypeInst;\n\t\t\tif (this.reg.env.universe.config.backEnd === \"fs\" && this._existingWspmetaOnPathFs) {\n\t\t\t\t// mode FS ET atelier existant => on rÃ©cupÃ¨re le wspMeta\n\t\t\t\twspTypeInst = this._existingWspmetaOnPathFs;\n\t\t\t} else {\n\t\t\t\tlet wspTypeSelector: WspTypeSelector = this._form.querySelector(\"wsptype-selector\") as WspTypeSelector;\n\t\t\t\twspTypeInst = wspTypeSelector.fillWspTypeInst();\n\t\t\t}\n\t\t\tconst resp = await WSP.createWsp(this.reg.env.universe.wspServer, params, wspTypeInst);\n\t\t\tif (!resp)\n\t\t\t\tthrow \"no resp\";\n\t\t\treturn this._doClose(resp);\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"CrÃ©ation de l'atelier impossible.\", e);\n\t\t\tawait this.refreshBtnsState();\n\t\t}\n\t}\n\n}\n\ncustomElements.define('c-wsp-create-props', WspCreateProps);\n\n/**\n * CrÃ©ation d'un atelier Ã  partir d'une archive\n * @return sur le close : Wsp crÃ©Ã© ou null\n */\nexport class WspCreateFromScwspProps extends WspCreateProps {\n\n\tget areaList(): string[] {\n\t\tlet list = this.areaListBase;\n\t\tlist.push(\"wspProps:create:fromScwsp\");\n\t\treturn list;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\ttry {\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\t//scwspFile\n\t\t\tlet wspTypeSelector: WspTypeSelector = this._form.querySelector(\"wsptype-selector\") as WspTypeSelector;\n\t\t\tlet scWspInput = this._form.elements.namedItem(\"scwspFile\") as HTMLInputElement;\n\t\t\tif (!scWspInput.files || scWspInput.files.length == 0) throw \"No scwsp file selected\";\n\t\t\tconst resp = await WSP.importWsp(this.reg.env.universe.wspServer, params, scWspInput.files.item(0));\n\t\t\tif (!resp)\n\t\t\t\tthrow \"no resp\";\n\t\t\tthis._doClose(resp);\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"Import de l'atelier impossible.\", e);\n\t\t\tawait this.refreshBtnsState();\n\t\t}\n\t}\n\n}\n\ncustomElements.define('c-wsp-create-fromscwsp-props', WspCreateFromScwspProps);\n\n/**\n * CrÃ©ation d'un atelier DRF (dÃ©pendant d'un autre atelier)\n */\nexport class WspCreatDrfProps extends WspProps<IWspUiEnv> {\n\n\tprotected async _initialize(init: OWspPropsInit<IWspUiEnv>) {\n\t\tinit.disableRevert = true;\n\t\tawait super._initialize(init);\n\t\tthis._saveBtn.label = \"CrÃ©er\";\n\t}\n\n\tget areaList(): string[] {\n\t\treturn [\"wspProps:create:commons\", \"wspProps:create:fromScratch\", \"wspProps:create:db\", \"wspProps:create:db:drf\"];\n\t}\n\n\tprotected async getIniParams(): Promise<Jsonisable> {\n\t\treturn this._emptyData;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\ttry {\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\tlet wspTypeSelector: WspTypeSelector = this._form.querySelector(\"wsptype-selector\") as WspTypeSelector;\n\t\t\tconst resp = await WSP_DRF.createWspDrf(this.reg.env.wsp, params, wspTypeSelector.fillWspTypeInst());\n\t\t\tif (!resp)\n\t\t\t\tthrow \"no resp\";\n\t\t\tthis._doClose(resp);\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"CrÃ©ation de l'atelier impossible.\", e);\n\t\t\tawait this.refreshBtnsState();\n\t\t}\n\t}\n}\n\ncustomElements.define('c-wsp-create-drf-props', WspCreatDrfProps);\n\n/**\n * CrÃ©ation d'un atelier DRV (dÃ©pendant d'un autre atelier)\n */\nexport class WspCreatDrvProps extends WspProps<IWspUiEnv> {\n\n\tprotected async _initialize(init: OWspPropsInit<IWspUiEnv>) {\n\t\tinit.disableRevert = true;\n\t\tawait super._initialize(init);\n\t\tthis._saveBtn.label = \"CrÃ©er\";\n\t}\n\n\tget areaList(): string[] {\n\t\treturn [\"wspProps:create:commons\", \"wspProps:create:fromScratch\", \"wspProps:create:db\", \"wspProps:create:db:drv\"];\n\t}\n\n\tprotected async getIniParams(): Promise<Jsonisable> {\n\t\treturn this._emptyData;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\ttry {\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\tlet wspTypeSelector: WspTypeSelector = this._form.querySelector(\"wsptype-selector\") as WspTypeSelector;\n\t\t\treturn this._doClose(await WSP_DRV.createWspDrv(this.reg.env.wsp, params, wspTypeSelector.fillWspTypeInst()));\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"CrÃ©ation de l'atelier impossible.\", e);\n\t\t\tawait this.refreshBtnsState();\n\t\t}\n\t}\n}\n\ncustomElements.define('c-wsp-create-drv-props', WspCreatDrvProps);\n\n/**\n * Modification / affichage des propriÃ©tÃ©s d'un atelier\n */\n\nexport interface OWspEditInit extends OSkinableInit {\n\treg: IReg<IWspUiEnv>\n\ttabAreasLists?: string\n}\n\nexport class WspEditProps extends BaseAreaViewAsync<IReg<IWspUiEnv>> implements IViewsContainer {\n\treg: IReg<IWspUiEnv>\n\t_tabs: Tabs;\n\t_msg: MsgLabel;\n\n\tprotected async _initialize(init: OWspEditInit) {\n\t\tthis.reg = init.reg;\n\t\tthis._msg = <MsgLabel/> as MsgLabel;\n\t\tthis.reg.addToList(\"wsp-edit-tab\", \"infoArea\", 1, new AreaAsync<OWspPropsInit<IWspUiEnv>, WspProps<IWspUiEnv>>()\n\t\t\t.setLabel(\"PropriÃ©tÃ©s\")\n\t\t\t.setBodyBuilder((ctx) => {\n\t\t\t\treturn <WspEditProps_info Ã®={ctx} code=\"props\"/> as WspEditProps_info;\n\t\t\t}), 1);\n\t\tthis.reg.addToList(\"wsp-edit-tab\", \"advancedArea\", 1, new AreaAsync<OWspPropsInit<IWspUiEnv>, WspProps<IWspUiEnv>>()\n\t\t\t.setLabel(\"AvancÃ©\")\n\t\t\t.setBodyBuilder((ctx) => {\n\t\t\t\treturn <WspEditProps_advanced Ã®={ctx} code=\"advanced\"/> as WspEditProps_advanced;\n\t\t\t}), 101);\n\n\t\t// TODO : onglets \"Permissions\"\n\n\t\t// Contexte des actions : this\n\t\tthis._tabs = <Tabs areas-context=\"wsp-edit-tab-ctxt\" areas-list={init.tabAreasLists || \"wsp-edit-tab\"}/> as Tabs;\n\t\tthis.reg.registerSvc(\"wsp-edit-tab-ctxt\", 1, {\n\t\t\treg: this.reg\n\t\t} as OWspPropsInit<IWspUiEnv>);\n\n\t\tthis._attach(this.tagName, init, this._tabs);\n\t\tthis.reg.installSkin(\"webzone:panel\", this.shadowRoot);\n\t}\n\n\tonViewShown(): void {\n\t\tthis._msg.setStandardMsg(\"loading\");\n\t\tthis.reg.env.wsp.waitForLoad().then(async () => {\n\t\t\tif (this.reg.env.wsp.backEnd === \"odb\" && await WSP.checkWspSvc(this.reg.env.wsp, this, \"skinSet\")) {\n\t\t\t\tthis._tabs.addTab(new AreaAsync<OWspPropsInit<IWspUiEnv>, WspProps<IWspUiEnv>>()\n\t\t\t\t\t.setLabel(\"Habillages graphiques\")\n\t\t\t\t\t.setDescription(\"Habillages graphiques des gÃ©nÃ©rateurs du modÃ¨le documentaire\")\n\t\t\t\t\t.setBodyBuilder((ctx) => {\n\t\t\t\t\t\treturn <WspEditProps_skins Ã®={ctx} code=\"props\"/> as WspEditProps_skins;\n\t\t\t\t\t}), {position: 1});\n\t\t\t}\n\t\t\tthis._msg.setStandardMsg(null);\n\t\t})\n\t}\n\n\tonViewBeforeHide(close?: boolean): boolean {\n\t\treturn false;\n\t}\n\n\tasync onViewWaitForHide(close?: boolean): Promise<boolean> {\n\t\treturn this._tabs.selectedTab.view.onViewWaitForHide(close);\n\t}\n\n\tvisitViews(visitor: (view: IView) => any, options?: OViewVisitOptions): any {\n\t\tif (this._tabs) this._tabs.visitViews(visitor, options);\n\t}\n\n\tvisitViewsAsync(visitor: (view: IView) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\tif (this._tabs)\n\t\t\treturn this._tabs.visitViewsAsync(visitor, options);\n\t}\n\n}\n\ncustomElements.define('c-wsp-edit-props', WspEditProps);\nREG.reg.registerSkin('c-wsp-edit-props', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t}\n\n\tc-tabs {\n\t\tflex: 1;\n\t}\n`)\n\nclass WspEditProps_info extends WspProps<IWspUiEnv> {\n\tprotected async _initialize(init: OWspPropsInit<IWspUiEnv>) {\n\t\tinit.checkDirtyOnClose = true;\n\t\tinit.exportScwsp = true;\n\t\treturn super._initialize(init);\n\t}\n\n\tprotected initFormELt(form: HTMLFormElement): void {\n\t\tform.appendChild(\n\t\t\t<fieldset class=\"fieldslist\">\n\t\t\t\t<div class=\"fields\" area-ids=\"*\"/>\n\t\t\t</fieldset>);\n\t\tform.appendChild(\n\t\t\t<fieldset class=\"fieldslist\" id=\"wspTypeFs\">\n\t\t\t\t<div class=\"fields\" area-ids=\"wspType\"/>\n\t\t\t</fieldset>);\n\t}\n\n\tget areaList(): string[] {\n\t\tconst wspDefProps = this.wsp.wspDefProps;\n\t\tlet list: string[] = [\"wspProps:edit:commons:infos\"];\n\t\tswitch (this.wsp.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:edit:fs:infos\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:edit:db:infos\");\n\t\t\tbreak;\n\t\t}\n\t\tif (wspDefProps && wspDefProps.drfRefWsp)\n\t\t\tlist.push(\"wspProps:edit:db:drf:infos\");\n\t\telse if (wspDefProps && wspDefProps.drvAxis)\n\t\t\tlist.push(\"wspProps:edit:db:drv:infos\");\n\t\telse if (this.wsp.backEnd == \"odb\")\n\t\t\tlist.push(\"wspProps:edit:db:other:infos\");\n\t\treturn list;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\ttry {\n\t\t\tconst allFormsDatas = await this.getParamsToSave();\n\t\t\t// Filtre newParams au juste nÃ©cessaire (params modifiÃ©s)\n\t\t\tlet newParams: Jsonisable = {};\n\t\t\tlet hasNewParams = false;\n\t\t\tfor (const props in allFormsDatas) {\n\t\t\t\tif (props != \"wspType\")\n\t\t\t\t\tif (this._lastWspData[props] !== allFormsDatas[props]) {\n\t\t\t\t\t\thasNewParams = true;\n\t\t\t\t\t\tnewParams[props] = allFormsDatas[props];\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasNewParams) await this.wsp.updateWspProps(newParams);\n\t\t\tif (JSON.stringify(allFormsDatas.wspType) != JSON.stringify(this._lastWspData.wspType)) {\n\t\t\t\tlet isMigrationNeeded = await this.wsp.isMigrationNeeded(allFormsDatas.wspType);\n\t\t\t\tif (isMigrationNeeded === false) {\n\t\t\t\t\tawait this.wsp.updateWspType(allFormsDatas.wspType, false);\n\t\t\t\t\t//return this.onWspLiveStateChange(this.wsp); NON : l'interface est actualisÃ©e ave cles remontÃ©es WS\n\t\t\t\t} else if (isMigrationNeeded === true) {\n\t\t\t\t\tconst result = await POPUP.confirmCheck(<div>\n\t\t\t\t\t\t\t<div>Les contenus de votre atelier doivent Ãªtre mis Ã  jour.</div>\n\t\t\t\t\t\t\t<div><b>Vous ne pourrez pas annuler cette action.</b></div>\n\t\t\t\t\t\t\t<div>Voulez-vous poursuivre l'enregistrement du modÃ¨le documentaire ?</div>\n\t\t\t\t\t\t</div>,\n\t\t\t\t\t\tthis, \"ExÃ©cuter la mise Ã  jour des contenus\", true, {okLbl: \"Poursuivre\", cancelLbl: \"Annuler\"});\n\t\t\t\t\tif (result === false) await this._doRevert();\n\t\t\t\t\telse await this.wsp.updateWspType(allFormsDatas.wspType, result === \"checked\");\n\t\t\t\t\t//return this.onWspLiveStateChange(this.wsp); NON : l'interface est actualisÃ©e avec les remontÃ©es WS\n\t\t\t\t} else {\n\t\t\t\t\tlet msg = isMigrationNeeded.getAttribute(\"desc\");\n\t\t\t\t\tPOPUP.showNotifError(`Une mise Ã  jour automatique des contenus de l'atelier serait nÃ©cessaire, mais des modifications manuelles prÃ©alables doivent Ãªtre rÃ©alisÃ©es : ${msg}`, this, {noCloseBtn: true, kind: \"warning\",});\n\t\t\t\t\tawait this._doRevert();\n\t\t\t\t\t//return this.onWspLiveStateChange(this.wsp); NON : l'interface est actualisÃ©e avec les remontÃ©es WS\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"Modification des propriÃ©tÃ©s de l'atelier impossible.\", e);\n\t\t\tawait this.refreshBtnsState();\n\t\t}\n\t}\n\n\tprotected isReadOnlyFieldset(fieldsetElt: HTMLFieldSetElement): boolean {\n\t\tif (fieldsetElt.id === \"wspTypeFs\")\n\t\t\treturn !this.reg.hasPerm(\"action.wspProps#update.wsptype\");\n\t\telse\n\t\t\treturn !this.reg.hasPerm(\"action.wspProps#update.props\");\n\t}\n\n}\n\ncustomElements.define('c-wsp-edit-props-info', WspEditProps_info);\n\nclass WspEditProps_advanced extends WspEditProps_info {\n\n\tget areaList(): string[] {\n\t\tconst wspDefProps = this.wsp.wspDefProps;\n\t\tlet list: string[] = [\"wspProps:edit:commons:advanced\"];\n\t\tswitch (this.wsp.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:edit:fs:advanced\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:edit:db:advanced\");\n\t\t\tbreak;\n\t\t}\n\t\tif (wspDefProps && wspDefProps.drfRefWsp)\n\t\t\tlist.push(\"wspProps:edit:db:drf:advanced\");\n\t\telse if (wspDefProps && wspDefProps.drvAxis)\n\t\t\tlist.push(\"wspProps:edit:db:drv:advanced\");\n\t\telse if (this.wsp.backEnd == \"odb\")\n\t\t\tlist.push(\"wspProps:edit:db:other:advanced\");\n\t\treturn list;\n\t}\n\n}\n\ncustomElements.define('c-wsp-edit-props-advanced', WspEditProps_advanced);\n\nclass WspEditProps_skins extends WspEditProps_info {\n\n\tget areaList(): string[] {\n\t\treturn [\"wspProps:edit:db:other:skins\"]\n\t}\n\n}\n\ncustomElements.define('c-wsp-edit-props-skins', WspEditProps_skins);\n\n/**\n * Suppression d'un atelier\n */\nexport class WspRemoveProps<E extends IWspUiEnv> extends WspProps<E> {\n\tprotected _ctrlElt: HTMLDivElement;\n\n\tprotected async _initialize(init: OWspPropsInit<E>) {\n\t\tconst wspTitle = init.reg.env.wsp.wspTitle;\n\t\tinit.disableRevert = true;\n\t\tawait super._initialize(init);\n\t\tthis.shadowRoot.insertBefore(<div class=\"question\"><span id=\"kind\"/>{`Voulez-vous vraiment supprimer l'atelier '${wspTitle}' ?`}</div>, this.shadowRoot.firstElementChild);\n\t\tthis._saveBtn.label = \"Supprimer\";\n\t}\n\n\tprotected initFormELt(form: HTMLFormElement): void {\n\t\tsuper.initFormELt(form);\n\t\t// Controles DRV / RRF\n\t\tthis._ctrlElt = form.appendChild(<div class=\"warning\">\n\t\t\t<span id=\"kind\"/>\n\t\t\t<div class=\"msgs\"/>\n\t\t</div>) as HTMLDivElement;\n\t}\n\n\tprotected async updateForm(clear: boolean = true): Promise<void> {\n\t\tawait super.updateForm(clear);\n\t\tlet msgs = [];\n\t\t// Refresh utile de l'infoWsp car ces propriÃ©tÃ©s de sont pas dynamiquement rafraichies\n\t\tlet infoWsp = await this.wsp.wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", \"InfoWsp\", \"param\", this.wsp.code, \"wspPropsOpts\", \"(drvWspUsedBy 'true' listDrvs 'true' listDrfs 'true')\"));\n\n\t\tif (infoWsp.props.drvWspUsedBy) {\n\t\t\tlet wspListArray = infoWsp.props.drvWspUsedBy.split(\" \");\n\t\t\tlet wspList = wspListArray.join(\", \");\n\t\t\tif (wspListArray.length == 1)\n\t\t\t\tmsgs.push(`Cet atelier est source du calque de dÃ©rivation '${wspList}'. La suppression de cet atelier est donc impossible.`);\n\t\t\telse\n\t\t\t\tmsgs.push(`Cet atelier est source des calques de dÃ©rivation : ${wspList}. La suppression de cet atelier est donc impossible.`);\n\t\t\tthis._saveBtn.disabled = true;\n\t\t} else if (infoWsp.props.listDrvs || infoWsp.props.listDrfs) {\n\t\t\tif (infoWsp.props.listDrvs && this.wsp.wspServer.chain.config.drf)\n\t\t\t\tmsgs.push(`Tous les ateliers 'calque de dÃ©rivation' et les ateliers 'calque de travail' liÃ©s seront Ã©galement supprimÃ©s`);\n\t\t\telse if (infoWsp.props.listDrvs)\n\t\t\t\tmsgs.push(`Tous les ateliers 'calque de dÃ©rivation' seront Ã©galement supprimÃ©s`);\n\n\t\t\tif (infoWsp.props.listDrfs)\n\t\t\t\tmsgs.push(`Tous les ateliers 'calque de travail', et les ateliers liÃ©s seront Ã©galement supprimÃ©s`);\n\n\t\t\tthis._saveBtn.label = \"Supprimer les ateliers\";\n\t\t}\n\n\t\tif (msgs.length == 0) {\n\t\t\tDOM.setHidden(this._ctrlElt, true);\n\t\t} else {\n\t\t\tlet msgsElt = this._ctrlElt.querySelector(\".msgs\") as HTMLDivElement;\n\t\t\tmsgs.forEach((msg) => {\n\t\t\t\tmsgsElt.appendChild(<div>{msg}</div>)\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected async refreshBtnsState(): Promise<void> {\n\t\tthis._form.checkValidity();\n\t\tthis._saveBtn.disabled = false;\n\t}\n\n\tget areaList(): string[] {\n\t\tconst wspDefProps = this.wsp.wspDefProps;\n\t\tlet list: string[] = [\"wspProps:remove:commons\"];\n\t\tswitch (this.wsp.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:remove:fs\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:remove:db\");\n\t\t\tbreak;\n\t\t}\n\t\tif (wspDefProps && wspDefProps.drfRefWsp)\n\t\t\tlist.push(\"wspProps:remove:db:drf\");\n\t\telse if (wspDefProps && wspDefProps.drvAxis)\n\t\t\tlist.push(\"wspProps:remove:db:drv\");\n\t\telse\n\t\t\tlist.push(\"wspProps:remove:db:other\");\n\t\treturn list;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\ttry {\n\t\t\t// Fermeture de l'atelier Ã©ventuellement ouvert dans le desk\n\t\t\tconst mainApp = (desk as AppFrameDeskFeat).getMainApp();\n\t\t\tif ((mainApp as IApp<IWspEnv>)?.reg?.env.wsp?.equals(this.wsp))\n\t\t\t\tif (AppFrameDeskFeat.isIn(desk)) await desk.gotoHome();\n\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\tawait this.wsp.delete(params);\n\t\t\treturn this._doClose(true);\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"Suppression de l'atelier impossible.\", e);\n\t\t\treturn this.refreshBtnsState();\n\t\t}\n\t}\n}\n\ncustomElements.define('c-wsp-remove-props', WspRemoveProps);\n\nREG.reg.registerSkin('c-wsp-remove-props', 1, /* language=CSS */ `\n\t*[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\t.question, .warning {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin: 1em;\n\t}\n\n\t.cplt {\n\t\tfont-style: italic;\n\t\tpadding-top: .3em;\n\t}\n\n\t.warning {\n\t\tcolor: var(--warning-color);\n\t}\n\n\t#kind {\n\t\tdisplay: inline-block;\n\t\tmin-width: 1.5em;\n\t\tmin-height: 1.5em;\n\t\tmargin: .5em;\n\t}\n\n\t.question > #kind {\n\t\tbackground: center no-repeat url(/@skin@/commons/widgets/popupable/question.svg);\n\t}\n\n\t.warning > #kind {\n\t\tbackground: center no-repeat url(/@skin@/commons/widgets/popupable/warning.svg);\n\t}\n`);\n\n/**\n * Suppression de plusieurs wsps\n */\nexport class WspsRemoveProps extends WspProps<IChainEnv> {\n\tprotected wspsReg: IReg<IWspUiEnv>[];\n\n\tprotected MSG_CONFIRM = \"Voulez-vous vraiment supprimer l'atelier ?\";\n\tprotected MSG_CONFIRM_MULTI = \"Voulez-vous vraiment supprimer les ateliers ?\";\n\tprotected MSG_ERROR = \"Suppression de(s) atelier(s) en Ã©chec.\";\n\tprotected MSG_STATUS_REMOVED = \"SupprimÃ©\";\n\tprotected MSG_BTN = \"Supprimer\";\n\n\tprotected async _initialize(init: OWspPropsInit<IChainEnv> & IRegsPointer<IWspUiEnv>) {\n\t\tinit.disableRevert = true;\n\t\tthis.wspsReg = init.regs;\n\n\t\tawait super._initialize(init);\n\t\tthis.reg.installSkin(\"c-wsp-remove-props\", this.shadowRoot);\n\t\tthis._onSaveShowWaitMsg = false;\n\t\tlet cplt = \"\";\n\t\tif (this.reg.env.universe.wspServer.chain.config.drf && this.reg.env.universe.wspServer.chain.config.drv)\n\t\t\tcplt = \"Tous les Ã©ventuels ateliers 'calque de dÃ©rivation', et 'calque de travail' liÃ©s seront Ã©galement supprimÃ©s\";\n\t\telse if (this.reg.env.universe.wspServer.chain.config.drf)\n\t\t\tcplt = \"Tous les Ã©ventuels ateliers 'calque de travail' liÃ©s seront Ã©galement supprimÃ©s\";\n\t\telse if (this.reg.env.universe.wspServer.chain.config.drv)\n\t\t\tcplt = \"Tous les Ã©ventuels ateliers 'calque de dÃ©rivation' liÃ©s seront Ã©galement supprimÃ©s\";\n\n\t\tlet wsps: Wsp[] = [];\n\t\tthis.wspsReg.forEach((entry) => {wsps.push(entry.env.wsp)});\n\t\tWSP.sortWspsByDeep(wsps).reverse();\n\t\tlet count = wsps.length;\n\n\t\tlet msg = count > 1 ? this.MSG_CONFIRM_MULTI : this.MSG_CONFIRM;\n\t\tthis.shadowRoot.insertBefore(<div>\n\t\t\t<div class=\"question\">\n\t\t\t\t<span id=\"kind\"/>\n\t\t\t\t<div>\n\t\t\t\t\t<div>{msg}</div>\n\t\t\t\t\t<div class=\"cplt\">{cplt}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<WspsMonitoring Ã®={{\n\t\t\t\twsps: wsps,\n\t\t\t\tdefaultStateKey: \"toRemove\",\n\t\t\t\tstates: [{key: \"toRemove\", level: \"disabled\", label: \"Ã supprimer\"}]\n\t\t\t} as OWspsMonitoringInit}/>\n\t\t</div>, this.shadowRoot.firstElementChild);\n\n\t\tthis._saveBtn.label = this.MSG_BTN;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\tlet wspTitleErrosArray: string[] = [];\n\t\tlet dialog: IPopupable;\n\t\ttry {\n\t\t\tconst params = await this.getParamsToSave();\n\t\t\tlet wsps: Wsp[] = [];\n\t\t\tthis.wspsReg.forEach((entry) => {wsps.push(entry.env.wsp)});\n\t\t\tWSP.sortWspsByDeep(wsps).reverse();\n\t\t\tlet wspsMonitoring = <WspsMonitoring Ã®={{\n\t\t\t\twsps: wsps,\n\t\t\t\tdefaultStateKey: \"notStart\",\n\t\t\t\tstates: [\n\t\t\t\t\t{key: \"notStart\", level: \"disabled\", label: \"En attente\"},\n\t\t\t\t\t{key: \"toRemove\", level: \"disabled\", label: \"Ã supprimer\"},\n\t\t\t\t\t{key: \"pending\", level: \"pending\", label: \"En cours...\"},\n\t\t\t\t\t{key: \"removed\", level: \"success\", label: this.MSG_STATUS_REMOVED},\n\t\t\t\t\t{key: \"failed\", level: \"error\", label: \"Ãchec\"}\n\t\t\t\t]\n\t\t\t} as OWspsMonitoringInit}/> as WspsMonitoring;\n\n\t\t\tdialog = POPUP.showDialog(<div>\n\t\t\t\t<MsgLabel label=\"Suppression en cours...\"/>\n\t\t\t\t{wspsMonitoring}\n\t\t\t</div>, this, {\n\t\t\t\tskinOver: \"c-wsps-props-monitoraction\",\n\t\t\t\tfixSize: false,\n\t\t\t\ttitleBar: null,\n\t\t\t\tinitWidth: '50%',\n\t\t\t});\n\t\t\tlet errorsArray: any[] = [];\n\t\t\tfor (const entry in wsps) {\n\t\t\t\tlet wsp = wsps[entry];\n\t\t\t\twspsMonitoring.updateWspStatus(wsp.code, \"pending\");\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doDelete(wsp, params);\n\t\t\t\t\twspsMonitoring.updateWspStatus(wsp.code, \"removed\");\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\t} catch (e) {\n\t\t\t\t\twspsMonitoring.updateWspStatus(wsp.code, \"failed\");\n\t\t\t\t\twspTitleErrosArray.push(wsp.wspTitle);\n\t\t\t\t\terrorsArray.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 3000));\n\t\t\tif (errorsArray.length > 0) throw errorsArray;\n\t\t\tthis._doClose();\n\t\t} catch (e) {\n\t\t\tlet list = wspTitleErrosArray.join(\", \");\n\t\t\tif (dialog) dialog.close();\n\t\t\tawait ERROR.report(list ? this.MSG_ERROR : this.MSG_ERROR + \" \" + `Ateliers : '${list}'.`, e);\n\t\t\tawait this._doClose();\n\t\t}\n\t}\n\n\tprotected async doDelete(wsp: Wsp, params: any): Promise<void> {\n\t\t// Fermeture de l'atelier Ã©ventuellement ouvert dans le desk\n\t\tconst mainApp = (desk as AppFrameDeskFeat).getMainApp();\n\t\tif ((mainApp as IApp<IWspEnv>)?.reg?.env.wsp?.equals(wsp))\n\t\t\tif (AppFrameDeskFeat.isIn(desk)) await desk.gotoHome();\n\n\t\treturn wsp.delete(params);\n\t}\n\n\tprotected async refreshBtnsState(): Promise<void> {\n\t\tthis._form.checkValidity();\n\t\tthis._saveBtn.disabled = false;\n\t}\n\n\tget areaList(): string[] {\n\t\tlet list: string[] = [\"wspProps:removeAll:commons\"];\n\t\tswitch (this.reg.env.universe.config.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:removeAll:fs\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:removeAll:db\");\n\t\t\tbreak;\n\t\t}\n\t\treturn list;\n\t}\n}\n\nREG.reg.registerSkin('c-wsps-remove-props', 1, /* language=CSS */ `\n\twsps-monitoring {\n\t\tmargin: 0 2em;\n\t\tmax-height: 10em;\n\t\toverflow: auto;\n\t}\n`);\nREG.reg.registerSkin('c-wsps-props-monitoraction', 1, /* language=CSS */ `\n\twsps-monitoring {\n\t\tmargin: 0 2em;\n\t\tmax-height: 15em;\n\t\toverflow: auto;\n\t}\n`);\ncustomElements.define('c-wsps-remove-props', WspsRemoveProps);\n\n/**\n * Suppression dÃ©finitive d'atelier(s)\n */\nexport class WspsRemovePermanentlyProps extends WspsRemoveProps {\n\n\tprotected MSG_CONFIRM = \"Voulez-vous vraiment supprimer dÃ©finitivement l'atelier ?\";\n\tprotected MSG_CONFIRM_MULTI = \"Voulez-vous vraiment supprimer dÃ©finitivement les ateliers ?\";\n\tprotected MSG_ERROR = \"Suppression dÃ©finitive de(s) atelier(s) en Ã©chec.\";\n\tprotected MSG_STATUS_REMOVED = \"SupprimÃ© dÃ©finitivement\";\n\tprotected MSG_BTN = \"Supprimer dÃ©finitivement\";\n\n\tprotected async doDelete(wsp: Wsp, params: any): Promise<void> {\n\t\treturn wsp.deletePermanently(params);\n\t}\n\n\tget areaList(): string[] {\n\t\tlet list: string[] = [\"wspProps:remove:permanently:commons\"];\n\t\tswitch (this.reg.env.universe.config.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:remove:permanently:fs\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:remove:permanently:db\");\n\t\t\tbreak;\n\t\t}\n\t\treturn list;\n\t}\n\n}\n\ncustomElements.define('c-wsps-remove-permanently-props', WspsRemovePermanentlyProps);\n\n/**\n * Edition des propriÃ©tÃ©s de plusieurs wsps\n */\nexport class WspsEditModelProps extends WspProps<IChainEnv> {\n\tprotected wspsReg: IReg<IWspUiEnv>[];\n\n\tprotected async _initialize(init: OWspPropsInit<IChainEnv> & IRegsPointer<IWspUiEnv>) {\n\t\tinit.checkDirtyOnClose = true;\n\t\tinit.disableRevert = true;\n\t\tthis.wspsReg = init.regs;\n\t\tconst count = this.wspsReg.length;\n\t\tawait super._initialize(init);\n\t\tthis.reg.installSkin(\"c-wsps-editmodel-props\", this.shadowRoot);\n\t\tthis._onSaveShowWaitMsg = false;\n\n\t\tlet wsps: Wsp[] = [];\n\t\tthis.wspsReg.forEach((entry) => {wsps.push(entry.env.wsp)});\n\t\twsps = WSP.sortWspsByDeep(wsps);\n\n\t\tthis.shadowRoot.insertBefore(<div>\n\t\t\t<div class=\"info\">{`Ãdition des propriÃ©tÃ©s des '${count}' ateliers :`}</div>\n\t\t\t<WspsMonitoring Ã®={{\n\t\t\t\twsps: wsps,\n\t\t\t\tdefaultStateKey: \"toEdit\",\n\t\t\t\tstates: [{key: \"toEdit\", level: \"disabled\", label: \"Ã Ã©diter\"}]\n\t\t\t} as OWspsMonitoringInit}/>\n\t\t</div>, this.shadowRoot.firstElementChild);\n\t}\n\n\tprotected async refreshBtnsState(): Promise<void> {\n\t\tthis._form.checkValidity();\n\t\tthis._saveBtn.disabled = false;\n\t}\n\n\tasync _doExecuteValid(): Promise<void> {\n\t\tlet wspTitleErrosArray: string[] = [];\n\t\tlet dialog: IPopupable;\n\t\ttry {\n\t\t\tconst allFormsDatas = await this.getParamsToSave();\n\t\t\t// Filtre newParams au juste nÃ©cessaire (params modifiÃ©s)\n\t\t\tlet newParams: Jsonisable = {};\n\t\t\tlet hasNewParams = false;\n\t\t\tfor (const props in allFormsDatas) {\n\t\t\t\tif (props != \"wspType\" && props != \"doMigrateIfNecessary\")\n\t\t\t\t\thasNewParams = true;\n\t\t\t\tnewParams[props] = allFormsDatas[props];\n\t\t\t}\n\n\t\t\tlet wsps: Wsp[] = [];\n\t\t\tthis.wspsReg.forEach((entry) => {wsps.push(entry.env.wsp)});\n\t\t\twsps = WSP.sortWspsByDeep(wsps);\n\n\t\t\tlet wspsMonitoring = <WspsMonitoring Ã®={{\n\t\t\t\twsps: wsps,\n\t\t\t\tdefaultStateKey: \"notStart\",\n\t\t\t\tstates: [\n\t\t\t\t\t{key: \"notStart\", level: \"disabled\", label: \"En attente\"},\n\t\t\t\t\t{key: \"toUpdate\", level: \"disabled\", label: \"Ã actualiser\"},\n\t\t\t\t\t{key: \"pending\", level: \"pending\", label: \"En cours...\"},\n\t\t\t\t\t{key: \"updated\", level: \"success\", label: \"ActualisÃ©\"},\n\t\t\t\t\t{key: \"failed\", level: \"error\", label: \"Ãchec\"}\n\t\t\t\t]\n\t\t\t} as OWspsMonitoringInit}/> as WspsMonitoring;\n\n\t\t\tdialog = POPUP.showDialog(<div>\n\t\t\t\t<MsgLabel label=\"Enregistrements en cours...\"/>\n\t\t\t\t{wspsMonitoring}\n\t\t\t</div>, this, {\n\t\t\t\tskinOver: \"c-wsps-props-monitoraction\",\n\t\t\t\tfixSize: false,\n\t\t\t\ttitleBar: null,\n\t\t\t\tinitWidth: '50%',\n\t\t\t});\n\t\t\tlet errorsArray: any[] = [];\n\t\t\tfor (const entry in wsps) {\n\t\t\t\tlet wsp = wsps[entry];\n\t\t\t\twspsMonitoring.updateWspStatus(wsp.code, \"pending\");\n\t\t\t\ttry {\n\t\t\t\t\tif (hasNewParams) await wsp.updateWspProps(newParams);\n\t\t\t\t\tawait wsp.updateWspType(allFormsDatas.wspType, allFormsDatas[\"doMigrateIfNecessary\"]);\n\t\t\t\t\twspsMonitoring.updateWspStatus(wsp.code, \"updated\");\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\t} catch (e) {\n\t\t\t\t\twspsMonitoring.updateWspStatus(wsp.code, \"failed\");\n\t\t\t\t\twspTitleErrosArray.push(wsp.wspTitle);\n\t\t\t\t\terrorsArray.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 3000));\n\t\t\tif (errorsArray.length > 0) throw errorsArray;\n\t\t\tthis._doClose();\n\t\t} catch (e) {\n\t\t\tlet list = wspTitleErrosArray.join(\", \");\n\t\t\tif (dialog) dialog.close();\n\t\t\tawait ERROR.report(list ? \"Ãdition des ateliers en Ã©chec.\" : `Ãdition des ateliers ${list} en Ã©chec.`, e);\n\t\t\tawait this.refreshBtnsState();\n\t\t}\n\t}\n\n\t/*protected async getIniParams(): Promise<Jsonisable> {\n\t\t// Par approximation, on considÃ¨re que le premier atelier de la liste fournit les valeurs d'initialisation du formulaire\n\t\tlet wsp = this.wspsReg && this.wspsReg[0] ? this.wspsReg[0].reg.env.wsp : null;\n\t\tif (wsp) {\n\t\t\tawait wsp.waitForLoad();\n\t\t\treturn wsp.makeParamsForUpdate();\n\t\t} else\n\t\t\treturn this._emptyData;\n\t}*/\n\n\tprotected areasContext(): IControlAreaContext & IRegsPointer<IWspUiEnv> & IRegPointer<IChainEnv> {\n\t\treturn {\n\t\t\treg: this.reg,\n\t\t\tregs: this.wspsReg,\n\t\t\tbuildControlLabel: true\n\t\t};\n\t}\n\n\tprotected initFormELt(form: HTMLFormElement): void {\n\t\tform.appendChild(\n\t\t\t<fieldset class=\"fieldslist\" id=\"wspTypeFs\">\n\t\t\t\t<div class=\"fields\" area-ids=\"*\"/>\n\t\t\t</fieldset>);\n\t}\n\n\tget areaList(): string[] {\n\t\tlet list: string[] = [\"wspProps:editAll:commons\"];\n\t\tswitch (this.reg.env.universe.config.backEnd) {\n\t\tcase \"fs\":\n\t\t\tlist.push(\"wspProps:editAll:fs\");\n\t\t\tbreak;\n\t\tcase \"odb\":\n\t\t\tlist.push(\"wspProps:editAll:db\");\n\t\t\tbreak;\n\t\t}\n\t\tif (this.reg.env.universe.config.drv)\n\t\t\tlist.push(\"wspProps:editAll:db:drv\");\n\t\tif (this.reg.env.universe.config.drf)\n\t\t\tlist.push(\"wspProps:editAll:db:drf\");\n\t\treturn list;\n\t}\n\n}\n\nREG.reg.registerSkin('c-wsps-editmodel-props', 1, /* language=CSS */ `\n\t.info {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin: 1em;\n\t}\n\n\twsps-monitoring {\n\t\tmargin: 0 2em;\n\t\tmax-height: 6em;\n\t\toverflow: auto;\n\t}\n`);\ncustomElements.define('c-wsps-editmodel-props', WspsEditModelProps);"]}