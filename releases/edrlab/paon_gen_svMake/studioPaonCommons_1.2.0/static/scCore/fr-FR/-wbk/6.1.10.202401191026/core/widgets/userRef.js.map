{"version":3,"sources":["/@back@/core/widgets/userRef.tsx"],"names":["BaseElement","REG","EUserType","USER","DOM","JSX","UserRef","nickOrAccount","this","_nickOrAccount","n","_user","fetchUser","refresh","user","account","usersSrv","reg","env","universe","useUsers","[object Object]","init","_props","Object","assign","withIcon","withTitle","showLongName","findReg","_attach","localName","createElement","super","buildInitFromAtts","getAttribute","pending","_pending","getUserBatch","span","shadowRoot","lastElementChild","setAttrBool","setTextContent","setAttr","longName","getLongName","text","getPrimaryName","isUnknown","userType","group","isAnonymous","registerSkin","customElements","define"],"mappings":"OAAQA,gBAA2B;OACrBC,QAAI;OAEVC,UAAkBC,SAAe;OACjCC,IAAKC,QAAI;OA6BX,MAAOC,gBAAgBN,YAU5BO,oBAAqB,OAAOC,KAAKC,eAEjCF,kBAAkBG,GACjB,GAAIF,KAAKC,iBAAmBC,EAAG,CAC9BF,KAAKC,eAAiBC;AACtBF,KAAKG,MAAQ;AACb,GAAID,EAAGF,KAAKI;AACZJ,KAAKK,WAIPC,WAAY,OAAON,KAAKG,MAExBG,SAASJ,GACRF,KAAKC,eAAiBC,EAAIA,EAAEK,QAAU;AACtCP,KAAKG,MAAQD;AACbF,KAAKK,UAGNG,eAA0B,OAAOR,KAAKS,IAAIC,IAAIC,SAASC,SAE7CC,YAAYC,MACrBd,KAAKe,OAASC,OAAOC,OAAO,CAACC,SAAU,KAAMC,UAAW,KAAMC,aAAc,OAAQN;AACpFd,KAAKS,IAAMT,KAAKqB,QAAQrB,KAAKe;AAC7Bf,KAAKsB,QAAQtB,KAAKuB,UAAWvB,KAAKe,OAAQlB,IAAA2B,cAAA,OAAA;AAC1C,GAAIxB,KAAKe,OAAOT,KAAM,CACrBN,KAAKM,KAAON,KAAKe,OAAOT,SAClB,CACNN,KAAKD,cAAgBC,KAAKe,OAAOhB,eAInCc,kBAAkBC,MACjBA,KAAOW,MAAMC,kBAAkBZ;AAC/BA,KAAKf,cAAgBC,KAAK2B,aAAa;AACvC,OAAOb,KAcRD,kBACC,MAAMe,QAAU5B,KAAK6B,SAAW7B,KAAKQ,SAASsB,aAAa9B,KAAKC;AAChE,MAAMK,WAAasB;AACnB,GAAI5B,KAAK6B,WAAaD,QAAS;AAC/B5B,KAAK6B,SAAW;AAChB7B,KAAKG,MAAQG;AACbN,KAAKK,UAGIQ,WACT,MAAMkB,KAAO/B,KAAKgC,WAAWC;AAC7BrC,IAAIsC,YAAYlC,KAAM,gBAAiBA,KAAKe,OAAOG;AACnD,GAAIlB,KAAK6B,SAAU,CAClBjC,IAAIuC,eAAeJ,KAAM;AACzB,GAAI/B,KAAKe,OAAOI,UAAWvB,IAAIwC,QAAQpC,KAAM,QAAS,WAChD,IAAKA,KAAKD,cAAe,CAC/BH,IAAIuC,eAAeJ,KAAM;AACzBnC,IAAIwC,QAAQpC,KAAM,QAAS;AAC3BJ,IAAIsC,YAAYlC,KAAM,eAAgB,WAChC,IAAKA,KAAKG,MAAO,CACvBP,IAAIuC,eAAeJ,KAAM/B,KAAKC;AAC9BL,IAAIwC,QAAQpC,KAAM,QAAS;AAC3BJ,IAAIsC,YAAYlC,KAAM,eAAgB;AACtCJ,IAAIsC,YAAYlC,KAAM,eAAgB;AACtCJ,IAAIsC,YAAYlC,KAAM,iBAAkB,UAClC,CACN,MAAMqC,SAAW1C,KAAK2C,YAAYtC,KAAKG;AACvC,IAAIoC,KAAO5C,KAAK6C,eAAexC,KAAKG;AACpC,GAAIH,KAAKe,OAAOK,cAAgBiB,SAAUE,MAAQ,KAAKF;AACvDzC,IAAIuC,eAAeJ,KAAMQ;AACzB,GAAIvC,KAAKG,MAAMsC,UACd7C,IAAIwC,QAAQpC,KAAM,QAAS;KAE3BJ,IAAIwC,QAAQpC,KAAM,QAASA,KAAKe,OAAOI,UAAYkB,SAAW;AAC/DzC,IAAIsC,YAAYlC,KAAM,eAAgBA,KAAKG,MAAMuC,WAAahD,UAAUiD;AACxE/C,IAAIsC,YAAYlC,KAAM,eAAgB;AACtCJ,IAAIsC,YAAYlC,KAAM,iBAAkBA,KAAKG,MAAMsC;AACnD7C,IAAIsC,YAAYlC,KAAM,mBAAqBA,KAAKG,MAAgByC,eAMnEnD,IAAIgB,IAAIoC,aAAa,YAAa,EAAsB;AA8CxDC,eAAeC,OAAO,YAAajD","sourcesContent":["import {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {IReg, REG} from 'lib/commons/registry';\nimport {ICoreUniverseEnv} from \"lib/core/universe\";\nimport {EUserType, JUser, USER, UsersSrv} from \"lib/core/user\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\n\n/**\n * Widget affichant une ref à un user.\n * Evolutions potentielles:\n * - ajout de l'avatar en icone\n * - ajout d'un tooltip des présentation détaillée, et fonctions de communication avec ce user\n * - ajout listeners sur update du user lorsque UsersSrv implémentera cette possibilité\n *\n * Class :\n * \t- inline : passe en inline-flex.\n * \t- list : grid, ...\n */\nexport interface UserRef extends BaseElement {\n\tinitialize(init: OUserRefInit): this\n}\n\nexport interface OUserRefInit extends OSkinableInit {\n\treg?: IReg<ICoreUniverseEnv>\n\tnickOrAccount?: string\n\tuser?: JUser\n\t/** true par défaut */\n\twithTitle?: boolean\n\t/** true par défaut */\n\twithIcon?: boolean,\n\t/** false par défaut */\n\tshowLongName?: boolean\n}\n\nexport class UserRef extends BaseElement {\n\n\treg: IReg<ICoreUniverseEnv>;\n\n\tprotected _nickOrAccount: string;\n\n\tprotected _user?: JUser;\n\n\tprotected _props: OUserRefInit;\n\n\tget nickOrAccount() {return this._nickOrAccount}\n\n\tset nickOrAccount(n: string) {\n\t\tif (this._nickOrAccount !== n) {\n\t\t\tthis._nickOrAccount = n;\n\t\t\tthis._user = null;\n\t\t\tif (n) this.fetchUser();\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tget user() {return this._user}\n\n\tset user(n: JUser) {\n\t\tthis._nickOrAccount = n ? n.account : null;\n\t\tthis._user = n;\n\t\tthis.refresh();\n\t}\n\n\tget usersSrv(): UsersSrv {return this.reg.env.universe.useUsers}\n\n\tprotected _initialize(init: OUserRefInit) {\n\t\tthis._props = Object.assign({withIcon: true, withTitle: true, showLongName: false}, init);\n\t\tthis.reg = this.findReg(this._props);\n\t\tthis._attach(this.localName, this._props, <span/>);\n\t\tif (this._props.user) {\n\t\t\tthis.user = this._props.user;\n\t\t} else {\n\t\t\tthis.nickOrAccount = this._props.nickOrAccount;\n\t\t}\n\t}\n\n\tbuildInitFromAtts(init?: OUserRefInit): OUserRefInit {\n\t\tinit = super.buildInitFromAtts(init);\n\t\tinit.nickOrAccount = this.getAttribute('account');\n\t\treturn init;\n\t}\n\n\t// connectedCallback() {\n\t// \tsuper.connectedCallback();\n\t// \t//TODO listen user updates auprès de this.usersSrv\n\t// }\n\t// disconnectedCallback() {\n\t// \t//TODO unlisten user updates auprès de this.usersSrv\n\t// }\n\n\n\tprotected _pending: Promise<JUser>;\n\n\tasync fetchUser() {\n\t\tconst pending = this._pending = this.usersSrv.getUserBatch(this._nickOrAccount);\n\t\tconst user = await pending;\n\t\tif (this._pending !== pending) return; //race cond\n\t\tthis._pending = null;\n\t\tthis._user = user;\n\t\tthis.refresh();\n\t}\n\n\tprotected _refresh() {\n\t\tconst span = this.shadowRoot.lastElementChild;\n\t\tDOM.setAttrBool(this, \"data-withIcon\", this._props.withIcon);\n\t\tif (this._pending) {\n\t\t\tDOM.setTextContent(span, \"...\");\n\t\t\tif (this._props.withTitle) DOM.setAttr(this, \"title\", null);\n\t\t} else if (!this.nickOrAccount) {\n\t\t\tDOM.setTextContent(span, \"\");\n\t\t\tDOM.setAttr(this, \"title\", null);\n\t\t\tDOM.setAttrBool(this, \"data-isEmpty\", true);\n\t\t} else if (!this._user) {\n\t\t\tDOM.setTextContent(span, this._nickOrAccount);\n\t\t\tDOM.setAttr(this, \"title\", \"Utilisateur / groupe inconnu\");\n\t\t\tDOM.setAttrBool(this, \"data-isGroup\", false);\n\t\t\tDOM.setAttrBool(this, \"data-isEmpty\", false);\n\t\t\tDOM.setAttrBool(this, \"data-isUnknown\", true);\n\t\t} else {\n\t\t\tconst longName = USER.getLongName(this._user);\n\t\t\tlet text = USER.getPrimaryName(this._user);\n\t\t\tif (this._props.showLongName && longName) text += ` (${longName})`;\n\t\t\tDOM.setTextContent(span, text);\n\t\t\tif (this._user.isUnknown)\n\t\t\t\tDOM.setAttr(this, \"title\", \"Utilisateur / groupe inconnu\");\n\t\t\telse\n\t\t\t\tDOM.setAttr(this, \"title\", this._props.withTitle ? longName : null);\n\t\t\tDOM.setAttrBool(this, \"data-isGroup\", this._user.userType === EUserType.group);\n\t\t\tDOM.setAttrBool(this, \"data-isEmpty\", false);\n\t\t\tDOM.setAttrBool(this, \"data-isUnknown\", this._user.isUnknown);\n\t\t\tDOM.setAttrBool(this, \"data-isAnonymous\", (this._user as JUser).isAnonymous);\n\t\t}\n\t}\n\n}\n\nREG.reg.registerSkin('c-userref', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 1.2em;\n\t\tmin-width: 0;\n\t\tcolor: var(--alt2-color);\n\t}\n\n\t:host([data-isEmpty]) {\n\t\tvisibility: collapse;\n\t}\n\n\t:host(.inline) {\n\t\tdisplay: inline;\n\t}\n\n\t:host(.list) {\n\t\tcolor: var(--color);\n\t}\n\n\t:host([data-withIcon]) span {\n\t\tbackground-image: url(/@skin@/core/objects/user.svg);\n\t\tbackground-position: left;\n\t\tbackground-size: auto 1em;\n\t\tbackground-repeat: no-repeat;\n\t\tpadding-inline-start: 1.2em;\n\t}\n\n  :host([data-isGroup][data-withIcon]) span {\n\t  background-image: url(/@skin@/core/objects/group.svg);\n\t  padding-inline-start: 1.6em;\n  }\n\n  :host([data-isUnknown]) span {\n\t  filter: grayscale(100%);\n\t  font-style: italic;\n  }\n\n  :host([data-isAnonymous]) span {\n\t  background-image: unset;\n\t  font-style: italic;\n  }\n\n\n`);\n\ncustomElements.define('c-userref', UserRef);"]}