{"version":3,"sources":["/@back@/edit/wed/wedlets/box/boxCidAction.tsx"],"names":["EWedletEditMode","EWedletEditModeLabel","WEDLET","DOM","JSX","DOMSH","Button","POPUP","ECidSessionState","CidInteractionByStepsUi","ERROR","LANG","REMOTE","BoxCidAction","HTMLElement","[object Object]","this","metas","Map","cidMetaIn","cidMetaOut","cidHostUse","label","getAttribute","icon","disabled","me","findHost","filePickerElt","click","doCidProcess","fileToUpload","files","item","value","ct","createElement","overrideMetas","async","ctx","metasIn","foreignMetas","url","migrateUrl","reg","name","size","forEach","key","cidSessionConfig","bodyToUpload","initialize","skinOver","cidProcessIs","cidHostIs","cidManifestUrlInput","cidPassOptionalInteraction","onInteractionEndHandler","cidSession","state","failed","showError","msg","details","failedReason","ended","xa","wedlet","wedAnchor","batch","wedMgr","docHolder","newBatch","metasOut","injectAlias","aliasUrl","isVirtual","insertDatasFromDisplay","setText","doBatch","result","close","showDialog","env","uiRoot","titleBar","barLabel","closeButton","initWidth","initHeight","resizer","tpl","sr","attachShadow","SHADOWDOM_INIT","installSkins","localName","visiblePerms","hasPerm","_button","appendChild","createButton","enablePerms","isWritableWedlet","metaElts","querySelectorAll","metaElt","set","filePicker","querySelector","type","accept","onchange","onSelectFile","style","cidProcessIsElts","length","entry","textContent","push","split","hasAttribute","cidHostIsElts","onclick","doBtnAction","title","val","clearAnnots","from","chars","refreshBindValue","stringInsert","len","stringDelete","mode","setAttr","reassessPerms","remove","shadowRoot","write","window","customElements","define"],"mappings":"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","sourcesContent":["import {EWedletEditMode, EWedletEditModeLabel, IElementWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IReg, IUiEnv} from \"lib/commons/registry\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {CidSession, ECidSessionState, OCidSessionConfig} from \"lib/core/cid\";\nimport {CidInteractionByStepsUi, ICidCtx, OCidInteractionByStepsUiInit} from \"back/core/widgets/cidUi\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IJmlNode} from \"lib/commons/xml/jml\";\nimport {IUniverseEnv} from \"lib/core/universe\";\nimport {IO} from \"lib/commons/io/io\";\nimport {CDM} from \"lib/commons/utils/cdm\";\nimport {IXmlMsg} from \"lib/edit/ot/xmlHouse\";\nimport {LANG} from \"lib/commons/lang\";\nimport {REMOTE} from \"lib/core/remote\";\n\n/**\n * Déclenche une intéraction cid dans un contexte wed\n * Contexte : bind du noeud texte à modifier\n *\n * <box-cid-action  label=\"xxx\"\n *                  title=yyy yyy yyy\"\n *                  icon=\":wspRes:editors/xxx.png\"\n *                  visiblePerms=\"perm1\"\n *                  enablePerms=\"perm2\"\n *                  cidProcessIs=\"aaa bbb ccc\" deprecated au profit du tag 'cidHosts' : FIXME 5.1 : à supprimer\n *                  cidHostIs=\"111 222 333\" deprecated au profit du tag 'cidProcesses' : FIXME 5.1 : à supprimer\n *                  cidManifestUrlInput?=\"false\"\n *                  cidPassOptionalInteraction?=\"false\"\n *                  cidHostUse?=\"both\"\n *                  cidMetaIn?=\"publicUrl\"\n *                  cidMetaOut?=\"publicUrl\"\n *                  injectAlias?=\"false\">\n *    <cidHosts>\n *\t\t\t<cidHostIs>aaa bbb</cidHosts>\n *\t\t\t<cidHostIs>ccc</cidHosts>\n *    </cidHosts>\n *    <cidProcesses>\n *\t\t\t<cidProcessIs>aaa bbb</cidHosts>\n *\t\t\t<cidProcessIs>ccc</cidHosts>\n *    </cidProcesses>\n *    <filePicker? accept=\"\"/> : si renseigné, l'écran de sélection de fichier est affiché\n *    <meta* code=\"\" value=\"\"/>\n * </box-cid-action>\n *\n */\nexport class BoxCidAction extends HTMLElement implements IElementWedlet {\n\n\tprotected _button: Button;\n\n\tprotected url: string;\n\n\twedlet: IWedlet;\n\n\treg: IReg<IUiEnv & IUniverseEnv>\n\n\tvisiblePerms?: string[];\n\n\tenablePerms?: string[];\n\n\tprotected metas: Map<string, string> = new Map();\n\n\tprotected filePickerElt: HTMLInputElement;\n\n\tprotected fileToUpload: File;\n\n\tcidProcessIs?: string[] | string[][];\n\n\tcidHostIs?: string[] | string[][];\n\n\tinjectAlias?: boolean;\n\n\tcidManifestUrlInput?: boolean;\n\n\tcidPassOptionalInteraction?: boolean;\n\n\tcidMetaIn: string = \"publicUrl\";\n\n\tcidMetaOut: string = \"publicUrl\";\n\n\t/** Filtre des hosts par rapport au \"use\"\n\t * 'both' par défaut\n\t **/\n\tcidHostUse: 'input' | 'output' | 'both' = \"both\";\n\n\tget label(): string {return this.getAttribute(\"label\")}\n\n\tget icon(): string {return this.getAttribute(\"icon\")}\n\n\tprotected async doBtnAction(this: HTMLButtonElement) {\n\t\tif (this.disabled) return;\n\t\tconst me = DOMSH.findHost<BoxCidAction>(this);\n\t\tif (me.filePickerElt) me.filePickerElt.click();\n\t\telse me.doCidProcess()\n\t}\n\n\tprotected onSelectFile(this: HTMLInputElement) {\n\t\tconst me = DOMSH.findHost<BoxCidAction>(this);\n\t\tme.fileToUpload = this.files ? this.files.item(0) : null;\n\t\tthis.value = null;\n\t\tif (me.fileToUpload) me.doCidProcess();\n\t}\n\n\tprotected async doCidProcess() {\n\t\tconst ct = <CidInteractionByStepsUi/>;\n\t\t// Meta\n\t\tct.overrideMetas = async (ctx: ICidCtx, metasIn: Dict<any>, foreignMetas: { is: string[], value: string | ((session: CidSession) => string) }[]) => {\n\t\t\tif (this.cidMetaIn) {\n\t\t\t\tconst url = await REMOTE.migrateUrl(this.url, this.reg);\n\t\t\t\tif (url) metasIn[this.cidMetaIn] = url;\n\t\t\t}\n\n\t\t\t// Ajout du nom du fichier s'il s'agit d'un upload\n\t\t\tif (this.fileToUpload) metasIn['fileName'] = this.fileToUpload.name;\n\n\t\t\tif (this.metas && this.metas.size > 0) {\n\t\t\t\tthis.metas.forEach((value: string, key: any) => {\n\t\t\t\t\tmetasIn[key] = value;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst cidSessionConfig = {} as OCidSessionConfig;\n\t\tif (this.fileToUpload) {\n\t\t\tcidSessionConfig.bodyToUpload = await this.fileToUpload;\n\t\t\t/*cidSessionConfig.customUpload = async (session: CidSession, uploadStep: CidUploadStep, webUpload: ICidWebUploadDef): Promise<null | Response> => {\n\t\t\t\tsession.config.bodyToUpload = await me.fileToUpload;\n\t\t\t}*/\n\t\t}\n\n\t\tct.initialize({\n\t\t\treg: this.reg,\n\t\t\tskinOver: \"webzone:panel\",\n\t\t\tcidProcessIs: this.cidProcessIs,\n\t\t\tcidHostIs: this.cidHostIs,\n\t\t\tcidManifestUrlInput: this.cidManifestUrlInput,\n\t\t\tcidPassOptionalInteraction: this.cidPassOptionalInteraction,\n\t\t\tcidHostUse: this.cidHostUse,\n\t\t\tcidSessionConfig: cidSessionConfig,\n\t\t\tonInteractionEndHandler: async (cidSession: CidSession) => {\n\t\t\t\tswitch (cidSession.state) {\n\t\t\t\tcase ECidSessionState.failed:\n\t\t\t\t\tawait ERROR.showError({\n\t\t\t\t\t\tmsg: \"Échec d'interaction avec le serveur de ressources\",\n\t\t\t\t\t\tdetails: cidSession.failedReason\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase ECidSessionState.ended:\n\t\t\t\t\t//on ajoute\n\t\t\t\t\tconst xa = this.wedlet.wedAnchor;\n\t\t\t\t\tconst batch = this.wedlet.wedMgr.docHolder.newBatch();\n\t\t\t\t\tlet value = cidSession.metasOut[this.cidMetaOut] || \"\";\n\t\t\t\t\tif (this.injectAlias) value = await REMOTE.aliasUrl(value, this.reg);\n\t\t\t\t\tif (this.wedlet.isVirtual()) {\n\t\t\t\t\t\tWEDLET.insertDatasFromDisplay(this.wedlet, batch, value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbatch.setText(xa, value);\n\t\t\t\t\t}\n\t\t\t\t\tbatch.doBatch();\n\t\t\t\t}\n\t\t\t\tresult.close();\n\t\t\t}\n\t\t} as OCidInteractionByStepsUiInit);\n\n\t\tconst result = POPUP.showDialog(ct, this.reg.env.uiRoot, {\n\t\t\ttitleBar: {barLabel: {label: this.label}, closeButton: {}},\n\t\t\tinitWidth: '70vw',\n\t\t\tinitHeight: '70vh',\n\t\t\tresizer: {}\n\t\t});\n\n\t}\n\n\t// IElementWedlet\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tWEDLET.installSkins(tpl, sr, wedlet, this.localName);\n\t\tthis.reg = wedlet.wedMgr.reg;\n\n\t\tif (!this.visiblePerms || this.reg.hasPerm(this.visiblePerms)) {\n\t\t\tthis._button = sr.appendChild(this.createButton());\n\t\t\tthis._button.disabled = (this.enablePerms && !this.reg.hasPerm(this.enablePerms)) || !WEDLET.isWritableWedlet(this.wedlet);\n\t\t}\n\n\t\tconst metaElts = tpl.querySelectorAll(\"meta\");\n\t\tmetaElts.forEach((metaElt => {\n\t\t\tthis.metas.set(metaElt.getAttribute(\"code\"), metaElt.getAttribute(\"value\"));\n\t\t}));\n\n\t\tconst filePicker = tpl.querySelector(\"filePicker\");\n\t\tif (filePicker) {\n\t\t\tthis.filePickerElt = <input type=\"file\" accept={filePicker.getAttribute(\"accept\")} onchange={this.onSelectFile} style=\"display:none;\"/> as HTMLInputElement;\n\t\t\tsr.appendChild(this.filePickerElt);\n\t\t}\n\n\t\tconst cidProcessIsElts = tpl.querySelectorAll(\"cidProcesses > cidProcessIs\");\n\t\tif (cidProcessIsElts && cidProcessIsElts.length > 0) {\n\t\t\tthis.cidProcessIs = [];\n\t\t\tcidProcessIsElts.forEach((entry) => {\n\t\t\t\tif (entry.textContent) (this.cidProcessIs as string[][]).push(entry.textContent.split(\" \"));\n\t\t\t});\n\t\t} else if (tpl.hasAttribute(\"cidProcessIs\")) {\n\t\t\t/*@deprecated 5.1*/\n\t\t\tthis.cidProcessIs = tpl.getAttribute(\"cidProcessIs\").split(\" \")\n\t\t}\n\n\t\tconst cidHostIsElts = tpl.querySelectorAll(\"cidHosts > cidHostIs\");\n\t\tif (cidHostIsElts && cidHostIsElts.length > 0) {\n\t\t\tthis.cidHostIs = [];\n\t\t\tcidHostIsElts.forEach((entry) => {\n\t\t\t\tif (entry.textContent)\n\t\t\t\t\t(this.cidHostIs as string[][]).push(entry.textContent.split(\" \"));\n\t\t\t});\n\t\t} else if (tpl.hasAttribute(\"cidHostIs\")) {\n\t\t\t/*@deprecated 5.1*/\n\t\t\tthis.cidHostIs = tpl.getAttribute(\"cidHostIs\").split(\" \")\n\t\t}\n\n\t\tif (tpl.hasAttribute(\"injectAlias\")) this.injectAlias = tpl.getAttribute(\"injectAlias\") == \"true\";\n\n\t\tif (tpl.hasAttribute(\"cidManifestUrlInput\")) this.cidManifestUrlInput = tpl.getAttribute(\"cidManifestUrlInput\") == \"true\";\n\n\t\tif (tpl.hasAttribute(\"cidPassOptionalInteraction\")) this.cidPassOptionalInteraction = tpl.getAttribute(\"cidPassOptionalInteraction\") == \"true\";\n\n\t\tif (tpl.hasAttribute(\"cidHostUse\")) this.cidHostUse = tpl.getAttribute(\"cidHostUse\") as any;\n\n\t\tif (tpl.hasAttribute(\"cidMetaIn\")) this.cidMetaIn = tpl.getAttribute(\"cidMetaIn\");\n\n\t\tif (tpl.hasAttribute(\"cidMetaOut\")) this.cidMetaOut = tpl.getAttribute(\"cidMetaOut\");\n\n\t\tif (tpl.hasAttribute(\"visiblePerms\")) this.visiblePerms = tpl.getAttribute(\"visiblePerms\").split(\" \");\n\n\t\tif (tpl.hasAttribute(\"enablePerms\")) this.enablePerms = tpl.getAttribute(\"enablePerms\").split(\" \");\n\t}\n\n\tprotected createButton(): Button {\n\t\treturn <Button onclick={this.doBtnAction} label={this.label} title={this.title} icon={this.icon}/> as Button\n\t}\n\n\trefreshBindValue(val: IJmlNode) {\n\t\tthis.url = val as string;\n\t\tWEDLET.clearAnnots(this);\n\t}\n\n\tinsertChars(from: number, chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringInsert(this.url, from, chars));\n\t}\n\n\tdeleteChars(from: number, len: number, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringDelete(this.url, from, len));\n\t}\n\n\treplaceChars(chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(chars);\n\t}\n\n\tsetEditMode(mode: EWedletEditMode) {\n\t\tDOM.setAttr(this, \"edit-mode\", EWedletEditModeLabel[mode]);\n\t\tthis.reassessPerms();\n\t}\n\n\treassessPerms() {\n\t\tif (this.visiblePerms && !this.reg.hasPerm(this.visiblePerms)) {\n\t\t\tif (this._button) {\n\t\t\t\tthis._button.remove();\n\t\t\t\tthis._button = null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._button) this._button = this.shadowRoot.appendChild(this.createButton());\n\t\t}\n\t\tif (this._button) {\n\t\t\tthis._button.disabled =\n\t\t\t\tthis.getAttribute(\"edit-mode\") !== EWedletEditModeLabel[EWedletEditMode.write] //XXX pb si action CID non directement liée à l'édition : consultation, export...\n\t\t\t\t|| (this.enablePerms && !this.reg.hasPerm(this.enablePerms));\n\t\t}\n\t}\n}\n\nwindow.customElements.define(\"box-cid-action\", BoxCidAction);\n"]}