{"version":3,"sources":["/@back@/store/dialogs/utSelector.tsx"],"names":["BaseElement","Button","POPUP","REG","JSX","DOMSH","UtBrowser","URLTREE","Action","UtSelector","holder","this","_holder","findPopupableParent","[object Object]","init","reg","findReg","checkSel","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","utInit","Object","assign","onSelChange","defaultAction","setExecute","validAndDo","bind","nodeFilter","n","isQueryPath","utBrowser","appendChild","createElement","î","footer","id","msg","doBtn","class","disabled","ui-context","label","selBtnLabel","onclick","onDoBtn","onCancelBtn","initializedAsync","then","initialPath","selectRes","checkSelValid","sel","me","findHost","currentSel","length","valid","setCustomMsg","close","_a","cancel","registerSkin","customElements","define"],"mappings":"OAAQA,gBAAqC;OACrCC,WAAO;OACPC,UAAM;OACAC,QAAI;OACVC,QAAI;OACJC,UAAM;OAGUC,cAAU;OACTC,YAAQ;OACzBC,WAAO;OA2BT,MAAOC,mBAAmBT,YAW/BU,aAAkD,OAAOC,KAAKC,SAAWV,MAAMW,oBAAoBF,MAIzFG,YAAYC,MACrBJ,KAAKK,IAAML,KAAKM,QAAQF;AACxBJ,KAAKO,SAAWH,KAAKG;AACrBP,KAAKC,QAAUG,KAAKL;AACpB,MAAMS,GAAKR,KAAKS,aAAaf,MAAMgB;AACnCV,KAAKK,IAAIM,YAAY,kBAAmBH;AACxCR,KAAKY,oBAAoBZ,KAAKa,UAAWT;AACzC,MAAMU,OAASC,OAAOC,OAAuC,CAC5DX,IAAKL,KAAKK,IACVY,YAAajB,KAAKiB,YAClBC,eAAe,IAAIrB,QAASsB,WAAWnB,KAAKoB,WAAWC,KAAKrB,OAC5DsB,WAAaC,IAAO3B,QAAQ4B,YAAYD,EAAEA,IACxCnB,KAAKqB;AACR,MAAMA,UAAYjB,GAAGkB,YAAYjC,IAAAkC,cAAChC,UAAS,CAAAiC,IAAId;AAC/C,MAAMe,OAASrB,GAAGkB,YAAYjC,IAAAkC,cAAA,MAAA,CAAKG,GAAG;AACtC9B,KAAK+B,IAAMF,OAAOH,YAAYjC,IAAAkC,cAAA,QAAA,CAAOG,GAAG;AACxC9B,KAAKgC,MAAQH,OAAOH,YAAYjC,IAAAkC,cAACrC,OAAM,CAACwC,GAAG,KAAKG,MAAM,UAAUC,SAAQ,KAAAC,aAAY,SAASC,MAAOhC,KAAKiC,aAAe,iBAAkBC,QAAStC,KAAKuC;AACxJV,OAAOH,YAAYjC,IAAAkC,cAACrC,OAAM,CAACwC,GAAG,SAAQK,aAAY,SAASC,MAAM,YAAYE,QAAStC,KAAKwC;AAC3Ff,UAAUgB,iBAAiBC,KAAK,KAC/B,GAAItC,KAAKuC,aAAe,KAAMlB,UAAUmB,UAAUxC,KAAKuC;AAExD3C,KAAK6C,gBAGI1C,YAAwBsB,UAAsBqB,KACvD,MAAMC,GAAKrD,MAAMsD,SAAqBvB;AACtCsB,GAAGE,WAAaH,KAAOA,IAAII,OAAS,EAAIJ,IAAI,GAAK;AACjDC,GAAGF,gBAGJ1C,gBACC,IAAIgD,MAAuB;AAC3B,GAAInD,KAAKiD,YAAc,KAAM,CAC5BE,MAAQ,iCACF,GAAInD,KAAKO,SAAU,CACzB4C,MAAQnD,KAAKO,SAASP,MAEvBA,KAAKgC,MAAME,SAAWiB,QAAU;AAChCnD,KAAK+B,IAAIqB,aAAaD,QAAU,KAAOA,MAAQ;AAC/C,OAAOA,QAAU,KAGlBhD,aACC,GAAIH,KAAK6C,gBAAiB7C,KAAKD,OAAOsD,MAAMrD,KAAKiD,YAGlD9C,iBACCmD,GAAAtD,KAAKD,UAAM,MAAAuD,UAAA,OAAA,EAAAA,GAAED,QAGdlD,cACET,MAAMsD,SAAShD,MAAqBuD,SAGtCpD,UACET,MAAMsD,SAAShD,MAAqBoB,cAIvC5B,IAAIa,IAAImD,aAAa,oBAAqB,EAAsB;AAahEC,eAAeC,OAAO,oBAAqB5D","sourcesContent":["import {BaseElement, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IDepotUiEnv} from \"lib/store/depot\";\nimport {resPath} from \"lib/store/res\";\nimport {OUtBrowserInit, UtBrowser} from \"back/store/views/utBrowser\";\nimport {JNodeShortProps, URLTREE} from \"lib/store/urlTree\";\nimport {Action} from \"lib/commons/actions\";\nimport {ICloseable} from \"back/commons/widgets/popupable\";\n\n/**\n * Dialogue de sélection d'un dossier ou d'une ressource via l'UrlTree Browser.\n */\nexport interface UtSelector extends BaseElement {\n\tinitialize(init: OUtSelectorInit): this\n}\n\nexport interface OUtSelectorInit extends OSkinableInit {\n\n\t/** Path de la res ou du dossier pré-sélectionné. */\n\tinitialPath?: resPath\n\n\t/** Accepte la sélection (true) ou la refuse avec un msg pour le user (string). */\n\tcheckSel?: (utSelector: UtSelector) => true | string\n\n\t/** Contexte d'appel auprès duquel retourner le résultat de la sélection. */\n\tholder?: ICloseable<JNodeShortProps | null>\n\n\n\tselBtnLabel?: string\n\n\tutBrowser?: OUtBrowserInit\n}\n\nexport class UtSelector extends BaseElement {\n\n\treg: IReg<IDepotUiEnv>;\n\n\tcheckSel?: (utSelector: UtSelector) => true | string\n\n\tdoBtn: Button;\n\tmsg: MsgLabel;\n\n\tcurrentSel: JNodeShortProps;\n\n\tget holder(): ICloseable<JNodeShortProps | null> {return this._holder || POPUP.findPopupableParent(this)}\n\n\t_holder?: ICloseable<JNodeShortProps | null>\n\n\tprotected _initialize(init: OUtSelectorInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.checkSel = init.checkSel;\n\t\tthis._holder = init.holder;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"standard-dialog\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst utInit = Object.assign<OUtBrowserInit, OUtBrowserInit>({\n\t\t\treg: this.reg,\n\t\t\tonSelChange: this.onSelChange,\n\t\t\tdefaultAction: new Action().setExecute(this.validAndDo.bind(this)),\n\t\t\tnodeFilter: (n) => !URLTREE.isQueryPath(n.n)\n\t\t}, init.utBrowser);\n\t\tconst utBrowser = sr.appendChild(<UtBrowser î={utInit}/>) as UtBrowser;\n\t\tconst footer = sr.appendChild(<div id=\"footer\"/>);\n\t\tthis.msg = footer.appendChild(<c-msg id=\"msg\"/>) as MsgLabel;\n\t\tthis.doBtn = footer.appendChild(<Button id=\"do\" class=\"default\" disabled ui-context=\"dialog\" label={init.selBtnLabel || \"Sélectionner\"} onclick={this.onDoBtn}/>) as Button;\n\t\tfooter.appendChild(<Button id=\"cancel\" ui-context=\"dialog\" label=\"Annuler\" onclick={this.onCancelBtn}/>);\n\t\tutBrowser.initializedAsync.then(() => {\n\t\t\tif (init.initialPath != null) utBrowser.selectRes(init.initialPath);\n\t\t});\n\t\tthis.checkSelValid();\n\t}\n\n\tprotected onSelChange(this: void, utBrowser: UtBrowser, sel: JNodeShortProps[]) {\n\t\tconst me = DOMSH.findHost<UtSelector>(utBrowser);\n\t\tme.currentSel = sel && sel.length > 0 ? sel[0] : null;\n\t\tme.checkSelValid();\n\t}\n\n\tcheckSelValid(): boolean {\n\t\tlet valid: true | string = true;\n\t\tif (this.currentSel == null) {\n\t\t\tvalid = \"Sélectionnez un contenu\";\n\t\t} else if (this.checkSel) {\n\t\t\tvalid = this.checkSel(this);\n\t\t}\n\t\tthis.doBtn.disabled = valid !== true;\n\t\tthis.msg.setCustomMsg(valid !== true ? valid : null);\n\t\treturn valid === true;\n\t}\n\n\tvalidAndDo() {\n\t\tif (this.checkSelValid()) this.holder.close(this.currentSel);\n\t}\n\n\tcancel() {\n\t\tthis.holder?.close();\n\t}\n\n\tonCancelBtn(this: Button) {\n\t\t(DOMSH.findHost(this) as UtSelector).cancel();\n\t}\n\n\tonDoBtn(this: Button) {\n\t\t(DOMSH.findHost(this) as UtSelector).validAndDo();\n\t}\n}\n\nREG.reg.registerSkin('store-ut-selector', 1, /* language=CSS */ `\n\n\tc-button {\n\t\tmin-width: 6em;\n\t}\n\n\t#msg {\n\t\tflex: 1;\n\t\tmargin: 0 .5em;\n\t\tjustify-content: start;\n\t}\n`);\n\ncustomElements.define(\"store-ut-selector\", UtSelector);\n"]}