{"version":3,"sources":["/@back@/wsp/dialogs/wspTrash.tsx"],"names":["BaseElementAsync","MsgOver","REG","VIEWS","JSX","DOMSH","WSP","Wsp","InfoBrokerBasic","ESrcSt","SRC","ESearchItemSrcTypes","SearchItemSrcType","SearchLastModif","SearchLastUser","SearchRegexpUri","SearchRequest","POPUP","EFolderState","GridColTreeDef","GridDataHolderJsonTree","CellBuilderSrcIconCode","SrcGrid","SrcGridDatas","AccelKeyMgr","InputPeriod","SpaceTreeReqUri","InfoFocusItem","ITEM","MoveToSrc","SrcAction","AppHeader","EItemTypeFamily","ERROR","ItemViewerSingle","ESrcRights","Button","InputUserPanel","EUserType","WspTrash","[object Object]","this","maxEntries","critDirty","spaceRoot","URI_ROOT","wsp","reg","env","shortDescs","_grid","emitter","root","_spaceRootBtn","label","extractSpaceLabel","setCritDirty","resetList","init","createSubReg","findReg","_initReg","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","infoBroker","createElement","id","Ã®","uiContext","title","onclick","onChooseSpace","_removedBy","initialize","required","emptySelectionMsg","userCard","usersGridInit","usersSrv","universe","useUsers","grid","selType","filterType","user","filterTypeInputVisibility","initializedAsync","_inputTxt","type","spellcheck","_inputPeriod","_inputRecursive","_searchBtn","doSearch","bind","gridDatas","useLiveSrcUri","WspTrashGrid","itemHandlingReact","actions","getList","accelKeyMgr","initFromMapActions","getListAsMap","hideHeaders","skinOver","skinScroll","dataHolder","emptyBody","_fetching","_waitingExec","level","_lastError","_treedatas","WspTrashTreeDatas","getShortDescFields","setCategorizer","setAttribute","_appHeader","appendChild","focusListening","actionContext","forceSharedBar","onchange","_onCritChange","oninput","selectLiveSrcUri","value","checked","_srcUriToSelOnInit","_fetchRootDatas","showMainView","parentMainView","c-resizable","c-orient","_mainView","initViewer","addEventListener","_onGridSelect","wspFrom","wspServer","code","infoWsp","wspMetaUi","_initWspReg","addToList","RestoreToAction","wspDefProps","drvAxis","visitor","options","visitNodes","visitNodesAsync","place","listenChanges","newPlaceWsp","eventsMgr","on","setHeadband","onWspLiveStateChange","onViewShown","closed","stopListenChanges","closePlace","onViewHidden","isAvailable","msgOver","removeMsg","isInError","findPopupableParent","close","showMsgOver","setCustomMsg","WSPTRASH_DEBUG","console","log","undefined","requ","_getRequest","where","toDom","fetchSearchJson","toXml","datas","length","showNotifInfo","srcGridDatas","setDatas","srcUri","rowKey","findRowKeyBySrcUri","setSelectedRows","getOffset","e","SearchNodesInTrash","SPACE","ITEMFOLDER","ITEMFILE","_a","buildSrcUriPattern","buildFromInputPeriod","getShortDescDef","setWhere","setMax","findHost","ev","wspTrash","SpaceSelector","import","ct","startSel","spaceTree","showRoot","selOnDblClick","space","showMenuFromEvent","onNextClose","setSpaceRoot","_showTimer","clearTimeout","count","countSelectedRows","dispatchInfo","setTimeout","sd","getSrcUriType","srcLiveUri","getRowKeyParent","longDesc","data","parent","extractUriParent","stack","push","reverse","Object","assign","create","getItemType","itModel","getFamily","res","ch","srcSt","folder","isTrashUri","srcRi","READS","remove","removeChildren","move","registerSkin","customElements","define","setDefaultSort","setFlex","setMinWidth","setSortable","setCellBuilder","srcUriItemsSortFn","row","line","super","redrawLine","classList","toggle","getData","child","srcFields","setDefaultOpenState","d","folderSt","setFolderSt","opening","addFieldColumns","isRowkeyAlive","updateDatas","getDatas","setCh","openFolder","showNotifError","closeFolder","path","depth","recursiveTrash","afterUri","filters","map","f","RestoreAction","_label","_group","atLeastOne","isNotRemoved","_enableSrcPerms","_icon","ctx","some","s","srcTrashed","isParentInTrash","isEnabled","uris","srcRestore","report","_titlePopup","_moveButtonLabel","isVisible","targetFolder","srcUris","execute","srcsToRestore","fetchSrcs","filter","none","fetchRootDatas","DeletePermAction","isSrcLayered","confirm","okLbl","srcDeletePermanently","addAction","action","accel","sortKey","getId"],"mappings":"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","sourcesContent":["import {BaseElementAsync, MsgOver, OSkinableInit} from \"back/commons/basis\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView, IViewApi, IViewsContainer, OViewVisitOptions, VIEWS} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IWspUiEnv, WSP, Wsp} from \"lib/wsp/wsp\";\nimport {IInfoBroker, InfoBrokerBasic} from \"lib/commons/infos\";\nimport {ESrcField, ESrcSt, JSrcFields, JSrcFieldsTree, SRC, srcId, srcUri} from \"lib/wsp/src\";\nimport {ESearchItemSrcTypes, ISearchCrit, SearchItemSrcType, SearchLastModif, SearchLastUser, SearchRegexpUri, SearchRequest} from \"lib/wsp/search\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {EFolderState, GridColTreeDef, GridDataHolderJsonTree, IGridCategorizer} from \"back/commons/widgets/tree\";\nimport {GridColDef, IGridDataRow} from \"back/commons/widgets/grid-core\";\nimport {CellBuilderSrcIconCode} from \"back/wsp/widgets/srcGridColumns\";\nimport {ISrcGridDatas, SrcGrid, SrcGridDatas} from \"back/wsp/widgets/srcGrid\";\nimport {AccelKeyMgr, IAction} from \"lib/commons/actions\";\nimport {InputPeriod} from \"back/core/widgets/inputPeriod\";\nimport {SpaceTreeReqUri} from \"back/wsp/views/spaceTree\";\nimport {InfoFocusItem, IShortDescCtx, ITEM} from \"lib/wsp/item\";\nimport {MoveToSrc, SrcAction} from \"back/wsp/actions/srcActions\";\nimport {AppHeader} from \"back/core/widgets/appHeader\";\nimport {EItemTypeFamily} from \"lib/wsp/wspMetaUi\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {ItemViewerSingle} from \"back/wsp/views/itemViewerSingle\";\nimport {ESrcRights} from \"lib/commons/security\";\nimport {WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {Button, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {InputUserPanel, OInputUserInit} from \"back/core/widgets/inputs\";\nimport {EUserType} from \"lib/core/user\";\n\nexport interface OWspTrashInit extends OSkinableInit {\n\treg?: IReg<IWspUiEnv>\n\n\t/** Affiche le panel de la mainView. */\n\tshowMainView?: boolean\n\n\t/** Node Ã  sÃ©lectionner Ã  l'init. */\n\tselectLiveSrcUri?: srcUri\n}\n\nexport interface WspTrash extends BaseElementAsync, IView {\n\tinitialize(init: OWspTrashInit): this\n}\n\nexport class WspTrash extends BaseElementAsync implements IView, IViewsContainer, IGridCategorizer<JSrcFields, JSrcFieldsTree>, IShortDescCtx {\n\n\treg: IReg<IWspUiEnv>;\n\n\tmaxEntries = 20_000;\n\n\t_grid: SrcGrid;\n\n\t_treedatas: WspTrashTreeDatas;\n\n\tcritDirty: boolean = false;\n\tspaceRoot: srcUri = SRC.URI_ROOT;\n\n\tprotected _appHeader: AppHeader<WspTrash>;\n\tprotected _spaceRootBtn: Button;\n\tprotected _removedBy: InputUserPanel<any>;\n\tprotected _inputTxt: HTMLInputElement;\n\tprotected _inputPeriod: InputPeriod;\n\tprotected _inputRecursive: HTMLInputElement;\n\n\tprotected _searchBtn: Button;\n\n\tprotected _mainView: ItemViewerSingle;\n\n\tprotected _srcUriToSelOnInit: srcId;\n\n\tprotected _lastError: any;\n\n\tprotected _fetching: Promise<JSrcFields[]>;\n\n\tget wsp(): Wsp {return this.reg.env.wsp};\n\n\tplace: WspsLivePlace;\n\n\tinfoBroker: IInfoBroker;\n\n\tget shortDescs(): JSrcFields[] {return this._grid.shortDescs};\n\n\tget emitter() {return this};\n\n\tsetSpaceRoot(root: srcUri) {\n\t\tif (!root) root = SRC.URI_ROOT;\n\t\tif (this.spaceRoot != root) {\n\t\t\tthis.spaceRoot = root;\n\t\t\tthis._spaceRootBtn.label = ITEM.extractSpaceLabel(this.spaceRoot);\n\t\t\tthis.setCritDirty();\n\t\t}\n\t}\n\n\tsetCritDirty() {\n\t\tif (!this.critDirty) {\n\t\t\tthis.critDirty = true;\n\t\t\tthis.resetList();\n\t\t}\n\t}\n\n\tprotected async _initialize(init: OWspTrashInit): Promise<void> {\n\t\tthis.reg = REG.createSubReg(this.findReg(init));\n\t\tthis._initReg(init);\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"webzone:panel\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.infoBroker = this.reg.env.infoBroker;\n\t\tthis._spaceRootBtn = <Button id=\"spaceRoot\" Ã®={{\n\t\t\treg: this.reg,\n\t\t\tlabel: ITEM.extractSpaceLabel(SRC.URI_ROOT),\n\t\t\tuiContext: \"dialog\",\n\t\t\ttitle: \"SÃ©lectionner un espace...\"\n\t\t} as OButtonInit} onclick={this.onChooseSpace}/> as Button;\n\n\t\tthis._removedBy = new InputUserPanel().initialize({\n\t\t\trequired: false,\n\t\t\treg: this.reg,\n\t\t\temptySelectionMsg: \"Choisir un compte...\",\n\t\t\tuserCard: \"multi\",\n\t\t\tusersGridInit: {\n\t\t\t\tusersSrv: this.reg.env.universe.useUsers,\n\t\t\t\tgrid: {selType: \"multi\"},\n\t\t\t\tfilterType: EUserType.user,\n\t\t\t\tfilterTypeInputVisibility: true,\n\t\t\t},\n\t\t} as OInputUserInit<any>);\n\t\tawait this._removedBy.initializedAsync;\n\n\t\tthis._inputTxt = <input id=\"codeFilter\" type=\"search\" spellcheck=\"false\"/> as HTMLInputElement;\n\t\tthis._inputPeriod = new InputPeriod();\n\t\tthis._inputPeriod.title = \"PÃ©riode dans laquelle les contenus ont Ã©tÃ© mis en corbeille\";\n\t\tthis._inputRecursive = <input id=\"recursive\" type=\"checkbox\"/> as HTMLInputElement;\n\n\t\tthis._searchBtn = <Button id=\"search\" Ã®={{reg: this.reg, label: \"Rechercher\", uiContext: \"dialog\"} as OButtonInit} onclick={this.doSearch.bind(this)}/> as Button;\n\n\t\tconst gridDatas = new SrcGridDatas();\n\t\tgridDatas.useLiveSrcUri = true;\n\n\t\tthis._grid = new WspTrashGrid().initialize({\n\t\t\treg: this.reg,\n\t\t\titemHandlingReact: this.infoBroker,\n\t\t\tactions: this.reg.getList(\"actions:wspTrash:shortDesc\"),\n\t\t\t/* defaultAction: infoBroker ? new SpaceTreeFocusItem() : null, */\n\t\t\taccelKeyMgr: new AccelKeyMgr().initFromMapActions(this.reg.getListAsMap(\"accelkeys:wspTrash:shortDesc\")),\n\t\t\thideHeaders: true,\n\t\t\tskinOver: \"wsp-src-grid\",\n\t\t\tskinScroll: \"scroll/small\",\n\t\t\tdataHolder: gridDatas,\n\t\t\temptyBody: () => {\n\t\t\t\tif (this.critDirty) return this._searchBtn;\n\t\t\t\tif (this._fetching || this._waitingExec) return <c-msg label=\"Recherche dans la corbeille...\" level=\"info\"/>;\n\t\t\t\tif (this._lastError) return <c-msg label=\"Erreur au chargement\" level=\"error\"/>;\n\t\t\t\treturn <c-msg label=\"Aucun contenu en corbeille trouvÃ©\" level=\"info\"/>;\n\t\t\t}\n\t\t});\n\n\t\tthis._treedatas = new WspTrashTreeDatas(this.wsp, this.wsp.getShortDescFields(), gridDatas);\n\t\tthis._grid.setCategorizer(this, this._treedatas);\n\t\tthis._grid.setAttribute(\"c-resizable\", \"\");\n\n\t\tthis._appHeader = sr.appendChild(new AppHeader<WspTrash>().initialize({\n\t\t\treg: this.reg,\n\t\t\tfocusListening: this._grid,\n\t\t\tactionContext: this,\n\t\t\tforceSharedBar: true\n\t\t}));\n\n\t\tsr.appendChild(<div id=\"crit\" onchange={this._onCritChange} oninput={this._onCritChange}>\n\t\t\t<label><span>Espace de recherche</span>{this._spaceRootBtn}</label>\n\t\t\t<label><span>Filtre sur le code</span>{this._inputTxt} <span>SupprimÃ© par</span>{this._removedBy}</label>\n\t\t\t<label><span>Date de mise en corbeille</span>{this._inputPeriod} {this._inputRecursive}<span>Recherche dans les espaces supprimÃ©s</span></label>\n\t\t</div>);\n\n\t\tif (init.selectLiveSrcUri) {\n\t\t\tthis._inputTxt.value = init.selectLiveSrcUri;\n\t\t\tthis._inputRecursive.checked = true;\n\t\t\tthis._srcUriToSelOnInit = init.selectLiveSrcUri;\n\t\t}\n\n\t\tthis._fetchRootDatas(); //avant appendChild(this._grid); pour init aprÃ¨s lancement de la requete -> emptyBody ok.\n\n\t\tif (init.showMainView) {\n\t\t\tconst parentMainView = <div id=\"srcView\" c-resizable=\"\"/>;\n\t\t\tsr.appendChild(<div id=\"main\">\n\t\t\t\t{this._grid}\n\t\t\t\t<c-resizer c-orient=\"row\"/>\n\t\t\t\t{parentMainView}\n\t\t\t</div>);\n\t\t\tthis._mainView = new ItemViewerSingle();\n\t\t\tawait this._mainView.initViewer(this.reg, parentMainView, null, null);\n\t\t\tthis.addEventListener('grid-select', this._onGridSelect);\n\t\t} else {\n\t\t\tsr.appendChild(this._grid);\n\t\t}\n\t}\n\n\tprotected _initReg(init: OWspTrashInit) {\n\t\tconst wspFrom = this.reg.env.wsp;\n\t\tconst wsp = this.reg.env.wsp = new Wsp(wspFrom.wspServer, wspFrom.code, wspFrom.infoWsp, wspFrom.wspMetaUi);\n\t\tthis._initWspReg(wsp);\n\t\tif (init.showMainView) {\n\t\t\t//InfoBroker local Ã  cette fenetre de dialogue.\n\t\t\tthis.reg.env.infoBroker = new InfoBrokerBasic();\n\t\t}\n\n\t\t//Suppr de l'action de copier.\n\t\tthis.reg.addToList(\"actions:item:burger\", \"copy\", 2, null);\n\t\t//Ajout de l'action de restore sur l'item\n\t\tthis.reg.addToList(\"actions:item:burger\", \"restoreTo\", 1, new RestoreToAction());\n\t}\n\n\tprotected _initWspReg(wsp: Wsp) {\n\t\t//Ajout des champs nÃ©cessaires Ã  la gestion de la corbeille\n\t\twsp.reg.addToList('srcFields:shortDesc', 'srcLiveUri', 1, 'srcLiveUri');\n\t\twsp.reg.addToList('srcFields:shortDesc', 'srcTrashed', 1, 'srcTrashed');\n\t\tif (wsp.wspDefProps.drvAxis) {\n\t\t\t//Pour diffÃ©rencier un contenu erased qui est propre Ã  l'atelier (drvAxisDefCo===null) : il peut alors Ãªtre supprimÃ© dÃ©finitivement.\n\t\t\twsp.reg.addToList('srcFields:shortDesc', 'drvAxisDefCo', 1, 'drvAxisDefCo');\n\t\t}\n\t}\n\n\tvisitViews(visitor: (view: IViewApi) => any, options?: OViewVisitOptions): any {\n\t\treturn VIEWS.visitNodes(visitor, options, this._mainView);\n\t}\n\n\tvisitViewsAsync(visitor: (view: IViewApi) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn VIEWS.visitNodesAsync(visitor, options, this._mainView);\n\t}\n\n\tonViewShown() {\n\t\tif (!this.place) {\n\t\t\tthis.reg.env.wsp.listenChanges();\n\t\t\tthis.place = this.reg.env.place = this.reg.env.wsp.newPlaceWsp();\n\t\t\tthis.place.eventsMgr.on(\"onConnectionLost\", () => {this._appHeader.setHeadband(\"Votre connexion au serveur est interrompue ou instable.\", \"error\")})\n\t\t\tthis.place.eventsMgr.on(\"onConnectionRenewed\", () => {this._appHeader.setHeadband(null)});\n\t\t\tthis.place.eventsMgr.on(\"wspLiveStateChange\", this.onWspLiveStateChange.bind(this));\n\t\t}\n\t\tVIEWS.onViewShown(this._mainView);\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tif (closed && this.place) {\n\t\t\tthis.reg.env.wsp.stopListenChanges();\n\t\t\tthis.place.closePlace();\n\t\t\tthis.place = null;\n\t\t}\n\t\tVIEWS.onViewHidden(this._mainView);\n\t}\n\n\tmsgOver: MsgOver;\n\n\tprotected onWspLiveStateChange(wsp: Wsp) {\n\t\tif (wsp !== this.wsp) return;\n\t\tif (wsp.isAvailable) {\n\t\t\tthis._initWspReg(wsp); //surcharge du reg du wsp aprÃ¨s son rechargement.\n\t\t\tif (this.msgOver) {\n\t\t\t\tthis.msgOver.removeMsg();\n\t\t\t\tthis.msgOver = null;\n\t\t\t}\n\t\t\tthis.resetList();\n\t\t\tthis._fetchRootDatas();\n\t\t} else if (wsp.isInError) {\n\t\t\tPOPUP.findPopupableParent(this).close();\n\t\t} else if (!this.msgOver) {\n\t\t\tthis.msgOver = new MsgOver().showMsgOver(this).setCustomMsg(\"Reconfiguration de l'atelier en cours...\");\n\t\t}\n\t}\n\n\tfetchRootDatas() {\n\t\treturn this._fetchRootDatas();\n\t}\n\n\tprotected async _fetchRootDatas() {\n\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrash.fetchRootDatas:::start\");\n\t\t// if (this.callbackSearching) this.callbackSearching.onSearching('searchInit'); pas de searching\n\t\tthis._lastError = undefined;\n\t\ttry {\n\t\t\tconst requ = this._getRequest();\n\t\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrash.fetchRootDatas:::request\", requ.where.toDom());\n\t\t\tthis._fetching = WSP.fetchSearchJson<JSrcFields>(this.wsp, this._grid, requ.toXml());\n\t\t\tconst datas = await this._fetching; //this.filterNotTrashedRes(await this._fetching);\n\t\t\tthis._fetching = null;\n\t\t\tthis._lastError = null;\n\t\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrash.fetchRootDatas:::datas\", datas);\n\t\t\tif (datas.length > this.maxEntries) {\n\t\t\t\tconst maxEntries = this.maxEntries;\n\t\t\t\tPOPUP.showNotifInfo(`Plus de ${maxEntries} Ã©lÃ©ments trouvÃ©s en corbeille. Utilisez les critÃ¨res de recherche pour restreindre la liste.`, this);\n\t\t\t}\n\t\t\tthis._lastError = null;\n\t\t\tthis._grid.srcGridDatas.setDatas(datas);\n\t\t\tif (this._srcUriToSelOnInit) {\n\t\t\t\tconst srcUri = this._srcUriToSelOnInit;\n\t\t\t\tthis._srcUriToSelOnInit = null;\n\t\t\t\tconst rowKey = this._grid.srcGridDatas.findRowKeyBySrcUri(srcUri);\n\t\t\t\tif (rowKey) this._grid.setSelectedRows(this._grid.srcGridDatas.getOffset(rowKey));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._fetching = null;\n\t\t\tthis._lastError = e;\n\t\t\tconsole.log(e);\n\t\t\tthis._grid.srcGridDatas.setDatas([]);\n\t\t} finally {\n\t\t\t//if (this.callbackSearching) this.callbackSearching.onSearching('searchEnd');\n\t\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrash.fetchRootDatas:::end\");\n\t\t}\n\t}\n\n\t// protected filterNotTrashedRes(datas: JSrcFields[]): JSrcFields[] {\n\t// \tif (!datas) return [];\n\t// \t//On masque les items de type Res non trashed mais qui peuvent Ãªtre retournÃ©s car un de ses flux est en corbeille.\n\t// \tconst wspMetaUi = this.wsp.wspMetaUi;\n\t// \treturn datas.filter((src) => !(!src.srcTrashed && wspMetaUi.getItemType(src.itModel).getFamily() === EItemTypeFamily.res));\n\t// }\n\n\n\tprotected doSearch() {\n\t\tthis.critDirty = false;\n\t\tif (this._waitingExec) return;\n\t\tthis._fetchRootDatas();\n\t}\n\n\tprotected resetList() {\n\t\tthis._lastError = null;\n\t\tthis._grid.srcGridDatas.setDatas([]);\n\t}\n\n\tprotected _getRequest(): SearchRequest {\n\t\tconst where = new SearchNodesInTrash(this.spaceRoot, -1, this._inputRecursive.checked, null,\n\t\t\tnew SearchItemSrcType(ESearchItemSrcTypes.SPACE | ESearchItemSrcTypes.ITEMFOLDER | ESearchItemSrcTypes.ITEMFILE),\n\t\t\tthis._removedBy.value?.length ? new SearchLastUser(this._removedBy.value) : undefined,\n\t\t\tthis._inputTxt.value ? new SearchRegexpUri(SpaceTreeReqUri.buildSrcUriPattern(this._inputTxt.value)) : undefined,\n\t\t\tSearchLastModif.buildFromInputPeriod(this._inputPeriod)\n\t\t);\n\t\treturn new SearchRequest(this.wsp.getShortDescDef()).setWhere(where).setMax(this.maxEntries + 1);\n\t}\n\n\tprotected _onCritChange(this: HTMLElement) {\n\t\tDOMSH.findHost<WspTrash>(this).setCritDirty();\n\t}\n\n\tasync onChooseSpace(this: Button, ev: Event) {\n\t\tconst wspTrash = DOMSH.findHost<WspTrash>(this);\n\t\tconst {SpaceSelector} = await import(\"back/wsp/dialogs/spaceSelector.js\");\n\t\tconst ct = new SpaceSelector().initialize({\n\t\t\treg: wspTrash.reg,\n\t\t\tstartSel: wspTrash.spaceRoot,\n\t\t\tspaceTree: {\n\t\t\t\tshowRoot: true\n\t\t\t},\n\t\t\tselOnDblClick: true\n\t\t});\n\t\tconst space = await POPUP.showMenuFromEvent<JSrcFields | undefined>(ct, ev, wspTrash).onNextClose();\n\t\tif (space) wspTrash.setSpaceRoot(space.srcUri);\n\t}\n\n\tprotected _waitingExec: number;\n\tprotected _lastTxt: string;\n\tprotected _lastMoreThan: number | null;\n\tprotected _lastLessThan: number | null;\n\n\n\tprotected _onGridSelect(ev: Event) {\n\t\tif (this._showTimer) clearTimeout(this._showTimer);\n\t\tconst count = this._grid.countSelectedRows();\n\t\tif (count === 0) {\n\t\t\tthis.reg.env.infoBroker.dispatchInfo(new InfoFocusItem(null), this);\n\t\t} else if (count === 1) {\n\t\t\tthis._showTimer = setTimeout(() => {\n\t\t\t\tlet sd = this._grid.shortDescs[0];\n\t\t\t\tif (sd) {\n\t\t\t\t\tswitch (ITEM.getSrcUriType(sd.srcLiveUri || sd.srcUri)) {\n\t\t\t\t\tcase \"space\":\n\t\t\t\t\t\tsd = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"res\":\n\t\t\t\t\t\tsd = this._treedatas.getRowKeyParent(sd);\n\t\t\t\t\t\twhile (ITEM.getSrcUriType(sd.srcUri) !== \"item\") sd = this._treedatas.getRowKeyParent(sd);\n\t\t\t\t\t}\n\t\t\t\t\tif (sd && (!this._mainView.longDesc || this._mainView.longDesc.srcUri !== sd.srcUri)) {\n\t\t\t\t\t\tthis.reg.env.infoBroker.dispatchInfo(new InfoFocusItem(sd.srcUri, sd), this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\tprotected _showTimer: any;\n\n\n\tgetId(data: JSrcFields): any {\n\t\treturn data.srcLiveUri || data.srcUri;\n\t}\n\n\tgetAncestorIds(data: JSrcFieldsTree): any[] | null {\n\t\tlet parent = SRC.extractUriParent(data.srcLiveUri || data.srcUri);\n\t\tif (!parent) return null;\n\t\tconst stack: any[] = [];\n\t\twhile (parent) {\n\t\t\tstack.push(parent);\n\t\t\tparent = SRC.extractUriParent(parent);\n\t\t}\n\t\tstack.reverse();\n\t\treturn stack;\n\t}\n\n\twrapForTree(data: JSrcFields): JSrcFieldsTree {\n\t\tconst e = Object.assign(Object.create(null), data) as JSrcFieldsTree;\n\t\t//DÃ©claration des items de type dossier et des espaces en objets dossiers dans l'arbre.\n\t\tif (this.wsp.wspMetaUi.getItemType(data.itModel).getFamily() === EItemTypeFamily.res) {\n\t\t\t//On est sur une res, seul l'item est visible (pas le stream, les  props ou les metas).\n\t\t\tif (ITEM.getSrcUriType(data.srcUri) === \"res\") return null;\n\t\t} else if (!e.ch) {\n\t\t\tif (data.srcSt === ESrcSt.folder) {\n\t\t\t\t//dossier potentiel\n\t\t\t\te.ch = null;\n\t\t\t}\n\t\t}\n\t\t//Hack des srcRi :\n\t\tif (ITEM.isTrashUri(data.srcUri)) {\n\t\t\t//Droits pour \"Suppression dÃ©finitive\" et \"Restaurer vers...\"\n\t\t\te.srcRi = ESrcRights.READS | ESrcRights.remove | ESrcRights.removeChildren | ESrcRights.move;\n\t\t} else {\n\t\t\t//Droits pour \"Restaurer vers...\" d'un children\n\t\t\te.srcRi = ESrcRights.READS | ESrcRights.removeChildren;\n\t\t}\n\t\treturn e;\n\t}\n\n\tgetFolder(id: any): JSrcFieldsTree {\n\t\t//Impl pour tests, ne devrait jamais Ãªtre appelÃ©...\n\t\t//Espace ou item racine de type dossier ancÃªtre d'un Ã©lÃ©ment supprimÃ©, crÃ©Ã© Ã  la volÃ©e.\n\t\tswitch (ITEM.getSrcUriType(id)) {\n\t\tcase \"space\":\n\t\t\treturn {srcUri: id};\n\t\tcase \"item\":\n\t\tcase \"res\":\n\t\t\treturn {srcUri: id, itModel: \"sc_undef\"};\n\t\t}\n\t\treturn null;\n\t}\n\n\tshouldRemoveEmptyFolder(folder: JSrcFieldsTree): boolean {\n\t\treturn false;\n\t}\n}\n\nREG.reg.registerSkin('wsp-trash', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t#crit {\n\t\tborder-top: 1px solid var(--border-color);\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tpadding: .5em;\n\t}\n\n  label {\n\t  display: flex;\n\t  align-items: center;\n\t  margin: .2em 0;\n  }\n\n  #spaceRoot,\n  #codeFilter,\n  c-input-period,\n  c-input-users-panel,\n  #recursive {\n\t  margin: 0 .5em;\n  }\n\n  #spaceRoot {\n\t  padding-inline-end: 1.2em;\n\t  background-size: 1em 1em;\n\t  background-repeat: no-repeat;\n\t  background-position: right;\n\t  background-image: url(/@skin@/commons/widgets/dropdown.svg);\n\t  font-weight: bold;\n  }\n\n  input {\n\t  padding: 2px;\n\t  background: var(--form-bgcolor);\n\t  color: var(--form-color);\n\t  border: 1px solid var(--border-color);\n\t  display: flex;\n\t  flex: 1;\n\t  font-size: inherit;\n  }\n\n  input:focus {\n\t  outline: var(--focus-outline);\n  }\n\n  input::placeholder {\n\t  color: var(--fade-color);\n\t  letter-spacing: 2px;\n\t  font-size: .8em;\n\t  font-style: italic;\n  }\n\n  input:focus::placeholder {\n\t  color: transparent;\n  }\n\n  c-input-period {\n\t  border: 1px solid var(--border-color);\n\t  border-radius: 3px;\n\t}\n\n\t#recursive {\n\t\tflex: 0;\n\t}\n\n\t#main {\n\t\tflex: 1 1 20em;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tborder-top: 1px solid var(--border-color);\n\t}\n\n\twsp-trash-grid {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n\n\t#srcView {\n\t\tflex: 1 1 50%;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tborder-inline-start: 1px solid var(--border-color);\n\t}\n`);\n\n\ncustomElements.define(\"wsp-trash\", WspTrash);\n\n\n/**\n *\n */\nclass WspTrashGrid extends SrcGrid {\n\n\tdataHolder: WspTrashTreeDatas;\n\n\tget wspTrash(): WspTrash {return DOMSH.findHost<WspTrash>(this)}\n\n\tgetDefaultColumnDefs(): GridColDef[] {\n\t\treturn [new GridColTreeDef('srcTree')\n\t\t\t.setDefaultSort(1, 'ascendant')\n\t\t\t.setFlex('1rem', 1, 1).setMinWidth('55px').setSortable(true)\n\t\t\t.setCellBuilder(new CellBuilderSrcIconCode(this.reg, this.wsp.wspMetaUi, false, this.wsp.srcUriItemsSortFn))];\n\t}\n\n\tredrawLine(row: IGridDataRow, line: HTMLElement) {\n\t\tsuper.redrawLine(row, line);\n\t\tline.classList.toggle('trashed', row.getData<ESrcField>(\"srcTrashed\") === true);\n\t}\n\n\tisParentInTrash(child: JSrcFields): boolean {\n\t\tconst parent = this.dataHolder.getRowKeyParent(child);\n\t\treturn parent ? ITEM.isTrashUri(parent.srcUri) : false;\n\t}\n\n}\n\nREG.reg.registerSkin('wsp-trash-grid', 1, /* language=CSS */ `\n\t.trashed {\n\t\ttext-decoration-line: line-through;\n\t\ttext-decoration-color: var(--fade-color);\n\t}\n`);\n\ncustomElements.define(\"wsp-trash-grid\", WspTrashGrid);\n\n\nclass WspTrashTreeDatas extends GridDataHolderJsonTree<JSrcFieldsTree> {\n\tconstructor(readonly wsp: Wsp, readonly srcFields: ESrcField[], readonly srcGridDatas: ISrcGridDatas) {\n\t\tsuper('ch');\n\t\tthis.setDefaultOpenState((d: JSrcFieldsTree) => d.ch != null);\n\t}\n\n\tasync openFolderAsync(rowKey: any): Promise<boolean> {\n\t\tif (this.ch(rowKey) === null) {\n\t\t\t//Dossier Ã  charger...\n\t\t\ttry {\n\t\t\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrashTreeDatas.openFolderAsync:::start\", rowKey.srcUri);\n\t\t\t\tif (this.folderSt(rowKey) !== EFolderState.closed) return false;\n\t\t\t\tthis.setFolderSt(rowKey, EFolderState.opening);\n\t\t\t\tconst datas = await WSP.fetchSearchJson<JSrcFields>(this.wsp, this._grid, new SearchRequest().addFieldColumns(...this.srcFields).setWhere(new SearchNodesInTrash(rowKey.srcUri, -1)).toXml());\n\t\t\t\tif (!this.isRowkeyAlive(rowKey)) return false; //modification de l'arbre entre temps, noeud perdu.\n\t\t\t\t//if (this.srcFilter) datas = datas.filter(this.srcFilter);\n\t\t\t\tthis.setFolderSt(rowKey, EFolderState.closed);\n\t\t\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrashTreeDatas.openFolderAsync::::datas:\", datas);\n\t\t\t\tif (datas.length > 0) {\n\t\t\t\t\tthis.srcGridDatas.updateDatas(this.srcGridDatas.getDatas().length, 0, ...datas);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setCh(rowKey, datas);\n\t\t\t\t}\n\t\t\t\treturn this.openFolder(rowKey);\n\t\t\t} catch (e) {\n\t\t\t\tPOPUP.showNotifError(\"AccÃ¨s au serveur impossible\", this.grid);\n\t\t\t\tthis.closeFolder(rowKey);\n\t\t\t\tthrow e;\n\t\t\t} finally {\n\t\t\t\tif (WSPTRASH_DEBUG) console.log(\"WspTrashTreeDatas.openFolderAsync:::end\", rowKey.srcUri);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn this.openFolder(rowKey);\n\t}\n\n}\n\n\nclass SearchNodesInTrash implements ISearchCrit {\n\n\tfilters: ISearchCrit[];\n\n\tconstructor(public path?: string, public depth?: -1 | 1, public recursiveTrash?: boolean, public afterUri?: string, ...filters: ISearchCrit[]) {\n\t\tthis.filters = filters;\n\t}\n\n\ttoDom(): Element | undefined {\n\t\treturn <exp type=\"NodesInTrash\" path={this.path} depth={this.depth} recursiveTrash={this.recursiveTrash} afterUri={this.afterUri}>\n\t\t\t{this.filters ? this.filters.map((f) => f ? f.toDom() : undefined) : undefined}\n\t\t</exp>;\n\t}\n}\n\n\nclass RestoreAction extends SrcAction<WspTrashGrid> {\n\tconstructor() {\n\t\tsuper('restore');\n\t\tthis._label = \"Restaurer\";\n\t\tthis._group = \"edit\";\n\t\tthis.atLeastOne = true;\n\t\tthis.isNotRemoved = false;\n\t\tthis._enableSrcPerms = [\"restore.history\"];\n\t\tthis._icon = \"/@skin@/wsp/actions/wspRestore.svg\";\n\t}\n\n\tisEnabled(ctx: WspTrashGrid): boolean {\n\t\tif (ctx.shortDescs.some((s) => !s.srcTrashed || ctx.isParentInTrash(s))) return false; //\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: WspTrashGrid, ev?: Event) {\n\t\tconst uris = ctx.shortDescs.map((s) => s.srcUri);\n\t\ttry {\n\t\t\tawait WSP.srcRestore(ctx.wsp, ctx, uris);\n\t\t} catch (e) {\n\t\t\tERROR.report(\"Une erreur est survenue durant la restauration\", e);\n\t\t}\n\t}\n}\n\nclass RestoreToAction extends MoveToSrc<WspTrashGrid> {\n\tconstructor() {\n\t\tsuper('restoreTo');\n\t\tthis._label = \"Restaurer vers...\";\n\t\tthis._titlePopup = \"Restaurer vers...\";\n\t\tthis._moveButtonLabel = \"Restaurer\";\n\t\tthis.isNotRemoved = false;\n\t\tthis._enableSrcPerms = [\"restore.history\", \"write.node.moveFrom\"]; //XXX perm write.node.moveFrom Ã  hÃ©riter ?\n\t\tthis._icon = \"/@skin@/wsp/actions/wspRestoreTo.svg\";\n\t}\n\n\tisVisible(ctx: WspTrashGrid): boolean {\n\t\t//On masque si un des Ã©lements sÃ©lectionnÃ©s :\n\t\t// - n'est pas en corbeille (cela n'a pas de sens)\n\t\t// - est une res : TODO il faudrait dÃ©velopper un sÃ©lecteur de dossier de res, Ã  la place d'un sÃ©lecteur d'espace.\n\t\tif (ctx.shortDescs.some((s) => !ITEM.isTrashUri(s.srcUri) || ITEM.getSrcUriType(s.srcUri) === \"res\")) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tisEnabled(ctx: WspTrashGrid): boolean {\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: WspTrashGrid, ev?: Event) {\n\t\tif (ctx.shortDescs.length === 1) {\n\t\t\tthis.targetFolder = SRC.extractUriParent(ctx.shortDescs[0].srcLiveUri);\n\t\t}\n\t\tconst srcUris = await super.execute(ctx, ev);\n\t\tif (!srcUris) return null;\n\t\tconst srcsToRestore = (await WSP.fetchSrcs(ctx.wsp, ctx, srcUris, [\"srcUri\", \"srcSt\"])).filter((s) => s.srcSt === ESrcSt.none);\n\t\tif (srcsToRestore.length > 0) await WSP.srcRestore(ctx.wsp, ctx, srcsToRestore.map((s) => s.srcUri));\n\t\tawait ctx.wspTrash.fetchRootDatas();\n\t\treturn srcUris;\n\t}\n}\n\nclass DeletePermAction extends SrcAction<IShortDescCtx> {\n\tconstructor() {\n\t\tsuper('deletePerm');\n\t\tthis._label = \"Supprimer dÃ©finitivement\";\n\t\tthis._group = \"del\";\n\t\tthis.atLeastOne = true;\n\t\tthis._enableSrcPerms = [\"deletePermanently.trash\"];\n\t\tthis._icon = \"/@skin@/wsp/actions/wspDeletePermanently.svg\";\n\t}\n\n\tisEnabled(ctx: WspTrashGrid): boolean {\n\t\tconst wspDefProps = ctx.reg.env.wsp.wspDefProps;\n\t\tif (ctx.shortDescs.some((sd) => {\n\t\t\tif (this.isSrcLayered(wspDefProps, sd)) return true;\n\t\t\treturn !ITEM.isTrashUri(sd.srcUri)\n\t\t})) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: WspTrashGrid, ev?: Event) {\n\t\tconst count = ctx.shortDescs.length;\n\t\tif (await POPUP.confirm(count === 1 ? \"Confirmez la suppression dÃ©finitive.\" : `Confirmez la suppression dÃ©finitive de ces ${count} Ã©lÃ©ments.`,\n\t\t\tctx, {okLbl: \"Supprimer dÃ©finitivement\"})) {\n\t\t\tconst uris = ctx.shortDescs.map((s) => s.srcUri);\n\t\t\ttry {\n\t\t\t\tawait WSP.srcDeletePermanently(ctx.wsp, ctx, uris);\n\t\t\t} catch (e) {\n\t\t\t\tERROR.report(\"Une erreur est survenue durant la suppression dÃ©finitive.\", e);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction addAction(action: IAction<IShortDescCtx>, accel?: string, sortKey?: number) {\n\tREG.reg.addToList(\"actions:wspTrash:shortDesc\", action.getId(), 1, action, sortKey);\n\tif (accel) REG.reg.addToList(\"accelkeys:wspTrash:shortDesc\", accel, 1, action);\n}\n\naddAction(new RestoreAction());\naddAction(new RestoreToAction());\naddAction(new DeletePermAction());\n\n\nconst WSPTRASH_DEBUG = false;\n"]}