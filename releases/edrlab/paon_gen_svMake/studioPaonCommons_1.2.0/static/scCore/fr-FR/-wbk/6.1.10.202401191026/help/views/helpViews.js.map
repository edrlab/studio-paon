{"version":3,"sources":["/@back@/help/views/helpViews.tsx"],"names":["REG","BaseElementAsync","BASIS","MsgLabel","DOMSH","JSX","ShadowJsx","HELP","BarActions","Action","POPUP","ERROR","Tabs","GridSmall","GridColDef","GridDataHolderJsonArray","GridColTreeDef","GridDataHolderJsonTree","MxGridTreeUntouchedDatas","HelpViews","[object Object]","this","liveSyncLocked","init","sr","attachShadow","SHADOWDOM_INIT","reg","findReg","installSkin","_initAndInstallSkin","localName","msg","appendChild","initialize","label","root","countTabs","liveView","searchView","outlineView","tabs","createElement","class","helpDb","helpDbProv","initIfNeeded","remove","e","setCustomMsg","log","livePane","id","icon","description","liveHisto","HelpIdHisto","hideBar","getLiveActions","liveBar","Ã®","actions","actionContext","liveRoot","livePageTpl","pageTpl","simpleHelpPageTpl","livePageTplOptions","pageTplCtx","openFragId","async","fragId","ev","showLiveHelpId","openFrag","frag","showLiveHelp","searchPane","searchTextInput","type","placeholder","spellcheck","onchange","onSearchChange","oninput","onkeydown","onSearchKeydown","for","searchResults","searchGrid","selType","columnDefs","setFlex","setCellBuilder","HelpSearchCellBuilder","dataHolder","hideHeaders","skinScroll","skinOver","autoSelOnFocus","c-resizable","addEventListener","onSearchSelect","c-orient","searchRoot","searchPageTpl","withCallersHelpPageTpl","searchPageTplOptions","showSearchHelpId","showSearchHelp","_a","indexKey","outlinePane","outlineTreeData","GridDataHelpOutline","outlineGrid","HelpOutlineCellBuilder","onOutlineSelect","outlineRoot","outlinePageTpl","outlinePageTplOptions","showOutlineHelpId","showOutlineHelp","childNodes","forEach","elt","hidden","liveDefaultFrag","defaultPageId","getFragment","setCurrent","replaceChildren","liveDefaultPage","makePage","index","getIndex","setDatas","getMembers","st","_showFromSelTask","clearTimeout","refresh","showTab","selectTab","findTabFromDesc","_b","currentFrag","buildLiveHelpPage","buildSearchHelpPage","selectOutlineInGrid","getDatas","buildOutlineHelpPage","lines","line","setSelectedRows","getOffset","members","idProv","setTimeout","tpl","ctx","me","findHost","text","value","trim","searchLastText","search","max","key","countRows","focus","stopImmediatePropagation","preventDefault","rowSel","getSelectedRow","result","getRowKey","found","entry","getDataByOffset","registerSkin","customElements","define","histo","currentOffset","recurs","length","after","slice","i","push","splice","view","liveActions","liveSyncLock","setLabel","setIcon","isToggle","api","isLiveSyncLocked","execute","setLiveSyncLocked","liveBackHisto","isEnabled","hasBack","goBack","liveNextHisto","hasForward","goForward","super","row","rowKey","isTopic","className","cls","makeTitle","console","trace","Error","HelpZoom","HTMLElement","promiseTooltip","owner","tooltip","getAttribute","helpViews","tooltipRoot","skin","then","makeContent","hoverAllowed","anchor","elem","initWidth","shadowRoot","clearContent"],"mappings":"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","sourcesContent":["import {IReg, REG} from \"lib/commons/registry\";\nimport {BaseElementAsync, BASIS, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JSX, ShadowJsx} from \"lib/commons/xml/dom\";\nimport {HELP, helpId, IHelpDb, IHelpFrag, IHelpIndexNode, IHelpPageTpl, IHelpPageTplContext, IHelpSearchResult} from \"back/help/helpApi\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {Action, IAction} from \"lib/commons/actions\";\nimport {POPUP, PopupTooltip} from \"back/commons/widgets/popups\";\nimport {IView} from \"lib/commons/views\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {Tabs} from \"back/commons/widgets/tabs\";\nimport {Grid, GridSmall, OGridSmallInit} from \"back/commons/widgets/grid-tags\";\nimport {GridColDef, ICellBuilder, IRowSortFn} from \"back/commons/widgets/grid-core\";\nimport {GridDataHolderJsonArray, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {GridColTreeDef, GridDataHolderJsonTree, MxGridTreeUntouchedDatas} from \"back/commons/widgets/tree\";\n\n\n/**\n */\nexport interface HelpViews extends BaseElementAsync {\n\tinitialize(init: OHelpViewsInit): this\n}\n\nexport interface OHelpViewsInit extends OSkinableInit {\n\thelpDbProv?: () => Promise<IHelpDb | null>\n\n\tliveView?: {\n\t\ticon?: string\n\t\tlabel?: string\n\t\tdefaultPageId?: string\n\t\tpageTpl?: IHelpPageTpl;\n\t\tpageTplCtx?: IHelpPageTplContext;\n\t\thideBar?: boolean\n\t}\n\tsearchView?: {\n\t\ticon?: string\n\t\tlabel?: string\n\t\t// inScopeId?: string\n\t\t// inScopeLabel?: string\n\t\tpageTpl?: IHelpPageTpl;\n\t\tpageTplCtx?: IHelpPageTplContext;\n\t}\n\toutlineView?: {\n\t\ticon?: string\n\t\tlabel?: string\n\t\tindexKey?: string\n\t\tpageTpl?: IHelpPageTpl;\n\t\tpageTplCtx?: IHelpPageTplContext;\n\t}\n}\n\nexport class HelpViews extends BaseElementAsync {\n\treg: IReg<unknown>;\n\thelpDb?: IHelpDb\n\n\ttabs: Tabs\n\n\tliveDefaultFrag?: IHelpFrag;\n\tlivePageTpl?: IHelpPageTpl;\n\tlivePageTplOptions?: IHelpPageTplContext;\n\n\tliveRoot?: HTMLElement;\n\tliveDefaultPage?: HTMLElement;\n\tliveBar?: BarActions<HelpViews>;\n\tliveHisto?: HelpIdHisto;\n\tprotected liveSyncLocked = false;\n\n\tsearchPageTpl?: IHelpPageTpl;\n\tsearchPageTplOptions?: IHelpPageTplContext;\n\n\tsearchTextInput?: HTMLInputElement;\n\tsearchGrid?: GridSmall;\n\tsearchResults?: GridDataHolderJsonArray<IHelpSearchResult>;\n\tsearchRoot?: HTMLElement;\n\n\toutlinePageTpl?: IHelpPageTpl;\n\toutlinePageTplOptions?: IHelpPageTplContext;\n\n\toutlineGrid?: GridSmall;\n\toutlineTreeData?: GridDataHelpOutline<IHelpIndexNode | IHelpFrag>;\n\toutlineRoot?: HTMLElement;\n\n\tprotected async _initialize(init: OHelpViewsInit): Promise<void> {\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg = this.findReg(init);\n\t\tthis.reg.installSkin(\"help-views/content\", sr);\n\t\tthis.reg.installSkin(\"scroll/small\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tconst msg = sr.appendChild(new MsgLabel().initialize({reg: this.reg, label: \"Chargement...\"}));\n\n\t\tlet root: Node = sr;\n\t\tconst countTabs = (init.liveView ? 1 : 0) + (init.searchView ? 1 : 0) + (init.outlineView ? 1 : 0);\n\t\tif (countTabs > 1) root = this.tabs = <Tabs class=\"noBorder\"/> as Tabs;\n\n\t\ttry {\n\t\t\tthis.helpDb = await init.helpDbProv();\n\t\t\tif (this.helpDb) await this.helpDb.initIfNeeded();\n\t\t\tmsg.remove();\n\t\t} catch (e) {\n\t\t\tthis.helpDb = null;\n\t\t\tmsg.setCustomMsg(\"Aide en ligne inaccessible\", \"error\");\n\t\t\tERROR.log(\"Init helpDb failed\", e)\n\t\t\treturn;\n\t\t}\n\n\t\t// Tab \"live\"\n\t\tif (init.liveView) {\n\t\t\tconst livePane = root.appendChild(<div id=\"livePane\" icon={init.liveView.icon || \"/@skin@/help/liveTab.svg\"} label={init.liveView.label || \"Aide\"} description=\"Aide contextuelle\"/>)\n\t\t\tthis.liveHisto = new HelpIdHisto();\n\t\t\tif (!init.liveView.hideBar) {\n\t\t\t\tgetLiveActions();\n\t\t\t\tthis.liveBar = livePane.appendChild(<BarActions Ã®={{\n\t\t\t\t\treg: this.reg,\n\t\t\t\t\tactions: getLiveActions(),\n\t\t\t\t\tactionContext: this\n\t\t\t\t} as OBarActionsInit<HelpViews>}/>) as BarActions<HelpViews>;\n\t\t\t}\n\t\t\tthis.liveRoot = livePane.appendChild(<div id=\"liveRoot\"/>);\n\t\t\tthis.livePageTpl = init.liveView.pageTpl || HELP.simpleHelpPageTpl;\n\t\t\tthis.livePageTplOptions = init.liveView.pageTplCtx || {\n\t\t\t\treg: this.reg,\n\t\t\t\thelpDb: this.helpDb,\n\t\t\t\topenFragId: async (fragId: string, ev?: Event) => {\n\t\t\t\t\t//Si frag et non Topic => tooltip ?\n\t\t\t\t\treturn this.showLiveHelpId(fragId)\n\t\t\t\t},\n\t\t\t\topenFrag: async (frag: IHelpFrag, ev?: Event) => {\n\t\t\t\t\treturn this.showLiveHelp(frag)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Tab \"search\"\n\t\tif (init.searchView) {\n\t\t\tconst searchPane = root.appendChild(<div id=\"searchPane\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t icon={init.searchView.icon || \"/@skin@/help/searchTab.svg\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label={init.searchView.label || \"Rech.\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t description=\"Recherche dans l'aide\"/>);\n\t\t\tthis.searchTextInput = <input id=\"searchTextInput\" type=\"search\" placeholder=\"Rechercher...\" spellcheck=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonchange={this.onSearchChange} oninput={this.onSearchChange} onkeydown={this.onSearchKeydown}/> as HTMLInputElement;\n\t\t\tsearchPane.appendChild(<label id=\"searchText\" for=\"searchTextInput\">{this.searchTextInput}</label>);\n\t\t\tthis.searchResults = new GridDataHolderJsonArray<IHelpSearchResult>();\n\t\t\tthis.searchGrid = <GridSmall id=\"searchResults\" Ã®={{\n\t\t\t\treg: this.reg,\n\t\t\t\tselType: \"mono\",\n\t\t\t\tcolumnDefs: [new GridColDef(\"searchHelp\").setFlex(\"10em\", 1, 1).setCellBuilder(new HelpSearchCellBuilder(this.helpDb))],\n\t\t\t\tdataHolder: this.searchResults,\n\t\t\t\thideHeaders: true,\n\t\t\t\tskinScroll: 'scroll/small',\n\t\t\t\tskinOver: \"help-views/grid\",\n\t\t\t\tautoSelOnFocus: \"first\"\n\t\t\t} as OGridSmallInit} c-resizable=\"\"/> as Grid;\n\t\t\tthis.searchGrid.addEventListener(\"grid-select\", this.onSearchSelect)\n\t\t\tsearchPane.appendChild(this.searchGrid)\n\t\t\tsearchPane.appendChild(<c-resizer c-orient=\"column\"/>);\n\t\t\tthis.searchRoot = searchPane.appendChild(<div id=\"searchRoot\" c-resizable=\"\"/>);\n\t\t\tthis.searchPageTpl = init.searchView.pageTpl || HELP.withCallersHelpPageTpl;\n\t\t\tthis.searchPageTplOptions = init.searchView.pageTplCtx || {\n\t\t\t\treg: this.reg,\n\t\t\t\thelpDb: this.helpDb,\n\t\t\t\topenFragId: async (fragId: string, ev?: Event) => {\n\t\t\t\t\t//Si frag et non Topic => tooltip ?\n\t\t\t\t\treturn this.showSearchHelpId(fragId)\n\t\t\t\t},\n\t\t\t\topenFrag: async (frag: IHelpFrag, ev?: Event) => {\n\t\t\t\t\tthis.showSearchHelp(frag)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// Tab \"outline\"\n\t\tif (init.outlineView?.indexKey) {\n\t\t\tconst outlinePane = root.appendChild(<div id=\"outlinePane\"\n\t\t\ticon={init.outlineView.icon || \"/@skin@/help/outlineTab.svg\"}\n\t\t\tlabel={init.outlineView.label || \"Guide\"}/>);\n\t\t\tthis.outlineTreeData = new GridDataHelpOutline<IHelpIndexNode | IHelpFrag>();\n\t\t\tthis.outlineGrid = <GridSmall id=\"outlineTree\" Ã®={{\n\t\t\t\treg: this.reg,\n\t\t\t\tselType: \"mono\",\n\t\t\t\tcolumnDefs: [new GridColTreeDef(\"outlineHelp\").setFlex(\"10em\", 1, 1).setCellBuilder(new HelpOutlineCellBuilder(this.helpDb))],\n\t\t\t\tdataHolder: this.outlineTreeData,\n\t\t\t\thideHeaders: true,\n\t\t\t\tskinScroll: 'scroll/small',\n\t\t\t\tskinOver: \"help-views/grid\"\n\t\t\t} as OGridSmallInit} c-resizable=\"\"/> as Grid;\n\t\t\tthis.outlineGrid.addEventListener(\"grid-select\", this.onOutlineSelect)\n\t\t\toutlinePane.appendChild(this.outlineGrid)\n\t\t\toutlinePane.appendChild(<c-resizer c-orient=\"column\"/>);\n\t\t\tthis.outlineRoot = outlinePane.appendChild(<div id=\"outlineRoot\" c-resizable=\"\"/>);\n\t\t\tthis.outlinePageTpl = init.outlineView.pageTpl || HELP.withCallersHelpPageTpl;\n\t\t\tthis.outlinePageTplOptions = init.outlineView.pageTplCtx || {\n\t\t\t\treg: this.reg,\n\t\t\t\thelpDb: this.helpDb,\n\t\t\t\topenFragId: async (fragId: string, ev?: Event) => {\n\t\t\t\t\treturn this.showOutlineHelpId(fragId)\n\t\t\t\t},\n\t\t\t\topenFrag: async (frag: IHelpFrag, ev?: Event) => {\n\t\t\t\t\tthis.showOutlineHelp(frag)\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tif (countTabs > 1) {\n\t\t\t//initialize du Tabs aprÃ¨s l'ajout des onglets.\n\t\t\troot.childNodes.forEach((elt) => (elt as HTMLElement).hidden = true)\n\t\t\tsr.appendChild(root);\n\t\t}\n\n\t\t//Construction du contenu \"live\" par dÃ©faut\n\t\tif (this.liveRoot) {\n\t\t\tthis.liveDefaultFrag = init.liveView.defaultPageId ? await this.helpDb.getFragment(init.liveView.defaultPageId) : null;\n\t\t\tthis.liveHisto.setCurrent(this.liveDefaultFrag);\n\t\t\tthis.liveRoot.replaceChildren(this.liveDefaultPage = await this.makePage(this.liveDefaultFrag, this.livePageTpl, this.livePageTplOptions));\n\t\t}\n\t\tif (this.outlineTreeData) {\n\t\t\tconst index = await this.helpDb.getIndex(init.outlineView.indexKey);\n\t\t\tthis.outlineTreeData.setDatas(await index.getMembers(true))\n\t\t}\n\t}\n\n\tisLiveSyncLocked(): boolean {return this.liveSyncLocked}\n\n\tsetLiveSyncLocked(st: boolean) {\n\t\tif (this.liveSyncLocked !== st) {\n\t\t\tthis.liveSyncLocked = st;\n\t\t\tif (st && this._showFromSelTask) clearTimeout(this._showFromSelTask);\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tasync showLiveHelpId(id: helpId | null, showTab?: boolean) {\n\t\tif (!this.helpDb) return;\n\t\tthis.showLiveHelp(await this.helpDb.getFragment(id), showTab)\n\t}\n\n\tasync showSearchHelpId(id: helpId | null) {\n\t\tif (!this.helpDb) return;\n\t\tthis.showSearchHelp(await this.helpDb.getFragment(id))\n\t}\n\n\tasync showOutlineHelpId(id: helpId | null) {\n\t\tif (!this.helpDb) return;\n\t\tthis.showOutlineHelp(await this.helpDb.getFragment(id))\n\t}\n\n\tasync showLiveHelp(frag: IHelpFrag | null, showTab?: boolean) {\n\t\tif (!this.helpDb) return;\n\t\tif (showTab) this.tabs?.selectTab(this.tabs.findTabFromDesc(this.liveRoot))\n\t\tif (this.liveHisto.currentFrag?.fragId === frag?.fragId) return;\n\t\tthis.liveHisto.setCurrent(frag);\n\t\tthis.refresh();\n\t\treturn this.buildLiveHelpPage(frag);\n\t}\n\n\tasync showSearchHelp(frag: IHelpFrag | null) {\n\t\tif (!this.helpDb) return;\n\t\treturn this.buildSearchHelpPage(frag);\n\t}\n\n\tasync showOutlineHelp(frag: IHelpFrag | null) {\n\t\tif (!this.helpDb) return;\n\t\tif (frag) this.selectOutlineInGrid(this.outlineTreeData.getDatas() as (IHelpIndexNode | IHelpFrag)[], frag.fragId);\n\t\treturn this.buildOutlineHelpPage(frag);\n\t}\n\n\tselectOutlineInGrid(lines: (IHelpIndexNode | IHelpFrag)[], fragId: helpId) {\n\t\tfor (const line of lines) {\n\t\t\tif (\"frag\" in line) {\n\t\t\t\tif (line.frag.fragId === fragId) {\n\t\t\t\t\tthis.outlineGrid.setSelectedRows(this.outlineTreeData.getOffset(line))\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectOutlineInGrid(line.members, fragId);\n\t\t\t\t}\n\t\t\t} else if (line.fragId === fragId) {\n\t\t\t\tthis.outlineGrid.setSelectedRows(this.outlineTreeData.getOffset(line))\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Affichage d'une aide isue de la sÃ©lection courante, qui sera rÃ©alisÃ©e aprÃ¨s un certain dÃ©lai.\n\t *\n\t * @param idProv callback pour obtenir l'id permettant de vÃ©rifier que le contexte d'appel est encore valide (isConnected..)\n\t *  et de calculer l'id Ã  visualiser (potentiellement couteux) en mode \"lazy\".\n\t */\n\tasync showLiveHelpFromSel(idProv: () => helpId | null) {\n\t\tif (this.liveSyncLocked) return;\n\t\tif (this._showFromSelTask) clearTimeout(this._showFromSelTask);\n\t\tthis._showFromSelTask = setTimeout(() => {\n\t\t\tthis._showFromSelTask = null;\n\t\t\tthis.showLiveHelpId(idProv(), false);\n\t\t}, 500);\n\t}\n\n\tprotected _showFromSelTask: any\n\n\n\tprotected async buildLiveHelpPage(frag: IHelpFrag) {\n\t\tthis.liveRoot.replaceChildren(frag === this.liveDefaultFrag ? this.liveDefaultPage : await this.makePage(frag, this.livePageTpl, this.livePageTplOptions));\n\t}\n\n\tprotected async buildSearchHelpPage(frag: IHelpFrag) {\n\t\tthis.searchRoot.replaceChildren(await this.makePage(frag, this.searchPageTpl, this.searchPageTplOptions));\n\t}\n\n\tprotected async buildOutlineHelpPage(frag: IHelpFrag) {\n\t\tthis.outlineRoot.replaceChildren(await this.makePage(frag, this.outlinePageTpl, this.outlinePageTplOptions));\n\t}\n\n\n\tprotected async makePage(frag: IHelpFrag | null, tpl: IHelpPageTpl, ctx: IHelpPageTplContext): Promise<HTMLElement> {\n\t\tif (!frag) return <div/>;\n\t\tif (!this.helpDb) return new MsgLabel().initialize({reg: this.reg, label: \"Aide non disponible\"});\n\t\treturn tpl(frag, ctx);\n\t}\n\n\tsearchLastText: string\n\n\tprotected async onSearchChange(this: HTMLInputElement, ev: Event) {\n\t\tconst me = DOMSH.findHost<HelpViews>(this);\n\t\tconst text = me.searchTextInput.value.trim();\n\t\tif (text === me.searchLastText) return;\n\t\tme.searchLastText = text;\n\t\tif (text) {\n\t\t\tme.searchResults.setDatas(await me.helpDb.search({text: text, max: 20}));\n\t\t} else {\n\t\t\tme.searchResults.setDatas([]);\n\t\t}\n\t}\n\n\tonSearchKeydown(this: HTMLInputElement, ev: KeyboardEvent) {\n\t\tif (ev.key === \"ArrowDown\") {\n\t\t\tconst me = DOMSH.findHost<HelpViews>(this);\n\t\t\tif (me.searchResults.countRows() > 0) {\n\t\t\t\tme.searchGrid.setSelectedRows(0);\n\t\t\t\tme.searchGrid.focus();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\tev.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\tonSearchSelect(this: GridSmall, ev: CustomEvent) {\n\t\tconst rowSel = this.getSelectedRow();\n\t\tif (rowSel == null) return;\n\t\tconst me = DOMSH.findHost<HelpViews>(this);\n\t\tconst result = me.searchResults.getRowKey(rowSel);\n\t\tif (result) me.buildSearchHelpPage(result.found);\n\t}\n\n\tonOutlineSelect(this: GridSmall, ev: CustomEvent) {\n\t\tconst rowSel = this.getSelectedRow();\n\t\tif (rowSel == null) return;\n\t\tconst me = DOMSH.findHost<HelpViews>(this);\n\t\tconst entry = me.outlineTreeData.getDataByOffset(rowSel) as IHelpIndexNode | IHelpFrag;\n\t\tif (entry) me.buildOutlineHelpPage(\"frag\" in entry ? entry.frag : entry);\n\t}\n\n\n\tprotected _refresh() {\n\t\tthis.liveBar?.refresh();\n\t}\n}\n\nREG.reg.registerSkin(\"help-views\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t  min-height: 0;\n\t  min-width: 0;\n\t  flex-direction: column;\n\t  --tab-size: 4em;\n  }\n\n  [hidden] {\n\t  display: none !important;\n  }\n\n  :focus-visible {\n\t  outline: var(--focus-outline);\n  }\n\n  c-tabs {\n\t  flex: 1;\n  }\n\n  #liveRoot {\n\t  padding: .5em;\n\t  overflow: auto;\n  }\n\n  c-bar-actions {\n\t  margin: .3em;\n\t  border-bottom: 1px solid var(--border-color);\n  }\n\n  #liveForward {\n\t  transform: rotate(180deg);\n  }\n\n  #liveBackward:lang(ar) {\n\t  transform: rotate(180deg);\n  }\n\n  #liveForward:lang(ar) {\n\t  transform: none;\n  }\n\n  #livePane,\n  #searchPane,\n  #outlinePane {\n\t  flex: 1;\n\t  display: flex;\n\t  min-width: 0;\n\t  min-height: 0;\n\t  flex-direction: column;\n  }\n\n  #searchText {\n\t  display: block;\n\t  background: .1em / 1em no-repeat url(/@skin@/help/searchInput.svg) var(--form-search-bgcolor);\n\t  padding: 2px;\n\t  padding-inline-start: 1.2em;\n\t  border-bottom: 1px solid var(--border-color);\n  }\n\n  #searchTextInput {\n\t  padding: 2px;\n\t  background: var(--form-search-bgcolor);\n\t  color: var(--form-color);\n\t  border: none;\n\t  width: 100%;\n\t  font-size: inherit;\n  }\n\n  input::placeholder {\n\t  color: var(--fade-color);\n\t  letter-spacing: 2px;\n\t  font-size: .8em;\n\t  font-style: italic;\n  }\n\n  input:focus::placeholder {\n\t  color: transparent;\n  }\n\n  #searchResults,\n  #outlineTree {\n\t  flex: 1 1 10em;\n\t  border: none;\n  }\n\n\n  c-resizer {\n\t  height: 1px;\n  }\n\n  #searchRoot,\n  #outlineRoot {\n\t  flex: 1 1 20em;\n\t  padding: .5em;\n\t  overflow: auto;\n  }\n`);\n\nREG.reg.registerSkin(\"help-views/content\", 1, /* language=CSS */ `\n\t:host {\n\t\tmax-width: 60vw;\n\t\tuser-select: text;\n\t}\n\n\t.page {\n\t\tpadding: .1em;\n\t}\n\n\t.head {\n\t\tdisplay: flex;\n\t\tjustify-content: end;\n\t\tfont-style: italic;\n\t\tcolor: var(--fade-color);\n\t\tmargin: .2em;\n\t}\n\n\t.headTi {\n\t\tdisplay: block;\n\t\tpadding-inline-start: 1.6em;\n\t}\n\n\t.tag > .headTi {\n\t\tbackground: url(\"/@skin@/help/fragTypes/tag.svg\") no-repeat left / 1.5em;\n\t}\n\n\t.it > .headTi {\n\t\tbackground: url(\"/@skin@/help/fragTypes/it.svg\") no-repeat left / 1.5em;\n  }\n\n  .concept > .headTi {\n\t  background: url(\"/@skin@/help/fragTypes/concept.svg\") no-repeat left / 1.5em;\n  }\n\n  .chapter > .headTi {\n\t  background: url(\"/@skin@/help/fragTypes/chapter.svg\") no-repeat left / 1.5em;\n  }\n\n  .xmlLine {\n\t  margin-inline-start: 2em;\n\t  text-indent: -2em;\n  }\n\n  .xmlLine::first-line {\n\t  margin-inline-start: 0;\n  }\n\n  /*.xmlFork {*/\n  /*\tborder-inline-start: 1px solid var(--border-color);*/\n  /*}*/\n\n  /*.xmlCh {*/\n  /*  margin-top: .1em;*/\n  /*  margin-inline-start: 1em;*/\n  /*  padding-inline-start: 1.5em;*/\n  /*  background: url(\"/@skin@/help/xmlSub.svg\") no-repeat left / 1.2em;*/\n  /*}*/\n\n  a {\n\t  text-decoration: underline;\n\t  cursor: pointer;\n  }\n\n  /* en attente d'un widget codemirror. */\n  pre {\n\t  overflow-x: auto;\n  }\n\n  .imgInline {\n\t  max-height: 2em;\n  }\n\n  .imgBlock {\n\t  max-width: 100%;\n  }\n  \n  code {\n\t\t\tbackground-color: #88888828;\n\t\t\tpadding-inline: 3px;\n  }\n\n  help-zoom {\n\t  text-decoration: underline dotted;\n  }\n`);\ncustomElements.define(\"help-views\", HelpViews);\n\n\nclass HelpIdHisto {\n\thisto: IHelpFrag[] = [];\n\tcurrentOffset: number = 0;\n\n\tprotected recurs = false;\n\n\tget currentFrag(): IHelpFrag {return this.histo[this.currentOffset]}\n\n\thasBack() {return this.currentOffset > 0}\n\n\thasForward() {return this.currentOffset < this.histo.length - 1}\n\n\tsetCurrent(frag: IHelpFrag | null) {\n\t\tif (!frag || this.recurs) return;\n\t\tif (this.currentOffset < this.histo.length - 1) {\n\t\t\t//On replace la pile remontÃ©e\n\t\t\tconst after = this.histo.slice(this.currentOffset);\n\t\t\tfor (let i = after.length - 1; i >= 0; i--) {\n\t\t\t\tthis.histo[this.currentOffset++] = after[i];\n\t\t\t}\n\t\t}\n\t\tthis.histo.push(frag);\n\t\tif (this.histo.length > 50) this.histo.splice(0, 10); //on rÃ©duit la liste.\n\t\tthis.currentOffset = this.histo.length - 1;\n\t}\n\n\tgoBack(view: HelpViews) {\n\t\tif (this.histo.length > 0 && this.currentOffset > 0) {\n\t\t\tthis.recurs = true;\n\t\t\ttry {\n\t\t\t\tview.showLiveHelp(this.histo[this.currentOffset - 1]);\n\t\t\t\tthis.currentOffset--;\n\t\t\t\tview.refresh();\n\t\t\t} finally {\n\t\t\t\tthis.recurs = false\n\t\t\t}\n\t\t}\n\t}\n\n\tgoForward(view: HelpViews) {\n\t\tif (this.currentOffset < this.histo.length - 1) {\n\t\t\tthis.recurs = true;\n\t\t\ttry {\n\t\t\t\tview.showLiveHelp(this.histo[this.currentOffset + 1]);\n\t\t\t\tthis.currentOffset++;\n\t\t\t\tview.refresh();\n\t\t\t} finally {\n\t\t\t\tthis.recurs = false\n\t\t\t}\n\t\t}\n\t}\n}\n\nlet liveActions: IAction<HelpViews>[];\n\nfunction getLiveActions(): IAction<HelpViews>[] {\n\tif (liveActions) return liveActions;\n\n\tconst liveSyncLock = new Action<HelpViews>(\"liveSyncLock\").setLabel(\"Bloquer la synchronisation de l'aide contextuelle avec la sÃ©lection courante\").setIcon(\"/@skin@/help/liveSyncLock.svg\");\n\tliveSyncLock.isToggle = () => true;\n\tliveSyncLock.getDatas = (api: 'toggle', ctx: HelpViews): boolean | null => ctx.isLiveSyncLocked();\n\tliveSyncLock.execute = (ctx: HelpViews) => ctx.setLiveSyncLocked(!ctx.isLiveSyncLocked());\n\n\tconst liveBackHisto = new Action<HelpViews>(\"livePrev\").setLabel(\"Aide prÃ©cÃ©dente\").setIcon(\"/@skin@/help/back.svg\");\n\tliveBackHisto.isEnabled = (ctx: HelpViews) => ctx.liveHisto.hasBack();\n\tliveBackHisto.execute = (ctx: HelpViews) => ctx.liveHisto.goBack(ctx);\n\n\tconst liveNextHisto = new Action<HelpViews>(\"liveForward\").setLabel(\"Aide suivante\").setIcon(\"/@skin@/help/back.svg\");\n\tliveNextHisto.isEnabled = (ctx: HelpViews) => ctx.liveHisto.hasForward();\n\tliveNextHisto.execute = (ctx: HelpViews) => ctx.liveHisto.goForward(ctx);\n\n\treturn liveActions = [liveSyncLock, liveBackHisto, liveNextHisto];\n}\n\nclass GridDataHelpOutline<D> extends MxGridTreeUntouchedDatas(GridDataHolderJsonTree)<D> {\n\tconstructor() {super(\"members\")}\n}\n\nclass HelpSearchCellBuilder implements ICellBuilder, IHelpPageTplContext {\n\treg: IReg<unknown>;\n\n\tconstructor(public helpDb: IHelpDb) {}\n\n\tredrawCell(row: GridDataRowJson<IHelpSearchResult>, root: HTMLElement): void {\n\t\tconst frag = row.rowKey.found;\n\t\tif (frag.isTopic()) {\n\t\t\troot.className = frag.cls || \"tag\";\n\t\t\troot.replaceChildren(frag.makeTitle(null));\n\t\t} else {\n\t\t\tconsole.trace(\"TODO rendition help frags without title\")\n\t\t}\n\t}\n\n\tgetColSortFn(): IRowSortFn | null {return null}\n\n\tasync openFragId(fragId: string, ev?: Event): Promise<void> {\n\t\treturn this.openFrag(await this.helpDb.getFragment(fragId), ev);\n\t}\n\n\tasync openFrag(frag: IHelpFrag, ev?: Event): Promise<void> {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n}\n\nclass HelpOutlineCellBuilder implements ICellBuilder, IHelpPageTplContext {\n\treg: IReg<unknown>;\n\n\tconstructor(public helpDb: IHelpDb) {}\n\n\tredrawCell(row: GridDataRowJson<IHelpFrag | IHelpIndexNode>, root: HTMLElement): void {\n\t\tconst frag = \"frag\" in row.rowKey ? row.rowKey.frag : row.rowKey;\n\t\tif (frag.isTopic()) {\n\t\t\troot.replaceChildren(frag.makeTitle(null));\n\t\t} else {\n\t\t\tconsole.trace(\"? should be topic: \", frag)\n\t\t}\n\t}\n\n\tgetColSortFn(): IRowSortFn | null {return null}\n\n\tasync openFragId(fragId: string, ev?: Event): Promise<void> {\n\t\treturn this.openFrag(await this.helpDb.getFragment(fragId), ev);\n\t}\n\n\tasync openFrag(frag: IHelpFrag, ev?: Event): Promise<void> {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n}\n\nREG.reg.registerSkin(\"help-views/grid\", 1, /* language=CSS */ `\n\t.line {\n\t\tpadding: .1em;\n\t}\n\n\t.tag {\n\t\tbackground: url(\"/@skin@/help/fragTypes/tag.svg\") no-repeat left / 1em;\n\t\tpadding-inline-start: 1.1em;\n\t}\n\n\t.it {\n\t\tbackground: url(\"/@skin@/help/fragTypes/it.svg\") no-repeat left / 1em;\n\t\tpadding-inline-start: 1.1em;\n\t}\n\n\t.concept {\n\t\tbackground: url(\"/@skin@/help/fragTypes/concept.svg\") no-repeat left / 1em;\n\t\tpadding-inline-start: 1.1em;\n\t}\n\n\t.chapter {\n\t\tbackground: url(\"/@skin@/help/fragTypes/chapter.svg\") no-repeat left / 1em;\n\t\tpadding-inline-start: 1.1em;\n\t}\n`);\n\n\n/**\n * Tag html pour produire un zoom sur un fragment.\n * Attribut Ã  renseigne : helpid\n */\nclass HelpZoom extends HTMLElement implements IHelpPageTplContext {\n\n\treg: IReg<unknown>;\n\n\thelpDb: IHelpDb;\n\n\ttooltipRoot: HTMLElement;\n\n\tconstructor() {\n\t\tsuper();\n\t\t// XXX Remplacer par un floatting popup resizable au click ?\n\t\tPOPUP.promiseTooltip(this,\n\t\t\t(owner: HTMLElement, tooltip: PopupTooltip): IView | null => {\n\t\t\t\tconst fragId = this.getAttribute(\"helpid\");\n\t\t\t\tconst helpViews = DOMSH.findHost<HelpViews>(this);\n\t\t\t\tthis.reg = helpViews.reg;\n\t\t\t\tthis.helpDb = helpViews.helpDb;\n\t\t\t\tthis.tooltipRoot = <div>\n\t\t\t\t\t<ShadowJsx skin=\"help-views/content\"/>\n\t\t\t\t</div>\n\t\t\t\thelpViews.helpDb.getFragment(fragId).then((frag) => this.makeContent(frag));\n\t\t\t\treturn this.tooltipRoot;\n\t\t\t},\n\t\t\t{hoverAllowed: true, anchor: {elem: this, initWidth: \"35em\"/*, fixSize: true FIXME bug stylage tooltip */}}\n\t\t);\n\t}\n\n\tasync openFragId(fragId: string, ev?: Event) {\n\t\tconst helpViews = DOMSH.findHost<HelpViews>(this);\n\t\tconst frag = await helpViews.helpDb.getFragment(fragId);\n\t\tif (frag) return this.makeContent(frag);\n\t}\n\n\tasync openFrag(frag: IHelpFrag, ev?: Event) {\n\t\tif (frag) return this.makeContent(frag);\n\t}\n\n\tasync makeContent(frag: IHelpFrag) {\n\t\tconst sr = this.tooltipRoot.shadowRoot;\n\t\tBASIS.clearContent(sr)\n\t\tsr.appendChild(await HELP.simpleHelpPageTpl(frag, this));\n\t}\n\n}\n\ncustomElements.define(\"help-zoom\", HelpZoom);\n"]}