{"version":3,"sources":["/@back@/wsp/areas/wspWorkbench.tsx"],"names":["AccelKeyMgr","ACTION","Area","AreaAsync","IO","REG","JSX","render","MsgLabel","ExplorerArea","[object Object]","super","this","_label","_icon","requireLib","asEndPoint","actionsLists","accelKeysLists","defaultAction","hide","hideItemFolderContent","ctx","lastDatas","reg","infoBroker","env","mod","_modules","init","area","areaContext","uriRoot","showRoot","secondaryCols","getList","showTitle","getUserData","itemHandlingReact","actions","mergeLists","undefined","srcActions","FocusItem","accelKeyMgr","initFromMapActions","mergeListsAsMap","emptyTree","spaceTree","createElement","style","label","level","î","action","SpaceTreeCreateItem","actionContext","uiContext","icon","SpaceTreeCreateSpace","import","loadLibs","GeneratorTabsArea","_lastDatasKey","initLastDatas","SearchesArea","id","kind","_description","forbidInLayout","addToList","searchesActions","TplRequestsMenu","makeFromSearchPersistLists","OpenSearchItems","setGroup","privateUri","criterions","getListAsMap","barActionsInit","groupOrder","results","srcGrid","columnDefs","searches","FocusItemSetWedSearch","taskActions","FocusTask","draggable","lineDrawer","redrawLine","row","line","dt","rowDatas","tkDeadline","classList","toggle","Date","now","actStage","skinOver","barActions","injectSepByGroup","msgs","resultsMore","max","resultsEmpty","resultsOne","resultsCount","count","registerSkin","AreaWithActions","BookmarksArea","getSvc","FocusItemOrSpace","TocArea","NetItemsArea","list","confsList","confs","TasksArea","ForeignWspArea","wspCode","template","wsp","universe","wspServer","wspsLive","findWsp","listenChanges","msg","root","waitForAvailable","then","async","catch","e","console","log","setCustomMsg","NavigatorArea","buildFacets","facets","buildFacetsStandard","ForeignDepotArea","frontJsModule","authReg","depotReg","standardMsg","embeddedDepot","importJs","m","initEmbeddedApp","parentNode","firstElementChild","setStandardMsg"],"mappings":"OAIQA,YAAaC,WAAe;OAC5BC,KAAMC,cAAU;OACLC,OAAG;OAEaC,QAAI;OAE/BC,QAAI;OAEJC,WAAO;OACPC,aAAwB;OAyB1B,MAAOC,qBAAqBN,UAoBjCO,cACCC,MAAM;AACNC,KAAKC,OAAS;AACdD,KAAKE,MAAQ;AACbF,KAAKG,WAAWX,GAAGY,WAAW,mCAG/BN,gBAAgBO,cACfL,KAAKK,aAAeA;AACpB,OAAOL,KAGRF,kBAAkBQ,gBACjBN,KAAKM,eAAiBA;AACtB,OAAON,KAGRF,iBAAiBS,eAChBP,KAAKO,cAAgBA;AACrB,OAAOP,KAGRF,yBAAyBU,MACxBR,KAAKS,sBAAwBD;AAC7B,OAAOR,KAGRF,UAAUY,IAA6BC,WACtC,MAAMC,IAAMF,IAAIE;AAChB,MAAMC,WAAaD,IAAIE,IAAID;AAC3B,MAAME,IAAiDf,KAAKgB,SAAS;AACrE,MAAMC,KAAuB,CAC5BC,KAAMlB,KACNmB,YAAaT,IACbE,IAAKA,IACLQ,QAASpB,KAAKoB,QACdC,SAAUrB,KAAKqB,SACfZ,sBAAuBT,KAAKS,sBAC5Ba,cAAeV,IAAIW,QAAQ,qCAC3BC,UAAWZ,IAAIa,YAAY,yBAA0B,MACrDC,kBAAmBb,WACnBc,QAAS3B,KAAKK,aAAeO,IAAIgB,cAAc5B,KAAKK,cAAgB,KACpEE,cAAeP,KAAKO,gBAAkBsB,UAAY7B,KAAKO,cAAiBM,WAAa,IAAIb,KAAK8B,WAAWC,UAAc,KACvHC,YAAahC,KAAKM,gBAAiB,IAAIlB,aAA6B6C,mBAAmBrB,IAAIsB,mBAAmBlC,KAAKM,iBAAmB,KACtI6B,UAAYC,WAAc1C,IAAA2C,cAAA,MAAA,CAAKC,MAAM,qBACpC5C,IAAA2C,cAAA,QAAA,CAAOE,MAAM,kBAAkBC,MAAM,SACrC9C,IAAA2C,cAAA,WAAA,CAAAI,IAAa,CACZC,OAAQ,IAAI3B,IAAI4B,oBAChBC,cAAeR,UACfS,UAAW,SACXC,KAAM,wCAEPpD,IAAA2C,cAAA,WAAA,CAAAI,IAAa,CACZC,OAAQ,IAAI3B,IAAIgC,qBAChBH,cAAeR,UACfS,UAAW,SACXC,KAAM;AAMT,OAAOpD,IAAA2C,cAAA,iBAAA,CAAAI,IAAmBxB,OAK3BnB,eAAeY,KACdV,KAAK8B,iBAAmBkB,OAAM;AAC9B,OAAOjD,MAAMkD,SAASvC,aASlB,MAAOwC,0BAA0B3D,UAItCO,cACCC,MAAM;AACNC,KAAKC,OAAS;AACdD,KAAKE,MAAQ;AACbF,KAAKmD,cAAgB;AACrBnD,KAAKG,WAAWX,GAAGY,WAAW,oCAG/BN,UAAUY,IAA6BC,WACtC,OAAOjB,IAAA2C,cAAA,qBAAA,CAAAI,IAAuBzC,KAAKoD,cAAc1C,IAAKC,UAAW,CAChEO,KAAMlB,KACNmB,YAAaT,IACbE,IAAKF,IAAIE,gBASN,MAAOyC,qBAAqB9D,UAajCO,YAAYwD,GAAmBC,MAC9BxD,MAAMuD;AADwBtD,KAAAuD,KAAAA;AAE9BvD,KAAKC,OAASsD,OAAS,OAAS,UAAY;AAC5CvD,KAAKwD,aAAeD,OAAS,OAAS,sBAAwB;AAC9DvD,KAAKE,MAAQqD,OAAS,OAAS,0CAA4C;AAC3EvD,KAAKG,WAAWX,GAAGY,WAAW,kCAhB/BqD,qBAAiC,MAAO,IAmBxC3D,gBAAgBO,cACfL,KAAKK,aAAeA;AACpB,OAAOL,KAGRF,kBAAkBQ,gBACjBN,KAAKM,eAAiBA;AACtB,OAAON,KAGRF,UAAUY,IAA6BC,WACtC,MAAME,WAAaH,IAAIE,IAAIE,IAAID;AAuB/B,GAAIb,KAAKuD,OAAS,OAAQ,CACzB7C,IAAIE,IAAI8C,UAAU,uCAAwC,4BAA6B,EAAG1D,KAAK2D,gBAAgBC,gBAAgBC,2BAA2BnD,IAAK,gBAAiB,uBAAwB;AACxMA,IAAIE,IAAI8C,UAAU,uCAAwC,wBAAyB,EAAG,IAAI1D,KAAK8B,WAAWgC,gBAAgB,QAAQC,SAAS,cACrI,CACNrD,IAAIE,IAAI8C,UAAU,uCAAwC,4BAA6B,EAAG1D,KAAK2D,gBAAgBC,gBAAgBC,2BAA2BnD,IAAK,gBAAiB,uBAAwB;AACxMA,IAAIE,IAAI8C,UAAU,uCAAwC,wBAAyB,EAAG,IAAI1D,KAAK8B,WAAWgC,gBAAgB,QAAQC,SAAS,UAG5I,OAAOrE,IAAA2C,cAAA,eAAA,CAAAI,IAAiB,CACvBvB,KAAMlB,KACNmB,YAAaT,IACbE,IAAKF,IAAIE,IACT2C,KAAMvD,KAAKuD,KACXS,WAAYhE,KAAKuD,OAAS,OAAS,qBAAuB,qBAC1DU,WAAYvD,IAAIE,IAAIsD,aAAalE,KAAKuD,OAAS,OAAS,iBAAmB,kBAC3EY,eAAgB,CACfxC,QAASjB,IAAIE,IAAIW,QAAQvB,KAAKuD,OAAS,OAAS,uCAAyC,wCACzFa,WAAY,eAEbC,QAAS,CACRC,QAAS,CACRC,WAAY7D,IAAIE,IAAIW,QAAQvB,KAAKuD,OAAS,OAAS,+BAAiC,gCACpF7B,kBAAmBb,WACnBc,QAAS3B,KAAKK,aAAeK,IAAIE,IAAIgB,cAAc5B,KAAKK,cAAgB,KACxEE,cAAeP,KAAKO,gBAAkBsB,UAAY7B,KAAKO,cAAiBM,WAAab,KAAKuD,OAAS,OAAS,IAAIvD,KAAKwE,SAASC,sBAA0B,IAAIzE,KAAK0E,YAAYC,UAAc,KAC3L3C,YAAahC,KAAKM,gBAAiB,IAAIlB,aAA6B6C,mBAAmBvB,IAAIE,IAAIsB,mBAAmBlC,KAAKM,iBAAmB,KAC1IsE,UAAW,KACXC,WAAY,CACXC,WAAY,CAACC,IAAkCC,QAC9C,GAAIhF,KAAKuD,OAAS,OAAQ,CACzB,MAAM0B,GAAKF,IAAIG,SAASC;AACxBH,KAAKI,UAAUC,OAAO,OAAQJ,GAAK,GAAKA,GAAKK,KAAKC;AAClDP,KAAKI,UAAUC,OAAO,YAAaN,IAAIG,SAASM,WAAa,gBAIhEC,SAAU,0BAEXC,WAAYrG,OAAOsG,iBAAiBjF,IAAIE,IAAIgB,WAAW5B,KAAKuD,OAAS,OAAS,+BAAiC,+BAAgC,2BAA4B,WAAY7C,KACvLkF,KAAM5F,KAAKuD,OAAS,OAAS1B,UAAY,CACxCgE,YAAaC,KAAO,YAAYA,uBAChCC,aAAc,yBACdC,WAAY,oBACZC,aAAcC,OAAS,IAAIA,8BAY/BpG,eAAeY,KACdV,KAAKwE,eAAiBxB,OAAM;AAC5BhD,KAAK8B,iBAAmBkB,OAAM;AAC9BhD,KAAK2D,sBAAwBX,OAAM;AACnC,GAAIhD,KAAKuD,OAAS,OAAQvD,KAAK0E,kBAAoB1B,OAAM;AACzD,OAAOjD,MAAMkD,SAASvC,MAIxBjB,IAAImB,IAAIuF,aAAa,yBAA0B,EAAsB;AAWrE,MAAMC,wBAA2B7G,UAYhCO,gBAAgBO,cACfL,KAAKK,aAAeA;AACpB,OAAOL,KAGRF,kBAAkBQ,gBACjBN,KAAKM,eAAiBA;AACtB,OAAON,KAGRF,iBAAiBS,eAChBP,KAAKO,cAAgBA;AACrB,OAAOP,aAQH,MAAOqG,sBAAsBD,gBAElCtG,cACCC,MAAM;AACNC,KAAKC,OAAS;AACdD,KAAKE,MAAQ;AACbF,KAAKmD,cAAgB;AACrBnD,KAAKG,WAAWX,GAAGY,WAAW,mCAG/BN,UAAUY,IAA6BC,WACtC,MAAMC,IAAMF,IAAIE;AAChB,MAAMC,WAAaH,IAAIE,IAAIE,IAAID;AAC/B,OAAOnB,IAAA2C,cAAA,gBAAA,CAAAI,IAAkBzC,KAAKoD,cAAc1C,IAAKC,UAAW,CAC3DC,IAAKA,IACLM,KAAMlB,KACNmB,YAAaT,IACbgB,kBAAmBb,WACnBS,cAAeV,IAAI0F,OAAO,+BAC1B3E,QAAS3B,KAAKK,aAAeK,IAAIE,IAAIgB,cAAc5B,KAAKK,cAAgB,KACxEE,cAAeP,KAAKO,gBAAkBsB,UAAY7B,KAAKO,cAAiBM,WAAa,IAAIb,KAAK8B,WAAWyE,iBAAqB,KAC9HvE,YAAahC,KAAKM,gBAAiB,IAAIlB,aAA6B6C,mBAAmBvB,IAAIE,IAAIsB,mBAAmBlC,KAAKM,iBAAmB,SAM5IR,eAAeY,KACdV,KAAK8B,iBAAmBkB,OAAM;AAC9B,OAAOjD,MAAMkD,SAASvC,aAQlB,MAAO8F,gBAAgBjH,UAE5BO,YAAYwD,IACXvD,MAAMuD,IAAM;AACZtD,KAAKC,OAAS;AACdD,KAAKE,MAAQ;AACbF,KAAKmD,cAAgB;AACrBnD,KAAKG,WAAWX,GAAGY,WAAW,6BAG/BN,UAAUY,IAA6BC,WACtC,MAAME,WAAaH,IAAIE,IAAIE,IAAID;AAC/B,OAAOnB,IAAA2C,cAAA,UAAA,CAAAI,IAAYzC,KAAKoD,cAAc1C,IAAKC,UAAW,CACrDC,IAAKF,IAAIE,IACTM,KAAMlB,KACNmB,YAAaT,IACbG,WAAYA,uBAQT,MAAO4F,qBAAqBL,gBAUjCtG,YAAYwD,IACXvD,MAAMuD,IAAM;AACZtD,KAAKC,OAAS;AACdD,KAAKwD,aAAe;AACpBxD,KAAKE,MAAQ;AACbF,KAAKmD,cAAgB;AACrBnD,KAAKG,WAAWX,GAAGY,WAAW,kCAX/BN,aAAa4G,MACZ1G,KAAK2G,UAAYD;AACjB,OAAO1G,KAYRF,UAAUY,IAA6BC,WACtC,MAAME,WAAaH,IAAIE,IAAIE,IAAID;AAE/B,OAAOnB,IAAA2C,cAAA,gBAAA,CAAAI,IAAkBzC,KAAKoD,cAAc1C,IAAKC,UAAW,CAC3DC,IAAKF,IAAIE,IACTM,KAAMlB,KACNmB,YAAaT,IACbkG,MAAO5G,KAAK2G,UAAYjG,IAAIE,IAAIgB,cAA4B5B,KAAK2G,WAAa,KAC9E9F,WAAYA,WACZa,kBAAmBb,WACnBS,cAAeZ,IAAIE,IAAIW,QAAQ,kCAC/BI,QAAS3B,KAAKK,aAAeK,IAAIE,IAAIgB,cAAc5B,KAAKK,cAAgB,KACxEE,cAAeP,KAAKO,gBAAkBsB,UAAY7B,KAAKO,cAAiBM,WAAa,IAAIb,KAAK8B,WAAWyE,iBAAqB,KAC9HvE,YAAahC,KAAKM,gBAAiB,IAAIlB,aAA6B6C,mBAAmBvB,IAAIE,IAAIsB,mBAAmBlC,KAAKM,iBAAmB,SAM5IR,eAAeY,KACdV,KAAK8B,iBAAmBkB,OAAM;AAC9B,OAAOjD,MAAMkD,SAASvC,aAQlB,MAAOmG,kBAAkBtH,UAE9BO,cACCC,MAAM;AACNC,KAAKC,OAAS;AACdD,KAAKE,MAAQ;AACbF,KAAKmD,cAAgB;AACrBnD,KAAKG,WAAWX,GAAGY,WAAW,+BAG/BN,UAAUY,IAA6BC,WACtC,MAAME,WAAaH,IAAIE,IAAIE,IAAID;AAC/B,OAAOnB,IAAA2C,cAAA,YAAA,CAAAI,IAAczC,KAAKoD,cAAc1C,IAAKC,UAAW,CACvDC,IAAKF,IAAIE,IACTM,KAAMlB,KACNmB,YAAaT,IACbG,WAAYA,uBAST,MAAOiG,uBAAuBvH,UACnCO,YAAYwD,GAAmByD,QAAwBC,UACtDjH,MAAMuD;AADwBtD,KAAA+G,QAAAA;AAAwB/G,KAAAgH,SAAAA;AAEtDhH,KAAKmD,cAAgBG,GAGtBxD,UAAUY,KACT,OAAO,KAGRZ,eAAeY,IAA2DC,WACzE,MAAME,WAAaH,IAAIE,IAAIE,IAAID;AAC/B,MAAMoG,IAAMvG,IAAIE,IAAIE,IAAIoG,SAASC,UAAUC,SAASC,QAAQrH,KAAK+G,QAAS,MAAMO;AAChF,MAAMC,IAAM7H,IAAA2C,cAACzC,SAAQ,CAAA6C,IAAI,CAACF,MAAO;AACjC,MAAMiF,KAAO9H,IAAA2C,cAAA,MAAA,CAAKC,MAAM,oBACtBiF;AAEF,IACCN,IAAIQ,mBAAmBC,KAAKC,MAAOV,MAClCtH,aAAaK,KAAKgH,SAASC,IAAKvG,KAAM8G,KAAM,MAC1CI,MAAOC,IACTC,QAAQC,IAAIF;AACZ,OAAON,IAAIS,aAAa,wDAAyD;AAElF,OAAOR,KACN,MAAOK,GACRC,QAAQC,IAAIF;AACZ,OAAON,IAAIS,aAAa,wDAAyD,kBAS9E,MAAOC,sBAAsB1I,UAyBlCO,YAAYwD,IACXvD,MAAMuD;AACNtD,KAAKG,WAAWX,GAAGY,WAAW,mCAG/BN,gBAAgBO,cACfL,KAAKK,aAAeA;AACpB,OAAOL,KAGRF,kBAAkBQ,gBACjBN,KAAKM,eAAiBA;AACtB,OAAON,KAGRF,iBAAiBS,eAChBP,KAAKO,cAAgBA;AACrB,OAAOP,KAGRF,aAAaqC,WACZnC,KAAKmC,UAAYA;AACjB,OAAOnC,KAGRF,eAAeoI,aACdlI,KAAKkI,YAAcA;AACnB,OAAOlI,KAGRF,uBAAuBqI,QACtBnI,KAAKoI,oBAAsBD;AAC3B,OAAOnI,KAGRF,UAAUY,IAA6BC,WACtC,MAAMC,IAAMF,IAAIE;AAChB,MAAMC,WAAaD,IAAIE,IAAID;AAC3B,MAAME,IAAiDf,KAAKgB,SAAS;AACrE,MAAMC,KAAuB,CAC5BC,KAAMlB,KACNmB,YAAaT,IACbE,IAAKA,IACLuB,UAAWnC,KAAKmC,UAChB+F,YAAalI,KAAKkI,aAAenH,IAAIf,KAAKoI,qBAC1C9G,cAAeV,IAAIW,QAAQ,qCAC3BG,kBAAmBb,WACnBc,QAAS3B,KAAKK,aAAeO,IAAIgB,cAAc5B,KAAKK,cAAgB,KACpEE,cAAeP,KAAKO,gBAAkBsB,UAAY7B,KAAKO,cAAiBM,WAAa,IAAIb,KAAK8B,WAAWC,UAAc,KACvHC,YAAahC,KAAKM,gBAAiB,IAAIlB,aAA6B6C,mBAAmBrB,IAAIsB,mBAAmBlC,KAAKM,iBAAmB,KACtIK,UAAWA;AAGZ,OAAOjB,IAAA2C,cAAA,gBAAA,CAAAI,IAAkBxB,OAK1BnB,eAAeY,KACdV,KAAK8B,iBAAmBkB,OAAM;AAC9B,OAAOjD,MAAMkD,SAASvC,aASlB,MAAO2H,yBAAyB/I,KACrCQ,YAAYwD,GAAmBgF,cAAiCC,QAAyCC,UACxGzI,MAAMuD;AADwBtD,KAAAsI,cAAAA;AAAiCtI,KAAAuI,QAAAA;AAAyCvI,KAAAwI,SAAAA;AAExGxI,KAAKC,OAAS;AACdD,KAAKE,MAAQ,oCAGdJ,UAAUY,IAA2DC,WACpE,MAAM6G,KAAO9H,IAAA2C,cAAA,MAAA,CAAKC,MAAM,mDACvB5C,IAAA2C,cAAA,QAAA,CAAAI,IAAU,CAACgG,YAAa;AAEzB,MAAMC,cAAgB1I,KAAKsI,cAAcK;AACzCD,cAAchB,KAAKkB,GACXA,EAAEC,gBAAgB,CACxBN,QAASvI,KAAKuI,QACdC,SAAUxI,KAAKwI,SACfM,WAAYtB,QAEXI,MAAOC,IACT,MAAMN,IAAMC,KAAKuB;AACjBxB,IAAIyB,eAAe;AACnB,MAAMnB;AAEP,OAAOL","sourcesContent":["/**\n * Areas insérables dans le workbench d'un atelier.\n */\n\nimport {AccelKeyMgr, ACTION, Action} from \"lib/commons/actions\";\nimport {Area, AreaAsync} from \"lib/commons/areas\";\nimport {IEndPoint, IO} from \"lib/commons/io/io\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {IReg, IRegPointer, IUiEnv, REG} from \"lib/commons/registry\";\nimport {IView} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {TemplateResult} from \"res/litHtml/lib/template-result\";\nimport {render} from \"lib/commons/utils/htmlLit\";\nimport {MsgLabel, OMsgLabelInit} from \"back/commons/basis\";\nimport {GridDataRowJson} from \"back/commons/widgets/grid-libs\";\n\nimport type {OSearchesInit, Searches} from \"back/wsp/views/searches\";\nimport type {OGeneratorTabsInit} from \"back/wsp/views/generators\";\nimport type {ISpaceTreeCtx, OSpaceTreeInit, SpaceTree} from \"back/wsp/views/spaceTree\";\nimport type {IShortDescCtx} from \"lib/wsp/item\";\nimport type {IWspUiEnv, Wsp} from \"lib/wsp/wsp\";\nimport type {IBkCtx, OBookmarksInit} from \"back/wsp/views/bookmarks\";\nimport type {OTocInit} from \"back/wsp/views/toc\";\nimport type {ISrcGridCtx} from \"back/wsp/widgets/srcGrid\";\nimport type {IInfoBrokerPointer} from \"lib/commons/infos\";\nimport type {IChainEnv} from \"lib/wsp/chain\";\nimport type {OActionBtnInit} from \"back/commons/widgets/buttons\";\nimport type {embeddedDepotModule} from \"back/store/plugins/embeddedDepot\";\nimport type {ICoreUniverseEnv} from \"lib/core/universe\";\nimport type {IDepotEnv} from \"lib/store/depot\";\nimport type {IWbToolArea} from \"back/core/widgets/workbench\";\nimport type {JNetItemConf, ONetItemsInit} from \"back/wsp/views/netItems\";\nimport type {ESrcField, JSrcFields} from \"lib/wsp/src\";\nimport type {INavigatorFacets, Navigator, ONavigatorInit} from \"back/wsp/views/navigator\";\n\n/**\n * Area construisant la view \"Explorer\" pour la wspApp.\n */\nexport class ExplorerArea extends AreaAsync<IRegPointer<IWspUiEnv>, IView> {\n\n\t/** Listes d'actions associées aux items (Action<ISpaceTreeCtx>). */\n\tactionsLists: string[];\n\n\t/** Action excutée au double-click ou sur les frappes entrée ou espace. */\n\tdefaultAction: Action<ISpaceTreeCtx>;\n\n\t/** Racourcis claviers à capter sur la sel courante (Action<ISpaceTreeCtx>). */\n\taccelKeysLists: string[];\n\n\t/** Racine de l'arbre (\"\" par défaut). */\n\turiRoot: string;\n\n\t/** Si uriRoot!=\"\", affiche l'espace racine ou directement sa liste de fils. */\n\tshowRoot: boolean;\n\n\t/** */\n\thideItemFolderContent: boolean;\n\n\tconstructor() {\n\t\tsuper('explorer');\n\t\tthis._label = \"Explorateur\";\n\t\tthis._icon = \"/@skin@/wsp/views/spaceTree/treeTabf.svg\";\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/spaceTree.js\"));\n\t}\n\n\tsetActionsLists(actionsLists: string[]): this {\n\t\tthis.actionsLists = actionsLists;\n\t\treturn this;\n\t}\n\n\tsetAccelKeysLists(accelKeysLists: string[]): this {\n\t\tthis.accelKeysLists = accelKeysLists;\n\t\treturn this;\n\t}\n\n\tsetDefaultAction(defaultAction: Action<ISpaceTreeCtx>): this {\n\t\tthis.defaultAction = defaultAction;\n\t\treturn this;\n\t}\n\n\tsetHideItemFolderContent(hide: boolean): this {\n\t\tthis.hideItemFolderContent = hide;\n\t\treturn this;\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst reg = ctx.reg;\n\t\tconst infoBroker = reg.env.infoBroker;\n\t\tconst mod: typeof import(\"back/wsp/views/spaceTree\") = this._modules[0];\n\t\tconst init: OSpaceTreeInit = {\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\treg: reg,\n\t\t\turiRoot: this.uriRoot,\n\t\t\tshowRoot: this.showRoot,\n\t\t\thideItemFolderContent: this.hideItemFolderContent,\n\t\t\tsecondaryCols: reg.getList(\"columns:wspExplorer:secondaryCols\"),\n\t\t\tshowTitle: reg.getUserData(\"wsp.explorer.showTitle\", true),\n\t\t\titemHandlingReact: infoBroker,\n\t\t\tactions: this.actionsLists ? reg.mergeLists(...this.actionsLists) : null,\n\t\t\tdefaultAction: this.defaultAction !== undefined ? this.defaultAction : (infoBroker ? new this.srcActions.FocusItem() : null),\n\t\t\taccelKeyMgr: this.accelKeysLists ? new AccelKeyMgr<IShortDescCtx>().initFromMapActions(reg.mergeListsAsMap(...this.accelKeysLists)) : null,\n\t\t\temptyTree: (spaceTree) => <div style=\"font-style:normal\">\n\t\t\t\t<c-msg label=\"Aucun contenu\" level=\"info\"/>\n\t\t\t\t<c-action î={{\n\t\t\t\t\taction: new mod.SpaceTreeCreateItem(),\n\t\t\t\t\tactionContext: spaceTree,\n\t\t\t\t\tuiContext: \"dialog\",\n\t\t\t\t\ticon: \"/@skin@/wsp/actions/createItem.svg\"\n\t\t\t\t} as OActionBtnInit<SpaceTree>}/>\n\t\t\t\t<c-action î={{\n\t\t\t\t\taction: new mod.SpaceTreeCreateSpace(),\n\t\t\t\t\tactionContext: spaceTree,\n\t\t\t\t\tuiContext: \"dialog\",\n\t\t\t\t\ticon: \"/@skin@/wsp/actions/createSpace.svg\"\n\t\t\t\t} as OActionBtnInit<SpaceTree>}/>\n\t\t\t</div>\n\t\t};\n\n\n\t\treturn <wsp-space-tree î={init}/>;\n\t}\n\n\tsrcActions: typeof import(\"back/wsp/actions/srcActions\");\n\n\tasync loadLibs(ctx: IRegPointer<IWspUiEnv>): Promise<void> {\n\t\tthis.srcActions = await import(\"back/wsp/actions/srcActions.js\");\n\t\treturn super.loadLibs(ctx);\n\t}\n\n}\n\n\n/**\n * Area construisant la view \"Générateurs\" pour la wspApp.\n */\nexport class GeneratorTabsArea extends AreaAsync<IRegPointer<IWspUiEnv>, IView> implements IWbToolArea<IRegPointer<IWspUiEnv>, IView> {\n\n\t//get forbidInLayout(): 'h' | 'v' {return 'v'}\n\n\tconstructor() {\n\t\tsuper('generators');\n\t\tthis._label = \"Publications\";\n\t\tthis._icon = \"/@skin@/wsp/views/generators/generators.svg\";\n\t\tthis._lastDatasKey = 'gen';\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/generators.js\"));\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\treturn <wsp-generator-tabs î={this.initLastDatas(ctx, lastDatas, {\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\treg: ctx.reg\n\t\t} as OGeneratorTabsInit)}/>;\n\t}\n}\n\n\n/**\n * Area construisant la view \"Recherches\" pour la wspApp.\n */\nexport class SearchesArea extends AreaAsync<IRegPointer<IWspUiEnv>, IView> implements IWbToolArea<IRegPointer<IWspUiEnv>, IView> {\n\n\tget forbidInLayout(): 'h' | 'v' {return 'v'}\n\n\t/** Listes d'actions associées aux items (Action<ISrcGridCtx>). */\n\tactionsLists: string[];\n\n\t/** Action exécutée au double-click ou sur les frappes entrée ou espace. */\n\tdefaultAction: Action<ISrcGridCtx>;\n\n\t/** Raccourcis claviers à capter sur la sel courante (Action<ISrcGridCtx>). */\n\taccelKeysLists: string[];\n\n\tconstructor(id: string, public kind: 'item' | 'task') {\n\t\tsuper(id);\n\t\tthis._label = kind === 'item' ? \"Items\" : \"Tâches\";\n\t\tthis._description = kind === 'item' ? \"Recherche d'items\" : \"Recherche de tâches\";\n\t\tthis._icon = kind === 'item' ? \"/@skin@/wsp/views/searches/searches.svg\" : \"/@skin@/wsp/views/searches/searches-tasks.svg\";\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/searches.js\"));\n\t}\n\n\tsetActionsLists(actionsLists: string[]): this {\n\t\tthis.actionsLists = actionsLists;\n\t\treturn this;\n\t}\n\n\tsetAccelKeysLists(accelKeysLists: string[]): this {\n\t\tthis.accelKeysLists = accelKeysLists;\n\t\treturn this;\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst infoBroker = ctx.reg.env.infoBroker;\n\n\t\t// Exemple de déclaration de requetes d'items dans la bibliothèque\n\t\t/**\n\t\tREG.reg.addToList(\"requests:item\", \"test1\", 1, {\n\t\t\ttitle : \"Requete prédéfinie 1\",\n\t\t\twhereCrit: <where><exp type=\"Items\" exclude=\"/~annot/;/~air/;/~ext/\" uiCrit=\"wsp-itemcrit-fullwsp\"/><and><exp type=\"FullText\" textSearch=\"11\" options=\";c;\" uiCrit=\"wsp-itemcrit-fulltext\"/></and></where>\n\t\t} as ISearchPersist);\n\t\tREG.reg.addToList(\"requests:item\", \"test2\", 1, {\n\t\t\ttitle : \"Requete prédéfinie 2\",\n\t\t\tdescription : \"Ma description !!!\",\n\t\t\twhereCrit: <where><exp type=\"Items\" exclude=\"/~annot/;/~air/;/~ext/\" uiCrit=\"wsp-itemcrit-fullwsp\"/><and><exp type=\"FullText\" textSearch=\"22\" options=\";c;\" uiCrit=\"wsp-itemcrit-fulltext\"/></and></where>\n\t\t} as ISearchPersist);\n\n\t\tREG.reg.addToList(\"requests:task\", \"test2\", 1, {\n\t\t\ttitle : \"Requete prédéfinie 2de taches 1\",\n\t\t\tdescription : \"Ma description !!!\",\n\t\t\twhereCrit: <where><exp type=\"TasksAll\" actStages=\"pending completed forthcoming\" uiCrit=\"wsp-taskcrit-fullwsp\"/><and><exp type=\"ItemSgnRegexp\" regexpSgn=\"(@stk_postit|@stk_commande)\\b.*\" uiCrit=\"wsp-taskcrit-type\" uiItModels=\"stk_postit|stk_commande\"/></and></where>\n\t\t} as ISearchPersist);\n\t\t **/\n\n\n\t\t// barActionsInit\n\t\tif (this.kind === 'item') {\n\t\t\tctx.reg.addToList(\"actions:wspApp:searches:bar:end:item\", \"actionsSearchPersistLists\", 1, this.searchesActions.TplRequestsMenu.makeFromSearchPersistLists(ctx, \"requests:item\", \"requests:wspApp:item\", \"requests:searches:item\"));\n\t\t\tctx.reg.addToList(\"actions:wspApp:searches:bar:end:item\", \"actionOpenSearchItems\", 1, new this.srcActions.OpenSearchItems('item').setGroup('noctx'));\n\t\t} else {\n\t\t\tctx.reg.addToList(\"actions:wspApp:searches:bar:end:task\", \"actionsSearchPersistLists\", 1, this.searchesActions.TplRequestsMenu.makeFromSearchPersistLists(ctx, \"requests:task\", \"requests:wspApp:task\", \"requests:searches:task\"));\n\t\t\tctx.reg.addToList(\"actions:wspApp:searches:bar:end:task\", \"actionOpenSearchItems\", 1, new this.srcActions.OpenSearchItems('task').setGroup('noctx'));\n\t\t}\n\n\t\treturn <wsp-searches î={{\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\treg: ctx.reg,\n\t\t\tkind: this.kind,\n\t\t\tprivateUri: this.kind === 'item' ? '/itemSearches.json' : '/taskSearches.json',\n\t\t\tcriterions: ctx.reg.getListAsMap(this.kind === 'item' ? \"wsp.crit.items\" : \"wsp.crit.tasks\"),\n\t\t\tbarActionsInit: {\n\t\t\t\tactions: ctx.reg.getList(this.kind === 'item' ? \"actions:wspApp:searches:bar:end:item\" : \"actions:wspApp:searches:bar:end:task\") as Action<Searches>[],\n\t\t\t\tgroupOrder: \"* lib noctx\",\n\t\t\t},\n\t\t\tresults: {\n\t\t\t\tsrcGrid: {\n\t\t\t\t\tcolumnDefs: ctx.reg.getList(this.kind === 'item' ? \"columns:wspApp:searches:item\" : \"columns:wspApp:searches:task\"),\n\t\t\t\t\titemHandlingReact: infoBroker,\n\t\t\t\t\tactions: this.actionsLists ? ctx.reg.mergeLists(...this.actionsLists) : null,\n\t\t\t\t\tdefaultAction: this.defaultAction !== undefined ? this.defaultAction : (infoBroker ? this.kind === 'item' ? new this.searches.FocusItemSetWedSearch() : new this.taskActions.FocusTask() : null),\n\t\t\t\t\taccelKeyMgr: this.accelKeysLists ? new AccelKeyMgr<IShortDescCtx>().initFromMapActions(ctx.reg.mergeListsAsMap(...this.accelKeysLists)) : null,\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tlineDrawer: {\n\t\t\t\t\t\tredrawLine: (row: GridDataRowJson<JSrcFields>, line) => {\n\t\t\t\t\t\t\tif (this.kind === 'task') {\n\t\t\t\t\t\t\t\tconst dt = row.rowDatas.tkDeadline;\n\t\t\t\t\t\t\t\tline.classList.toggle(\"late\", dt > 0 && dt < Date.now());\n\t\t\t\t\t\t\t\tline.classList.toggle(\"completed\", row.rowDatas.actStage === \"completed\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tskinOver: \"wsp-search-result/grid\"\n\t\t\t\t},\n\t\t\t\tbarActions: ACTION.injectSepByGroup(ctx.reg.mergeLists(this.kind === 'item' ? \"actions:wspApp:searches:item\" : \"actions:wspApp:searches:task\", \"actions:wspApp:searches\"), '* burger', ctx),\n\t\t\t\tmsgs: this.kind === 'item' ? undefined : {\n\t\t\t\t\tresultsMore: max => `Plus de ${max} tâches trouvées`,\n\t\t\t\t\tresultsEmpty: 'Aucune tâche trouvée',\n\t\t\t\t\tresultsOne: '1 tâche trouvée',\n\t\t\t\t\tresultsCount: count => `${count} tâches trouvées`,\n\t\t\t\t},\n\t\t\t}\n\t\t} as OSearchesInit}/>;\n\t}\n\n\tsrcActions: typeof import(\"back/wsp/actions/srcActions\");\n\ttaskActions: typeof import(\"back/wsp/actions/taskActions\");\n\tsearches: typeof import(\"back/wsp/views/searches\");\n\tsearchesActions: typeof import(\"back/wsp/actions/searchesActions\");\n\n\n\tasync loadLibs(ctx: IRegPointer<IWspUiEnv>): Promise<void> {\n\t\tthis.searches = await import(\"back/wsp/views/searches.js\");\n\t\tthis.srcActions = await import(\"back/wsp/actions/srcActions.js\");\n\t\tthis.searchesActions = await import(\"back/wsp/actions/searchesActions.js\");\n\t\tif (this.kind === 'task') this.taskActions = await import(\"back/wsp/actions/taskActions.js\");\n\t\treturn super.loadLibs(ctx);\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-search-result/grid\", 1, /* language=CSS */ `\n\n\t.late {\n\t\tcolor: var(--error-color);\n\t}\n\n\t.completed {\n\t\ttext-decoration-line: line-through;\n\t}\n`);\n\nclass AreaWithActions<C> extends AreaAsync<IRegPointer<IWspUiEnv>, IView> {\n\n\t/** Listes d'actions associées aux items (Action<IBkCtx>). */\n\tactionsLists: string[];\n\n\t/** Action excutée au double-click ou sur les frappes entrée ou espace. */\n\tdefaultAction: Action<C>;\n\n\t/** Racourcis claviers à capter sur la sel courante (Action<IBkCtx>). */\n\taccelKeysLists: string[];\n\n\n\tsetActionsLists(actionsLists: string[]): this {\n\t\tthis.actionsLists = actionsLists;\n\t\treturn this;\n\t}\n\n\tsetAccelKeysLists(accelKeysLists: string[]): this {\n\t\tthis.accelKeysLists = accelKeysLists;\n\t\treturn this;\n\t}\n\n\tsetDefaultAction(defaultAction: Action<C>): this {\n\t\tthis.defaultAction = defaultAction;\n\t\treturn this;\n\t}\n}\n\n\n/**\n * Area construisant la view \"Bookmarks\" pour la wspApp.\n */\nexport class BookmarksArea extends AreaWithActions<IBkCtx> {\n\n\tconstructor() {\n\t\tsuper('bookmarks');\n\t\tthis._label = \"Favoris\";\n\t\tthis._icon = \"/@skin@/wsp/views/bookmarks/bookmarks.svg\";\n\t\tthis._lastDatasKey = 'bk';\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/bookmarks.js\"));\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst reg = ctx.reg;\n\t\tconst infoBroker = ctx.reg.env.infoBroker;\n\t\treturn <wsp-bookmarks î={this.initLastDatas(ctx, lastDatas, {\n\t\t\treg: reg,\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\titemHandlingReact: infoBroker,\n\t\t\tsecondaryCols: reg.getSvc(\"wsp-bookmarks/secondaryCols\"),\n\t\t\tactions: this.actionsLists ? ctx.reg.mergeLists(...this.actionsLists) : null,\n\t\t\tdefaultAction: this.defaultAction !== undefined ? this.defaultAction : (infoBroker ? new this.srcActions.FocusItemOrSpace() : null),\n\t\t\taccelKeyMgr: this.accelKeysLists ? new AccelKeyMgr<IShortDescCtx>().initFromMapActions(ctx.reg.mergeListsAsMap(...this.accelKeysLists)) : null\n\t\t} as OBookmarksInit)}/>;\n\t}\n\n\tsrcActions: typeof import(\"back/wsp/actions/srcActions\");\n\n\tasync loadLibs(ctx: IRegPointer<IWspUiEnv>): Promise<void> {\n\t\tthis.srcActions = await import(\"back/wsp/actions/srcActions.js\");\n\t\treturn super.loadLibs(ctx);\n\t}\n}\n\n\n/**\n * Area construisant la view \"Toc\" pour la wspApp.\n */\nexport class TocArea extends AreaAsync<IRegPointer<IWspUiEnv>, IView> {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || 'toc');\n\t\tthis._label = \"Plan\";\n\t\tthis._icon = \"/@skin@/wsp/views/toc/tocTabf.svg\";\n\t\tthis._lastDatasKey = 'toc';\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/toc.js\"));\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst infoBroker = ctx.reg.env.infoBroker;\n\t\treturn <wsp-toc î={this.initLastDatas(ctx, lastDatas, {\n\t\t\treg: ctx.reg,\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\tinfoBroker: infoBroker\n\t\t} as OTocInit)}/>;\n\t}\n}\n\n/**\n * Area construisant la view \"Réseau des items\" pour la wspApp.\n */\nexport class NetItemsArea extends AreaWithActions<IShortDescCtx> {\n\n\t/** Code de la liste des confs de type JNetItemConf */\n\tconfsList?: string[];\n\n\tsetConfsList(list: string[] | null): this {\n\t\tthis.confsList = list;\n\t\treturn this;\n\t}\n\n\tconstructor(id?: string) {\n\t\tsuper(id || 'netItems');\n\t\tthis._label = \"Réseau\";\n\t\tthis._description = \"Réseau d'items\";\n\t\tthis._icon = \"/@skin@/wsp/views/netItems/netItemsTabf.svg\";\n\t\tthis._lastDatasKey = 'netItems';\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/netItems.js\"));\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst infoBroker = ctx.reg.env.infoBroker;\n\n\t\treturn <wsp-net-items î={this.initLastDatas(ctx, lastDatas, {\n\t\t\treg: ctx.reg,\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\tconfs: this.confsList ? ctx.reg.mergeLists<JNetItemConf>(...this.confsList) : null,\n\t\t\tinfoBroker: infoBroker,\n\t\t\titemHandlingReact: infoBroker,\n\t\t\tsecondaryCols: ctx.reg.getList(\"columns:netItems:secondaryCols\"),\n\t\t\tactions: this.actionsLists ? ctx.reg.mergeLists(...this.actionsLists) : null,\n\t\t\tdefaultAction: this.defaultAction !== undefined ? this.defaultAction : (infoBroker ? new this.srcActions.FocusItemOrSpace() : null),\n\t\t\taccelKeyMgr: this.accelKeysLists ? new AccelKeyMgr<IShortDescCtx>().initFromMapActions(ctx.reg.mergeListsAsMap(...this.accelKeysLists)) : null\n\t\t} as ONetItemsInit)}/>;\n\t}\n\n\tsrcActions: typeof import(\"back/wsp/actions/srcActions\");\n\n\tasync loadLibs(ctx: IRegPointer<IWspUiEnv>): Promise<void> {\n\t\tthis.srcActions = await import(\"back/wsp/actions/srcActions.js\");\n\t\treturn super.loadLibs(ctx);\n\t}\n}\n\n\n/**\n * Area construisant la view \"Tasks\" pour la wspApp.\n */\nexport class TasksArea extends AreaAsync<IRegPointer<IWspUiEnv>, IView> {\n\n\tconstructor() {\n\t\tsuper('myTasks');\n\t\tthis._label = \"Mes tâches\";\n\t\tthis._icon = \"/@skin@/wsp/views/tasks/tasksTabf.svg\";\n\t\tthis._lastDatasKey = 'myTasks';\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/tasks.js\"));\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst infoBroker = ctx.reg.env.infoBroker;\n\t\treturn <wsp-tasks î={this.initLastDatas(ctx, lastDatas, {\n\t\t\treg: ctx.reg,\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\tinfoBroker: infoBroker\n\t\t} as OTocInit)}/>;\n\t}\n}\n\n\n/**\n * Area construisant une vue offrant un contexte d'atelier défini chargé\n */\nexport class ForeignWspArea extends AreaAsync<IRegPointer<IChainEnv & IInfoBrokerPointer & IUiEnv>, IView> {\n\tconstructor(id: string, public wspCode: string, public template: (wsp: Wsp, ctx: IRegPointer<IChainEnv & IInfoBrokerPointer & IUiEnv>) => Promise<TemplateResult>) {\n\t\tsuper(id);\n\t\tthis._lastDatasKey = id;\n\t}\n\n\tneedAsync(ctx: IRegPointer<IChainEnv & IInfoBrokerPointer & IUiEnv>): boolean {\n\t\treturn true;\n\t}\n\n\tasync loadBody(ctx: IRegPointer<IChainEnv & IInfoBrokerPointer & IUiEnv>, lastDatas?: JLastDatas): Promise<IView> {\n\t\tconst infoBroker = ctx.reg.env.infoBroker;\n\t\tconst wsp = ctx.reg.env.universe.wspServer.wspsLive.findWsp(this.wspCode, true).listenChanges();\n\t\tconst msg = <MsgLabel î={{label: 'Chargement en cours...'}}/>;\n\t\tconst root = <div style=\"display:contents\">\n\t\t\t{msg}\n\t\t</div>;\n\t\ttry {\n\t\t\twsp.waitForAvailable().then(async (wsp) => {\n\t\t\t\trender(await this.template(wsp, ctx), root, {});\n\t\t\t}).catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn msg.setCustomMsg(\"L'atelier demandé n'existe pas ou est inaccessible.\", \"error\");\n\t\t\t});\n\t\t\treturn root;\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t\treturn msg.setCustomMsg(\"L'atelier demandé n'existe pas ou est inaccessible.\", \"error\");\n\t\t}\n\t}\n}\n\n\n/**\n * Area construisant une view \"Navigator\" pour la wspApp.\n */\nexport class NavigatorArea extends AreaAsync<IRegPointer<IWspUiEnv>, IView> {\n\n\t/** Listes d'actions associées aux items (Action<IShortDescCtx>). */\n\tactionsLists: string[];\n\n\t/** Action excutée au double-click ou sur les frappes entrée ou espace. */\n\tdefaultAction: Action<IShortDescCtx>;\n\n\t/** Racourcis claviers à capter sur la sel courante (Action<IShortDescCtx>). */\n\taccelKeysLists: string[];\n\n\t/**\n\t * Construction du gestionnaire des facettes de ce navigateur et de la construction de la requête au serveur.\n\t */\n\tbuildFacets?: (nav: Navigator, fields: ESrcField[]) => Promise<INavigatorFacets>;\n\n\t/** Contenu de la zone principale lorsque la liste est vide. */\n\temptyTree?: (navigator: Navigator) => Node\n\n\t/**\n\t * Facette standard définie dans \"/@back@/wsp/views/navigator\".\n\t * La valeur correspond au noù du symbole exporté.\n\t */\n\tbuildFacetsStandard?: keyof typeof import(\"back/wsp/views/navigator\");\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t\tthis.requireLib(IO.asEndPoint(\"/@back@/wsp/views/navigator.js\"));\n\t}\n\n\tsetActionsLists(actionsLists: string[]): this {\n\t\tthis.actionsLists = actionsLists;\n\t\treturn this;\n\t}\n\n\tsetAccelKeysLists(accelKeysLists: string[]): this {\n\t\tthis.accelKeysLists = accelKeysLists;\n\t\treturn this;\n\t}\n\n\tsetDefaultAction(defaultAction: Action<IShortDescCtx>): this {\n\t\tthis.defaultAction = defaultAction;\n\t\treturn this;\n\t}\n\n\tsetEmptyTree(emptyTree:(navigator: Navigator) => Node): this {\n\t\tthis.emptyTree = emptyTree;\n\t\treturn this;\n\t}\n\n\tsetBuildFacets(buildFacets: (nav: Navigator, fields: ESrcField[]) => Promise<INavigatorFacets>): this {\n\t\tthis.buildFacets = buildFacets;\n\t\treturn this;\n\t}\n\n\tsetBuildFacetsStandard(facets: keyof typeof import(\"back/wsp/views/navigator\")): this {\n\t\tthis.buildFacetsStandard = facets;\n\t\treturn this;\n\t}\n\n\tbuildBody(ctx: IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst reg = ctx.reg;\n\t\tconst infoBroker = reg.env.infoBroker;\n\t\tconst mod: typeof import(\"back/wsp/views/navigator\") = this._modules[0];\n\t\tconst init: ONavigatorInit = {\n\t\t\tarea: this,\n\t\t\tareaContext: ctx,\n\t\t\treg: reg,\n\t\t\temptyTree: this.emptyTree,\n\t\t\tbuildFacets: this.buildFacets || mod[this.buildFacetsStandard] as any,\n\t\t\tsecondaryCols: reg.getList(\"columns:wspExplorer:secondaryCols\"), //Même key que l'explorateur ?\n\t\t\titemHandlingReact: infoBroker,\n\t\t\tactions: this.actionsLists ? reg.mergeLists(...this.actionsLists) : null,\n\t\t\tdefaultAction: this.defaultAction !== undefined ? this.defaultAction : (infoBroker ? new this.srcActions.FocusItem() : null),\n\t\t\taccelKeyMgr: this.accelKeysLists ? new AccelKeyMgr<IShortDescCtx>().initFromMapActions(reg.mergeListsAsMap(...this.accelKeysLists)) : null,\n\t\t\tlastDatas: lastDatas\n\t\t};\n\n\t\treturn <wsp-navigator î={init}/>;\n\t}\n\n\tsrcActions: typeof import(\"back/wsp/actions/srcActions\");\n\n\tasync loadLibs(ctx: IRegPointer<IWspUiEnv>): Promise<void> {\n\t\tthis.srcActions = await import(\"back/wsp/actions/srcActions.js\");\n\t\treturn super.loadLibs(ctx);\n\t}\n\n}\n\n\n/**\n * Area construisant une vue d'un dépot\n */\nexport class ForeignDepotArea extends Area<IRegPointer<IChainEnv & IInfoBrokerPointer & IUiEnv>, IView> {\n\tconstructor(id: string, public frontJsModule: IEndPoint, public authReg?: IReg<ICoreUniverseEnv>, public depotReg?: IReg<IDepotEnv>) {\n\t\tsuper(id);\n\t\tthis._label = \"Dépot\";\n\t\tthis._icon = \"/@skin@/wsp/views/depot/depot.svg\";\n\t}\n\n\tbuildBody(ctx: IRegPointer<IChainEnv & IInfoBrokerPointer & IUiEnv>, lastDatas?: JLastDatas): IView {\n\t\tconst root = <div style=\"flex:1; display:flex; min-width:0; min-height:0\">\n\t\t\t<c-msg î={{standardMsg: \"loading\"} as OMsgLabelInit}/>\n\t\t</div> as HTMLElement;\n\t\tconst embeddedDepot = this.frontJsModule.importJs() as Promise<embeddedDepotModule>;\n\t\tembeddedDepot.then(m => {\n\t\t\treturn m.initEmbeddedApp({\n\t\t\t\tauthReg: this.authReg,\n\t\t\t\tdepotReg: this.depotReg,\n\t\t\t\tparentNode: root\n\t\t\t});\n\t\t}).catch((e) => {\n\t\t\tconst msg = root.firstElementChild as MsgLabel;\n\t\t\tmsg.setStandardMsg(\"netError\");\n\t\t\tthrow e;\n\t\t});\n\t\treturn root;\n\t}\n}\n\n"]}