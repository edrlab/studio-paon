{"version":3,"sources":["/@back@/wsp/dialogs/wspPropsAreas.tsx"],"names":["REG","DOM","JSX","Wsp","WSP","BoolCheckInputArea","ControlArea","ControlAsyncArea","InputArea","InputChoiceArea","InputTextArea","LabelArea","LabelAsyncArea","StringInputArea","WspTypeSelector","BaseElementAsync","MsgLabel","SkinSetSelector","ActionBtn","DOMSH","AutoMigrWspAction","ReloadWspAction","RemoveCacheWspAction","WSP_DRV","IO","InputOrderedSetPanel","WspArea","[object Object]","ctx","reg","env","wsp","super","isVisible","WspCodeInputArea","this","setLabel","setPattern","setRequired","setInputCustomValidity","async","checkValidity","value","code","infoWsp","universe","wspServer","config","adminWspUrl","fetchJson","qs","status","name","input","_buildControl","setAttr","WspCodeArea","createElement","WspStatusArea","WspStatus","Ã®","init","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","findReg","labelElt","appendChild","class","label","migrlBtn","actionContext","action","uiContext","_refreshAll","infoWspError","migrating","setCustomMsg","isMigrationNeeded","isInError","wspMetaUi","isDeleted","isAccessDenied","fullLoading","refresh","parent","waitForLoad","then","root","customElements","define","registerSkin","WspTitleInputArea","WspDescInputArea","textElt","WspAliasInputArea","isReadOnly","updatePropReadonly","WspDraftTitleInputArea","WspDrfRefWspTitleArea","str","masterWspCd","props","drfRefWsp","masterWsp","wspTitle","WspDrfRefWspArea","WspDrvMasterTitleArea","drvMasterWsp","WspDrvMasterArea","WspDrvDefaultSrcFindPathInputArea","_label","_description","isEnabled","dataSet","isDrv","currentDrvAxis","drvAxis","listDrvs","split","forEach","drvCode","inputElt","initialize","selectionLabel","availableLabel","emptySelectionMsg","title","getDescription","defaultValue","getDefaultValue","WspDrvAxisInputArea","indexOf","WspSelectScarInputArea","setInputType","type","accept","multiple","WspDeleteGenInputArea","setDefaultValue","WspDeleteFsInputArea","WspOptionsInputArea","noPublicWsp","noExtIt","noAirIt","setReadOnly","rootElt","isInDrfWspCtx","undefined","isInDrvWspCtx","wspDefProps","fAssignFormInput","Object","assign","fillJson","checked","extractJson","parentElement","classList","contains","setHidden","publicWsp","getWspFeatureStatus","id","getId","disabled","startsWith","toLocaleLowerCase","for","extIt","airIt","DoMigrateIfNecessaryArea","setDataset","true","WspTypeInstNewInputArea","fromWsp","wspTypeSelector","mode","fromWspCode","_id","required","isRequired","className","initializedAsync","WspTypeInstEditArea","_a","readonly","hasPerm","AdminWspToolbarArea","requireVisiblePerm","getReg","actions","getList","disableFullOverlay","hidden","SkinsetEditInputArea","setDescription","lastDatas","body","loadBody","checkWspSvc","skinsetSelector","propsJsonName","fromWspPropReadonly","isLoaded","addToList"],"mappings":"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","sourcesContent":["import {IReg, IRegPointer, IRegsPointer, REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IWspUiEnv, JInfoWsp, Wsp, WSP} from \"lib/wsp/wsp\";\nimport {BoolCheckInputArea, ControlArea, ControlAsyncArea, Dataset, DatasetEntry, IControlAreaContext, IControlLabelContext, InputArea, InputChoiceArea, InputTextArea, LabelArea, LabelAsyncArea, StringInputArea} from \"lib/commons/areas\";\nimport {WspTypeSelector} from \"back/wsp/widgets/wspType/wspTypeSelector\";\nimport {BaseElementAsync, MsgLabel, OLabelInit, OSkinableInit} from \"back/commons/basis\";\nimport {IChainEnv} from \"lib/wsp/chain\";\nimport {SkinSetSelector} from \"back/wsp/widgets/skinSet/skinSetSelector\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {IFormJsonisable} from \"lib/commons/forms\";\nimport {ActionBtn, OActionBtnInit} from \"back/commons/widgets/buttons\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {AutoMigrWspAction, ReloadWspAction, RemoveCacheWspAction} from \"back/wsp/actions/wspActions\";\nimport {WSP_DRV} from \"lib/wsp/drv\";\nimport {IO} from \"lib/commons/io/io\";\nimport {OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {Action} from \"lib/commons/actions\";\nimport {InputOrderedSetPanel} from \"back/commons/widgets/inputs\";\n\n/**\n * Area affichant une propriÃ©tÃ© d'un WSP\n */\nexport abstract class WspArea<C extends IControlLabelContext = IControlLabelContext> extends LabelArea<IControlLabelContext & IRegPointer<IWspUiEnv>> {\n\n\tisVisible(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>): boolean {\n\t\tif (!ctx.reg.env.wsp) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n}\n\n/**\n * Code de l'atelier\n */\nclass WspCodeInputArea extends StringInputArea<IRegPointer<IWspUiEnv>> {\n\n\tconstructor() {\n\t\tsuper(\"code\", \"text\");\n\t\tthis.setLabel(\"Code\");\n\t\tthis.setPattern(\"[a-zA-Z0-9_]+\");\n\t\tthis.setRequired(true);\n\t\tthis.setInputCustomValidity(async function (this: HTMLInputElement, ctx: IRegPointer<IWspUiEnv>): Promise<string> {\n\t\t\tif (!this.checkValidity()) return \"Seuls les caractÃ¨res alpha-numÃ©riques et _ sont autorisÃ©s\";\n\t\t\tif (this.value) {\n\t\t\t\tconst code = this.value;\n\t\t\t\tlet infoWsp = await ctx.reg.env.universe.wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", \"InfoWsp\", \"param\", code));\n\t\t\t\tif (infoWsp && infoWsp.status != 'noWsp') {\n\t\t\t\t\treturn `L'atelier avec le code '${code}' existe dÃ©jÃ .`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t}, 500, true)\n\t}\n\n\t_buildControl(ctx: IRegPointer<IWspUiEnv>, name: string): HTMLInputElement {\n\t\tlet input = super._buildControl(ctx, name);\n\t\tDOM.setAttr(input, \"spellcheck\", \"false\");\n\t\tDOM.setAttr(input, \"autocomplete\", \"current-password\");// \"off\" ne fonctionne pas\n\t\treturn input;\n\t}\n\n}\n\nclass WspCodeArea extends WspArea {\n\n\tconstructor() {\n\t\tsuper(\"code\");\n\t\tthis.setLabel(\"Code\");\n\t}\n\n\t_buildControl(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>, name: string): HTMLElement {\n\t\treturn <div>{ctx.reg.env.wsp.code}</div>;\n\t}\n\n}\n\n/**\n * Statut de l'atelier\n * \tNote : l'atelier est dÃ©jÃ  dans un contexte loaded\n */\nclass WspStatusArea extends WspArea {\n\n\tconstructor() {\n\t\tsuper(\"code\");\n\t\tthis.setLabel(\"Statut\");\n\t}\n\n\t_buildControl(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>, name: string): HTMLElement {\n\t\treturn <WspStatus Ã®={{reg: ctx.reg}}/>;\n\t}\n\n}\n\nexport class WspStatus extends BaseElementAsync implements IFormJsonisable {\n\tprotected reg: IReg<IWspUiEnv>;\n\tprotected labelElt: MsgLabel;\n\tprotected migrlBtn: ActionBtn<IRegPointer<IWspUiEnv>>;\n\n\tprotected async _initialize(init: OSkinableInit & IRegPointer<IWspUiEnv>): Promise<any> {\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.reg = REG.findReg(this, init);\n\t\tthis.labelElt = sr.appendChild(<MsgLabel class=\"status\" Ã®={{label: \"Chargement de l'atelier en cours...\"} as OLabelInit}/>) as MsgLabel;\n\t\tsr.appendChild(<div class=\"spacer\"/>);\n\t\tthis.migrlBtn = sr.appendChild(<ActionBtn\n\t\t\tÃ®={{reg: init.reg, actionContext: init, label: \"Migrer\", action: new AutoMigrWspAction(), uiContext: \"custom\"} as OActionBtnInit<IRegPointer<IWspUiEnv>>}/>) as ActionBtn<IRegPointer<IWspUiEnv>>;\n\t\tawait this._refreshAll();\n\t}\n\n\tprotected async _refreshAll(): Promise<void> {\n\t\tlet infoWsp = this.reg.env.wsp.infoWsp || this.reg.env.wsp.infoWspError;\n\t\tif (this.reg.env.wsp.migrating) {\n\t\t\tthis.labelElt.setCustomMsg(\"Migration de l'atelier en cours...\", \"info\");\n\t\t}else if (infoWsp?.isMigrationNeeded) {\n\t\t\tthis.labelElt.setCustomMsg(\"Migration des contenus nÃ©cessaire\", \"warning\");\n\t\t} else if (this.reg.env.wsp.isInError === true) {\n\t\t\tif (this.reg.env.wsp.infoWsp && !this.reg.env.wsp.wspMetaUi)\n\t\t\t\tthis.labelElt.setCustomMsg(\"Ãchec au chargement du modÃ¨le documentaire\", \"error\");\n\t\t\telse\n\t\t\t\tthis.labelElt.setCustomMsg(this.reg.env.wsp.infoWspError && this.reg.env.wsp.infoWspError.status === \"noWsp\" ? \"Atelier non trouvÃ©\" : \"Atelier en erreur\", \"error\");\n\t\t} else if (this.reg.env.wsp.isDeleted === true) {\n\t\t\tthis.labelElt.setCustomMsg(\"Atelier supprimÃ©\", \"error\");\n\t\t} else if (this.reg.env.wsp.isAccessDenied === true) {\n\t\t\tthis.labelElt.setCustomMsg(\"AccÃ¨s non autorisÃ©\", \"error\");\n\t\t} else if (this.reg.env.wsp.wspMetaUi === null) {\n\t\t\tthis.labelElt.setCustomMsg(\"AccÃ¨s impossible aux propriÃ©tÃ©s de l'atelier\", \"error\");\n\t\t} else if (this.reg.env.wsp.fullLoading) {\n\t\t\tthis.labelElt.setCustomMsg(\"Chargement de l'atelier en cours...\", \"info\");\n\t\t} else {\n\t\t\tthis.labelElt.setCustomMsg(\"OpÃ©rationnel\");\n\t\t}\n\t\tthis.migrlBtn.refresh();\n\t}\n\n\textractJson(parent: Dict<any>): boolean {\n\t\tthis.reg.env.wsp.waitForLoad().then(() => {\n\t\t\tthis._refreshAll();\n\t\t});\n\t\treturn false;\n\t}\n\n\tfillJson(parent: any, root: any): void {\n\t\t//NA\n\t}\n}\n\ncustomElements.define('wsptype-status', WspStatus);\nREG.reg.registerSkin('wsptype-status', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex: 1;\n\t}\n\n\tc-msg {\n\t\tflex: unset;\n\t}\n\n\t.spacer {\n\t\tflex: 1;\n\t}\n`);\n\n\n/**\n * Titre de l'atelier\n */\nclass WspTitleInputArea extends StringInputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"title\", \"text\");\n\t\tthis.setLabel(\"Titre\");\n\t}\n}\n\n/**\n * Description de l'atelier\n */\nclass WspDescInputArea extends InputTextArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"desc\");\n\t\tthis.setLabel(\"Description\");\n\t}\n\n\t_buildControl(ctx: IRegPointer<IWspUiEnv>, name: string): HTMLTextAreaElement {\n\t\tlet textElt = super._buildControl(ctx, name);\n\t\tDOM.setAttr(textElt, \"rows\", \"1\");\n\t\treturn textElt;\n\t}\n}\n\n\n/**\n * Alias de l'atelier\n */\nexport class WspAliasInputArea extends StringInputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"alias\", \"text\");\n\t\tthis.setLabel(\"Alias de l'atelier\");\n\t\tthis.setPattern(\"^(?!(^[0-9A-Za-z]{22}$))[A-Za-z0-9_\\-]*$\");//cf eu.scenari.wspodb.wsp.OdbWspDefinition.sWspAliasCodePattern\n\t\tthis.isReadOnly = updatePropReadonly\n\t}\n}\n\n/**\n * [DRF] Titre de l'atelier\n */\nclass WspDraftTitleInputArea extends StringInputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"draftTitle\", \"text\");\n\t\tthis.setLabel(\"Titre du calque de travail\");\n\t}\n}\n\n/**\n * [DRF] Master\n */\nclass WspDrfRefWspTitleArea extends LabelAsyncArea<IRegPointer<IWspUiEnv> & IControlLabelContext> {\n\n\tconstructor() {\n\t\tsuper(\"wspMaster\");\n\t\tthis.setLabel(\"\");\n\t}\n\n\tasync _loadControl(ctx: IRegPointer<IWspUiEnv> & IControlLabelContext, name: string): Promise<HTMLElement> {\n\t\tlet infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tlet str;\n\t\tif (infoWsp) {\n\t\t\tlet masterWspCd = infoWsp.props.drfRefWsp;\n\t\t\tlet masterWsp = new Wsp(ctx.reg.env.wsp.wspServer, masterWspCd);\n\t\t\tawait masterWsp.waitForLoad();\n\t\t\tconst wspTitle = masterWsp.wspTitle;\n\t\t\tstr = `Calque de travail de '${wspTitle}'`;\n\t\t} else\n\t\t\tstr = 'Calque de travail';\n\t\treturn <div><span class=\"important\">{str}</span></div>;\n\t}\n\n}\n\nclass WspDrfRefWspArea extends LabelAsyncArea<IRegPointer<IWspUiEnv> & IControlLabelContext> {\n\n\tconstructor() {\n\t\tsuper(\"wspMaster\");\n\t\tthis.setLabel(\"Atelier maitre\");\n\t}\n\n\tasync _loadControl(ctx: IRegPointer<IWspUiEnv> & IControlLabelContext, name: string): Promise<HTMLElement> {\n\t\tlet infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tif (infoWsp) {\n\t\t\tlet masterWspCd = infoWsp.props.drfRefWsp;\n\t\t\treturn <div>{masterWspCd}</div>;\n\t\t}\n\t}\n\n}\n\n/**\n * [DRV] master\n */\nclass WspDrvMasterTitleArea extends LabelAsyncArea<IRegPointer<IWspUiEnv> & IControlLabelContext> {\n\n\tconstructor() {\n\t\tsuper(\"wspMaster\");\n\t\tthis.setLabel(\"\");\n\t}\n\n\tasync _loadControl(ctx: IRegPointer<IWspUiEnv> & IControlLabelContext, name: string): Promise<HTMLElement> {\n\t\tlet infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tlet str;\n\t\tif (infoWsp) {\n\t\t\tlet masterWspCd = ctx.reg.env.wsp.infoWsp.props.drvMasterWsp;\n\t\t\tlet masterWsp = new Wsp(ctx.reg.env.wsp.wspServer, masterWspCd);\n\t\t\tawait masterWsp.waitForLoad();\n\t\t\tconst wspTitle = masterWsp.wspTitle;\n\t\t\tstr = `DÃ©rivation de '${wspTitle}'`;\n\t\t} else\n\t\t\tstr = 'DÃ©rivation';\n\t\treturn <div><span class=\"important\">{str}</span></div>;\n\t}\n\n}\n\nclass WspDrvMasterArea extends LabelAsyncArea<IRegPointer<IWspUiEnv> & IControlLabelContext> {\n\n\tconstructor() {\n\t\tsuper(\"wspMaster\");\n\t\tthis.setLabel(\"Atelier source de dÃ©rivation\");\n\t}\n\n\tasync _loadControl(ctx: IRegPointer<IWspUiEnv> & IControlLabelContext, name: string): Promise<HTMLElement> {\n\t\tlet infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tif (infoWsp) {\n\t\t\tlet masterWspCd = infoWsp.props.drvMasterWsp;\n\t\t\treturn <div>{masterWspCd}</div>;\n\t\t}\n\t}\n\n}\n\n/**\n * [DRV] Sources de dÃ©rivation\n */\nclass WspDrvDefaultSrcFindPathInputArea<C extends IRegPointer<IWspUiEnv> & IControlAreaContext> extends ControlAsyncArea<C> {\n\tconstructor() {\n\t\tsuper(\"drvDefaultSrcFindPath\");\n\t\tthis._label = \"Sources de dÃ©rivation\";\n\t\tthis._description = \"Sources intermÃ©diaires de dÃ©rivation (optionnel)\";\n\t}\n\n\tisEnabled(ctx: C): boolean {\n\t\tlet infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tif (!infoWsp) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync _loadControl(ctx: C, name: string): Promise<InputOrderedSetPanel> {\n\t\t// Liste des valeurs\n\t\tlet infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tlet dataSet: Dataset<DatasetEntry<IWspUiEnv & IControlAreaContext>> = {};\n\t\tif (infoWsp) {\n\t\t\tif (WSP_DRV.isDrv(infoWsp.props)) {\n\t\t\t\tlet currentDrvAxis = infoWsp.props.drvAxis;\n\t\t\t\tlet masterWspCd = infoWsp.props.drvMasterWsp;\n\t\t\t\tlet masterWsp = new Wsp(ctx.reg.env.wsp.wspServer, masterWspCd);\n\t\t\t\tawait masterWsp.waitForLoad();\n\t\t\t\tif (masterWsp.infoWsp)\n\t\t\t\t\tmasterWsp.infoWsp.props.listDrvs.split(\" \").forEach((drvAxis: string) => {\n\t\t\t\t\t\t// FIXME : rÃ©cupÃ©rer le titre des ateliers\n\t\t\t\t\t\tif (drvAxis !== currentDrvAxis) dataSet[drvAxis] = {label: drvAxis};\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Cas 2 : l'atelier courant est un atelier master\n\t\t\t\t// Refresh utile de l'infoWsp car ces propriÃ©tÃ©s ne sont pas dynamiquement rafraichies\n\t\t\t\tlet infoWsp = await ctx.reg.env.wsp.wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", \"InfoWsp\", \"param\", ctx.reg.env.wsp.code, \"wspPropsOpts\", \"(drvWspUsedBy 'true' listDrvs 'true' listDrfs 'true')\"));\n\t\t\t\tif (infoWsp.props.listDrvs)\n\t\t\t\t\tinfoWsp.props.listDrvs.split(\" \").forEach((drvCode: string) => {\n\t\t\t\t\t\t// FIXME : rÃ©cupÃ©rer le titre des ateliers\n\t\t\t\t\t\tdataSet[drvCode] = {label: drvCode};\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Input\n\t\tconst inputElt = new InputOrderedSetPanel().initialize({dataSet, selectionLabel: \"Sources sÃ©lectionnÃ©es\", availableLabel: \"Sources disponibles\", emptySelectionMsg: \"Aucune\", name});\n\t\tinputElt.title = this.getDescription(ctx);\n\t\tconst defaultValue = this.getDefaultValue(ctx);\n\t\tif (defaultValue != null) inputElt.value = defaultValue;\n\t\treturn inputElt;\n\t}\n\n}\n\n/**\n * [DRV] axis\n * Contexte : atelier master\n */\nclass WspDrvAxisInputArea extends StringInputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"drvAxis\", \"text\");\n\t\tthis.setLabel(\"Code de dÃ©rivation\");\n\t\tthis.setPattern(\"[a-zA-Z0-9\\-_]+\");\n\t\tthis.setInputCustomValidity(async function (this: HTMLInputElement, ctx: IRegPointer<IWspUiEnv>): Promise<string> {\n\t\t\t// Refresh utile de l'infoWsp car ces propriÃ©tÃ©s de sont pas dynamiquement rafraichies\n\t\t\tlet infoWsp = await ctx.reg.env.wsp.wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", \"InfoWsp\", \"param\", ctx.reg.env.wsp.code, \"wspPropsOpts\", \"(drvWspUsedBy 'true' listDrvs 'true' listDrfs 'true')\"));\n\t\t\tif (!this.checkValidity()) return \"Seuls les caractÃ¨res alpha-numÃ©riques, tiret et underscore sont autorisÃ©s\";\n\t\t\tconst code = this.value;\n\t\t\tif (infoWsp && infoWsp.props.listDrvs && infoWsp.props.listDrvs.split(\" \").indexOf(this.value) > -1) return `Le code de dÃ©rivation '${code}' a dÃ©jÃ  Ã©tÃ© utilisÃ©.`;\n\t\t\treturn \"\";\n\t\t}, 500)\n\t}\n}\n\n\n/**\n * [crÃ©ation] SÃ©lection d'un scar/scwsp\n */\nclass WspSelectScarInputArea extends InputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"scwspFile\");\n\t\tthis.setLabel(\"Archive Ã  importer\");\n\t\tthis.setInputType(\"file\");\n\t}\n\n\t_buildControl(ctx: IRegPointer<IWspUiEnv>, name: string): HTMLInputElement {\n\t\tlet inputElt = super._buildControl(ctx, name);\n\t\tinputElt.type = \"file\";\n\t\tinputElt.accept = \".scar,.scwsp\";\n\t\tinputElt.multiple = false;\n\t\treturn inputElt;\n\t}\n}\n\n/**\n * [suppression] rÃ©pertoire de gÃ©nÃ©ration\n */\nclass WspDeleteGenInputArea extends BoolCheckInputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"deleteGen\");\n\t\tthis.setLabel(\"Supprimer le rÃ©pertoire de gÃ©nÃ©ration\");\n\t\tthis.setDefaultValue(true);\n\t}\n}\n\n/**\n * [suppression] rÃ©pertoire de data FS\n */\n\nclass WspDeleteFsInputArea extends BoolCheckInputArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"deleteContent\");\n\t\tthis.setLabel(\"Supprimer le rÃ©pertoire des donnÃ©es\");\n\t\tthis.setDefaultValue(false);\n\t}\n}\n\n/*\nclass WspDeleteFsInputAreaZZZ extends InputChoiceArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"deleteContent\", \"checkbox\");\n\t\tthis.setLabel(\"Supprimer le rÃ©pertoire des donnÃ©es\").setDataset({\"true\": {label: \"\"}});\n\t}\n\n\t//public _buildControl(ctx: IRegPointer<IWspUiEnv>, name: string): HTMLDivElement {\n\tprotected _buildControlLabelSSS(control: HTMLElement, ctx: C, label = this.getLabel(ctx)): HTMLDivElement {\n\t\tconst rootElt = super._buildControl(ctx, name);\n\t\tconst labelElt = rootElt.getElementsByTagName('label')[0];\n\t\tif(ctx.reg.env.universe.config.local){\n\t\t\tlet infoWsp = ctx.reg.env.wsp ? (ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError) : null;\n\t\t\tconst path = infoWsp ? infoWsp.content : \"\";\n\t\t\tif(path){\n\t\t\t\tlabelElt.appendChild(<FileSystemPath Ã®={{\n\t\t\t\t\topenBtn : true,\n\t\t\t\t\ttype: \"dir\",\n\t\t\t\t\tlabel :path,\n\t\t\t\t} as OFileSystemPathInit}/>) as FileSystemPath;\n\t\t\t}\n\t\t}\n\t\treturn rootElt;\n\t}\n}\n*/\n\n\n/**\n * [db] options\n */\nclass WspOptionsInputArea extends ControlArea<IControlLabelContext & IRegPointer<IChainEnv>> {\n\tconstructor(protected noPublicWsp=false, protected noExtIt=false, protected noAirIt=false) {\n\t\tsuper(\"wspOptions\");\n\t\tthis.setLabel(\"Options\");\n\t\tthis.setReadOnly(updatePropReadonly)\n\t}\n\n\t_buildControl(ctx: IControlLabelContext & IRegPointer<IChainEnv|IWspUiEnv>, name: string): HTMLDivElement {\n\t\tlet rootElt: HTMLDivElement = <div/> as HTMLDivElement;\n\n\t\tlet isInDrfWspCtx : true|undefined = undefined;\n\t\tlet isInDrvWspCtx : true|undefined = undefined;\n\t\tif((ctx as IRegPointer<IWspUiEnv>).reg.env.wsp){\n\t\t\tconst wspDefProps = (ctx as IRegPointer<IWspUiEnv>).reg.env.wsp.wspDefProps;\n\t\t\tif(wspDefProps?.drfRefWsp) isInDrfWspCtx = true;\n\t\t\tif(wspDefProps?.drvAxis) isInDrvWspCtx = true;\n\t\t}\n\n\t\tfunction fAssignFormInput(input: HTMLInputElement) {\n\t\t\tObject.assign(input, {\n\t\t\t\tfillJson: function (parent: Jsonisable, root: Jsonisable) {\n\t\t\t\t\tparent[input.name] = input.checked ? true : false;\n\t\t\t\t},\n\t\t\t\textractJson: function (parent: Dict<any>) {\n\t\t\t\t\tconst value = parent[input.name];\n\t\t\t\t\tinput.checked = value == true ? true : false;\n\t\t\t\t\tif (input.parentElement.classList.contains(\"deprecated\"))\n\t\t\t\t\t\tDOM.setHidden(input.parentElement, !input.checked);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} as IFormJsonisable);\n\t\t}\n\n\t\t// publicWsp\n\t\tconst publicWsp = ctx.reg.env.universe.getWspFeatureStatus(\"publicWsp\");\n\t\tif (!this.noPublicWsp && publicWsp && publicWsp != \"alwaysFalse\") {\n\t\t\tlet id = this.getId() + \"~publicWsp\";\n\t\t\tconst inputElt = <input name=\"publicWsp\" id={id} type=\"checkbox\" disabled={this.isReadOnly(ctx) || publicWsp.startsWith('always') ? true : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={publicWsp.toLocaleLowerCase().indexOf(\"True\") >= 0 ? true : null}/> as HTMLInputElement;\n\t\t\trootElt.appendChild(<div class={`optionslist ${publicWsp == 'deprecated' ? 'deprecated' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t title=\"Passe cet atelier dans un statut 'public'. Tout utilisateur connectÃ© dispose d'un accÃ¨s en lecture Ã  un atelier dit 'public'. Cette option doit Ãªtre activÃ©e pour permettre Ã  d'autres ateliers d'y rÃ©fÃ©rencer des items Ã©trangers (liens directs).\">\n\t\t\t\t{inputElt}\n\t\t\t\t<label for={id}>Atelier public</label>\n\t\t\t\t{publicWsp === 'deprecated' ? <span class=\"titleDeprecated\">fonction dÃ©prÃ©ciÃ©e</span> : ''}\n\t\t\t</div>);\n\t\t\tfAssignFormInput(inputElt);\n\t\t}\n\t\t// extIt\n\t\tconst extIt = ctx.reg.env.universe.getWspFeatureStatus(\"extIt\");\n\t\tif (!this.noExtIt && !isInDrfWspCtx && !isInDrvWspCtx && extIt != \"alwaysFalse\") {\n\t\t\tlet id = this.getId() + \"~extIt\";\n\t\t\tconst inputElt = <input name=\"extIt\" id={id} type=\"checkbox\" disabled={this.isReadOnly(ctx) || extIt.startsWith('always') ? true : null} checked={extIt.toLocaleLowerCase().indexOf(\"True\") >= 0 ? true : null}/> as HTMLInputElement;\n\t\t\trootElt.appendChild(<div class={`optionslist ${extIt == 'deprecated' ? 'deprecated' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t title=\"Active les fonctions de liens inter-ateliers directs (items Ã©trangers). Cela permet aux items de cet atelier de rÃ©fÃ©rencer des items d'un autre atelier 'public'.\">\n\t\t\t\t{inputElt}\n\t\t\t\t<label for={id}>Liens inter-ateliers directs</label>\n\t\t\t\t{extIt === 'deprecated' ? <span class=\"titleDeprecated\">fonction dÃ©prÃ©ciÃ©e</span> : ''}\n\t\t\t</div>);\n\t\t\tfAssignFormInput(inputElt);\n\t\t}\n\t\t// airIt\n\t\tconst airIt = ctx.reg.env.universe.getWspFeatureStatus(\"airIt\");\n\t\tif (!this.noAirIt && !isInDrfWspCtx && !isInDrvWspCtx && airIt && airIt != \"alwaysFalse\") {\n\t\t\tlet id = this.getId() + \"~airIt\";\n\t\t\tconst inputElt = <input name=\"airIt\" id={id} type=\"checkbox\" disabled={this.isReadOnly(ctx) || airIt.startsWith('always') ? true : null} checked={airIt.toLocaleLowerCase().indexOf(\"True\") >= 0 ? true : null}/> as HTMLInputElement;\n\t\t\trootElt.appendChild(<div class={`optionslist ${airIt == 'deprecated' ? 'deprecated' : ''}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t title=\"Active les fonctions liÃ©es aux items 'flottants' (non ancrÃ©s dans un espace).\">\n\t\t\t\t{inputElt}\n\t\t\t\t<label for={id}>Items 'flottants'</label>\n\t\t\t\t{airIt === 'deprecated' ? <span class=\"titleDeprecated\">fonction dÃ©prÃ©ciÃ©e</span> : ''}\n\t\t\t</div>);\n\t\t\tfAssignFormInput(inputElt);\n\t\t}\n\n\t\treturn rootElt;\n\t}\n\n\tisVisible(ctx: IControlLabelContext & IRegPointer<IChainEnv>): boolean {\n\t\tif ((!ctx.reg.env.universe.getWspFeatureStatus(\"airIt\") || ctx.reg.env.universe.getWspFeatureStatus(\"airIt\") == \"alwaysFalse\")\n\t\t\t&& (!ctx.reg.env.universe.getWspFeatureStatus(\"extIt\") || ctx.reg.env.universe.getWspFeatureStatus(\"extIt\") == \"alwaysFalse\")\n\t\t\t&& (!ctx.reg.env.universe.getWspFeatureStatus(\"airIt\") || ctx.reg.env.universe.getWspFeatureStatus(\"airIt\") == \"alwaysFalse\")\n\t\t)\n\t\t\treturn false;\n\t\treturn super.isVisible(ctx);\n\t}\n}\n\n/**\n * [wsps edit] DÃ©clencher la migration\n */\nclass DoMigrateIfNecessaryArea extends InputChoiceArea<IRegPointer<IWspUiEnv>> {\n\tconstructor() {\n\t\tsuper(\"doMigrateIfNecessary\", \"checkbox\");\n\t\tthis.setLabel(\"Migration\").setDataset({\"true\": {label: \"DÃ©clencher la migration si pertinent\"}});\n\t\tthis.setDefaultValue(\"true\");\n\t}\n}\n\ntype WspTypeInstNewContext = IControlLabelContext & IRegPointer<IChainEnv> & (IRegPointer<IWspUiEnv> | IRegsPointer<IWspUiEnv>);\n\n/**\n * WspTypeInst : crÃ©ation\n */\nclass WspTypeInstNewInputArea extends ControlAsyncArea<WspTypeInstNewContext> {\n\tconstructor() {\n\t\tsuper(\"wspType\");\n\t\tthis.setLabel(\"ModÃ¨le\");\n\t\tthis.setRequired(true);\n\t}\n\n\tasync _loadControl(ctx: WspTypeInstNewContext): Promise<HTMLElement> {\n\t\tlet fromWsp = ctx.reg && 'wsp' in ctx.reg.env && ctx.reg.env.wsp;\n\t\tlet wspTypeSelector = new WspTypeSelector().initialize({\n\t\t\tmode: \"new\",\n\t\t\treg: ctx.reg,\n\t\t\tfromWspCode: fromWsp ? fromWsp.code : null,\n\t\t\tname: this._id,\n\t\t\tdisabled: !this.isEnabled(ctx),\n\t\t\trequired: this.isRequired(ctx)\n\t\t});\n\t\twspTypeSelector.className = \"formElt\";\n\t\treturn wspTypeSelector.initializedAsync;\n\t}\n}\n\ntype WspTypeInstEditContext = IControlLabelContext & IRegPointer<IWspUiEnv>;\n\n/**\n * WspTypeInst : Ã©dition\n */\nclass WspTypeInstEditArea extends ControlAsyncArea<WspTypeInstEditContext> {\n\tconstructor() {\n\t\tsuper(\"wspType\");\n\t\tthis.setLabel(\"ModÃ¨le\");\n\t}\n\n\tasync _loadControl(ctx: WspTypeInstEditContext, name: string): Promise<HTMLElement> {\n\t\tlet wspTypeSelector = new WspTypeSelector().initialize({\n\t\t\tmode: \"edit\",\n\t\t\treg: ctx.reg,\n\t\t\tfromWspCode: ctx.reg.env.wsp?.code,\n\t\t\tname: this._id,\n\t\t\tdisabled: !this.isEnabled(ctx),\n\t\t\trequired: this.isRequired(ctx),\n\t\t\treadonly: this.isReadOnly(ctx)\n\t\t});\n\t\twspTypeSelector.className = \"formElt\";\n\t\treturn wspTypeSelector.initializedAsync;\n\t}\n\n\tisReadOnly(ctx: WspTypeInstEditContext): boolean {\n\t\treturn !ctx.reg.hasPerm(\"action.wspProps#update.wsptype\");\n\t}\n}\n\n\n/**\n * admin wsp\n */\nclass AdminWspToolbarArea extends LabelArea {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t\tthis.setLabel(\"Administration de l'atelier\");\n\t\tthis.requireVisiblePerm(\"action.wspProps#admin.wsp\");\n\t}\n\n\t_buildControl(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>, name: string): HTMLElement {\n\t\treturn <c-bar-actions Ã®={{\n\t\t\treg: REG.getReg(ctx),\n\t\t\tactions: REG.getReg(ctx).getList<Action<IRegPointer<IWspUiEnv>>>(`actions:wspProps:${this.getId()}`),\n\t\t\tactionContext: {\n\t\t\t\treg: REG.getReg(ctx),\n\t\t\t} as IRegPointer<IWspUiEnv>,\n\t\t\tdisableFullOverlay: true,\n\t\t\tuiContext: \"dialog\",\n\t\t} as OBarActionsInit<IRegPointer<IWspUiEnv>>} id=\"actions\" hidden=\"true\"/>;\n\t}\n\n}\n\n//c-action\n\n/**\n * Skinset\n * Contexte : Wsp\n */\nexport class SkinsetEditInputArea extends ControlAsyncArea<IControlLabelContext & IRegPointer<IWspUiEnv>> {\n\n\tconstructor() {\n\t\tsuper(\"skins\");\n\t\tthis.setLabel(\"Habillages graphiques\");\n\t\tthis.setDescription(\"Habillages graphiques des gÃ©nÃ©rateurs du modÃ¨le documentaire\");\n\t}\n\n\tasync loadBody(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>, lastDatas?: JLastDatas): Promise<HTMLElement> {\n\t\tlet body = await super.loadBody(ctx, lastDatas);\n\t\tif (!await WSP.checkWspSvc(ctx.reg.env.wsp, body, \"skinSet\"))\n\t\t\tDOM.setHidden(body, true)\n\t\treturn body;\n\t}\n\n\tasync _loadControl(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>, name: string): Promise<HTMLElement> {\n\t\tconst skinsetSelector = new SkinSetSelector().initialize({\n\t\t\treg: ctx.reg,\n\t\t\twsp: ctx.reg.env.wsp,\n\t\t\tpropsJsonName: this._id,\n\t\t\tdisabled: !this.isEnabled(ctx),\n\t\t});\n\t\treturn skinsetSelector.initializedAsync;\n\t}\n\n\tisEnabled(ctx: IControlLabelContext & IRegPointer<IWspUiEnv>): boolean {\n\t\treturn ctx.reg.hasPerm(\"action.wspProps#update.wsptype\");\n\t}\n}\n\nfunction updatePropReadonly(ctx: IRegPointer<IWspUiEnv>) {\n\treturn !ctx.reg.hasPerm(\"action.wspProps#update.props\");\n}\n\nfunction fromWspPropReadonly(ctx: IRegPointer<IWspUiEnv>) {\n\treturn !ctx.reg.env.wsp.isLoaded;\n}\n\n\n/**\n * DÃ©claration des Areas dans les diffÃ©rentes cibles standards\n * \t\t'wspProps:create:commons',\n * \t\t\t'wspProps:create:fromScwsp', 'wspProps:create:fromScratch',\n * \t\t\t'wspProps:create:fs', 'wspProps:create:db', 'wspProps:create:db:other', 'wspProps:create:db:drv', 'wspProps:create:db:drf'\n * \t\t'wspProps:edit:commons:infos', 'wspProps:edit:fs:infos', 'wspProps:edit:db:infos', 'wspProps:edit:db:other:infos', 'wspProps:edit:db:drv:infos', 'wspProps:edit:db:drf:infos'\n * \t\t'wspProps:edit:commons:advanced', 'wspProps:edit:fs:advanced', 'wspProps:edit:db:advanced', 'wspProps:edit:db:other:advanced', 'wspProps:edit:db:drv:advanced', 'wspProps:edit:db:drf:advanced'\n *\t\t'wspProps:editAll:commons', 'wspProps:editAll:fs', 'wspProps:editAll:db', 'wspProps:editAll:db:drv', 'wspProps:editAll:db:drf',\n * \t\t'wspProps:remove:commons', 'wspProps:remove:fs', 'wspProps:remove:db', 'wspProps:remove:db:other', 'wspProps:remove:db:drv', 'wspProps:remove:db:drf'\n *\t\t'wspProps:removeAll:commons', 'wspProps:removeAll:fs', 'wspProps:removeAll:db'\n **/\n\n// *\n// - Create\nREG.reg.addToList('wspProps:create:fromScratch', 'WspTypeInstInputArea', 1, new WspTypeInstNewInputArea(), 101);\nREG.reg.addToList('wspProps:create:fromScwsp', 'WspSelectScarInputArea', 1, new WspSelectScarInputArea().setRequired(true), 101);\n// - Edit\nREG.reg.addToList('wspProps:edit:commons:infos', 'WspStatusArea', 1, new WspStatusArea(), 31);\nREG.reg.addToList('wspProps:edit:commons:infos', 'WspTypeInstEditArea', 1, new WspTypeInstEditArea(), 101);\nREG.reg.addToList('wspProps:edit:commons:advanced', 'AdminWspToolbarArea', 1, new AdminWspToolbarArea(\"adminWsp\"), 51);\nREG.reg.addToList(\"actions:wspProps:adminWsp\", \"ReloadWspAction\", 1, new ReloadWspAction().setLabel(\"Recharger\"));\nREG.reg.addToList(\"actions:wspProps:adminWsp\", \"RemoveCacheWspAction\", 1, new RemoveCacheWspAction().setLabel(\"Vider le cache\"));\n// - EditAll\nREG.reg.addToList('wspProps:editAll:commons', 'DoMigrateIfNecessaryArea', 1, new DoMigrateIfNecessaryArea(), 101);\nREG.reg.addToList('wspProps:editAll:commons', 'WspTypeInstEditArea', 1, new WspTypeInstEditArea(), 102);\n\n// - Remove\nREG.reg.addToList('wspProps:remove:commons', 'WspDeleteGenInputArea', 1, new WspDeleteGenInputArea(), 21);\n// - RemoveAll\nREG.reg.addToList('wspProps:removeAll:commons', 'WspDeleteGenInputArea', 1, new WspDeleteGenInputArea().setLabel(\"Supprimer les rÃ©pertoires de gÃ©nÃ©ration\"), 21);\n\n// FS\n// - Create\nREG.reg.addToList('wspProps:create:fs', 'WspCodeInputArea', 1, new WspCodeInputArea(), 11);\n//REG.reg.addToList('wspProps:create:fs', 'WspTitleInputArea', 1, new WspTitleInputArea(), 21);\n// - Edit\nREG.reg.addToList('wspProps:edit:fs:infos', 'WspCodeArea', 1, new WspCodeArea(), 11);\n//REG.reg.addToList('wspProps:edit:fs:infos', 'WspTitleInputArea', 1, new WspTitleInputArea().setReadOnly(true), 21);\n// - Remove\nREG.reg.addToList('wspProps:remove:fs', 'WspDeleteFsInputArea', 1, new WspDeleteFsInputArea(), 11);\n// - RemoveAll\nREG.reg.addToList('wspProps:removeAll:fs', 'WspDeleteFsInputArea', 1, new WspDeleteFsInputArea().setLabel(\"Supprimer les rÃ©pertoires des donnÃ©es\"), 21);\n\n// DB * (only, drv, drf, ...)\n// - Create\nREG.reg.addToList('wspProps:create:db', 'WspDescInputArea', 1, new WspDescInputArea(), 41);\n\n// - Edit\nREG.reg.addToList('wspProps:edit:db:infos', 'WspDescInputArea', 1, new WspDescInputArea().setReadOnly(updatePropReadonly), 41);\nREG.reg.addToList('wspProps:edit:db:advanced', 'WspCodeArea', 1, new WspCodeArea(), 21);// Juste pour information\nREG.reg.addToList('wspProps:edit:db:infos', 'WspOptionsInputArea', 1, new WspOptionsInputArea().setReadOnly(updatePropReadonly), 51);\n\n// DB only\n// - Create\nREG.reg.addToList('wspProps:create:db:other', 'WspTitleInputArea', 1, new WspTitleInputArea().setRequired(true), 21);\nREG.reg.addToList('wspProps:create:db:other', 'WspOptionsInputArea', 1, new WspOptionsInputArea(), 51);\n\n// - Edit\nREG.reg.addToList('wspProps:edit:db:other:infos', 'WspTitleInputArea', 1, new WspTitleInputArea().setRequired(true).setReadOnly(updatePropReadonly), 21);\nREG.reg.addToList('wspProps:edit:db:other:skins', 'SkinsetEditInputArea', 1, new SkinsetEditInputArea(), 61);\n\n// DB - DRF\n// - Create\nREG.reg.addToList('wspProps:create:db:drf', 'WspDraftTitleInputArea', 1, new WspDraftTitleInputArea().setRequired(true).setReadOnly(fromWspPropReadonly), 21);\nREG.reg.addToList('wspProps:create:db:drf', 'WspOptionsInputArea', 1, new WspOptionsInputArea(false, true, true), 51);\n// - Edit\nREG.reg.addToList('wspProps:edit:db:drf:infos', 'WspDrfRefWspTitleArea', 1, new WspDrfRefWspTitleArea(), 1);\nREG.reg.addToList('wspProps:edit:db:drf:infos', 'WspDraftTitleInputArea', 1, new WspDraftTitleInputArea().setRequired(true).setReadOnly(updatePropReadonly), 11);\nREG.reg.addToList('wspProps:edit:db:drf:advanced', 'WspDrfRefWspArea', 1, new WspDrfRefWspArea(), 21);\n\n// DB - DRV\n// - Create\nREG.reg.addToList('wspProps:create:db:drv', 'WspDrvAxisInputArea', 1, new WspDrvAxisInputArea().setRequired(true).setReadOnly(fromWspPropReadonly), 31);\nREG.reg.addToList('wspProps:create:db:drv', 'WspDrvDefaultSrcFindPathInputArea', 1, new WspDrvDefaultSrcFindPathInputArea().setReadOnly(fromWspPropReadonly), 41);\nREG.reg.addToList('wspProps:create:db:drv', 'WspOptionsInputArea', 1, new WspOptionsInputArea(false, true, true), 51);\n// - Edit\nREG.reg.addToList('wspProps:edit:db:drv:infos', 'WspDrvMasterTitleArea', 1, new WspDrvMasterTitleArea(), 1);\nREG.reg.addToList('wspProps:edit:db:drv:infos', 'WspTitleInputArea', 1, new WspTitleInputArea().setReadOnly(true), 21);\nREG.reg.addToList('wspProps:edit:db:drv:infos', 'WspDrvDefaultSrcFindPathInputArea', 1, new WspDrvDefaultSrcFindPathInputArea().setReadOnly(updatePropReadonly), 41);\nREG.reg.addToList('wspProps:edit:db:drv:advanced', 'WspDrvMasterArea', 1, new WspDrvMasterArea(), 21);\n"]}