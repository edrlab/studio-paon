{"version":3,"sources":["/@back@/wsp/views/item/itemMsgSs.tsx"],"names":["Label","REG","DOM","EItStatus","WSP","SRC","ItemMsgSs","details","this","_details","val","refresh","[object Object]","init","reg","findReg","super","_initialize","installSkin","shadowRoot","errors","env","longDescChange","add","onUpdate","longDesc","_label","itSt","ok","itemInfo","fetchItemInfo","wsp","srcRef","cPbs","cPb","matchError","msg","pb","rule","code","test","warnings","setAttr","hidden","_refresh","registerSkin","customElements","define"],"mappings":"OAAQA,UAAgB;OAEVC,QAAI;OACVC,QAAS;OACTC,cAAU;OACeC,QAAI;OAC7BC,QAAI;OAeN,MAAOC,kBAAkBN,MAQ9BO,cAAuB,OAAOC,KAAKC,SAEnCF,YAAYG,KACX,GAAIF,KAAKC,UAAYC,IAAK,CACzBF,KAAKC,SAAWC;AAChBF,KAAKG,WAIPC,YAAYC,MACXL,KAAKM,IAAMN,KAAKO,QAAQF;AACxBG,MAAMC,YAAYJ;AAClBL,KAAKM,IAAII,YAAY,eAAgBV,KAAKW;AAC1CX,KAAKY,OAASP,KAAKO;AACnBZ,KAAKM,IAAIO,IAAIC,eAAeC,IAAI,IAAMf,KAAKgB;AAC3ChB,KAAKgB,WAGNZ,iBACC,MAAMa,SAAWjB,KAAKM,IAAIO,IAAII;AAC9BjB,KAAKkB,OAAS;AACdlB,KAAKC,SAAW;AAChB,GAAIgB,SAASE,OAASxB,UAAUyB,GAAI,CAGnC,MAAMC,eAAiBzB,IAAI0B,cAActB,KAAKM,IAAIO,IAAIU,IAAKvB,KAAMH,IAAI2B,OAAOP;AAE5EjB,KAAKkB,OAAS;AACdlB,KAAKC,SAAW;AAChB,GAAIoB,SAASI,KAAM,IAAK,MAAMC,OAAOL,SAASI,KAAM,CACnD,GAAIzB,KAAK2B,WAAWD,KAAM,CACzB,GAAI1B,KAAKkB,OAAQlB,KAAKkB,QAAU,KAAOQ,IAAIE;KACtC5B,KAAKkB,OAASQ,IAAIE;AACvB,GAAIF,IAAI3B,QAAS,CAChB,GAAIC,KAAKC,SAAUD,KAAKC,UAAY,KAAOyB,IAAI3B;KAC1CC,KAAKC,SAAWyB,IAAI3B,WAK7BC,KAAKG,UAGIC,WAAWyB,IACpB,IAAK7B,KAAKY,OAAQ,OAAO;AACzB,IAAK,MAAMkB,QAAQ9B,KAAKY,OAAQ,CAC/B,GAAIkB,KAAKC,KAAKC,KAAKH,GAAGE,MAAO,OAAO,KAErC,OAAO,MAGE3B,WACT,GAAIJ,KAAKkB,OAAQ,CAChB,MAAMD,SAAWjB,KAAKM,IAAIO,IAAII;AAC9B,GAAIA,SAASE,OAASxB,UAAUsC,SAAUvC,IAAIwC,QAAQlC,KAAM,QAAS;KAChEN,IAAIwC,QAAQlC,KAAM,QAAS;AAChC,GAAIA,KAAKD,QACRL,IAAIwC,QAAQlC,KAAM,QAASA,KAAKD;AACjCC,KAAKmC,OAAS;AACd3B,MAAM4B,eACA,CACNpC,KAAKmC,OAAS,OAKjB1C,IAAIa,IAAI+B,aAAa,kBAAmB,EAAsB;AAwB9DC,eAAeC,OAAO,kBAAmBzC","sourcesContent":["import {Label, PickInit} from \"back/commons/basis\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {EItStatus} from \"lib/wsp/item\";\nimport {JItemInfo, JItemSsError, WSP} from \"lib/wsp/wsp\";\nimport {SRC} from \"lib/wsp/src\";\n\n/**\n * View affichant les erreurs et alertes issues des feuilles de stockage des items.\n *\n * Config attributes:\n */\nexport interface ItemMsgSs extends Label {\n\tinitialize(init: OItemMsgSsInit): this;\n}\n\nexport interface OItemMsgSsInit extends PickInit<ItemMsgSs, 'errors'> {\n\treg?: IReg<IItemUiEnv>\n}\n\nexport class ItemMsgSs extends Label {\n\treg: IReg<IItemUiEnv>;\n\n\tprotected _details: string;\n\n\t/** Si définit, restrinet la liste des pbs affichés.*/\n\terrors: { code: RegExp }[];\n\n\tget details(): string {return this._details}\n\n\tset details(val: string) {\n\t\tif (this._details != val) {\n\t\t\tthis._details = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\t_initialize(init: OItemMsgSsInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tsuper._initialize(init);\n\t\tthis.reg.installSkin(\"scroll/small\", this.shadowRoot);\n\t\tthis.errors = init.errors;\n\t\tthis.reg.env.longDescChange.add(() => this.onUpdate());\n\t\tthis.onUpdate();\n\t}\n\n\tasync onUpdate() {\n\t\tconst longDesc = this.reg.env.longDesc;\n\t\tthis._label = \"\";\n\t\tthis._details = \"\";\n\t\tif (longDesc.itSt !== EItStatus.ok) {\n\t\t\t// this._label = \"...\"; //non crée un flash graphique.\n\t\t\t// this.refresh();\n\t\t\tconst itemInfo = await WSP.fetchItemInfo(this.reg.env.wsp, this, SRC.srcRef(longDesc));\n\t\t\t//A revoir affichage \"propre\" de N msgs avec type ?\n\t\t\tthis._label = \"\"; //reset ici pour raceCond, si 2 fetchItemInfo en //\n\t\t\tthis._details = \"\";\n\t\t\tif (itemInfo.cPbs) for (const cPb of itemInfo.cPbs) {\n\t\t\t\tif (this.matchError(cPb)) {\n\t\t\t\t\tif (this._label) this._label += \"\\n\" + cPb.msg;\n\t\t\t\t\telse this._label = cPb.msg;\n\t\t\t\t\tif (cPb.details) {\n\t\t\t\t\t\tif (this._details) this._details += \"\\n\" + cPb.details;\n\t\t\t\t\t\telse this._details = cPb.details;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.refresh();\n\t}\n\n\tprotected matchError(pb: JItemSsError) {\n\t\tif (!this.errors) return true;\n\t\tfor (const rule of this.errors) {\n\t\t\tif (rule.code.test(pb.code)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _refresh() {\n\t\tif (this._label) {\n\t\t\tconst longDesc = this.reg.env.longDesc;\n\t\t\tif (longDesc.itSt === EItStatus.warnings) DOM.setAttr(this, \"level\", \"warning\");\n\t\t\telse DOM.setAttr(this, \"level\", \"error\");\n\t\t\tif (this.details)\n\t\t\t\tDOM.setAttr(this, \"title\", this.details)\n\t\t\tthis.hidden = false;\n\t\t\tsuper._refresh();\n\t\t} else {\n\t\t\tthis.hidden = true;\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-item-msg-ss\", 1, /* language=CSS */ `\n\t:host {\n\t\ttext-align: center;\n\t\tmargin: .3em;\n\t\tmax-height: 4em;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t:host([level=error]) {\n\t\tcolor: var(--error-color);\n\t}\n\n\t:host([level=warning]) {\n\t\tcolor: var(--warning-color);\n\t}\n\n\t.label {\n\t\twhite-space: pre;\n\t\toverflow: auto;\n\t}\n`);\n\n\ncustomElements.define(\"wsp-item-msg-ss\", ItemMsgSs);\n"]}