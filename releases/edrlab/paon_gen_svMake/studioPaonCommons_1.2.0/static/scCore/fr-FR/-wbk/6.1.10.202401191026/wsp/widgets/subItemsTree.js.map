{"version":3,"sources":["/@back@/wsp/widgets/subItemsTree.tsx"],"names":["BaseElement","CellBuilderString","GridSmall","GridColTreeDef","GridDataHolderJsonTree","REG","JSX","DOMSH","LANG","ITEM","EItemTypeFamily","SubItemsTree","[object Object]","item","showItem","this","datas","itemShown","_a","subModelPattern","test","itModel","id","ti","itTi","extractItemCode","srcUri","mo","subItems","itSubItems","redrawDatas","row","dataHolder","getRow","grid","getSelectedRow","rowDatas","getSelectedDatas","i","c","countRows","subModel","match","setSelectedRows","sel","subIt","find","entry","push","init","reg","findReg","subItemSgnPattern","setDefaultOpenState","defaultOpened","colDefs","setFlex","setMinWidth","setCellBuilder","CellBuilderSubItem","env","wsp","wspMetaUi","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","textFilter","forbidHideSelectedRow","forbidHideSelRow","search","appendChild","createElement","type","spellcheck","oninput","onSearchInput","onkeydown","onKeyDown","value","initialize","Object","assign","columnDefs","hideHeaders","setSubItems","dispatchEvent","CustomEvent","ev","findHost","key","tree","focus","undefined","preserveSel","selected","getSelectedSubItems","filter","regexp","RegExp","escape4RegexpFuzzy","buildFilteredDatas","list","r","e","indexOf","newE","create","ch","length","setDatas","selectBySubItems","registerSkin","customElements","define","super","v","subItemType","getItemType","getFamily","undef","getTitle"],"mappings":"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","sourcesContent":["import {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {CellBuilderString, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {GridSmall, OGridSmallInit} from \"back/commons/widgets/grid-tags\";\nimport {GridColTreeDef, GridDataHolderJsonTree} from \"back/commons/widgets/tree\";\nimport {IReg, IUiEnv, REG} from \"lib/commons/registry\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IWspEnv} from \"lib/wsp/wsp\";\nimport {JSrcFields, JSubItem} from \"lib/wsp/src\";\nimport {LANG} from \"lib/commons/lang\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {EItemTypeFamily, WspMetaUi} from \"lib/wsp/wspMetaUi\";\n\n/**\n *\n */\nexport interface SubItemsTree extends BaseElement {\n\tinitialize(init?: OSubItemsTreeInit): this\n}\n\nexport interface OSubItemsTreeInit extends OSkinableInit {\n\treg?: IReg<IWspEnv & IUiEnv>\n\n\t/** Item à afficher. Doit avoir le field subItems renseigné. */\n\titem?: JSrcFields\n\n\t/** Si null ou undefined, pas de champs de filtrage de l'arbre affiché, \"\" pour afficher le champs vide. */\n\ttextFilter?: null | string\n\n\t/** Signatures des subItems recherchées ou à highlighter. */\n\tsubItemSgnPattern?: RegExp\n\n\t/**\n\t * L'item racine est-il affiché en noeud racine de l'arbre.\n\t * Si non renseigné, l'item sera affiché si sa signature match OSubItemsTreeInit.subItemSgnPattern.\n\t */\n\tshowItem?: boolean\n\n\t/** Préserve l'affichage de la ou les lignes sélectionnées même si le filtre ne matche pas. */\n\tforbidHideSelectedRow?: boolean;\n\n\tgrid?: OGridSmallInit\n}\n\nexport class SubItemsTree extends BaseElement {\n\n\treg: IReg<IWspEnv & IUiEnv>;\n\n\t/** L'item racine est-il affiché. */\n\titemShown: boolean;\n\n\titem: JSrcFields;\n\n\tsubModelPattern?: RegExp\n\n\tprotected forbidHideSelRow: boolean;\n\n\tdataHolder: GridDataHolderJsonTree<ISubItemTree>;\n\n\tgrid: GridSmall;\n\tsearch: HTMLInputElement;\n\n\tprotected datas: ISubItemTree[];\n\n\t/**\n\t * @param showItem Si non renseigné, l'item sera affiché si sa signature match OSubItemsTreeInit.subItemSgnPattern.\n\t */\n\tsetSubItems(item: JSrcFields, showItem?: boolean) {\n\t\tthis.item = item;\n\t\tif (!item) {\n\t\t\tthis.datas = [];\n\t\t} else {\n\t\t\tthis.itemShown = showItem;\n\t\t\tif (this.itemShown == null) {\n\t\t\t\tthis.itemShown = this.subModelPattern?.test(item.itModel) || false;\n\t\t\t}\n\t\t\tif (this.itemShown) {\n\t\t\t\tthis.datas = [{\n\t\t\t\t\tid: null, // Racine de l'item\n\t\t\t\t\tti: item.itTi || ITEM.extractItemCode(item.srcUri),\n\t\t\t\t\tmo: item.itModel,\n\t\t\t\t\tsubItems: item.itSubItems || []\n\t\t\t\t}];\n\t\t\t} else {\n\t\t\t\tthis.datas = item.itSubItems || [];\n\t\t\t}\n\t\t}\n\t\tthis.redrawDatas(false);\n\t}\n\n\tgetSelectedSubItem(): ISubItemTree | null {\n\t\tconst row = this.dataHolder.getRow(this.grid.getSelectedRow());\n\t\tif (!row) return null;\n\t\treturn row.rowDatas;\n\t}\n\n\tgetSelectedSubItems(): ISubItemTree[] {\n\t\treturn this.dataHolder.getSelectedDatas();\n\t}\n\n\tselectFirst(): boolean {\n\t\tfor (let i = 0, c = this.dataHolder.countRows(); i < c; i++) {\n\t\t\tconst subModel = this.dataHolder.getRow(i).rowDatas.mo;\n\t\t\tif (!this.subModelPattern || subModel?.match(this.subModelPattern)) {\n\t\t\t\tthis.grid.setSelectedRows(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tselectBySubItems(subItems: ISubItemTree[]): void {\n\t\tif (subItems) {\n\t\t\tconst sel: number[] = [];\n\t\t\tfor (let i = 0, c = this.dataHolder.countRows(); i < c; i++) {\n\t\t\t\tconst subIt = this.dataHolder.getRow(i).rowDatas;\n\t\t\t\tif (subItems.find((entry: ISubItemTree) => entry.id === subIt.id)) sel.push(i);\n\t\t\t}\n\t\t\tthis.grid.setSelectedRows(sel);\n\t\t} else {\n\t\t\tthis.grid.setSelectedRows(-1);\n\t\t}\n\t}\n\n\tprotected _initialize(init: OSubItemsTreeInit) {\n\t\tthis.reg = this.findReg(init);\n\n\t\tthis.subModelPattern = init.subItemSgnPattern;\n\n\t\tthis.dataHolder = new GridDataHolderJsonTree<ISubItemTree>('subItems')\n\t\t\t.setDefaultOpenState(GridDataHolderJsonTree.defaultOpened);\n\n\t\tconst colDefs = [new GridColTreeDef('tree')\n\t\t\t.setFlex('10rem', 1, 1).setMinWidth('55px')\n\t\t\t.setCellBuilder(new CellBuilderSubItem(this.reg.env.wsp.wspMetaUi))];\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tif (init.textFilter != null) {\n\t\t\t//On ajoute le filtre\n\t\t\tif (init.forbidHideSelectedRow) this.forbidHideSelRow = true;\n\t\t\tthis.search = sr.appendChild(<input type=\"search\" spellcheck=\"false\" oninput={this.onSearchInput} onkeydown={this.onKeyDown}/>) as HTMLInputElement;\n\t\t\tthis.search.value = init.textFilter;\n\t\t}\n\t\tthis.grid = sr.appendChild(new GridSmall().initialize(Object.assign({\n\t\t\tcolumnDefs: colDefs,\n\t\t\tdataHolder: this.dataHolder,\n\t\t\thideHeaders: true\n\t\t}, init.grid)));\n\n\t\tthis.setSubItems(init.item, init.showItem);\n\t}\n\n\tclearSearch(): void {\n\t\tif (this.search?.value != \"\") {\n\t\t\tthis.search.value = \"\";\n\t\t\tthis.search.dispatchEvent(new CustomEvent('input'));\n\t\t}\n\t}\n\n\tprotected onSearchInput(this: HTMLInputElement, ev: InputEvent) {\n\t\tDOMSH.findHost<SubItemsTree>(this).redrawDatas(true);\n\t}\n\n\tprotected onKeyDown(this: HTMLInputElement, ev: KeyboardEvent) {\n\t\tif (ev.key === 'ArrowDown') {\n\t\t\tconst tree = DOMSH.findHost(this) as SubItemsTree;\n\t\t\tif (tree.grid.dataHolder.countRows() > 0) {\n\t\t\t\ttree.grid.focus();\n\t\t\t\tif (tree.grid.getSelectedRow() === undefined) tree.grid.setSelectedRows(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected redrawDatas(preserveSel: boolean) {\n\t\tconst selected: ISubItemTree[] = preserveSel ? this.getSelectedSubItems() : null;\n\t\tconst filter = this.search?.value;\n\t\tif (filter) {\n\t\t\tconst regexp = new RegExp(LANG.escape4RegexpFuzzy(filter), \"i\");\n\t\t\tconst buildFilteredDatas = (list: ISubItemTree[]): ISubItemTree[] => {\n\t\t\t\tconst r: ISubItemTree[] = [];\n\t\t\t\tfor (const e of list) {\n\t\t\t\t\tif ((this.forbidHideSelRow && selected?.indexOf(e) > -1) || e.ti?.match(regexp)) {\n\t\t\t\t\t\tconst newE = Object.create(e) as ISubItemTree;\n\t\t\t\t\t\tif (e.subItems) newE.subItems = buildFilteredDatas(e.subItems);\n\t\t\t\t\t\tr.push(newE);\n\t\t\t\t\t} else if (e.subItems) {\n\t\t\t\t\t\tconst ch = buildFilteredDatas(e.subItems);\n\t\t\t\t\t\tif (ch.length > 0) {\n\t\t\t\t\t\t\tconst newE = Object.create(e) as ISubItemTree;\n\t\t\t\t\t\t\tnewE.subItems = ch;\n\t\t\t\t\t\t\tr.push(newE);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\tthis.dataHolder.setDatas(buildFilteredDatas(this.datas));\n\t\t} else {\n\t\t\tthis.dataHolder.setDatas(this.datas);\n\t\t}\n\t\tthis.selectBySubItems(selected);\n\t\t// if (this.grid.getSelectedRow() === undefined) {\n\t\t// \t//Si la sel a disparu, on reselectionne le 1er subItem.\n\t\t// \tthis.selectFirst();\n\t\t// }\n\t}\n}\n\nREG.reg.registerSkin('wsp-subitems-tree', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\tinput {\n\t\tborder: none;\n\t\tcolor: var(--form-color);\n\t\tborder-bottom: 1px solid var(--border-color);\n\t\tbackground: .1em / 1em no-repeat url(/@skin@/commons/icons/filter.svg) var(--form-search-bgcolor);\n\t\tpadding-block: 2px;\n\t\tpadding-inline: 1.2em 2px;\n\t}\n\n\tinput:focus {\n\t\toutline: var(--focus-outline);\n\t}\n\n\tc-grid-small {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n`);\n\ncustomElements.define(\"wsp-subitems-tree\", SubItemsTree);\n\n\nexport interface ISubItemTree extends JSubItem {\n\t/** null = item racine. */\n\tid: string | null\n}\n\nclass CellBuilderSubItem extends CellBuilderString {\n\tconstructor(public wspMetaUi: WspMetaUi) {super(\"ti\")}\n\n\tprotected _getValue(row: GridDataRowJson<ISubItemTree>): any {\n\t\tlet v = row.rowDatas.ti;\n\t\tif (v) return v;\n\t\tconst subItemType = this.wspMetaUi.getItemType(row.rowDatas.mo);\n\t\tif (subItemType && subItemType.getFamily() !== EItemTypeFamily.undef) return subItemType.getTitle();\n\t\treturn row.rowDatas.id;\n\t}\n}"]}