{"version":3,"sources":["/@back@/wsp/dialogs/packsMgr.tsx"],"names":["BaseElementAsync","BASIS","REG","DOM","JSX","DOMSH","GridSmall","GridColDef","CellBuilderDate","CellBuilderEnum","CellBuilderIconLabel","CellBuilderString","SKINPACK","WSPPACK","BarActions","AccelKeyMgr","Action","ACTION","InstallSkinPackAction","InstallWspPackAction","GridColTreeDef","GridDataHolderJsonTree","POPUP","ERROR","PacksMgr","[object Object]","this","packSrvList","extension4download","_installPendingPacks","Map","fullSessionInstallPacksIds","_refreshPending","_showLastNotInstalledPacksOnRefreshAll","init","reg","createSubReg","findReg","universes","forEach","univ","packServer","push","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","packExtensions","length","overrideInitialize","addToList","actionRefreshUi","accelKeyMgr","initFromMapActions","mergeListsAsMap","packsActions","injectSepByGroup","mergeLists","getPref","getListAsMap","packsToolbar","appendChild","createElement","class","Ã®","actions","actionContext","uiContext","disableFullOverlay","grid","initPacksGrid","newInit","packsGrid","skinScroll","undefined","lineDrawer","dataHolder","setOpenAll","selType","emptyBody","bind","skinOver","autoSelOnFocus","ctxMenuActions","addEventListener","ev","handleKeyboardEvent","packsMgr","findHost","refreshContent","initialize","setAttribute","refreshUi","scope","_newRefreshRequired","_refreshUi","state","_fullAutoRefrehPlanned","clearTimeout","setTimeout","fetchState","packsListByPortal","pack","has","packSrv","set","get","_lastPacksListFromSrvs","loadPacksListFromSRvs","isPackStatusPending","installStatus","title","buildPackTitle","installPackProps","find","value","id","_a","entry","isPackStatusInstalled","Object","assign","finalPacksList","packs","universe","getName","setDatas","e","file","installuid","name","size","getId","delete","packsAreInstalled","row","line","getData","error","addClass","removeClass","hasPerm","packId","isNewPack","findIndex","level","registerSkin","WspPacksMgr","super","_initialize","RemoveWspPackAction","SINGLETON","DownloadWspPackAction","columnDefs","setLabel","setDefaultSort","setFlex","setMinWidth","setSortable","setCellBuilder","CellBuildeWspPackTitle","setDescription","setCellClass","setDescriptionFunc","d","getDate","Date","prototype","toLocaleDateString","call","weekday","year","month","day","hour","minute","second","override","isStatusInstalled","mappingTable","errorToString","status","isStatusPending","Promise","all","map","async","listPacks","config","create","showNotifError","log","customElements","define","_isPortalRow","wspDef","wspTypeDefIndex","r1","r2","isPending","v1Status","v2Status","v1","_getValue","v2","_comparator","compare","toString","localeCompare","root","redrawCell","span","firstElementChild","st","style","paddingInlineStart","marginInlineEnd","buildId","wspTypeDef","modelsStr","optionsStr","isOption","buildWspDefTitle","sort","fullDescStr","concat","join","uninstallOnSrvPerm","_label","_description","_group","setIcon","uninstallPack","ctx","selectedPacks","getSelectedDatas","hasUnauthorizedPack","hasAuthorizedPack","system","isEnabled","isVisible","selectedDatas","filteredSelectedPacks","firstPackName","nbPacks","confirm","okLbl","cancelLbl","Array","from","doUninstallOnSrv","downloadOnSrvPerm","getDownloadPackUrl","a","href","downloadPackUrlOnSrv","click","report","SkinPacksMgr","RemoveSkinPackAction","DownloadSkinPackAction","CellBuildedSkinPackTitle","CellBuilderSkinPackModels","dataKey","list","skinSetCode","hasSkinSetIcon","getIconUrl","skinClasses","cacheHolder","cache","rowDatas","setTextContent","ListSkinClassesForWspType","then","resp","_modelsPending","redrawCellUi","skinClassesForWspType","e1","e2","wspTypeRef","base","slice","deleteSkin","setGroup","setExecute"],"mappings":"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","sourcesContent":["import {BaseElementAsync, BASIS, OSkinableInit} from \"back/commons/basis\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {CoreUniverse, IUniverseEnv} from \"lib/core/universe\";\nimport {GridSmall, OGridSmallInit} from \"back/commons/widgets/grid-tags\";\nimport {GridColDef, IGridDataRow, IGridLineDrawer} from \"back/commons/widgets/grid-core\";\nimport {CellBuilderDate, CellBuilderEnum, CellBuilderIconLabel, CellBuilderString, GridDataHolderJsonArray, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {ESkinPackErrors, ESkinPackStatus, EWspPackErrors, EWspPackStatus, IPacksInUniverse, JPackBase, JWspOptionDef, JWspPackBase, JWspPackInstalled, JWspTypeDef, PackSrv, SKINPACK, WSPPACK} from \"lib/wsp/pack\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {AccelKeyMgr, Action, ACTION, IAction} from \"lib/commons/actions\";\nimport {IInstallPackActionCtx, InstallSkinPackAction, InstallWspPackAction} from \"back/wsp/actions/packActions\";\nimport {GridColTreeDef, GridDataHolderJsonTree} from \"back/commons/widgets/tree\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport \"back/wsp/dialogs/dialogs_Perms\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IContextMenuActionsPointer} from \"back/commons/actionables\";\nimport JSkinClassesForWspType = SKINPACK.JSkinClassesForWspType;\n\nexport interface OPacksGridInit extends OGridSmallInit {\n\t/** Actions associÃ©es aux items sÃ©lectionnÃ©s (menu contextuel et IFocusActionables). */\n\tactions?: IAction<IPackActionCtx>[]\n\n\t/** Racourcis claviers Ã  capter sur la sel courante. */\n\taccelKeyMgr?: AccelKeyMgr<IPackActionCtx>\n\n\t/** Supprime le lineDrawer par dÃ©faut (avec null) ou customise le lineDrawer. */\n\tlineDrawer?: null | IGridLineDrawer\n\n}\n\nexport interface OPacksMgrInit extends OSkinableInit {\n\treg?: IReg<IUniverseEnv>\n\tuniverses: (CoreUniverse & IPacksInUniverse)[];\n\t/** Init de la liste des rÃ©sultats. */\n\tpacksGrid?: OPacksGridInit\n\t/** extensions autorisÃ©es pour l'installation (avec le .)\n\t * La premiÃ¨re valeur sera utilisÃ©e comme extension de tÃ©lÃ©chargement **/\n\tpackExtensions?: string[];\n}\n\ninterface PacksMgr<PACKOBJ extends JPackBase, PACKOBJGLOBAL extends IPacksGlobal & JPackBase> extends BaseElementAsync, IView, IGridLineDrawer, IPackActionCtx, IInstallPackActionCtx {\n\tinitialize(init: OPacksMgrInit): this\n}\n\nabstract class PacksMgr<PACKOBJ extends JPackBase, PACKOBJGLOBAL extends IPacksGlobal & JPackBase> extends BaseElementAsync implements IGridLineDrawer, IPackActionCtx, IInstallPackActionCtx {\n\n\treg: IReg<IUniverseEnv>;\n\n\tpackSrvList: PackSrv[] = [];\n\n\tpacksToolbar?: BarActions<IPackActionCtx> | null;\n\n\tgrid: GridSmall & IContextMenuActionsPointer<IPackActionCtx>;\n\n\tfetchState: 'pending' | 'done' | 'failed';\n\n\textension4download: string = \".pack\";\n\n\t/** Packs en cours d'installation **/\n\tprotected _installPendingPacks: Map<String, PACKOBJGLOBAL> = new Map<String, PACKOBJGLOBAL>();\n\n\t/** DerniÃ¨re liste de packs retournÃ©e aprÃ©s interrogation des diffÃ©rents portals **/\n\tprotected _lastPacksListFromSrvs: (PACKOBJGLOBAL)[];\n\n\t/** Liste de tous les packs installÃ©s dans cette instance packMgr (mÃªme aprÃ©s refresh) **/\n\tprotected fullSessionInstallPacksIds: ({ packSrv: PackSrv, pack?: PACKOBJ })[] = [];\n\n\tprotected async _initialize(init: OPacksMgrInit): Promise<void> {\n\t\t// Reg dÃ©diÃ© car des actions par d&faut sont ajoutÃ©es au reg courant, et cet objet peut etre multi instanciÃ© dans un meme contexe reg\n\t\tthis.reg = REG.createSubReg(this.findReg(init));\n\n\t\tif (init.universes)\n\t\t\tinit.universes.forEach((univ) => {\n\t\t\t\tif (univ.packServer) this.packSrvList.push(univ.packServer);\n\t\t\t})\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"webzone:panel\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tif (init.packExtensions && init.packExtensions.length > 0) {\n\t\t\tthis.extension4download = init.packExtensions[0];\n\t\t\tthis.packExtensions = init.packExtensions;\n\t\t}\n\n\t\t/** Init les listes du registre **/\n\t\tthis.overrideInitialize(init);\n\t\tthis.reg.addToList(\"actions:packs:packsmgr:toolbar\", \"actionRefreshUi\", 1, actionRefreshUi);\n\n\t\t/** Accelkey **/\n\t\tlet accelKeyMgr = new AccelKeyMgr().initFromMapActions(this.reg.mergeListsAsMap(\"accelkeys:packs:packsmgr\"));\n\n\t\t/** Toolbar **/\n\t\tlet packsActions = ACTION.injectSepByGroup(this.reg.mergeLists(\"actions:packs:packsmgr:toolbar\", \"actions:packs:packsmgr\") as IAction<IPackActionCtx>[], this.reg.getPref(\"actions.packs.packsmgr.groupOrder\", \"packs pack * refresh\"), this);\n\t\taccelKeyMgr.initFromMapActions(this.reg.getListAsMap(\"accelkeys:wspApp:global\"));\n\n\t\tthis.packsToolbar = sr.appendChild(<BarActions class=\"horizontal\" Ã®={{\n\t\t\treg: this.reg,\n\t\t\tactions: packsActions,\n\t\t\tactionContext: this,\n\t\t\tuiContext: \"dialog\",\n\t\t\tdisableFullOverlay: true\n\t\t} as OBarActionsInit<IPackActionCtx>}/> as BarActions<IPackActionCtx>);\n\n\t\t/** Grid **/\n\t\tthis.grid = new GridSmall();\n\n\t\tconst initPacksGrid: OPacksGridInit = BASIS.newInit(init.packsGrid, this.reg);\n\t\tif (initPacksGrid.skinScroll === undefined) initPacksGrid.skinScroll = 'scroll/small';\n\t\tif (initPacksGrid.lineDrawer === undefined) initPacksGrid.lineDrawer = this;\n\t\tif (initPacksGrid.accelKeyMgr === undefined) initPacksGrid.accelKeyMgr = accelKeyMgr;\n\t\tinitPacksGrid.dataHolder = new GridDataHolderJsonTree<IPortalPacks<PACKOBJGLOBAL> | PACKOBJGLOBAL>('packs').setOpenAll(true);\n\t\tinitPacksGrid.selType = \"multi\";\n\t\tinitPacksGrid.emptyBody = this.emptyBody.bind(this);\n\t\tinitPacksGrid.skinOver = \"packsmgr-grid\";\n\t\tinitPacksGrid.autoSelOnFocus = 'first';\n\n\t\tthis.grid.ctxMenuActions = {\n\t\t\tactions: ACTION.injectSepByGroup(this.reg.mergeLists(\"actions:packs:packsmgr:tree\", \"actions:packs:packsmgr\") as IAction<IPackActionCtx>[], this.reg.getPref(\"actions.packs.packsmgr.groupOrder\", \"packs pack * refresh\"), this) as IAction<IPackActionCtx>[],\n\t\t\tactionContext: this,\n\t\t};\n\n\t\tthis.grid.addEventListener('keydown', (ev: KeyboardEvent) => {\n\t\t\taccelKeyMgr.handleKeyboardEvent(ev, this);\n\t\t});\n\n\t\tthis.grid.addEventListener('grid-select', function (this: GridSmall, ev: Event) {\n\t\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(this);\n\t\t\tpacksMgr.packsToolbar.refreshContent();\n\t\t});\n\n\t\tthis.grid.initialize(initPacksGrid);\n\t\tthis.grid.setAttribute(\"c-resizable\", \"\");\n\t\tsr.appendChild(this.grid);\n\n\t\treturn this.refreshUi();\n\t}\n\n\t/**\n\t * Ajoute une couche de configuration dans le init courant\n\t */\n\tprotected overrideInitialize(init: OPacksMgrInit): void {}\n\n\t/**\n\t * Refresh UI\n\t * Gestion de la rÃ©entrance\n\t */\n\tasync refreshUi(scope: \"local\" | \"full\" = \"full\") {\n\t\ttry {\n\t\t\tif (this._refreshPending) {\n\t\t\t\tthis._newRefreshRequired = (this._newRefreshRequired == \"full\" ? \"full\" : scope);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._refreshPending = true;\n\t\t\tawait this._refreshUi(scope);\n\t\t} finally {\n\t\t\tthis._refreshPending = false;\n\t\t\tif (this._newRefreshRequired) {\n\t\t\t\tlet state = this._newRefreshRequired;\n\t\t\t\tthis._newRefreshRequired = null;\n\t\t\t\tif (state == \"full\" && this._fullAutoRefrehPlanned)\n\t\t\t\t\tclearTimeout(this._fullAutoRefrehPlanned);\n\t\t\t\tsetTimeout(this.refreshUi.bind(this, state), 500);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _newRefreshRequired: \"local\" | \"full\" | null;\n\tprotected _refreshPending: boolean = false;\n\tprotected _fullAutoRefrehPlanned: number;\n\tprotected _showLastNotInstalledPacksOnRefreshAll: boolean = false;\n\n\tprivate async _refreshUi(scope: \"local\" | \"full\" = \"full\") {\n\t\ttry {\n\t\t\tthis.fetchState = \"pending\";\n\t\t\tlet packsListByPortal: Map<PackSrv, PACKOBJGLOBAL[]> = new Map<PackSrv, PACKOBJGLOBAL[]>();\n\n\t\t\tif (this._installPendingPacks)\n\t\t\t\tthis._installPendingPacks.forEach(pack => {\n\t\t\t\t\tif (!packsListByPortal.has(pack.packSrv))\n\t\t\t\t\t\tpacksListByPortal.set(pack.packSrv, []);\n\t\t\t\t\tpacksListByPortal.get(pack.packSrv).push(pack);\n\t\t\t\t});\n\n\t\t\tif (!this._lastPacksListFromSrvs || scope == \"full\")\n\t\t\t\tawait this.loadPacksListFromSRvs();\n\n\t\t\tthis._lastPacksListFromSrvs.forEach(pack => {\n\t\t\t\tif (!packsListByPortal.has(pack.packSrv))\n\t\t\t\t\tpacksListByPortal.set(pack.packSrv, []);\n\t\t\t\tpacksListByPortal.get(pack.packSrv).push(pack);\n\n\t\t\t\tif (!this.isPackStatusPending(pack.installStatus))\n\t\t\t\t\tpack.title = this.buildPackTitle(pack as IPacksBaseGlobal);\n\n\t\t\t\t// Affectation du titre si vide en exploitant les infos des derniers packs installÃ©s\n\t\t\t\t// Pertinent dans le cas des packs en cours d'installation\n\t\t\t\tif (!pack.title) {\n\t\t\t\t\tlet installPackProps = this.fullSessionInstallPacksIds.find(value => {\n\t\t\t\t\t\treturn value.pack.id === pack.id && value.packSrv === pack.packSrv;\n\t\t\t\t\t});\n\t\t\t\t\tif (installPackProps && installPackProps.pack) pack.title = installPackProps.pack.title;\n\t\t\t\t}\n\t\t\t\t// Si le pack est dans un statut \"pending\", on programme un refresh\n\t\t\t\tif (this.isPackStatusPending(pack.installStatus)) {\n\t\t\t\t\tif (this._fullAutoRefrehPlanned)\n\t\t\t\t\t\tclearTimeout(this._fullAutoRefrehPlanned);\n\t\t\t\t\tthis._fullAutoRefrehPlanned = setTimeout(() => this.refreshUi(\"full\"), 2000);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this._showLastNotInstalledPacksOnRefreshAll) {\n\t\t\t\tthis.fullSessionInstallPacksIds?.forEach((entry) => {\n\t\t\t\t\tif (entry.pack && !this.isPackStatusInstalled(entry.pack.installStatus)) {\n\t\t\t\t\t\tif (!packsListByPortal.has(entry.packSrv))\n\t\t\t\t\t\t\tpacksListByPortal.set(entry.packSrv, []);\n\t\t\t\t\t\tpacksListByPortal.get(entry.packSrv).push(Object.assign({}, entry.pack, {packSrv: entry.packSrv}) as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet finalPacksList: (IPortalPacks<PACKOBJGLOBAL> | PACKOBJGLOBAL)[] = [];\n\t\t\tif (this.packSrvList.length == 1) {\n\t\t\t\t// Pas de matÃ©rialisation du niveau \"portal\"\n\t\t\t\tpacksListByPortal.forEach((packs, packSrv) => {\n\t\t\t\t\tfinalPacksList = packs;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpacksListByPortal.forEach((packs, packSrv) => {\n\t\t\t\t\tfinalPacksList.push({\n\t\t\t\t\t\ttitle: packSrv.universe.getName(),\n\t\t\t\t\t\tpackSrv,\n\t\t\t\t\t\tpacks,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.fetchState = \"done\";\n\t\t\t(this.grid.dataHolder as GridDataHolderJsonArray<IPortalPacks<PACKOBJGLOBAL> | PACKOBJGLOBAL>).setDatas(finalPacksList);\n\t\t} catch (e) {\n\t\t\tthis.fetchState = \"failed\";\n\t\t\t(this.grid.dataHolder as GridDataHolderJsonArray<IPortalPacks<PACKOBJGLOBAL> | PACKOBJGLOBAL>).setDatas([]);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tprotected buildPackTitle(pack: IPacksBaseGlobal): string {\n\t\treturn WSPPACK.buildPackTitle(pack);\n\t}\n\n\t/**\n\t * Suivi de l'installation du pack\n\t * @param file\n\t * @param packSrv\n\t * @param pack\n\t */\n\tasync packInstallHandler(state: \"start\" | \"end\", file: File, packSrv: PackSrv, pack?: PACKOBJ): Promise<void> {\n\t\tconst installuid = file.name + \"_\" + file.size + \"_\" + packSrv.universe.getId();\n\t\tif (state == \"start\") {\n\t\t\tif (!this._installPendingPacks.get(installuid)) {\n\t\t\t\tthis._installPendingPacks.set(installuid, {\n\t\t\t\t\tid: installuid,\n\t\t\t\t\tpackSrv: packSrv,\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\tinstallStatus: \"uploadPending\"\n\t\t\t\t} as PACKOBJGLOBAL);\n\t\t\t\tawait this.refreshUi(\"local\");\n\t\t\t}\n\t\t} else\n\t\t\tthis._installPendingPacks.delete(installuid);\n\n\t\tif (pack) {\n\t\t\tif (!pack.title) pack.title = file.name;\n\t\t\tthis.fullSessionInstallPacksIds.push({packSrv, pack});\n\t\t}\n\t}\n\n\tasync globalInstallHandler(state: \"start\" | \"end\", packsAreInstalled: boolean): Promise<void> {\n\t\tif (state == \"end\" && packsAreInstalled)\n\t\t\tawait this.refreshUi(\"full\");\n\t}\n\n\t/**\n\t * Tree : affichage explicite des lignes en erreur\n\t * @param row\n\t * @param line\n\t */\n\tredrawLine(row: IGridDataRow, line: HTMLElement): void {\n\t\tconst packSrv = row.getData(\"packSrv\") as PackSrv;\n\t\t// Statut d'installation\n\t\tconst installStatus = row.getData(\"installStatus\") as EWspPackStatus;\n\t\tconst error = row.getData(\"error\") as EWspPackErrors;\n\t\tif (installStatus == \"installFailed\" || error)\n\t\t\tDOM.addClass(line, \"error\");\n\t\telse if (installStatus == \"uploadPending\" || installStatus == \"installPending\")\n\t\t\tDOM.addClass(line, \"pending\");\n\t\telse {\n\t\t\tDOM.removeClass(line, \"error\");\n\t\t\tDOM.removeClass(line, \"pending\");\n\t\t}\n\t\t//\n\t\tif ((packSrv && !packSrv.universe.reg.hasPerm(\"action.packsMgr#uninstall.wspPack\")) || row.getData(\"system\"))\n\t\t\tDOM.addClass(line, \"readonly\");\n\t\telse\n\t\t\tDOM.removeClass(line, \"readonly\");\n\n\t\t// Nouvelles installations\n\t\tconst packId = row.getData(\"id\") as string;\n\t\tif (packSrv && packId && this.isNewPack(packSrv, packId)) {\n\t\t\tDOM.addClass(line, \"new\");\n\t\t\tsetTimeout(() => {DOM.removeClass(line, \"new\")}, 5000);\n\t\t} else\n\t\t\tDOM.removeClass(line, \"new\");\n\n\t}\n\n\t/**\n\t * Retourne true si le pack a Ã©tÃ© installÃ© dans l'instance packMgr courante\n\t * @param packSrv\n\t * @param packId\n\t */\n\tprotected isNewPack(packSrv: PackSrv, packId: string): boolean {\n\t\treturn (packId && packSrv && this.fullSessionInstallPacksIds.findIndex(value => {\n\t\t\treturn value.pack.id === packId && value.packSrv === packSrv;\n\t\t}) > -1);\n\t}\n\n\t/**\n\t * Recharge la liste des packs affichÃ©s des serveurs\n\t */\n\tabstract loadPacksListFromSRvs(): Promise<void[]>\n\n\t/**\n\t * Retourne true si le statut du pack est de type \"pending\"\n\t */\n\tabstract isPackStatusPending(status: any): boolean\n\n\t/**\n\t * Retourne true si le statut du pack est \"installÃ©\"\"\n\t */\n\tabstract isPackStatusInstalled(status: any): boolean\n\n\t/**\n\t * Tree : fonction retournant le texte Ã  afficher en cas de tree vide\n\t */\n\tprotected emptyBody() {\n\t\tswitch (this.fetchState) {\n\t\tcase \"done\":\n\t\t\treturn <c-msg>Aucun pack installÃ©</c-msg>;\n\t\tcase \"failed\":\n\t\t\treturn <c-msg level=\"error\">Ãchec au chargement</c-msg>;\n\t\tdefault:\n\t\t\treturn <c-msg>Chargement en cours...</c-msg>;\n\t\t}\n\t}\n\n}\n\n/** Skin du grid **/\nREG.reg.registerSkin('packsmgr-grid', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t}\n\n  .readonly {\n\t  font-style: italic;\n  }\n\n  .new {\n\t  background-color: var(--row-highlight-bgcolor);\n  }\n\n  .error {\n\t  color: var(--error-color);\n  }\n\n  .pending {\n\t  font-style: italic;\n\t  color: var(--warning-color);\n  }\n\n  .portalrow {\n\t  font-weight: bold;\n\t  color: var(--alt1-color);\n\t}\n\n`);\n\n\n/** Struct de donnÃ©e globale aux n packsMgr du portal */\ninterface IPacksGlobal {\n\tpackSrv: PackSrv,\n}\n\n\ninterface IPortalPacks<E extends IPacksGlobal> {\n\t// nom du portal\n\ttitle: string,\n\tpackSrv: PackSrv,\n\tpacks: E[],\n}\n\ninterface IPacksBaseGlobal extends IPacksGlobal, JWspPackBase {}\n\ninterface IPacksInstalledGlobal extends IPacksGlobal, JWspPackInstalled {}\n\n\n// ###\n// # WspPack\n// #\n\nexport class WspPacksMgr extends PacksMgr<JWspPackInstalled | JWspPackBase, IPacksBaseGlobal | IPacksInstalledGlobal> {\n\n\tprotected async _initialize(init: OPacksMgrInit): Promise<void> {\n\t\tif (!init.packExtensions) init.packExtensions = [\".wsppack\"];\n\t\tsuper._initialize(init);\n\t}\n\n\tprotected overrideInitialize(init: OPacksMgrInit): void {\n\t\t/** Actions **/\n\t\tthis.reg.addToList(\"actions:packs:packsmgr\", \"actionRemovePacks\", 1, RemoveWspPackAction.SINGLETON);\n\t\tthis.reg.addToList(\"actions:packs:packsmgr\", \"actionDownloadPack\", 1, DownloadWspPackAction.SINGLETON);\n\n\t\tthis.reg.addToList(\"actions:packs:packsmgr:toolbar\", \"actionInstallPack\", 1, InstallWspPackAction.SINGLETON);\n\n\t\t/** Accelkeys **/\n\t\tthis.reg.addToList(\"accelkeys:packs:packsmgr\", \"Delete\", 1, RemoveWspPackAction.SINGLETON);\n\n\t\t/** Grid **/\n\t\tlet columnDefs = [];\n\t\tcolumnDefs.push(\n\t\t\tnew GridColTreeDef('packTitle').setLabel(\"Pack\")\n\t\t\t\t.setDefaultSort(1, 'ascendant')\n\t\t\t\t.setFlex('25em', 1, 1).setMinWidth('8em').setSortable(true)\n\t\t\t\t.setCellBuilder(new CellBuildeWspPackTitle()),\n\t\t\tnew GridColDef('installDate').setLabel(\"Date\").setDescription(\"Date d'installation\")\n\t\t\t\t.setFlex('3em', 1, 1).setMinWidth('3em').setSortable(true)\n\t\t\t\t.setCellBuilder(new CellBuilderDate('installDate').setCellClass(\"center\")\n\t\t\t\t\t.setDescriptionFunc(function (this: CellBuilderDate, row: IGridDataRow) {\n\t\t\t\t\t\tconst d = this.getDate(row);\n\t\t\t\t\t\treturn d ? Date.prototype.toLocaleDateString.call(this.getDate(row), \"fr\", {weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: \"numeric\"}) : \"\";\n\t\t\t\t\t})),\n\t\t\tnew GridColDef('installStatus').setLabel(\"Statut\")\n\t\t\t\t.setFlex('5em', 1, 1).setMinWidth('4em').setSortable(true)\n\t\t\t\t.setCellBuilder(new CellBuilderEnum('installStatus', new Map([[\"uploadPending\", \"Envoi en cours...\"], [\"installPending\", \"Installation en cours...\"], [\"installed\", \"InstallÃ©\"], [\"installFailed\", \"Non installÃ© (Ã©chec)\"]])).setCellClass(\"center\")\n\t\t\t\t\t.override(\"_getValue\", function (this: CellBuilderEnum, row: IGridDataRow): any {\n\t\t\t\t\t\tif (row.getData(\"packs\")) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (row.getData(\"system\"))\n\t\t\t\t\t\t\t\treturn \"SystÃ¨me (non modifiable)\"\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (WSPPACK.isStatusInstalled(row.getData(\"installStatus\")) && row.getData(\"error\")) return \"Non disponible\";\n\t\t\t\t\t\t\t\treturn this.mappingTable.get(row.getData(\"installStatus\")) || \"Disponible\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.setDescriptionFunc((row)=>WSPPACK.errorToString(row.getData(\"error\") as EWspPackErrors))\n\t\t\t\t)\n\t\t\t,\n\t\t);\n\n\n\t\tif (!init.packsGrid) init.packsGrid = [] as OPacksGridInit;\n\t\tif (init.packsGrid.columnDefs === undefined) init.packsGrid.columnDefs = columnDefs;\n\t}\n\n\tisPackStatusPending(status: any): boolean {\n\t\treturn WSPPACK.isStatusPending(status);\n\t}\n\n\tisPackStatusInstalled(status: any): boolean {\n\t\treturn WSPPACK.isStatusInstalled(status);\n\t}\n\n\tasync loadPacksListFromSRvs() {\n\t\tthis._lastPacksListFromSrvs = [];\n\t\treturn Promise.all(this.packSrvList.map(async (packSrv) => {\n\t\t\tif (packSrv.universe.reg.hasPerm(\"action.wspPacksMgr#list\")) {\n\t\t\t\ttry {\n\t\t\t\t\tlet packs = await WSPPACK.listPacks(packSrv);\n\t\t\t\t\tif (packs)\n\t\t\t\t\t\tawait Promise.all(packs.map((pack) => {\n\t\t\t\t\t\t\tlet config: (IPacksBaseGlobal | IPacksInstalledGlobal) = Object.create(pack);\n\t\t\t\t\t\t\tconfig.packSrv = packSrv;\n\t\t\t\t\t\t\tthis._lastPacksListFromSrvs.push(config);\n\t\t\t\t\t\t}));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tPOPUP.showNotifError(\"Rafraichissement partiel de l'Ã©cran\", this.grid);\n\t\t\t\t\tawait ERROR.log(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t/**\n\t * Retourne true si les packs peuvent Ãªtre affichÃ©s sur au moins un packSrv\n\t */\n\tstatic isAvailable(universes: (CoreUniverse & IPacksInUniverse)[]): boolean {\n\t\tif (universes) {\n\t\t\treturn universes.findIndex((univ) => {\n\t\t\t\treturn univ.reg.hasPerm(\"action.wspPacksMgr#list\");\n\t\t\t}) > -1;\n\t\t}\n\t\treturn false;\n\t}\n}\n\ncustomElements.define(\"wsp-packsmgr\", WspPacksMgr);\n\n/** Skin global du packMgr **/\nREG.reg.registerSkin('wsp-packsmgr', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n`);\n\n/**\n * Colonne de titre du wsp pack\n */\nclass CellBuildeWspPackTitle extends CellBuilderIconLabel {\n\tconstructor() {\n\t\tsuper('title');\n\t}\n\n\tprotected _isPortalRow(row: IGridDataRow): boolean {\n\t\treturn row.getData(\"packs\") ? true : false;\n\t}\n\n\tprotected _getIcon(row: IGridDataRow): string {\n\t\tif (this._isPortalRow(row))\n\t\t\treturn null;\n\t\tconst wspDef = row.getData(\"wspTypeDef\") as (JWspTypeDef | JWspOptionDef)[];\n\t\tlet wspTypeDefIndex = wspDef ? wspDef.findIndex((wspDef) => {\n\t\t\treturn (\"isOption\" in wspDef) ? false : true;\n\t\t}) : null;\n\t\treturn wspTypeDefIndex > -1 ? \"/@skin@/wsp/dialogs/packsMgr/wspppack.svg\" : \"/@skin@/wsp/dialogs/packsMgr/wsppackopt.svg\";\n\t}\n\n\t/** Packs en cours d'installation affichÃ©s en premier **/\n\tgetColSortFn(): (r1: IGridDataRow, r2: IGridDataRow) => number {\n\t\treturn (r1: IGridDataRow, r2: IGridDataRow) => {\n\t\t\tfunction isPending(status: EWspPackStatus): boolean {\n\t\t\t\treturn (status == \"uploadPending\" || status == \"installPending\") ? true : false;\n\t\t\t}\n\n\t\t\tconst v1Status = r1.getData(\"installStatus\") as EWspPackStatus;\n\t\t\tconst v2Status = r2.getData(\"installStatus\") as EWspPackStatus;\n\t\t\tconst v1 = isPending(v1Status) ? 0 : 1 + this._getValue(r1);\n\t\t\tconst v2 = isPending(v2Status) ? 0 : 1 + this._getValue(r2);\n\t\t\tif (v1 == null) {\n\t\t\t\tif (v2 == null) return 0;\n\t\t\t\treturn 1;\n\t\t\t} else if (v2 == null) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn this._comparator ? this._comparator.compare(v1, v2) : v1.toString().localeCompare(v2);\n\t\t}\n\t}\n\n\tredrawCell(row: IGridDataRow, root: HTMLElement) {\n\t\tsuper.redrawCell(row, root);\n\t\tif (this._isPortalRow(row)) {\n\t\t\tconst span = root.firstElementChild as HTMLSpanElement;\n\t\t\tconst st = span.style;\n\t\t\tst.paddingInlineStart = \"unset\";\n\t\t\tst.marginInlineEnd = \"unset\";\n\t\t\tDOM.addClass(root, \"portalrow\");\n\t\t}\n\t}\n\n\tprotected _getDescription(row: IGridDataRow): any {\n\t\tconst installStatus = row.getData(\"installStatus\") as EWspPackStatus;\n\t\tconst buildId = row.getData(\"buildId\");\n\t\tif (installStatus == \"installFailed\") {\n\t\t\treturn \"Ãchec Ã  l'installation :\\n\"+WSPPACK.errorToString(row.getData(\"error\") as EWspPackErrors);\n\t\t} else if (installStatus == \"installed\") {\n\t\t\tconst wspTypeDef = row.getData(\"wspTypeDef\") as (JWspTypeDef | JWspOptionDef)[];\n\t\t\tlet modelsStr: string[] = [];\n\t\t\tlet optionsStr: string[] = [];\n\t\t\tif (wspTypeDef) {\n\t\t\t\twspTypeDef.forEach((wspDef) => {\n\t\t\t\t\tif (!WSPPACK.isOption(wspDef))\n\t\t\t\t\t\tmodelsStr.push(\" - \" + WSPPACK.buildWspDefTitle(wspDef));\n\t\t\t\t\telse\n\t\t\t\t\t\toptionsStr.push(\" - \" + WSPPACK.buildWspDefTitle(wspDef));\n\t\t\t\t});\n\t\t\t\tmodelsStr.sort();\n\t\t\t\toptionsStr.sort();\n\t\t\t}\n\t\t\tlet fullDescStr: string[] = [];\n\t\t\tif(row.getData(\"error\"))\n\t\t\t\tfullDescStr.push(WSPPACK.errorToString(row.getData(\"error\") as EWspPackErrors));\n\t\t\tif (buildId)\n\t\t\t\tfullDescStr.push(`Identifiant de compilation du pack : ${buildId}`);\n\t\t\tif (modelsStr.length > 0) {\n\t\t\t\tfullDescStr.push(modelsStr.length == 1 ? \"ModÃ¨le :\" : \"ModÃ¨les :\");\n\t\t\t\tfullDescStr = fullDescStr.concat(modelsStr);\n\t\t\t}\n\t\t\tif (optionsStr.length > 0) {\n\t\t\t\tfullDescStr.push(optionsStr.length == 1 ? \"Extension :\" : \"Extensions :\");\n\t\t\t\tfullDescStr = fullDescStr.concat(optionsStr);\n\t\t\t}\n\t\t\treturn fullDescStr.join(\"\\n\");\n\t\t} else\n\t\t\treturn \"\";\n\t}\n}\n\n/**\n * Action : suppression de packs\n */\nexport class RemoveWspPackAction extends Action<IPackActionCtx> {\n\tprotected uninstallOnSrvPerm = \"action.packsMgr#uninstall.wspPack\";\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"removeWspPack\");\n\t\tthis._label = \"DÃ©sinstaller\";\n\t\tthis._description = \"DÃ©sinstaller un modÃ¨le documentaire\";\n\t\tthis._group = \"packs\";\n\t\tthis.setIcon(\"/@skin@/wsp/dialogs/packsMgr/deletePack.svg\");\n\t}\n\n\tprotected async doUninstallOnSrv(packServer: PackSrv, packId: string): Promise<void> {\n\t\treturn WSPPACK.uninstallPack(packServer, packId);\n\t}\n\n\tisEnabled(ctx: IPackActionCtx): boolean {\n\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\tlet selectedPacks = (ctx.grid.dataHolder as GridDataHolderJsonArray<IPortalPacks<IPacksBaseGlobal | IPacksInstalledGlobal> | IPacksBaseGlobal | IPacksInstalledGlobal>).getSelectedDatas();\n\t\tif (!selectedPacks || selectedPacks.length == 0) return false;\n\t\tlet hasUnauthorizedPack = false;\n\t\tlet hasAuthorizedPack = false;\n\t\tselectedPacks.forEach((pack) => {\n\t\t\tif (pack.packSrv && \"id\" in pack) {\n\t\t\t\tpack = pack as IPacksBaseGlobal;\n\t\t\t\tif ((pack as IPacksInstalledGlobal).system || !packsMgr.isPackStatusInstalled(pack.installStatus) || !pack.packSrv.universe.reg.hasPerm(this.uninstallOnSrvPerm)) {\n\t\t\t\t\thasUnauthorizedPack = true;\n\t\t\t\t\treturn;\n\t\t\t\t} else\n\t\t\t\t\thasAuthorizedPack = true;\n\t\t\t}\n\t\t});\n\t\treturn (!hasUnauthorizedPack && hasAuthorizedPack) ? super.isEnabled(ctx) : false;\n\t}\n\n\tisVisible(ctx: IPackActionCtx): boolean {\n\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\tif (packsMgr.packSrvList && packsMgr.packSrvList.findIndex((packSrv) => {\n\t\t\treturn packSrv.universe.reg.hasPerm(this.uninstallOnSrvPerm);\n\t\t}) == -1) return false;\n\t\treturn super.isVisible(ctx as any);\n\t}\n\n\tasync execute(ctx: IPackActionCtx, ev?: Event): Promise<void> {\n\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\ttry {\n\t\t\tlet selectedDatas = (ctx.grid.dataHolder as GridDataHolderJsonArray<IPortalPacks<IPacksBaseGlobal | IPacksInstalledGlobal> | IPacksBaseGlobal | IPacksInstalledGlobal>).getSelectedDatas();\n\t\t\tlet filteredSelectedPacks: (IPortalPacks<IPacksBaseGlobal | IPacksInstalledGlobal> | IPacksBaseGlobal | IPacksInstalledGlobal)[] = [];\n\t\t\tselectedDatas.forEach((pack) => {\n\t\t\t\tif (pack.packSrv && \"id\" in pack)\n\t\t\t\t\tfilteredSelectedPacks.push(pack);\n\t\t\t});\n\t\t\t// FIXME : proposer d'Ã©tendre la dÃ©sinstallation aux packs similaires des autres repos\n\t\t\tconst firstPackName = filteredSelectedPacks.length > 0 ? filteredSelectedPacks[0].title : \"\";\n\t\t\tconst nbPacks = filteredSelectedPacks.length;\n\t\t\tif (await POPUP.confirm(filteredSelectedPacks.length == 1 ? `Voulez-vous vraiment dÃ©sinstaller le pack '${firstPackName}' ?` : `Voulez-vous vraiment dÃ©sinstaller les ${nbPacks} packs sÃ©lectionnÃ©s ?`, ctx.grid, {\n\t\t\t\tokLbl: \"DÃ©sinstaller\",\n\t\t\t\tcancelLbl: \"Annuler\"\n\t\t\t})) {\n\t\t\t\tawait Promise.all(Array.from(filteredSelectedPacks).map(async (pack) => {\n\t\t\t\t\treturn this.doUninstallOnSrv(pack.packSrv, (pack as IPacksInstalledGlobal).id);\n\t\t\t\t}));\n\t\t\t\tawait packsMgr.refreshUi(\"full\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifError(\"La dÃ©sinstallation n'a pas pu avoir lieu dans son intÃ©gralitÃ©\", ctx.grid);\n\t\t\tawait ERROR.log(e);\n\t\t\tawait packsMgr.refreshUi(\"full\");\n\t\t}\n\t}\n\n\tstatic SINGLETON = new RemoveWspPackAction();\n}\n\n\n/**\n * Action : tÃ©lÃ©chargement d'un wsp pack\n */\nexport class DownloadWspPackAction extends Action<IPackActionCtx> {\n\tprotected downloadOnSrvPerm = \"action.packsMgr#download.wspPack\";\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"downloadWspPack\");\n\t\tthis._label = \"TÃ©lÃ©charger...\";\n\t\tthis._description = \"TÃ©lÃ©charger un modÃ¨le documentaire\";\n\t\tthis._group = \"packs\";\n\t\tthis.setIcon(\"/@skin@/wsp/dialogs/packsMgr/downloadPack.svg\");\n\t}\n\n\tprotected downloadPackUrlOnSrv(packServer: PackSrv, packId: string): string {\n\t\treturn WSPPACK.getDownloadPackUrl(packServer, packId);\n\t}\n\n\tisEnabled(ctx: IPackActionCtx): boolean {\n\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\tlet selectedPacks = (ctx.grid.dataHolder as GridDataHolderJsonArray<IPortalPacks<IPacksBaseGlobal | IPacksInstalledGlobal> | IPacksBaseGlobal | IPacksInstalledGlobal>).getSelectedDatas();\n\t\tif (!selectedPacks || selectedPacks.length != 1) return false;\n\t\tlet pack = selectedPacks[0] as IPacksInstalledGlobal;\n\t\tif (!pack.packSrv || !(\"id\" in selectedPacks[0]) || (pack as IPacksInstalledGlobal).system || !packsMgr.isPackStatusInstalled(pack.installStatus)) return false;\n\t\tif (!pack.packSrv.universe.reg.hasPerm(this.downloadOnSrvPerm)) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tisVisible(ctx: IPackActionCtx): boolean {\n\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\tif (packsMgr.packSrvList && packsMgr.packSrvList.findIndex((packSrv) => {\n\t\t\treturn packSrv.universe.reg.hasPerm(this.downloadOnSrvPerm);\n\t\t}) == -1) return false;\n\t\treturn super.isVisible(ctx as any);\n\t}\n\n\tasync execute(ctx: IPackActionCtx, ev?: Event): Promise<void> {\n\t\tconst packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\ttry {\n\t\t\t//const packsMgr = DOMSH.findHost<PacksMgr<any, any>>(ctx.grid);\n\t\t\tlet selectedPacks = (ctx.grid.dataHolder as GridDataHolderJsonArray<IPortalPacks<IPacksBaseGlobal | IPacksInstalledGlobal> | IPacksBaseGlobal | IPacksInstalledGlobal>).getSelectedDatas();\n\t\t\tlet pack = selectedPacks[0] as IPacksInstalledGlobal;\n\t\t\t/*const blobRef =  URL.createObjectURL(await WSPPACK.downloadPack(pack.packSrv, pack.id));\n\t\t\t// FIXME : Content-Disposition: attachment;filename=pack.wsppack fourni par la response non pris en compte dans ce contexte, meme en l'absence de @download\n\t\t\tconst a = <a href={blobRef} download={IO.getValidFileName(pack.title || pack.id, packsMgr.extension4download, \"dateTime\")}/> as HTMLAnchorElement;\n\t\t\tURL.revokeObjectURL(blobRef);\n\t\t\t*/\n\t\t\tconst a = <a href={this.downloadPackUrlOnSrv(pack.packSrv, pack.id)}/> as HTMLAnchorElement;\n\t\t\ta.click();\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"TÃ©lÃ©chargement impossible\", e);\n\t\t}\n\t}\n\n\tstatic SINGLETON = new DownloadWspPackAction();\n}\n\n// ###\n// # SkinPack\n// #\nexport class SkinPacksMgr extends PacksMgr<JWspPackInstalled | JWspPackBase, IPacksBaseGlobal | IPacksInstalledGlobal> {\n\n\tprotected async _initialize(init: OPacksMgrInit): Promise<void> {\n\t\tif (!init.packExtensions) init.packExtensions = [\".skinpack\"];\n\t\tsuper._initialize(init);\n\t}\n\n\tprotected overrideInitialize(init: OPacksMgrInit): void {\n\t\t/** Actions **/\n\t\tthis.reg.addToList(\"actions:packs:packsmgr\", \"actionRemovePacks\", 1, RemoveSkinPackAction.SINGLETON);\n\t\tthis.reg.addToList(\"actions:packs:packsmgr\", \"actionDownloadPack\", 1, DownloadSkinPackAction.SINGLETON);\n\n\t\tthis.reg.addToList(\"actions:packs:packsmgr:toolbar\", \"actionInstallPack\", 1, InstallSkinPackAction.SINGLETON);\n\n\t\t/** Accelkeys **/\n\t\tthis.reg.addToList(\"accelkeys:packs:packsmgr\", \"Delete\", 1, RemoveSkinPackAction.SINGLETON);\n\n\t\t/** Grid **/\n\t\tlet columnDefs = [];\n\t\tcolumnDefs.push(\n\t\t\tnew GridColTreeDef('packTitle').setLabel(\"Habillage graphique\")\n\t\t\t\t.setDefaultSort(1, 'ascendant')\n\t\t\t\t.setFlex('25em', 1, 1).setMinWidth('8em').setSortable(true)\n\t\t\t\t.setCellBuilder(new CellBuildedSkinPackTitle()),\n\t\t\tnew GridColDef('usedInModels').setLabel(\"ModÃ¨les\")\n\t\t\t\t.setDescription(\"ModÃ¨les installÃ©s utilisant cet habillage graphique\")\n\t\t\t\t.setFlex('3em', 1, 1).setMinWidth('3em').setSortable(false)\n\t\t\t\t.setCellBuilder(new CellBuilderSkinPackModels(this)),\n\t\t\tnew GridColDef('installDate').setLabel(\"Date\").setDescription(\"Date d'installation\")\n\t\t\t\t.setFlex('3em', 1, 1).setMinWidth('3em').setSortable(true)\n\t\t\t\t.setCellBuilder(new CellBuilderDate('installDate').setCellClass(\"center\")\n\t\t\t\t\t.setDescriptionFunc(function (this: CellBuilderDate, row: IGridDataRow) {\n\t\t\t\t\t\tconst d = this.getDate(row);\n\t\t\t\t\t\treturn d ? Date.prototype.toLocaleDateString.call(this.getDate(row), \"fr\", {weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: \"numeric\"}) : \"\";\n\t\t\t\t\t})),\n\t\t\tnew GridColDef('installStatus').setLabel(\"Statut\")\n\t\t\t\t.setFlex('5em', 1, 1).setMinWidth('4em').setSortable(true)\n\t\t\t\t.setCellBuilder(new CellBuilderEnum('installStatus', new Map([[\"uploadPending\", \"Envoi en cours...\"], [\"installed\", \"InstallÃ©\"], [\"installFailed\", \"Non installÃ© (Ã©chec)\"]])).setCellClass(\"center\")\n\t\t\t\t\t.override(\"_getValue\", function (this: CellBuilderEnum, row: IGridDataRow): any {\n\t\t\t\t\t\tif (row.getData(\"packs\")) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (row.getData(\"system\"))\n\t\t\t\t\t\t\t\treturn \"SystÃ¨me (non modifiable)\"\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (SKINPACK.isStatusInstalled(row.getData(\"installStatus\")) && row.getData(\"error\")) return \"Non disponible\";\n\t\t\t\t\t\t\t\treturn this.mappingTable.get(row.getData(this.dataKey)) || \"InstallÃ©\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t);\n\n\t\tif (!init.packsGrid) init.packsGrid = [] as OPacksGridInit;\n\t\tif (init.packsGrid.columnDefs === undefined) init.packsGrid.columnDefs = columnDefs;\n\t}\n\n\tisPackStatusPending(status: any): boolean {\n\t\treturn SKINPACK.isStatusPending(status);\n\t}\n\n\tisPackStatusInstalled(status: any): boolean {\n\t\treturn SKINPACK.isStatusInstalled(status);\n\t}\n\n\t// Le svc des skins ne prÃ©serve pas l'infos des derniers skins installÃ©s en erreur => prÃ©servation UI\n\t_showLastNotInstalledPacksOnRefreshAll: boolean = true;\n\n\tprotected buildPackTitle(pack: IPacksBaseGlobal): string {\n\t\treturn SKINPACK.buildPackTitle(pack);\n\t}\n\n\n\tasync loadPacksListFromSRvs() {\n\t\tthis._lastPacksListFromSrvs = [];\n\n\t\treturn Promise.all(this.packSrvList.map(async (packSrv) => {\n\t\t\tif (packSrv.universe.reg.hasPerm(\"action.skinPacksMgr#list\")) {\n\t\t\t\ttry {\n\t\t\t\t\t// - Liste des packs\n\t\t\t\t\tlet packs = await SKINPACK.list(packSrv);\n\t\t\t\t\tif (packs)\n\t\t\t\t\t\tawait Promise.all(packs.map((pack) => {\n\t\t\t\t\t\t\tlet config: (IPacksBaseGlobal | IPacksInstalledGlobal) = Object.create(pack);\n\t\t\t\t\t\t\tconfig.packSrv = packSrv;\n\t\t\t\t\t\t\tthis._lastPacksListFromSrvs.push(config);\n\t\t\t\t\t\t}));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tPOPUP.showNotifError(\"Rafraichissement partiel de l'Ã©cran\", this.grid);\n\t\t\t\t\tawait ERROR.log(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t/**\n\t * Retourne true si les packs peuvent Ãªtre affichÃ©s sur au moins un packSrv\n\t */\n\tstatic isAvailable(universes: (CoreUniverse & IPacksInUniverse)[]): boolean {\n\t\tif (universes) {\n\t\t\treturn universes.findIndex((univ) => {\n\t\t\t\treturn univ.reg.hasPerm(\"action.wspPacksMgr#list\");\n\t\t\t}) > -1;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected emptyBody() {\n\t\tswitch (this.fetchState) {\n\t\tcase \"done\":\n\t\t\treturn <c-msg>Aucun habillage graphique installÃ©</c-msg>;\n\t\tcase \"failed\":\n\t\t\treturn <c-msg level=\"error\">Ãchec au chargement</c-msg>;\n\t\tdefault:\n\t\t\treturn <c-msg>Chargement en cours...</c-msg>;\n\t\t}\n\t}\n}\n\ncustomElements.define(\"skin-packsmgr\", SkinPacksMgr);\n\n/** Skin global du packMgr **/\nREG.reg.registerSkin('skin-packsmgr', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n`);\n\n/**\n * Colonne de titre du wsp pack\n */\nclass CellBuildedSkinPackTitle extends CellBuildeWspPackTitle {\n\n\tprotected _getIcon(row: IGridDataRow): string {\n\t\tconst packSrv = row.getData(\"packSrv\") as PackSrv;\n\t\tconst skinSetCode = row.getData(\"skinSetCode\");\n\t\tconst hasSkinSetIcon = row.getData(\"skinSetIcon\") ? true : false;\n\t\tconst installStatus = row.getData(\"installStatus\") as ESkinPackStatus;\n\t\tif (this._isPortalRow(row))\n\t\t\treturn null;\n\t\treturn ((!SKINPACK.isStatusPending(installStatus) && packSrv && skinSetCode && hasSkinSetIcon) ? SKINPACK.getIconUrl(packSrv, skinSetCode) : \"\") || \"/@skin@/wsp/dialogs/packsMgr/skinppack.svg\";\n\t}\n\n\tprotected _getDescription(row: IGridDataRow): any {\n\t\tlet fullDescStr: string[] = [];\n\t\tif (row.getData(\"error\"))\n\t\t\tfullDescStr.push(SKINPACK.errorToString(row.getData(\"error\") as ESkinPackErrors));\n\t\t// - buildId\n\t\tconst buildId = row.getData(\"buildId\");\n\t\tif (buildId)\n\t\t\tfullDescStr.push(`Identifiant de compilation du pack : ${buildId}`);\n\t\t// - skinClasses\n\t\tconst skinClasses: string[] = row.getData(\"skinClasses\");\n\t\tif (skinClasses && skinClasses.length) {\n\t\t\tfullDescStr.push(`Classes de skin stylÃ©es par cet habillage graphique :`);\n\t\t\tskinClasses.forEach((entry) => fullDescStr.push(` - ${entry}`))\n\t\t}\n\t\treturn fullDescStr.join(\"\\n\");\n\t}\n}\n\n/** Cellule donnant les modÃ¨les installÃ©s compatibles avec le skinPack */\nexport class CellBuilderSkinPackModels extends CellBuilderString {\n\tconstructor(protected packsMgr: PacksMgr<any, any>) {\n\t\tsuper(null);\n\t}\n\n\tredrawCell(row: GridDataRowJson<IPacksBaseGlobal | IPacksInstalledGlobal>, root: HTMLElement): void {\n\t\tconst cacheHolder = row.cacheHolder;\n\t\tlet cache: JSkinClassesForWspType[] | Promise<JSkinClassesForWspType[]> = cacheHolder[\"-models\"];\n\t\tconst rowDatas = row.rowDatas;\n\n\t\tif (cache == null) {\n\t\t\tDOM.setTextContent(root, '...');\n\t\t\tcacheHolder[\"-models\"] = cache = SKINPACK.ListSkinClassesForWspType(rowDatas.packSrv, rowDatas.id).then((resp) => {\n\t\t\t\tif (cacheHolder[\"-models\"] !== cache) return; //raceCond : les donnÃ©es de cette row ont Ã©voluÃ©es.\n\t\t\t\treturn cacheHolder[\"-models\"] = resp;\n\t\t\t});\n\t\t}\n\n\t\tif (cache instanceof Promise) {\n\t\t\t//cache non resetÃ© mais calcul en cours, on attend\n\t\t\tDOM.setTextContent(root, '...');\n\t\t\t(root as any)._modelsPending = cache; //raceCond pour refresh async de la line HTML.\n\t\t\tcache.then(() => {\n\t\t\t\tif ((root as any)._modelsPending !== cache) return; //raceCond : cette line HTML a Ã©tÃ© redessinÃ©e\n\t\t\t\t(root as any)._modelsPending = null; //cleanup\n\t\t\t\tredrawCellUi.call(this);\n\t\t\t});\n\t\t} else {\n\t\t\t(root as any)._modelsPending = null; //raceCond pour refresh async de la line HTML.\n\t\t\tredrawCellUi.call(this);\n\t\t}\n\n\t\tfunction redrawCellUi(this: CellBuilderSkinPackModels) {\n\t\t\tDOM.setTextContent(root, null);\n\t\t\tconst skinClassesForWspType: JSkinClassesForWspType[] = cacheHolder[\"-models\"];\n\t\t\tif (skinClassesForWspType && skinClassesForWspType.length) {\n\t\t\t\tconst list = skinClassesForWspType.sort((e1, e2) => {\n\t\t\t\t\tif ((e1.wspTypeRef as JWspOptionDef).isOption && !(e2.wspTypeRef as JWspOptionDef).isOption) return 1;\n\t\t\t\t\tif ((e2.wspTypeRef as JWspOptionDef).isOption && !(e1.wspTypeRef as JWspOptionDef).isOption) return -11;\n\t\t\t\t\treturn e2.wspTypeRef.title.localeCompare(e1.wspTypeRef.title);\n\t\t\t\t});\n\t\t\t\tif (skinClassesForWspType.length < 3) {\n\t\t\t\t\tDOM.setTextContent(root, skinClassesForWspType.map((entry) => entry.wspTypeRef.title).join(\", \"));\n\t\t\t\t} else {\n\t\t\t\t\tconst base = skinClassesForWspType.slice(0, 2).map((entry) => entry.wspTypeRef.title).join(\", \");\n\t\t\t\t\tDOM.setTextContent(root, `${base}...`);\n\t\t\t\t}\n\t\t\t\troot.title = \"ModÃ¨les installÃ©s utilisant cet habillage graphique :\\n\";\n\t\t\t\troot.title += skinClassesForWspType.map((entry) => `- ${entry.wspTypeRef.title}`).join(\"\\n\");\n\t\t\t} else {\n\t\t\t\tDOM.setTextContent(root, 'Aucun');\n\t\t\t\tdelete root.title;\n\t\t\t}\n\t\t\t//DOM.setAttr(refElt, \"href\", cacheHolder[\"-models\"]);\n\t\t\t//DOM.setTextContent(refElt, cacheHolder[\"-models\"]);\n\t\t}\n\n\t}\n}\n\n/**\n * Action : tÃ©lÃ©chargement d'un skin pack\n */\nexport class DownloadSkinPackAction extends DownloadWspPackAction {\n\tprotected downloadOnSrvPerm = \"action.packsMgr#download.skinPack\";\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"downloadSkinPack\");\n\t\tthis._label = \"TÃ©lÃ©charger...\";\n\t\tthis._description = \"TÃ©lÃ©charger l'habillage graphique\";\n\t\tthis._group = \"packs\";\n\t\tthis.setIcon(\"/@skin@/wsp/dialogs/packsMgr/downloadPack.svg\");\n\t}\n\n\tprotected downloadPackUrlOnSrv(packServer: PackSrv, packId: string): string {\n\t\treturn SKINPACK.getDownloadPackUrl(packServer, packId);\n\t}\n\n\tstatic SINGLETON = new DownloadSkinPackAction();\n}\n\n/**\n * Action : suppression de packs\n */\nexport class RemoveSkinPackAction extends RemoveWspPackAction {\n\tprotected uninstallOnSrvPerm = \"action.packsMgr#uninstall.skinPack\";\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"removeSkinPack\");\n\t\tthis._label = \"DÃ©sinstaller\";\n\t\tthis._description = \"DÃ©sinstaller l'habillage graphique\";\n\t\tthis._group = \"packs\";\n\t\tthis.setIcon(\"/@skin@/wsp/dialogs/packsMgr/deletePack.svg\");\n\t}\n\n\tprotected async doUninstallOnSrv(packServer: PackSrv, packId: string): Promise<void> {\n\t\treturn SKINPACK.deleteSkin(packServer, packId);\n\t}\n\n\tstatic SINGLETON = new RemoveSkinPackAction();\n}\n\n\n/**\n * Contexte d'un ou plusieurs packs\n */\nexport interface IPackActionCtx {\n\treg: IReg<any>\n\tgrid: GridSmall\n}\n\n\n/** Actions **/\n\n/**\n * Refresh UI\n */\nconst actionRefreshUi = new Action<any>(\"refreshUi\")\n\t.setLabel(\"Rafraichir\")\n\t.setGroup(\"refresh\")\n\t.setIcon(\"/@skin@/commons/icons/refresh.svg\")\n\t.setExecute(async function (this: Action<any>, ctx: PacksMgr<any, any>, ev: Event) {\n\t\t\tawait ctx.refreshUi();\n\t\t}\n\t);\n\n"]}