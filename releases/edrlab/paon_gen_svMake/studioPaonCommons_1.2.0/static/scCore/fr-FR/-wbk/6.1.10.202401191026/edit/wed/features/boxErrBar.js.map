{"version":3,"sources":["/@back@/edit/wed/features/boxErrBar.tsx"],"names":["findWedEditor","WEDLET","isWedletSingleElt","OffView","JSX","ShadowJsx","XA","EAnnotLevel","SkAnnotAttrUnknown","SkAnnotEltUnknown","SkAnnotTextForbidden","REG","POPUP","GFX","BoxHiddenWedlet","AgBoxErrBarEditor","cls","proto","prototype","superInit","initialize","config","hideErrBar","call","this","errBar","BoxErrBar","init","barLayout","showBar","HTMLElement","[object Object]","super","id","wedEditor","hideUnknownBar","unknownBarShown","style","width","display","flexDirection","container","appendChild","createElement","ctnStyle","flexShrink","position","clear","wedMgr","listeners","on","onSkAnnots","rootNode","addEventListener","Promise","resolve","then","lastSkAnnots","textContent","skin","reg","label","onclick","delUnknowns","title","ui-context","editor","readOnly","showNotifForbidden","batch","docHolder","newBatch","annots","getAnnots","rootWedlet","wedAnchor","annot","type","TYPE","deleteSequence","start","needAdjustForNextAdds","setAttr","doBatch","registerSkin","window","customElements","define","deadline","timeRemaining","isAvailable","rootTop","rootHeight","totalPercent","rootRect","element","getBoundingClientRect","top","scrollHeight","map","Map","marks","countUnknown","i","length","level","weight","result","wedlet","findWedlet","offset","incrAtDepth","rect","getContextBoundingRect","push","ErrBarMark","Math","trunc","height","up","FINDOPTIONS_lastAncestorIfNone","anchor","wedParent","prevAnnot","get","set","prevTopPercent","prevMark","forEach","topPercent","ctn","ErrBarCtn","grp","k","other","anchorNode","addAnnots","buildUnknownBar","removeBar","left","right","cursor","_onClick","computeAnnots","redraw","callRedraw","a","future","bind","info","ti","count","countMore","maxLabels","sort","a1","a2","max","getLabel","_a","parentNode","localName","nextSibling","previousSibling","parentElement","remove","backgroundColor","levelColors","setAttribute","ev","find","focusAnnot","heightPercent","justifyContent"],"mappings":"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","sourcesContent":["import {IWedEdBar, IWedEditorMain, OWedEditorMainConfig, WedMgr} from \"back/edit/wed/wedEditor\";\nimport {findWedEditor, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {isWedletSingleElt, IWedletSingleElt, OffView} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {JSX, ShadowJsx} from \"lib/commons/xml/dom\";\nimport {XA} from \"lib/commons/xml/xAddr\";\nimport {EAnnotLevel, ISkAnnot, SkAnnotAttrUnknown, SkAnnotEltUnknown, SkAnnotTextForbidden} from \"lib/edit/schema/schemaAnnots\";\nimport {REG} from \"lib/commons/registry\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {GFX} from \"lib/commons/utils/gfx\";\nimport {BoxHiddenWedlet} from \"back/edit/wed/wedlets/box/box\";\n\n\n/** Barre verticale d'affichage d'erreur. ATTENTION, exige un IDocHolderSync. */\nexport interface IWedEditorBoxErrBar extends IWedEditorMain {\n\terrBar: IBoxErrBar;\n}\n\nexport interface OWedEditorErrBarConfig extends OWedEditorMainConfig {\n\thideErrBar?: boolean;\n\n\t/** N'affichera pas la barre globale \"unknownBar\" si des élements inconnus sont présents. Utile que si hideErrBar!==true. */\n\thideUnknownBar?: boolean;\n}\n\nexport function AgBoxErrBarEditor(cls: any): any {\n\tconst proto = cls.prototype as IWedEditorBoxErrBar;\n\tconst superInit = proto.initialize;\n\tproto.initialize = function (this: IWedEditorBoxErrBar, config: OWedEditorErrBarConfig) {\n\t\tif (config.hideErrBar) {\n\t\t\tsuperInit.call(this, config);\n\t\t} else {\n\t\t\tsuperInit.call(this, config);\n\t\t\tthis.errBar = new BoxErrBar().init(this, config);\n\t\t\tthis.barLayout.showBar(this.errBar);\n\t\t}\n\t\treturn this;\n\t};\n\treturn cls;\n}\n\nexport interface IBoxErrBar extends IWedEdBar {\n}\n\nexport class BoxErrBar extends HTMLElement implements IBoxErrBar {\n\n\twedEditor: IWedEditorBoxErrBar;\n\n\tcontainer: HTMLElement;\n\n\tunknownBarShown?: HTMLElement | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.id = \"errorBar\";\n\t}\n\n\t// TODO box-errorbar stylable\n\tinit(wedEditor: IWedEditorBoxErrBar, config: OWedEditorErrBarConfig): this {\n\t\tthis.wedEditor = wedEditor;\n\n\t\tif (!config.hideUnknownBar) this.unknownBarShown = null; //Marque que cette barr peut être affichée.\n\n\t\tconst style = this.style;\n\t\tstyle.width = \".8em\";\n\t\tstyle.display = \"flex\";\n\t\tstyle.flexDirection = \"column\";\n\t\tthis.container = this.appendChild(<div/>);\n\t\tconst ctnStyle = this.container.style;\n\t\tctnStyle.flexShrink = \"1\";\n\t\tctnStyle.position = \"relative\";\n\t\tthis.clear();\n\n\t\twedEditor.wedMgr.listeners.on(\"asyncSkAnnots\", onSkAnnots);\n\t\tthis.wedEditor.rootNode.addEventListener(\"wed-resized\", () => {\n\t\t\tconst wedMgr = this.wedEditor.wedMgr;\n\t\t\tPromise.resolve().then(() => {onSkAnnots(wedMgr, wedMgr.lastSkAnnots)});\n\t\t});\n\t\treturn this;\n\t}\n\n\tclear() {\n\t\tthis.container.textContent = null;\n\t}\n\n\tbuildUnknownBar() {\n\t\tthis.unknownBarShown = <div id=\"unknownBar\">\n\t\t\t<ShadowJsx skin=\"box-errbar/unknownBar\" reg={this.wedEditor.wedMgr.reg}>\n\t\t\t\t<span>Des éléments inconnus sont présents...</span>\n\t\t\t\t<c-button label=\"Supprimer\" onclick={this.delUnknowns} title=\"Supprime tous les éléments inconnus.\" ui-context=\"dialog\"/>\n\t\t\t</ShadowJsx>\n\t\t</div>;\n\t}\n\n\tdelUnknowns(this: Button) {\n\t\tconst editor = findWedEditor(this) as IWedEditorBoxErrBar;\n\t\tconst wedMgr = editor.wedMgr;\n\t\tif (wedMgr.readOnly) {\n\t\t\tPOPUP.showNotifForbidden(\"Modification interdite\", this);\n\t\t\treturn;\n\t\t}\n\t\tconst batch = wedMgr.docHolder.newBatch();\n\t\tconst annots = wedMgr.docHolder.getAnnots(wedMgr.rootWedlet.wedAnchor);\n\t\tfor (const annot of annots) {\n\t\t\tif (annot.type === SkAnnotEltUnknown.TYPE || annot.type === SkAnnotTextForbidden.TYPE) {\n\t\t\t\tbatch.deleteSequence(annot.start, 1).needAdjustForNextAdds();\n\t\t\t} else if (annot.type === SkAnnotAttrUnknown.TYPE) {\n\t\t\t\tbatch.setAttr(annot.start, null).needAdjustForNextAdds();\n\t\t\t}\n\t\t}\n\t\tbatch.doBatch();\n\t}\n}\n\n\nREG.reg.registerSkin('box-errbar/unknownBar', 1, /* language=CSS */ `\n\t:host {\n\t\tcolor: var(--error-color);\n\t\ttext-align: center;\n\t}\n\n\tc-button {\n\t\tdisplay: inline-flex;\n\t}\n`);\n\nwindow.customElements.define(\"box-errbar\", BoxErrBar);\n\n//TODO revoir algo:\n// - une seule annot par mark (le cas où plusieurs annots sont vraiment sur le même noeud est rare, envisager une annot container)\n// - class js simples pour ErrBarMark(annot, offsetTop) et ErrBarCtn(wedlet, annots, offsetTop, height).\n// - layout flex avec empilement des marks, container de marks (wed-offview) et div flex d'espacement\n// - dans le new tableau des annots, on remplace les annots par les ErrBarMark ou ErrBarCtn qui wrap les annnots et fixe l'offsetTop\n//   en fonction du wedlet associé.\n// - l'accumulation des annots dans  le même ErrBarCtn est simple car les annots sont ordonnés dans l'ordre naturel des noeuds,\n//   on peut donc retrouver le ErrBarCtn précédent, vérifier qu'il opointe le même wedlet, y ajouter l'annot,\n//   et mettre null à l'offset dans le tableau.\n// - on trie le tableau selon l'offsetTop (gestion de cas particuliers où l'organisation en hauteur ne correspond pas à l'ordre naturel, colonnage...)\n// - on parcours les annots déjà dessinés qu'on compare à ceux du tableau par rapport à l'offsetTop et le title (demain un level ?)\n//   et on met à jour et injecte les diff (à la React).\n\n\nfunction onSkAnnots(wedMgr: WedMgr, annots: ISkAnnot[], deadline?: RequestIdleDeadline): void | ((wedMgr: WedMgr, annots: ISkAnnot[], deadline: RequestIdleDeadline) => void) {\n\tif (deadline?.timeRemaining() < 5) return onSkAnnots;\n\tconst errBar = (wedMgr.wedEditor as IWedEditorBoxErrBar).errBar as BoxErrBar;\n\tconst docHolder = wedMgr.docHolder;\n\tif (!docHolder || !docHolder.isAvailable) return;\n\n\tconst rootWedlet = wedMgr.rootWedlet;\n\tlet rootTop: number;\n\tlet rootHeight: number;\n\tlet totalPercent: number;\n\tif (isWedletSingleElt(rootWedlet)) {\n\t\tconst rootRect = rootWedlet.element.getBoundingClientRect();\n\t\trootTop = rootRect.top;\n\t\trootHeight = rootWedlet.element.scrollHeight;\n\t\ttotalPercent = rootHeight / 100;\n\t} else {\n\t\terrBar.clear();\n\t\treturn;\n\t}\n\n\t// if(annots.length > 100) {\n\t// \t//TODO Mode d'affichage avec trop d'erreurs...\n\t//  return;\n\t// }\n\n\tconst map = new Map<IWedletSingleElt, ISkAnnot[]>();\n\tconst marks = [] as Array<ErrBarMark | ErrBarCtn>;\n\tlet countUnknown = 0;\n\tfor (let i = 0; i < annots.length; i++) {\n\t\tconst annot = annots[i];\n\t\tif (annot.level.weight < 0 || annot.result === null) continue;\n\t\tlet wedlet: IWedlet;\n\t\tif (\"anchor\" in annot) {//Ancrage, pas sur un noeud, mais dans un interstice (Missing et diffForeign annots)\n\t\t\t//Cas particulier pour le placement d'un noeud manquant ou étranger.\n\t\t\tlet start = annot.start;\n\t\t\twedlet = WEDLET.findWedlet(rootWedlet, start);\n\t\t\tif (!wedlet && annot.offset > 0) {\n\t\t\t\tstart = XA.incrAtDepth(start, -1, -1);\n\t\t\t\twedlet = WEDLET.findWedlet(rootWedlet, start);\n\t\t\t\tif (isWedletSingleElt(wedlet)) {\n\t\t\t\t\tconst rect = GFX.getContextBoundingRect(wedlet.element);\n\t\t\t\t\tif (rect) marks.push(new ErrBarMark().init([annot], Math.trunc((rect.top + rect.height - rootTop) / totalPercent)));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!wedlet) wedlet = WEDLET.findWedlet(rootWedlet, XA.up(start), WEDLET.FINDOPTIONS_lastAncestorIfNone);\n\t\t} else {\n\t\t\twedlet = WEDLET.findWedlet(rootWedlet, annot.anchor || annot.start, WEDLET.FINDOPTIONS_lastAncestorIfNone);\n\t\t}\n\t\tif (wedlet instanceof BoxHiddenWedlet) continue; //on masque les erreurs des BoxHidden.\n\t\twhile (wedlet && !isWedletSingleElt(wedlet)) wedlet = wedlet.wedParent;\n\t\tif (!wedlet) continue;\n\t\tconst prevAnnot = map.get(wedlet as IWedletSingleElt);\n\t\tif (!prevAnnot) {\n\t\t\tmap.set(wedlet as IWedletSingleElt, [annot]);\n\t\t} else {\n\t\t\tprevAnnot.push(annot);\n\t\t}\n\t\tif (annot.type === SkAnnotEltUnknown.TYPE || annot.type === SkAnnotAttrUnknown.TYPE || annot.type === SkAnnotTextForbidden.TYPE) {\n\t\t\tcountUnknown++;\n\t\t}\n\t}\n\n\tlet prevTopPercent = -1;\n\tlet prevMark: ErrBarMark;\n\n\tmap.forEach((annots: ISkAnnot[], wedlet: IWedletSingleElt) => {\n\t\tconst rect = GFX.getContextBoundingRect(wedlet.element);\n\t\tif (!rect) return;\n\t\tconst topPercent = Math.trunc((rect.top - rootTop) / totalPercent);\n\t\tif (annots.length > 1 && wedlet.element instanceof OffView) {\n\t\t\tconst ctn = new ErrBarCtn().init(topPercent, Math.trunc(rect.height / totalPercent));\n\t\t\tfor (let i = 0; i < annots.length; i++) {\n\t\t\t\tconst annot = annots[i];\n\t\t\t\tif (!annot || annot.result === null) continue;\n\t\t\t\tconst grp = [annot];\n\t\t\t\tfor (let k = i + 1; k < annots.length; k++) {\n\t\t\t\t\tconst other = annots[k];\n\t\t\t\t\tif (other && other.anchorNode === annot.anchorNode) {\n\t\t\t\t\t\tgrp.push(other);\n\t\t\t\t\t\tannots[k] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tctn.appendChild(new ErrBarMark().init(grp));\n\t\t\t}\n\t\t\tmarks.push(ctn);\n\t\t} else {\n\t\t\tif (prevTopPercent === topPercent) {\n\t\t\t\tprevMark.addAnnots(annots);\n\t\t\t} else {\n\t\t\t\tprevTopPercent = topPercent;\n\t\t\t\tprevMark = new ErrBarMark().init(annots, topPercent);\n\t\t\t\tmarks.push(prevMark);\n\t\t\t}\n\t\t}\n\t});\n\n\t//TODO trier marks selon topPercent pour traiter ceux qui ont le même topPercent et gérer un affichage non superposé.\n\n\t//console.log(\"remaintime after computing\", deadline.timeRemaining());\n\terrBar.clear();\n\terrBar.container.style.height = rootHeight + \"px\";\n\tfor (let i = 0; i < marks.length; i++) {\n\t\terrBar.container.appendChild(marks[i]);\n\t}\n\n\t// Gestion de la barre des éléments inconnus.\n\tif ('unknownBarShown' in errBar) {\n\t\tif (countUnknown > 0) {\n\t\t\tif (!errBar.unknownBarShown) {\n\t\t\t\terrBar.buildUnknownBar();\n\t\t\t\terrBar.wedEditor.barLayout.showBar(errBar.unknownBarShown);\n\t\t\t}\n\t\t} else {\n\t\t\tif (errBar.unknownBarShown) {\n\t\t\t\terrBar.wedEditor.barLayout.removeBar(errBar.unknownBarShown);\n\t\t\t\terrBar.unknownBarShown = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t//console.log(\"remaintime after redraw\", deadline.timeRemaining());\n}\n\nclass ErrBarMark extends HTMLElement {\n\ttopPercent?: number;\n\tannots: ISkAnnot[];\n\n\tinit(annots: ISkAnnot[], topPercent?: number): this {\n\t\tthis.annots = annots;\n\t\tif (topPercent != null) {\n\t\t\tthis.topPercent = topPercent;\n\t\t\tthis.style.position = \"absolute\";\n\t\t\tthis.style.top = topPercent + \"%\";\n\t\t}\n\t\tthis.style.height = \"3px\";\n\t\tthis.style.left = \"0\";\n\t\tthis.style.right = \"0\";\n\t\tthis.style.cursor = \"pointer\";\n\t\tthis.addEventListener(\"click\", this._onClick);\n\t\tthis.computeAnnots(annots);\n\t\tthis.redraw();\n\t\treturn this;\n\t}\n\n\taddAnnots(annots: ISkAnnot[]) {\n\t\tthis.annots.push(...annots);\n\t\tthis.computeAnnots(annots);\n\t\tthis.redraw();\n\t}\n\n\tprotected computeAnnots(annots: ISkAnnot[]) {\n\t\tlet callRedraw: () => void;\n\t\tfor (const a of annots) {\n\t\t\tif (a.future) a.future.then(callRedraw || (callRedraw = this.redraw.bind(this)));\n\t\t}\n\t}\n\n\tprotected redraw() {\n\t\tlet level = EAnnotLevel.info;\n\t\tlet ti: string;\n\t\tlet count = 0;\n\t\tlet countMore = 0;\n\t\tconst maxLabels = 5;\n\t\tthis.annots.sort((a1, a2) => !a1 && !a2 ? a1 ? -1 : a2 ? 1 : 0 : a2.level.weight - a1.level.weight); //Plus grave en 1er.\n\t\tfor (let i = 0; i < this.annots.length; i++) {\n\t\t\tconst a = this.annots[i];\n\t\t\tif (a && a.result !== null) { //a non null et non résolu à null.\n\t\t\t\tlevel = level.max(a.level);\n\t\t\t\tif (++count < maxLabels) {\n\t\t\t\t\tif (ti) ti += \"\\n\" + a.getLabel();\n\t\t\t\t\telse ti = a.getLabel();\n\t\t\t\t} else {\n\t\t\t\t\tcountMore++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (count === 0) {\n\t\t\tif (this.parentNode?.parentNode && this.parentNode.localName === \"errbar-ctn\" && !this.nextSibling && !this.previousSibling) {\n\t\t\t\tthis.parentElement.remove();\n\t\t\t} else {\n\t\t\t\tthis.remove();\n\t\t\t}\n\t\t} else {\n\t\t\tif (countMore > 0) ti += `\\n(et ${countMore} autres)`;\n\t\t\tthis.style.backgroundColor = levelColors[level.weight];\n\t\t\tthis.setAttribute(\"title\", ti);\n\t\t}\n\t}\n\n\tprotected async _onClick(ev: MouseEvent) {\n\t\tconst annot = this.annots.find((a) => a && !a.future && !a.result !== null) || this.annots.find((a) => a != null);\n\t\tWEDLET.focusAnnot(findWedEditor(this).wedMgr, annot);\n\t}\n}\n\nconst levelColors = ['white', 'var(--fade-color)', 'var(--warning-color)', 'var(--error-color)', 'var(--edit-diff-color)', 'var(--edit-diffrem-color)', 'var(--edit-diffadd-color)', 'var(--edit-search-bgcolor)'];\n\nwindow.customElements.define(\"errbar-mark\", ErrBarMark);\n\n/** Container de marks pour les box off-view qu'on ne peut placer précisément. */\nclass ErrBarCtn extends HTMLElement {\n\ttopPercent: number;\n\theightPercent: number;\n\n\tinit(topPercent: number, heightPercent: number): this {\n\t\tthis.topPercent = topPercent;\n\t\tthis.heightPercent = heightPercent;\n\t\tthis.style.position = \"absolute\";\n\t\tthis.style.top = topPercent + \"%\";\n\t\tthis.style.height = heightPercent > 0 ? heightPercent + \"%\" : \"3px\";\n\t\tthis.style.left = \"0\";\n\t\tthis.style.right = \"0\";\n\t\tthis.style.display = \"flex\";\n\t\tthis.style.flexDirection = \"column\";\n\t\tthis.style.justifyContent = \"space-around\";\n\t\treturn this;\n\t}\n}\n\nwindow.customElements.define(\"errbar-ctn\", ErrBarCtn);"]}