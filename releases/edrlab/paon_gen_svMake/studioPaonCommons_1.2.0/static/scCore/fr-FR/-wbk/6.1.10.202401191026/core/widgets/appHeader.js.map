{"version":3,"sources":["/@back@/core/widgets/appHeader.tsx"],"names":["BaseElement","BASIS","MsgLabel","BarActions","BarShared","REG","JSX","DOMSH","AppHeader","[object Object]","init","this","reg","findReg","actionContext","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","row1","appendChild","createElement","forceSharedBar","getUserData","name","initBar","newInit","sharedBar","focusListening","î","slot","mainActions","length","initMain","mainBar","actions","_mainActions","insertBefore","initialize","firstChild","moreActions","initMore","moreBar","_barActions","super","refresh","msg","level","icon","_headband","class","isConnected","shadowRoot","setCustomMsg","remove","registerSkin","customElements","define"],"mappings":"OAAQA,YAAaC,MAAOC,aAAwB;OAC5CC,WAAYC,cAA2C;OAEzCC,QAAI;OAClBC,QAAI;OACJC,UAAM;OA2CR,MAAOC,kBAAqBR,YAYvBS,YAAYC,MACrBC,KAAKC,IAAMD,KAAKE,QAAQH;AACxBC,KAAKG,cAAgBJ,KAAKI;AAE1B,MAAMC,GAAKJ,KAAKK,aAAaT,MAAMU;AACnCN,KAAKO,oBAAoBP,KAAKQ,UAAWT;AACzC,MAAMU,KAAOL,GAAGM,YAAYf,IAAAgB,cAAA,MAAA,KAC3BhB,IAAAgB,cAAA,OAAA;AAED,GAAIZ,KAAKa,iBAAmBZ,KAAKC,IAAIY,YAAY,qBAAsB,MAAO,CAE7ET,GAAGM,YAAYf,IAAAgB,cAAA,OAAA,CAAMG,KAAK;AAC1B,MAAMC,QAAUzB,MAAM0B,QAAQjB,KAAKkB,UAAgCjB,KAAKC;AACxEc,QAAQZ,cAAgBJ,KAAKI;AAC7BY,QAAQG,eAAiBnB,KAAKmB;AAC9BlB,KAAKU,YAAYf,IAAAgB,cAAClB,UAAS,CAAA0B,IAAIJ,QAASK,KAAK,SAE9C,GAAIrB,KAAKsB,aAAetB,KAAKsB,YAAYC,OAAS,EAAG,CACpD,MAAMC,SAAWjC,MAAM0B,QAAQjB,KAAKyB,QAASxB,KAAKC;AAClDsB,SAASpB,cAAgBJ,KAAKI;AAC9BoB,SAASE,QAAU1B,KAAKsB;AACxBrB,KAAK0B,aAAejB,KAAKkB,cAAa,IAAInC,YAAaoC,WAAWL,UAAWd,KAAKoB,YAEnF,GAAI9B,KAAK+B,aAAe/B,KAAK+B,YAAYR,OAAS,EAAG,CACpD,MAAMS,SAAWzC,MAAM0B,QAAQjB,KAAKiC,QAAShC,KAAKC;AAClD8B,SAAS5B,cAAgBJ,KAAKI;AAC9B4B,SAASN,QAAU1B,KAAK+B;AACxB9B,KAAKiC,YAAcxB,KAAKC,aAAY,IAAIlB,YAAaoC,WAAWG,YAIlEjC,UACCoC,MAAMC;AACN,GAAInC,KAAK0B,aAAc1B,KAAK0B,aAAaS;AACzC,GAAInC,KAAKiC,YAAajC,KAAKiC,YAAYE,UAIxCrC,YAAYsC,IAAaC,MAA0BC,MAClD,GAAIF,IAAK,CACR,IAAKpC,KAAKuC,UAAWvC,KAAKuC,UAAY5C,IAAAgB,cAACpB,SAAQ,CAACiD,MAAM;AACtD,IAAKxC,KAAKuC,UAAUE,YAAazC,KAAK0C,WAAWf,aAAa3B,KAAKuC,UAAWvC,KAAK0C,WAAWb;AAC9F7B,KAAKuC,UAAUI,aAAaP,IAAKC,MAAOC,UAClC,CACN,GAAItC,KAAKuC,WAAavC,KAAKuC,UAAUE,YAAazC,KAAKuC,UAAUK,WAMpElD,IAAIO,IAAI4C,aAAa,cAAe,EAAsB;AA6B1DC,eAAeC,OAAO,cAAelD","sourcesContent":["import {BaseElement, BASIS, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {BarActions, BarShared, OBarActionsInit, OBarSharedInit} from \"back/commons/widgets/bars\";\nimport {Action} from \"lib/commons/actions\";\nimport {IReg, IUiEnv, REG} from \"lib/commons/registry\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\n\n/**\n * Entête standard d'une app :\n *\n * [...MainBar...][Zone custom en slot][...MoreBar...]\n * [....................SharedBar....................]\n *\n * La MainBar, MoreBar et la SharedBar partagent le même ationContext.\n * La SharedBar peut être éliminée par la userData \"app.sharedBar.hide\".\n *\n */\nexport interface AppHeader<C> extends BaseElement {\n\tinitialize(init?: OAppHeaderInit<C>): this;\n}\n\nexport interface OAppHeaderInit<C> extends OSkinableInit {\n\t/** Contexte pour les actions. */\n\tactionContext: C\n\n\t/** Liste des actions pour la MainBar. */\n\tmainActions?: Action<C>[]\n\n\t/** Liste des actions pour la MainBar. */\n\tmoreActions?: Action<C>[]\n\n\t/** Noeuds racines sur lesquels écouter les events pour la sharedBar et le menu contextuel. */\n\tfocusListening?: HTMLElement | HTMLElement[]\n\n\t/** Init de la MainBar (actionContext et actions inutiles). */\n\tmainBar?: OBarActionsInit<C>\n\n\t/** Init de la MoreBar (actionContext et actions inutiles). */\n\tmoreBar?: OBarActionsInit<C>\n\n\t/** Init de la SharedBar. */\n\tsharedBar?: OSkinableInit\n\n\t/** Force l'affichage de la sharedBar quelque-soit la userData \"app.sharedBar.hide\"*/\n\tforceSharedBar?: boolean;\n}\n\n\nexport class AppHeader<C> extends BaseElement {\n\treg: IReg<IUiEnv>;\n\n\t/** ActionContext pour les mainActions, moreActions, startActions et endActions de la sharedBar. */\n\tactionContext: C;\n\n\tprotected _headband: MsgLabel;\n\n\tprotected _mainActions: BarActions<C> | undefined;\n\n\tprotected _barActions: BarActions<C> | undefined;\n\n\tprotected _initialize(init: OAppHeaderInit<C>) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.actionContext = init.actionContext;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst row1 = sr.appendChild(<div>\n\t\t\t<slot/>\n\t\t</div>);\n\t\tif (init.forceSharedBar || !this.reg.getUserData('app.sharedBar.hide', true)) {\n\t\t\t//La sharedBar ne peut pas être dans le shadow.\n\t\t\tsr.appendChild(<slot name=\"bar\"/>);\n\t\t\tconst initBar = BASIS.newInit(init.sharedBar as OBarSharedInit<C>, this.reg);\n\t\t\tinitBar.actionContext = init.actionContext;\n\t\t\tinitBar.focusListening = init.focusListening;\n\t\t\tthis.appendChild(<BarShared î={initBar} slot=\"bar\"/>);\n\t\t}\n\t\tif (init.mainActions && init.mainActions.length > 0) {\n\t\t\tconst initMain = BASIS.newInit(init.mainBar, this.reg) as OBarActionsInit<C>;\n\t\t\tinitMain.actionContext = init.actionContext;\n\t\t\tinitMain.actions = init.mainActions;\n\t\t\tthis._mainActions = row1.insertBefore(new BarActions().initialize(initMain), row1.firstChild) as BarActions<C>;\n\t\t}\n\t\tif (init.moreActions && init.moreActions.length > 0) {\n\t\t\tconst initMore = BASIS.newInit(init.moreBar, this.reg) as OBarActionsInit<C>;\n\t\t\tinitMore.actionContext = init.actionContext;\n\t\t\tinitMore.actions = init.moreActions;\n\t\t\tthis._barActions = row1.appendChild(new BarActions().initialize(initMore)) as BarActions<C>;\n\t\t}\n\t}\n\n\trefresh() {\n\t\tsuper.refresh();\n\t\tif (this._mainActions) this._mainActions.refresh();\n\t\tif (this._barActions) this._barActions.refresh();\n\t}\n\n\t/** Affiche une erreur ou une info dans un bandeau supplémentaire. */\n\tsetHeadband(msg: string, level?: 'info' | 'error', icon?: string) {\n\t\tif (msg) {\n\t\t\tif (!this._headband) this._headband = <MsgLabel class=\"headband\"/> as MsgLabel;\n\t\t\tif (!this._headband.isConnected) this.shadowRoot.insertBefore(this._headband, this.shadowRoot.firstChild);\n\t\t\tthis._headband.setCustomMsg(msg, level, icon);\n\t\t} else {\n\t\t\tif (this._headband && this._headband.isConnected) this._headband.remove();\n\t\t}\n\t}\n}\n\n\nREG.reg.registerSkin('c-appheader', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: min-content;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n\n\tdiv {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n\n\tslot {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex: 1;\n\t}\n\n\tc-button-actions {\n\t\tpadding: .2em;\n\t\tmargin: .2em;\n\t\tbackground: none;\n\t}\n`);\n\ncustomElements.define('c-appheader', AppHeader);\n"]}