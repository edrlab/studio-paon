{"version":3,"sources":["/@back@/core/widgets/jobsInput.tsx"],"names":["REG","JSX","BaseElement","DOMSH","MxFormElement","ControlAsyncArea","JobPlanificatorInput","[object Object]","init","params","Object","assign","showNoPlanifEntry","noPlanifEntryTxt","sr","this","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","d","Date","_form","appendChild","createElement","id","autocomplete","class","onclick","openBlock","bind","type","name","value","onchange","onchangeBy","checked","for","undefined","min","toISOString","substring","indexOf","size","label","selected","date","setUTCDate","getUTCDate","setUTCMilliseconds","setUTCSeconds","setUTCMinutes","setUTCHours","valueAsNumber","getTime","_initializeForm","refreshUi","fd","FormData","selectMode","get","disabled","code","input","querySelector","ev","me","findHost","now","Number","parseInt","valueAsDate","customElements","define","reg","registerSkin","JobPlanificatorInputArea","super","setLabel","setVisible","ctx","env","universe","executor","hasFeature","î","getId","JobPriorizationInput"],"mappings":"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","sourcesContent":["import {REG} from \"lib/commons/registry\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {MxFormElement, OFormElementInit} from \"lib/commons/forms\";\nimport {ControlAsyncArea} from \"lib/commons/areas\";\nimport {IJobAreaContext} from \"lib/core/executor\";\n\n\n/**\n * Input de planificateur de job\n */\nexport interface JJobPlanifValue {\n\tdate: number,\n\t// recurrence, ...\n}\n\nexport interface OJobPlanificatorInputInit extends OFormElementInit, OSkinableInit {\n\tshowNoPlanifEntry?: boolean\n\tnoPlanifEntryTxt?: string\n}\n\nexport class JobPlanificatorInput extends MxFormElement(BaseElement) {\n\tprotected _form: HTMLFormElement;\n\n\t_initialize(init?: OJobPlanificatorInputInit): this {\n\t\tconst params = Object.assign({\n\t\t\tshowNoPlanifEntry: false,\n\t\t\tnoPlanifEntryTxt: \"Immédiate\",\n\t\t} as OJobPlanificatorInputInit, init);\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst d = new Date();\n\n\t\t// FIXME : récurrence, ...\n\t\tthis._form = sr.appendChild(<form id=\"form\" autocomplete=\"off\"/>) as HTMLFormElement;\n\t\tif (params.showNoPlanifEntry) this._form.appendChild(<div id=\"nowBlock\" class=\"block\" onclick={this.openBlock.bind(this, 'now')}>\n\t\t\t\t<span class=\"header\">\n\t\t\t\t\t<input id=\"nowIpt\" type=\"radio\" name=\"selectMode\" value=\"now\" onchange={this.onchangeBy} checked/>\n\t\t\t\t\t<label for=\"nowIpt\">{params.noPlanifEntryTxt}</label>\n\t\t\t\t</span>\n\t\t</div>);\n\t\tthis._form.appendChild(<div id=\"byDateBlock\" class=\"block\" onclick={this.openBlock.bind(this, 'byDate')}>\n\t\t\t\t<span class=\"header\">\n\t\t\t\t\t<input id=\"byDateIpt\" type=\"radio\" name=\"selectMode\" value=\"byDate\" onchange={this.onchangeBy} checked={params.showNoPlanifEntry ? undefined : true}/>\n\t\t\t\t\t<label for=\"byDateIpt\">Planifier le</label>\n\t\t\t\t</span>\n\t\t\t<fieldset id=\"byDate\" class=\"content\">\n\t\t\t\t<input name=\"date\" type=\"datetime-local\" min={d.toISOString().substring(0, d.toISOString().indexOf(\"T\"))}/>\n\t\t\t</fieldset>\n\t\t</div>);\n\t\tthis._form.appendChild(<div id=\"byGapBlock\" class=\"block\" onclick={this.openBlock.bind(this, 'byGap')}>\n\t\t\t<span class=\"header\">\n\t\t\t\t<input id=\"byGapIpt\" type=\"radio\" name=\"selectMode\" value=\"byGap\" onchange={this.onchangeBy}/>\n\t\t\t\t<label for=\"byGapIpt\">Planifier dans</label>\n\t\t\t</span>\n\t\t\t<fieldset id=\"byGap\" class=\"content\">\n\t\t\t\t<input name=\"gap\" type=\"number\" min=\"1\" size=\"3\" value=\"1\"/>\n\t\t\t\t<select name=\"gapUnit\">\n\t\t\t\t\t<option label=\"minute(s)\" value=\"60000\" selected/>\n\t\t\t\t\t<option label=\"heure(s)\" value=\"3600000\"/>\n\t\t\t\t\t<option label=\"jour(s)\" value=\"86400000‬\"/>\n\t\t\t\t</select>\n\t\t\t</fieldset>\n\t\t</div>);\n\n\t\tlet date = new Date();\n\t\tdate.setUTCDate(date.getUTCDate() + 1);\n\t\tdate.setUTCMilliseconds(0);\n\t\tdate.setUTCSeconds(0);\n\t\tdate.setUTCMinutes(0);\n\t\tdate.setUTCHours(1);\n\t\t(this._form[\"date\"] as HTMLInputElement).valueAsNumber = date.getTime();\n\n\t\tthis._initializeForm(init);\n\n\t\tthis.refreshUi();\n\t\treturn this;\n\t}\n\n\tprotected refreshUi() {\n\t\tlet fd = new FormData(this._form);\n\t\tlet selectMode = fd.get(\"selectMode\");\n\t\t// Maj des field set\n\t\t(this._form[\"byDate\"] as HTMLFieldSetElement).disabled = selectMode !== \"byDate\";\n\t\t(this._form[\"byGap\"] as HTMLFieldSetElement).disabled = selectMode !== \"byGap\";\n\t}\n\n\tprotected openBlock(code: 'now' | 'byDate' | 'byGap') {\n\t\tlet input = this._form.querySelector(\"#\" + code + \"Ipt\") as HTMLInputElement;\n\t\tinput.checked = true;\n\t\tthis.refreshUi();\n\t}\n\n\tprotected onchangeBy(this: HTMLInputElement, ev: Event) {\n\t\tconst me = DOMSH.findHost<JobPlanificatorInput>(this);\n\t\tme.refreshUi();\n\t}\n\n\t/** Retourne la date de planification, ou null si finalement non planifié */\n\tget value(): JJobPlanifValue | null {\n\t\tlet fd = new FormData(this._form);\n\t\tswitch (fd.get(\"selectMode\")) {\n\t\tcase \"now\":\n\t\t\treturn null;\n\t\tcase \"byDate\":\n\t\t\tlet date = (this._form[\"date\"] as HTMLInputElement).value;\n\t\t\treturn date ? {date: new Date(date).getTime()} : null;\n\t\tcase \"byGap\":\n\t\t\tlet now = Date.now();\n\t\t\treturn {date: now + (Number.parseInt(fd.get(\"gap\") as string) * Number.parseInt(fd.get(\"gapUnit\") as string))};\n\t\t}\n\t}\n\n\tset value(value: JJobPlanifValue) {\n\t\tif (value && value.date) {\n\t\t\tthis._form[\"selectMode\"] = \"byDate\";\n\t\t\t(this._form[\"date\"] as HTMLInputElement).valueAsDate = new Date(value.date);\n\t\t}\n\t\tthis.refreshUi();\n\t}\n}\n\ncustomElements.define(\"jobs-planificator-input\", JobPlanificatorInput);\nREG.reg.registerSkin(\"jobs-planificator-input\", 1, /* language=CSS */ `\n\t.block {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-block-end: .3rem;\n\t}\n\n\t.header {\n\t\tdisplay: inline-flex;\n\t}\n\n\tfieldset {\n\t\tborder: none;\n\t\tdisplay: inline;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tpadding-inline-start: 1em;\n\t}\n\n\t#byGap > select {\n\t\tmargin-inline-start: 1em;\n\t}\n`);\n\n\nexport class JobPlanificatorInputArea<C extends IJobAreaContext> extends ControlAsyncArea<C> {\n\tconstructor(id: string, protected params?: OJobPlanificatorInputInit) {\n\t\tsuper(id);\n\t\tthis.setLabel(\"Planification\");\n\t\tthis.setVisible((ctx) => {\n\t\t\tif (!ctx.reg.env.universe.executor.hasFeature(\"scheduling\")) return false;\n\t\t});\n\t}\n\n\tasync _loadControl(ctx: C, name: string): Promise<JobPlanificatorInput> {\n\t\treturn <JobPlanificatorInput î={Object.assign({\n\t\t\tname: this.getId(),\n\t\t\tshowNoPlanifEntry: true,\n\t\t\tnoPlanifEntryTxt: \"Exécuter au plus tôt\",\n\t\t} as OJobPlanificatorInputInit, this.params)}/> as JobPlanificatorInput;\n\t}\n\n}\n\n\n/**\n * Input de priorisation d'un job\n */\nexport interface OJobPriorizationInputInit extends OFormElementInit, OSkinableInit {\n}\n\nexport class JobPriorizationInput extends MxFormElement(BaseElement) {\n\tprotected _form: HTMLFormElement;\n\n\t_initialize(init?: OJobPriorizationInputInit): this {\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tthis._form = sr.appendChild(<form id=\"form\" autocomplete=\"off\">\n\t\t\t<div class=\"entry\">\n\t\t\t\t<input id=\"topIpt\" type=\"radio\" name=\"priorization\" value=\"top\" checked/>\n\t\t\t\t<label for=\"topIpt\">Priorité haute</label>\n\t\t\t</div>\n\t\t\t<div class=\"entry\">\n\t\t\t\t<input id=\"bottomIpt\" type=\"radio\" name=\"priorization\" value=\"bottom\"/>\n\t\t\t\t<label for=\"bottomIpt\">Priorité basse</label>\n\t\t\t</div>\n\t\t</form>) as HTMLFormElement;\n\n\t\tthis._initializeForm(init);\n\n\t\tthis.refreshUi();\n\t\treturn this;\n\t}\n\n\tprotected refreshUi() {}\n\n\t/**\n\t * Retourne la priorité\n\t * FIXME : number non implémenté\n\t */\n\tget value(): 'top' | 'bottom' | number {\n\t\treturn (this._form[\"priorization\"] as HTMLInputElement).value as any;\n\t}\n\n\t/**\n\t * Affecte la priorité\n\t * FIXME : number non implémenté\n\t */\n\tset value(value: 'top' | 'bottom' | number) {\n\t\tif (value === 'top' || value === 'bottom')\n\t\t\t(this._form[\"priorization\"] as HTMLInputElement).value = value;\n\t\telse\n\t\t\tthrow \"not implemented\";\n\t\tthis.refreshUi();\n\t}\n}\n\ncustomElements.define(\"jobs-priorization-input\", JobPriorizationInput);\nREG.reg.registerSkin(\"jobs-priorization-input\", 1, /* language=CSS */ `\n\t.entry {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-block-end: .3rem;\n\t}\n`);\n"]}