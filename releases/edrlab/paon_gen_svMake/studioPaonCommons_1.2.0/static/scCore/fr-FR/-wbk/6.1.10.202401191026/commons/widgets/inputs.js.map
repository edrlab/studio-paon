{"version":3,"sources":["/@back@/commons/widgets/inputs.tsx"],"names":["BaseElement","BASIS","Label","MxFormElement","REG","DOM","JSX","DOMSH","GridSmall","CellBuilderIconLabel","CellBuilderLabel","GridDataHolderJsonArray","EGridDropPos","GridColDef","POPUP","InputOrderedSet","[object Object]","this","_selection","_available","value","getDatas","map","data","vals","selection","available","val","_dataSet","push","Object","assign","label","notAvailable","entryKey","includes","setDatas","dataSet","availables","disabled","setAttrBool","_selectionGrid","_availableGrid","_leftBtn","_rightBtn","_upBtn","_downBtn","init","_params","reg","findReg","hasIcon","values","some","icon","cellBuilder","setIconKey","override","row","getData","setDescriptionFunc","initialize","selType","columnDefs","setFlex","setCellBuilder","dataHolder","hideHeaders","lineDrawer","skinOver","emptyBody","emptySelectionMsg","createElement","level","selectionGridInit","id","addEventListener","_onGridSelect","_initDrag","setDefaultSort","availableGridInit","Ã®","title","onclick","_onLeft","_onRight","_onUp","_onDown","uiEvents","on","_onDblClick","toolbar","class","selectionLabel","availableLabel","_attach","localName","installSkin","shadowRoot","_initializeForm","_refresh","self","findHost","count","countRows","_addToSelection","_removeFromSelection","ev","grid","target","insertIndex","selected","getSelectedDatas","sel","deleteRowKey","updateDatas","setSelectedRows","length","_dispatchChange","concat","i","addSelectedRows","isRowSelected","newSelection","selectedOffsets","unshift","dispatchEvent","CustomEvent","bubbles","cancelable","hasSelection","_refreshValidity","required","setValidity","valueMissing","checkValidity","result","call","setRowDropMgr","linesNode","setAttribute","dataTransfer","effectAllowed","setDragImage","_getLine","getSelectedRow","dragFrom","line","dropEffect","none","offset","getOffset","rowKey","before","after","pos","getUnselectedDatas","Math","min","rowDatas","classList","add","registerSkin","customElements","define","InputOrderedSetPanel","_set","super","_initialize","style","flex","_preview","data-preview-mode","previewMode","tabIndex","_onEdit","makeClickable","prevVal","JSON","stringify","popup","showMenu","elem","initWidth","initHeight","initMaxHeight","resizer","onNextClose","innerText","appendChild","removeClass","addClass","join"],"mappings":"OAAQA,YAAaC,MAAOC,UAAkB;OACtCC,kBAAgC;OAChCC,QAAI;OACJC,IAAKC,QAAI;OAETC,UAAM;OACAC,cAA0B;OAChCC,qBAAsBC,iBAAkBC,4BAAyC;OACjFC,aAAcC,eAAiD;OAC/DC,UAAM;OAwCR,MAAOC,wBAAwBZ,cAAcH,cAAnDgB;AAcWC,KAAAC,WAAa,IAAIP;AAGjBM,KAAAE,WAAa,IAAIR,wBAO3BS,YACC,OAAOH,KAAKC,WAAWG,WAAWC,IAAKC,MAASA,KAAKH,OAGtDA,UAAUI,MACT,MAAMC,UAA+B;AACrC,MAAMC,UAA+B;AAErC,GAAIF,KAAM,IAAK,MAAMG,OAAOH,KAAM,CACjC,GAAIG,OAAOV,KAAKW,SAAUH,UAAUI,KAAKC,OAAOC,OAAO,CAACX,MAAOO,KAAMV,KAAKW,SAASD;KAC9EF,UAAUI,KAAK,CAACT,MAAOO,IAAKK,MAAOL,IAAKM,aAAc,OAG5D,IAAK,MAAMC,YAAYjB,KAAKW,SAAU,CACrC,IAAKJ,OAASA,KAAKW,SAASD,UAAWR,UAAUG,KAAKC,OAAOC,OAAO,CAACX,MAAOc,UAAWjB,KAAKW,SAASM,YAGtGjB,KAAKC,WAAWkB,SAASX;AACzBR,KAAKE,WAAWiB,SAASV,WAG1BW,cACC,OAAOpB,KAAKW,SAGbS,YAAYA,SACX,MAAMV,IAAMV,KAAKG;AACjB,MAAMkB,WAAa;AACnB,IAAK,MAAMJ,YAAYG,QAAS,CAC/B,MAAMd,KAAOO,OAAOC,OAAO,CAACX,MAAOc,UAAWG,QAAQH;AACtDI,WAAWT,KAAKN,MAEjBN,KAAKE,WAAWiB,SAASE;AACzBrB,KAAKC,WAAWkB,SAAS;AACzBnB,KAAKW,SAAWS;AAChBpB,KAAKG,MAAQO,IAGdX,qBAAqBuB,UAEpBlC,IAAImC,YAAYvB,KAAKwB,eAAgB,WAAYF;AACjDlC,IAAImC,YAAYvB,KAAKyB,eAAgB,WAAYH;AACjDtB,KAAK0B,SAASJ,SAAWtB,KAAK2B,UAAUL,SAAWtB,KAAK4B,OAAON,SAAWtB,KAAK6B,SAASP,SAAWA,SAG1FvB,YAAY+B,MACrB9B,KAAK+B,QAAUD;AACf9B,KAAKoB,QAAUU,KAAKV;AACpB,GAAIU,KAAK3B,MAAOH,KAAKG,MAAQ2B,KAAK3B;AAElC,MAAM6B,IAAMhC,KAAKiC,QAAQH;AAGzB,MAAMI,QAAUrB,OAAOsB,OAAOnC,KAAKW,UAAUyB,KAAM9B,MAASA,KAAK+B;AACjE,MAAMC,YAAcJ,QAAU,IAAI1C,qBAAqB,SAAS+C,WAAW,QAAQC,SAAS,gBAAkBC,KAA8BA,IAAIC,QAAQ,eAAkB,IAAIjD,iBAAiB;AAC/L6C,YAAYK,mBAAoBF,KAAQA,IAAIC,QAAQ;AAGpD1C,KAAKwB,gBAAiB,IAAIjC,WAAYqD,WAAW/B,OAAOC,OAAO,CAC9D+B,QAAS,QACTC,WAAY,CAAC,IAAIlD,WAAW,SAC1BmD,QAAQ,OAAQ,EAAG,GACnBC,eAAeV,cAEjBW,WAAYjD,KAAKC,WACjBiD,YAAa,KACbC,WAAYnD,KACZoD,SAAU,2BACVC,UAAW,KACV,UAAWvB,KAAKwB,mBAAqB,SAAU,CAC9C,OAAOjE,IAAAkE,cAAA,QAAA,CAAOxC,MAAOe,KAAKwB,kBAAmBE,MAAM,aAC7C,CACN,OAAOnE,IAAAkE,cAAA,QAAA,CAAOxC,MAAM,qBAAqByC,MAAM,YAG/C1B,KAAK2B;AACRzD,KAAKwB,eAAekC,GAAK;AACzB1D,KAAKwB,eAAemC,iBAAiB,cAAe3D,KAAK4D;AACzD5D,KAAK6D,UAAU7D,KAAKwB;AAGpBxB,KAAKyB,gBAAiB,IAAIlC,WAAYqD,WAAW/B,OAAOC,OAAO,CAC9D+B,QAAS,QACTC,WAAY,CAAC,IAAIlD,WAAW,SAC1BkE,eAAe,EAAG,aAClBf,QAAQ,OAAQ,EAAG,GACnBC,eAAeV,cAEjBW,WAAYjD,KAAKE,WACjBgD,YAAa,KACbC,WAAYnD,KACZoD,SAAU,4BACRtB,KAAKiC;AACR/D,KAAKyB,eAAeiC,GAAK;AACzB1D,KAAKyB,eAAekC,iBAAiB,cAAe3D,KAAK4D;AACzD5D,KAAK6D,UAAU7D,KAAKyB;AAEpBzB,KAAK0B,SAAWrC,IAAAkE,cAAA,WAAA,CAAAS,IAAa,CAACC,MAAO,YAAa5B,KAAM,kCAAmC6B,QAASlE,KAAKmE;AACzGnE,KAAK2B,UAAYtC,IAAAkE,cAAA,WAAA,CAAAS,IAAa,CAACC,MAAO,YAAa5B,KAAM,mCAAoC6B,QAASlE,KAAKoE;AAC3GpE,KAAK4B,OAASvC,IAAAkE,cAAA,WAAA,CAAAS,IAAa,CAACC,MAAO,SAAU5B,KAAM,gCAAiC6B,QAASlE,KAAKqE;AAClGrE,KAAK6B,SAAWxC,IAAAkE,cAAA,WAAA,CAAAS,IAAa,CAACC,MAAO,QAAS5B,KAAM,kCAAmC6B,QAASlE,KAAKsE;AAErGtE,KAAKwB,eAAe+C,SAASC,GAAG,cAAexE,KAAKyE;AACpDzE,KAAKyB,eAAe8C,SAASC,GAAG,cAAexE,KAAKyE;AAEpD,MAAMC,QAAUrF,IAAAkE,cAAA,MAAA,CAAKG,GAAG,WACtB1D,KAAK0B,SACL1B,KAAK2B,UACNtC,IAAAkE,cAAA,MAAA,CAAKoB,MAAM,WACV3E,KAAK4B,OACL5B,KAAK6B;AAGP,IAAI+C,eAAiB;AACrB,GAAI9C,KAAK8C,eAAgB,CACxB,UAAW9C,KAAK8C,gBAAkB,SAAUA,gBAAiB,IAAI3F,OAAQ2D,WAAW,CAAC7B,MAAOe,KAAK8C;KAC5FA,gBAAiB,IAAI3F,OAAQ2D,WAAWd,KAAK8C;AAClDA,eAAelB,GAAK,iBAGrB,IAAImB,eAAiB;AACrB,GAAI/C,KAAK+C,eAAgB,CACxB,UAAW/C,KAAK+C,gBAAkB,SAAUA,gBAAiB,IAAI5F,OAAQ2D,WAAW,CAAC7B,MAAOe,KAAK+C;KAC5FA,gBAAiB,IAAI5F,OAAQ2D,WAAWd,KAAK+C;AAClDA,eAAenB,GAAK,iBAGrB1D,KAAK8E,QAAQ9E,KAAK+E,UAAWjD,KAAM8C,eAAgB5E,KAAKwB,eAAgBkD,QAASG,eAAgB7E,KAAKyB;AACtGO,IAAIgD,YAAY,eAAgBhF,KAAKiF;AAErCjF,KAAKkF,gBAAgBpD;AACrB9B,KAAKmF,WAGIpF,UACT,GAAIC,KAAKsB,SAAU;AACnB,MAAM8D,KAAO9F,MAAM+F,SAA0BrF;AAC7C,MAAMsF,MAAQF,KAAKnF,WAAWsF;AAC9BH,KAAKI,gBAAgBF,OAGZvF,WACT,GAAIC,KAAKsB,SAAU;AACnB,MAAM8D,KAAO9F,MAAM+F,SAA0BrF;AAC7CoF,KAAKK,uBAGI1F,YAAwB0C,IAA0BiD,IAC3D,MAAMC,KAAOrG,MAAM+F,SAASK,GAAGE;AAC/B,MAAMR,KAAO9F,MAAM+F,SAA0BM;AAC7C,GAAIA,MAAQP,KAAK3D,eAAgB2D,KAAKI,gBAAgBJ,KAAKnF,WAAWsF;KACjE,GAAII,MAAQP,KAAK5D,eAAgB4D,KAAKK,uBAIlC1F,gBAAgB8F,aACzB,MAAMC,SAAW9F,KAAKE,WAAW6F;AACjC,IAAK,MAAMC,OAAOF,SAAU9F,KAAKE,WAAW+F,aAAaD;AACzDhG,KAAKC,WAAWiG,YAAYL,YAAa,KAAMC;AAC/C9F,KAAKwB,eAAe2E,gBAAgB,CAACN,cAAeA,YAAcC,SAASM,OAAS;AACpFpG,KAAKmF;AACLnF,KAAKqG,kBAIItG,uBACT,MAAM+F,SAAW9F,KAAKC,WAAW8F;AACjC,IAAK,MAAMC,OAAOF,SAAU9F,KAAKC,WAAWgG,aAAaD;AAEzDhG,KAAKE,WAAWiB,SAASnB,KAAKE,WAAWE,WAAWkG,OAAOR;AAE3D,MAAMrF,UAAYT,KAAKE,WAAWE;AAClC,IAAK,IAAImG,EAAI,EAAGA,EAAI9F,UAAU2F,OAAQG,IAAK,CAC1C,GAAIT,SAAS5E,SAAST,UAAU8F,IAAKvG,KAAKyB,eAAe+E,gBAAgBD,EAAGA,GAE7EvG,KAAKmF;AACLnF,KAAKqG,kBAIItG,QACT,GAAIC,KAAKsB,SAAU;AACnB,MAAM8D,KAAO9F,MAAM+F,SAA0BrF;AAC7C,MAAMQ,UAAY4E,KAAKnF,WAAWG;AAClC,IAAKI,UAAU4F,QAAUhB,KAAK5D,eAAeiF,cAAc,GAAI;AAC/D,MAAMC,aAAe;AACrB,MAAMC,gBAAkB;AACxB,IAAIJ,EAAI;AACR,MAAOA,EAAI/F,UAAU4F,OAAQ,CAC5B,MAAM9F,KAAOE,UAAU+F;AACvBA;AACA,MAAOnB,KAAK5D,eAAeiF,cAAcF,GAAI,CAC5CG,aAAa9F,KAAKJ,UAAU+F;AAC5BI,gBAAgB/F,KAAK2F,EAAI;AACzBA,IAEDG,aAAa9F,KAAKN,MAEnB8E,KAAKnF,WAAWkB,SAASuF;AACzBtB,KAAK5D,eAAe2E,gBAAgBQ;AACpCvB,KAAKiB,kBAIItG,UACT,GAAIC,KAAKsB,SAAU;AACnB,MAAM8D,KAAO9F,MAAM+F,SAA0BrF;AAC7C,MAAMQ,UAAY4E,KAAKnF,WAAWG;AAClC,IAAKI,UAAU4F,QAAUhB,KAAK5D,eAAeiF,cAAcjG,UAAU4F,OAAS,GAAI;AAClF,MAAMM,aAAe;AACrB,MAAMC,gBAAkB;AACxB,IAAIJ,EAAI/F,UAAU4F,OAAS;AAC3B,MAAOG,GAAK,EAAG,CACd,MAAMjG,KAAOE,UAAU+F;AACvBA;AACA,MAAOnB,KAAK5D,eAAeiF,cAAcF,GAAI,CAC5CG,aAAaE,QAAQpG,UAAU+F;AAC/BI,gBAAgB/F,KAAK2F,EAAI;AACzBA,IAEDG,aAAaE,QAAQtG,MAEtB8E,KAAKnF,WAAWkB,SAASuF;AACzBtB,KAAK5D,eAAe2E,gBAAgBQ;AACpCvB,KAAKiB,kBAGItG,gBACTT,MAAM+F,SAA0BrF,MAAMmF,WAG7BpF,kBACTC,KAAK6G,cAAc,IAAIC,YAAY,QAAS,CAACC,QAAS,KAAMC,WAAY;AACxEhH,KAAK6G,cAAc,IAAIC,YAAY,SAAU,CAACC,QAAS,KAAMC,WAAY,SAGhEjH,WACTC,KAAK0B,SAASJ,UAAYtB,KAAKE,WAAW6F,mBAAmBK;AAC7D,MAAMa,aAAejH,KAAKC,WAAW8F,mBAAmBK;AACxDpG,KAAK2B,UAAUL,UAAY2F;AAC3BjH,KAAK4B,OAAON,UAAY2F,cAAgBjH,KAAKwB,eAAeiF,cAAc;AAC1EzG,KAAK6B,SAASP,UAAY2F,cAAgBjH,KAAKwB,eAAeiF,cAAczG,KAAKC,WAAWsF,YAAc;AAE1GvF,KAAKkH,mBAGInH,mBACT,MAAMoC,OAASnC,KAAKG;AACpB,GAAIH,KAAKmH,WAAanH,KAAKG,MAAMiG,OAAQpG,KAAKoH,YAAY,CAACC,aAAc,MAAO,sCAAuCrH,KAAKwB;KACvH,GAAIxB,KAAK+B,QAAQuF,cAAe,CACpC,MAAMC,OAASvH,KAAK+B,QAAQuF,cAAcE,KAAKxH,KAAMmC;AACrD,GAAIoF,QAAU,KAAM,CACnBvH,KAAKoH,YAAY,QACX,CACN,UAAWG,QAAU,SACpBvH,KAAKoH,YAAY,CAACC,aAAc,MAAOE;KAEvCvH,KAAKoH,YAAY,CAACC,aAAc,MAAO,uDAEnCrH,KAAKoH,YAAY,IAIfrH,UAAU4F,MACnBA,KAAK8B,cAAczH;AACnB2F,KAAK+B,UAAUC,aAAa,YAAa;AACzChC,KAAKhC,iBAAiB,aAAa,SAA2B+B,IAC7D,MAAMN,KAAO9F,MAAM+F,SAA0BrF;AAC7C0F,GAAGkC,aAAaC,cAAgB;AAChCnC,GAAGkC,aAAaE,aAAa9H,KAAK+H,SAAS/H,KAAKgI,kBAAmB,EAAG;AACtE5C,KAAK6C,SAAWjI;AAGjB2F,KAAKhC,iBAAiB,WAAW,SAAU+B,IAC1C,MAAMN,KAAO9F,MAAM+F,SAA0BrF;AAC7CoF,KAAK6C,SAAW,QAKlBlI,cAAc2F,GAAeC,KAAalD,IAAuCyF,MAEhF,IAAKlI,KAAKiI,UAAatC,MAAQ3F,KAAKyB,gBAAkBzB,KAAKiI,UAAYjI,KAAKyB,eAAiB,CAC5FiE,GAAGkC,aAAaO,WAAa;AAC7B,OAAOxI,aAAayI,KAGrB,GAAIzC,MAAQ3F,KAAKwB,gBAAkBxB,KAAKiI,UAAYtC,MAAQlD,IAAK,CAChE,MAAM4F,OAASrI,KAAKC,WAAWqI,UAAU7F,IAAI8F;AAC7C,GAAI5C,KAAKc,cAAc4B,QAAS,CAC/B3C,GAAGkC,aAAaO,WAAa;AAC7B,OAAOxI,aAAayI,MAGtB1C,GAAGkC,aAAaO,WAAa;AAC7B,OAAO1F,IAAM9C,aAAa6I,OAAS7I,aAAa8I,MAAQ9I,aAAa8I,MAGtE1I,UAAU2F,GAAeC,KAAalD,IAAuCyF,KAAmBQ,KAC/F,GAAI/C,MAAQ3F,KAAKwB,eAAgB,CAChC,IAAIqE,YAAcpD,IAAMzC,KAAKC,WAAWqI,UAAU7F,IAAI8F,QAAUvI,KAAKC,WAAWsF,YAAc;AAC9F,GAAImD,MAAQ/I,aAAa8I,MAAO5C;AAChC,GAAI7F,KAAKiI,UAAYtC,KAAM,CAC1B3F,KAAKwF,gBAAgBK,iBACf,CACN,MAAMC,SAAW9F,KAAKC,WAAW8F;AACjC/F,KAAKC,WAAWkB,SAASnB,KAAKC,WAAW0I;AACzC9C,YAAc+C,KAAKC,IAAIhD,YAAa7F,KAAKC,WAAWsF;AACpDvF,KAAKC,WAAWiG,YAAYL,YAAa,KAAMC;AAC/C9F,KAAKwB,eAAe2E,gBAAgB,CAACN,cAAeA,YAAcC,SAASM,OAAS;AACpFpG,KAAKqG,wBAEA,GAAIV,MAAQ3F,KAAKyB,gBAAkBzB,KAAKiI,UAAYtC,KAAM,CAChE3F,KAAKyF,wBAIP1F,WAAW0C,IAA2ByF,MACrC,GAAIzF,IAAIqG,SAAS9H,aAAckH,KAAKa,UAAUC,IAAI,iBAKpD7J,IAAI6C,IAAIiH,aAAa,sBAAuB,EAAsB;AA6ClE9J,IAAI6C,IAAIiH,aAAa,2BAA4B,EAAsB;AAMvEC,eAAeC,OAAO,sBAAuBrJ;OAGvC,MAAOsJ,6BAA6BlK,cAAcH,cAUvDoB,YACC,OAAOH,KAAKqJ,KAAKlJ,MAGlBA,UAAUI,MACTP,KAAKqJ,KAAKlJ,MAAQI;AAClBP,KAAKmF,WAGN/D,cACC,OAAOpB,KAAKqJ,KAAKjI,QAGlBA,YAAYA,SACXpB,KAAKqJ,KAAKjI,QAAUA;AACpBpB,KAAKmF,WAGNpF,qBAAqBuB,UACpBtB,KAAKqJ,KAAK/H,SAAWA,SAGZvB,YAAY+B,MACrB9B,KAAK+B,QAAUD;AACf,MAAME,IAAMhC,KAAKiC,QAAQH;AACzBwH,MAAMC,YAAYzH;AAElB9B,KAAKqJ,MAAO,IAAIvJ,iBAAkB8C,WAAWd;AAC7C9B,KAAKqJ,KAAKG,MAAMC,KAAO;AACvBzJ,KAAK0J,SAAWrK,IAAAkE,cAAA,MAAA,CAAKoB,MAAM,UAASgF,oBAAoB7H,KAAK8H;AAC7D5J,KAAK8E,QAAQ9E,KAAK+E,UAAWjD,KAAM9B,KAAK0J;AACxC1H,IAAIgD,YAAY,eAAgBhF,KAAKiF;AAErCjF,KAAK6J,SAAW;AAChB7J,KAAK2D,iBAAiB,QAAS3D,KAAK8J;AACpC9K,MAAM+K,cAAc/J;AACpBA,KAAKkF,gBAAgBpD;AACrB9B,KAAKmF,WAGIpF,gBACT,MAAMiK,QAAUC,KAAKC,UAAUlK,KAAKG;AACpC,MAAMgK,MAAQtK,MAAMuK,SAASpK,KAAKqJ,KAAM,CAACgB,KAAMrK,KAAMsK,UAAW,OAAQC,WAAY,OAAQC,cAAe,QAASxK,KAAM,CAACyK,QAAS,GAAIrH,SAAU;MAC5I+G,MAAMO;AAEZ,GAAIT,KAAKC,UAAUlK,KAAKG,QAAU6J,QACjChK,KAAKqG;AACNrG,KAAKmF,WAGIpF,kBACTC,KAAK6G,cAAc,IAAIC,YAAY,QAAS,CAACC,QAAS,KAAMC,WAAY;AACxEhH,KAAK6G,cAAc,IAAIC,YAAY,SAAU,CAACC,QAAS,KAAMC,WAAY,SAGhEjH,WACT,GAAIC,KAAK+B,QAAQ6H,cAAgB,UAAW,CAC3C5J,KAAK0J,SAASiB,UAAY;AAC1B,GAAI3K,KAAKqJ,KAAKlJ,MAAMiG,OAAS,EAAG,CAC/BpG,KAAKqJ,KAAKlJ,MAAME,IAAKK,MACpBV,KAAK0J,SAASkB,YAAYvL,IAAAkE,cAAA,MAAA,CAAKoB,MAAM,SAAS3E,KAAKqJ,KAAKjI,QAAQV,KAAOV,KAAKqJ,KAAKjI,QAAQV,KAAKK,MAAQL;AAEvGtB,IAAIyL,YAAY7K,KAAK0J,SAAU,eACzB,CACN1J,KAAK0J,SAASiB,UAAY3K,KAAK+B,QAAQuB,mBAAqB;AAC5DlE,IAAI0L,SAAS9K,KAAK0J,SAAU,gBAEvB,CACN,GAAI1J,KAAKqJ,KAAKlJ,MAAMiG,OAAS,EAAG,CAC/BpG,KAAK0J,SAASiB,UAAY3K,KAAKqJ,KAAKlJ,MAAME,IAAKK,KAAQV,KAAKqJ,KAAKjI,QAAQV,KAAOV,KAAKqJ,KAAKjI,QAAQV,KAAKK,MAAQL,KAAKqK,KAAK;AACzH3L,IAAIyL,YAAY7K,KAAK0J,SAAU,eACzB,CACN1J,KAAK0J,SAASiB,UAAY3K,KAAK+B,QAAQuB,mBAAqB;AAC5DlE,IAAI0L,SAAS9K,KAAK0J,SAAU,YAG9B1J,KAAKkH,mBAGInH,mBACT,GAAIC,KAAKmH,WAAanH,KAAKqJ,KAAKlJ,MAAMiG,OAAQpG,KAAKoH,YAAY,CAACC,aAAc,MAAO;KAChF,GAAIrH,KAAK+B,QAAQuF,cAAe,CACpC,MAAMC,OAASvH,KAAK+B,QAAQuF,cAAcE,KAAKxH,KAAMA,KAAKqJ,KAAKlJ;AAC/D,GAAIoH,QAAU,KAAM,CACnBvH,KAAKoH,YAAY,QACX,CACN,UAAWG,QAAU,SACpBvH,KAAKoH,YAAY,CAACC,aAAc,MAAOE;KAEvCvH,KAAKoH,YAAY,CAACC,aAAc,MAAO,uDAEnCrH,KAAKoH,YAAY,KAI1BjI,IAAI6C,IAAIiH,aAAa,4BAA6B,EAAsB;AAgExE9J,IAAI6C,IAAIiH,aAAa,kCAAmC,EAAsB;AAW9EC,eAAeC,OAAO,4BAA6BC","sourcesContent":["import {BaseElement, BASIS, Label, OLabelInit} from \"back/commons/basis\";\nimport {MxFormElement, OFormElementInit} from \"lib/commons/forms\";\nimport {REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {Grid, GridSmall, OGridSmallInit} from \"back/commons/widgets/grid-tags\";\nimport {CellBuilderIconLabel, CellBuilderLabel, GridDataHolderJsonArray, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {EGridDropPos, GridColDef, IGrid, IGridDataRow, IGridLineDrawer} from \"back/commons/widgets/grid-core\";\nimport {POPUP} from \"back/commons/widgets/popups\";\n\nexport type IOrderedSetEntry = {\n\tlabel: string;\n\ticon?: string;\n\ticonFilter?: string;\n\tdescription?: string,\n\t/* EntrÃ©e inconnue */\n\tnotAvailable?: boolean,\n};\n\nexport interface OOrderedSetInit extends OFormElementInit {\n\t/** Valeur initiale du champ */\n\tvalue?: string[];\n\t/** Ensemble des valeurs disponibles */\n\tdataSet: Dict<IOrderedSetEntry>;\n\t/** ModalitÃ© de visualisation des valeurys courantes. horizontal par dÃ©faut */\n\tpreviewMode?: 'asLines' | 'horizontal'\n\t/** Message affichÃ© lorsqu'aucune valeur n'est sÃ©lectionnÃ© */\n\temptySelectionMsg?: string;\n\t/** Label affichÃ© au dessus de la grille des valeurs sÃ©lectionnÃ©es */\n\tselectionLabel: string | OLabelInit;\n\t/** Label affichÃ© au dessus de la grille des valeurs disponible */\n\tavailableLabel: string | OLabelInit;\n\t/** LineDrawer de la grille des valeurs sÃ©lectionnÃ©es */\n\tselectionGridInit?: OGridSmallInit;\n\t/** LineDrawer de la grille des valeurs disponible */\n\tavailableGridInit?: OGridSmallInit;\n\t/**  Fction Ã©valuant la validitÃ© de la sÃ©lection\n\t * @param selectedEntries\n\t * @return true si valide; false|string si non valide\n\t */\n\tcheckValidity?: (this: InputOrderedSetPanel, selectedEntries?: string[]) => boolean | string\n}\n\ntype IOrderedSetData = { value: string } & IOrderedSetEntry;\n\n/**\n * Input de sÃ©lection d'un ensemble ordonnÃ© de valeur dans un ensemble donnÃ© (le dataSet)\n */\nexport class InputOrderedSet extends MxFormElement(BaseElement) implements IGridLineDrawer {\n\tprotected _leftBtn: Button;\n\tprotected _rightBtn: Button;\n\tprotected _upBtn: Button;\n\tprotected _downBtn: Button;\n\n\tprotected _params: OOrderedSetInit;\n\n\t/** Grille des valeurs sÃ©lectionnÃ©es */\n\tprotected _selectionGrid: GridSmall;\n\t/** Grille des valeurs disponibles */\n\tprotected _availableGrid: GridSmall;\n\n\t/** DataHolder des valeurs sÃ©lectionnÃ©es */\n\tprotected _selection = new GridDataHolderJsonArray<IOrderedSetData>();\n\n\t/** DataHolder des valeurs disponibles */\n\tprotected _available = new GridDataHolderJsonArray<IOrderedSetData>();\n\n\t/** Flag permettant de dÃ©tecter l'origine du drag */\n\tprotected dragFrom: null | GridSmall;\n\n\tprotected _dataSet: Dict<IOrderedSetEntry>;\n\n\tget value(): string[] {\n\t\treturn this._selection.getDatas().map((data) => data.value);\n\t}\n\n\tset value(vals: string[]) {\n\t\tconst selection: IOrderedSetData[] = [];\n\t\tconst available: IOrderedSetData[] = [];\n\n\t\tif (vals) for (const val of vals) {\n\t\t\tif (val in this._dataSet) selection.push(Object.assign({value: val}, this._dataSet[val]));\n\t\t\telse selection.push({value: val, label: val, notAvailable: true});\n\t\t}\n\n\t\tfor (const entryKey in this._dataSet) {\n\t\t\tif (!vals || !vals.includes(entryKey)) available.push(Object.assign({value: entryKey}, this._dataSet[entryKey]));\n\t\t}\n\n\t\tthis._selection.setDatas(selection);\n\t\tthis._available.setDatas(available);\n\t}\n\n\tget dataSet(): Dict<IOrderedSetEntry> {\n\t\treturn this._dataSet;\n\t}\n\n\tset dataSet(dataSet: Dict<IOrderedSetEntry>) {\n\t\tconst val = this.value;\n\t\tconst availables = [];\n\t\tfor (const entryKey in dataSet) {\n\t\t\tconst data = Object.assign({value: entryKey}, dataSet[entryKey]);\n\t\t\tavailables.push(data);\n\t\t}\n\t\tthis._available.setDatas(availables);\n\t\tthis._selection.setDatas([]);\n\t\tthis._dataSet = dataSet;\n\t\tthis.value = val;\n\t}\n\n\tformDisabledCallback(disabled: boolean) {\n\t\t/* DÃ©sactivation des grid par stylage : ajout d'un attribut */\n\t\tDOM.setAttrBool(this._selectionGrid, 'disabled', disabled);\n\t\tDOM.setAttrBool(this._availableGrid, 'disabled', disabled);\n\t\tthis._leftBtn.disabled = this._rightBtn.disabled = this._upBtn.disabled = this._downBtn.disabled = disabled;\n\t}\n\n\tprotected _initialize(init: OOrderedSetInit) {\n\t\tthis._params = init;\n\t\tthis.dataSet = init.dataSet;\n\t\tif (init.value) this.value = init.value;\n\n\t\tconst reg = this.findReg(init);\n\n\t\t/* CellBuilder diffÃ©rent en fonction de la prÃ©sence d'icÃ´ne dans le dataSet */\n\t\tconst hasIcon = Object.values(this._dataSet).some((data) => data.icon);\n\t\tconst cellBuilder = hasIcon ? new CellBuilderIconLabel('label').setIconKey('icon').override(\"getIconFilter\", (row: IGridDataRow) => {return row.getData(\"iconFilter\")}) : new CellBuilderLabel('label');\n\t\tcellBuilder.setDescriptionFunc((row) => row.getData('description'));\n\n\t\t/* Initialisation de la grille des valeurs sÃ©lectionnÃ©es */\n\t\tthis._selectionGrid = new GridSmall().initialize(Object.assign({\n\t\t\tselType: 'multi',\n\t\t\tcolumnDefs: [new GridColDef('value')\n\t\t\t\t.setFlex('1rem', 1, 1)\n\t\t\t\t.setCellBuilder(cellBuilder)\n\t\t\t],\n\t\t\tdataHolder: this._selection,\n\t\t\thideHeaders: true,\n\t\t\tlineDrawer: this,\n\t\t\tskinOver: 'c-input-ordered-set/grid',\n\t\t\temptyBody: (): Node => {\n\t\t\t\tif (typeof init.emptySelectionMsg == \"string\") {\n\t\t\t\t\treturn <c-msg label={init.emptySelectionMsg} level=\"info\"/>\n\t\t\t\t} else {\n\t\t\t\t\treturn <c-msg label=\"Aucune sÃ©lection\" level=\"info\"/>\n\t\t\t\t}\n\t\t\t}\n\t\t}, init.selectionGridInit));\n\t\tthis._selectionGrid.id = 'selectionGrid';\n\t\tthis._selectionGrid.addEventListener(\"grid-select\", this._onGridSelect);\n\t\tthis._initDrag(this._selectionGrid);\n\n\t\t/* Initialisation de la grille des valeurs disponible qui diffÃ¨re par un tri implicite */\n\t\tthis._availableGrid = new GridSmall().initialize(Object.assign({\n\t\t\tselType: 'multi',\n\t\t\tcolumnDefs: [new GridColDef('value')\n\t\t\t\t.setDefaultSort(1, 'ascendant')\n\t\t\t\t.setFlex('1rem', 1, 1)\n\t\t\t\t.setCellBuilder(cellBuilder)\n\t\t\t],\n\t\t\tdataHolder: this._available,\n\t\t\thideHeaders: true,\n\t\t\tlineDrawer: this,\n\t\t\tskinOver: 'c-input-ordered-set/grid',\n\t\t}, init.availableGridInit));\n\t\tthis._availableGrid.id = 'availableGrid';\n\t\tthis._availableGrid.addEventListener(\"grid-select\", this._onGridSelect);\n\t\tthis._initDrag(this._availableGrid);\n\n\t\tthis._leftBtn = <c-button Ã®={{title: \"Ajouter\", icon: \"/@skin@/commons/icons/left.svg\"}} onclick={this._onLeft}/> as Button;\n\t\tthis._rightBtn = <c-button Ã®={{title: \"Enlever\", icon: \"/@skin@/commons/icons/right.svg\"}} onclick={this._onRight}/> as Button;\n\t\tthis._upBtn = <c-button Ã®={{title: \"Haut\", icon: \"/@skin@/commons/icons/up.svg\"}} onclick={this._onUp}/> as Button;\n\t\tthis._downBtn = <c-button Ã®={{title: \"Bas\", icon: \"/@skin@/commons/icons/down.svg\"}} onclick={this._onDown}/> as Button;\n\n\t\tthis._selectionGrid.uiEvents.on(\"rowDblclick\", this._onDblClick);\n\t\tthis._availableGrid.uiEvents.on(\"rowDblclick\", this._onDblClick);\n\n\t\tconst toolbar = <div id=\"toolbar\">\n\t\t\t{this._leftBtn}\n\t\t\t{this._rightBtn}\n\t\t\t<div class=\"spacer\"/>\n\t\t\t{this._upBtn}\n\t\t\t{this._downBtn}\n\t\t</div> as HTMLDivElement;\n\n\t\tlet selectionLabel = null;\n\t\tif (init.selectionLabel) {\n\t\t\tif (typeof init.selectionLabel == \"string\") selectionLabel = new Label().initialize({label: init.selectionLabel});\n\t\t\telse selectionLabel = new Label().initialize(init.selectionLabel);\n\t\t\tselectionLabel.id = 'selectionLabel';\n\t\t}\n\n\t\tlet availableLabel = null;\n\t\tif (init.availableLabel) {\n\t\t\tif (typeof init.availableLabel == \"string\") availableLabel = new Label().initialize({label: init.availableLabel});\n\t\t\telse availableLabel = new Label().initialize(init.availableLabel);\n\t\t\tavailableLabel.id = 'availableLabel';\n\t\t}\n\n\t\tthis._attach(this.localName, init, selectionLabel, this._selectionGrid, toolbar, availableLabel, this._availableGrid);\n\t\treg.installSkin(\"scroll/small\", this.shadowRoot);\n\n\t\tthis._initializeForm(init);\n\t\tthis._refresh();\n\t}\n\n\tprotected _onLeft(this: Button) {\n\t\tif (this.disabled) return;\n\t\tconst self = DOMSH.findHost<InputOrderedSet>(this);\n\t\tconst count = self._selection.countRows();\n\t\tself._addToSelection(count);\n\t}\n\n\tprotected _onRight(this: Button) {\n\t\tif (this.disabled) return;\n\t\tconst self = DOMSH.findHost<InputOrderedSet>(this);\n\t\tself._removeFromSelection();\n\t}\n\n\tprotected _onDblClick(this: void, row: IGridDataRow | null, ev: MouseEvent) {\n\t\tconst grid = DOMSH.findHost(ev.target as HTMLElement);\n\t\tconst self = DOMSH.findHost<InputOrderedSet>(grid);\n\t\tif (grid == self._availableGrid) self._addToSelection(self._selection.countRows());\n\t\telse if (grid == self._selectionGrid) self._removeFromSelection();\n\t}\n\n\t/** DÃ©placement d'une valeur disponible en valeur sÃ©lectionnÃ©e */\n\tprotected _addToSelection(insertIndex: number) {\n\t\tconst selected = this._available.getSelectedDatas();\n\t\tfor (const sel of selected) this._available.deleteRowKey(sel);\n\t\tthis._selection.updateDatas(insertIndex, 0, ...selected);\n\t\tthis._selectionGrid.setSelectedRows([insertIndex, -(insertIndex + selected.length - 1)]);\n\t\tthis._refresh();\n\t\tthis._dispatchChange();\n\t}\n\n\t/** Suppresion d'une valeur sÃ©lectionnÃ© et rÃ©insertion en valeur disponible */\n\tprotected _removeFromSelection() {\n\t\tconst selected = this._selection.getSelectedDatas();\n\t\tfor (const sel of selected) this._selection.deleteRowKey(sel);\n\t\t// Utilisation de setDatas pour forcer le tri\n\t\tthis._available.setDatas(this._available.getDatas().concat(selected));\n\n\t\tconst available = this._available.getDatas();\n\t\tfor (let i = 0; i < available.length; i++) {\n\t\t\tif (selected.includes(available[i])) this._availableGrid.addSelectedRows(i, i);\n\t\t}\n\t\tthis._refresh();\n\t\tthis._dispatchChange();\n\t}\n\n\t/** DÃ©placement vers le haut de l'ensemble de la sÃ©lection des valeurs sÃ©lectionnÃ©e */\n\tprotected _onUp(this: Button) {\n\t\tif (this.disabled) return;\n\t\tconst self = DOMSH.findHost<InputOrderedSet>(this);\n\t\tconst selection = self._selection.getDatas();\n\t\tif (!selection.length || self._selectionGrid.isRowSelected(0)) return;\n\t\tconst newSelection = [];\n\t\tconst selectedOffsets = [];\n\t\tlet i = 0;\n\t\twhile (i < selection.length) {\n\t\t\tconst data = selection[i];\n\t\t\ti++;\n\t\t\twhile (self._selectionGrid.isRowSelected(i)) {\n\t\t\t\tnewSelection.push(selection[i]);\n\t\t\t\tselectedOffsets.push(i - 1);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnewSelection.push(data);\n\t\t}\n\t\tself._selection.setDatas(newSelection);\n\t\tself._selectionGrid.setSelectedRows(selectedOffsets);\n\t\tself._dispatchChange();\n\t}\n\n\t/** DÃ©placement vers le bas de l'ensemble de la sÃ©lection des valeurs sÃ©lectionnÃ©e */\n\tprotected _onDown(this: Button) {\n\t\tif (this.disabled) return;\n\t\tconst self = DOMSH.findHost<InputOrderedSet>(this);\n\t\tconst selection = self._selection.getDatas();\n\t\tif (!selection.length || self._selectionGrid.isRowSelected(selection.length - 1)) return;\n\t\tconst newSelection = [];\n\t\tconst selectedOffsets = [];\n\t\tlet i = selection.length - 1;\n\t\twhile (i >= 0) {\n\t\t\tconst data = selection[i];\n\t\t\ti--;\n\t\t\twhile (self._selectionGrid.isRowSelected(i)) {\n\t\t\t\tnewSelection.unshift(selection[i]);\n\t\t\t\tselectedOffsets.push(i + 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tnewSelection.unshift(data);\n\t\t}\n\t\tself._selection.setDatas(newSelection);\n\t\tself._selectionGrid.setSelectedRows(selectedOffsets);\n\t\tself._dispatchChange();\n\t}\n\n\tprotected _onGridSelect(this: Grid) {\n\t\tDOMSH.findHost<InputOrderedSet>(this)._refresh();\n\t}\n\n\tprotected _dispatchChange() {\n\t\tthis.dispatchEvent(new CustomEvent(\"input\", {bubbles: true, cancelable: false}));\n\t\tthis.dispatchEvent(new CustomEvent(\"change\", {bubbles: true, cancelable: false}));\n\t}\n\n\tprotected _refresh() {\n\t\tthis._leftBtn.disabled = !this._available.getSelectedDatas().length;\n\t\tconst hasSelection = this._selection.getSelectedDatas().length;\n\t\tthis._rightBtn.disabled = !hasSelection;\n\t\tthis._upBtn.disabled = !hasSelection || this._selectionGrid.isRowSelected(0);\n\t\tthis._downBtn.disabled = !hasSelection || this._selectionGrid.isRowSelected(this._selection.countRows() - 1);\n\n\t\tthis._refreshValidity();\n\t}\n\n\tprotected _refreshValidity(): void {\n\t\tconst values = this.value;\n\t\tif (this.required && !this.value.length) this.setValidity({valueMissing: true}, \"Veuillez sÃ©lectionner un Ã©lÃ©ment.\", this._selectionGrid);\n\t\telse if (this._params.checkValidity) {\n\t\t\tconst result = this._params.checkValidity.call(this, values);\n\t\t\tif (result == true) {\n\t\t\t\tthis.setValidity({});\n\t\t\t} else {\n\t\t\t\tif (typeof result == \"string\")\n\t\t\t\t\tthis.setValidity({valueMissing: true}, result);\n\t\t\t\telse\n\t\t\t\t\tthis.setValidity({valueMissing: true}, \"Des groupes sÃ©lectionnÃ©s sont incompatibles\");\n\t\t\t}\n\t\t} else this.setValidity({});\n\t}\n\n\t/** Initialisation du drag */\n\tprotected _initDrag(grid: GridSmall) {\n\t\tgrid.setRowDropMgr(this);\n\t\tgrid.linesNode.setAttribute('draggable', 'true');\n\t\tgrid.addEventListener('dragstart', function (this: GridSmall, ev) {\n\t\t\tconst self = DOMSH.findHost<InputOrderedSet>(this);\n\t\t\tev.dataTransfer.effectAllowed = 'move';\n\t\t\tev.dataTransfer.setDragImage(this._getLine(this.getSelectedRow()), 0, 0);\n\t\t\tself.dragFrom = this;\n\n\t\t});\n\t\tgrid.addEventListener('dragend', function (ev) {\n\t\t\tconst self = DOMSH.findHost<InputOrderedSet>(this);\n\t\t\tself.dragFrom = null;\n\t\t});\n\n\t}\n\n\tonDragOverRow(ev: DragEvent, grid: IGrid, row: GridDataRowJson<IOrderedSetData>, line: HTMLElement): EGridDropPos | EGridDropPos {\n\t\t// Le drag n'est pas autorisÃ© Ã  l'intÃ©rieur des valeurs disponible\n\t\tif (!this.dragFrom || (grid == this._availableGrid && this.dragFrom == this._availableGrid)) {\n\t\t\tev.dataTransfer.dropEffect = 'none';\n\t\t\treturn EGridDropPos.none;\n\t\t}\n\t\t// DÃ©placement Ã  l'intÃ©rieur de la sÃ©lection dÃ©sactivÃ© sur elle-mÃªme\n\t\tif (grid == this._selectionGrid && this.dragFrom == grid && row) {\n\t\t\tconst offset = this._selection.getOffset(row.rowKey);\n\t\t\tif (grid.isRowSelected(offset)) {\n\t\t\t\tev.dataTransfer.dropEffect = 'none';\n\t\t\t\treturn EGridDropPos.none;\n\t\t\t}\n\t\t}\n\t\tev.dataTransfer.dropEffect = 'move';\n\t\treturn row ? EGridDropPos.before | EGridDropPos.after : EGridDropPos.after;\n\t}\n\n\tdropOnRow(ev: DragEvent, grid: IGrid, row: GridDataRowJson<IOrderedSetData>, line: HTMLElement, pos: EGridDropPos): void {\n\t\tif (grid == this._selectionGrid) {\n\t\t\tlet insertIndex = row ? this._selection.getOffset(row.rowKey) : this._selection.countRows() - 1;\n\t\t\tif (pos === EGridDropPos.after) insertIndex++;\n\t\t\tif (this.dragFrom != grid) {\n\t\t\t\tthis._addToSelection(insertIndex);\n\t\t\t} else {\n\t\t\t\tconst selected = this._selection.getSelectedDatas();\n\t\t\t\tthis._selection.setDatas(this._selection.getUnselectedDatas());\n\t\t\t\tinsertIndex = Math.min(insertIndex, this._selection.countRows());\n\t\t\t\tthis._selection.updateDatas(insertIndex, 0, ...selected);\n\t\t\t\tthis._selectionGrid.setSelectedRows([insertIndex, -(insertIndex + selected.length - 1)]);\n\t\t\t\tthis._dispatchChange();\n\t\t\t}\n\t\t} else if (grid == this._availableGrid && this.dragFrom != grid) {\n\t\t\tthis._removeFromSelection();\n\t\t}\n\t}\n\n\tredrawLine(row: GridDataRowJson<any>, line: HTMLElement): void {\n\t\tif (row.rowDatas.notAvailable) line.classList.add('notAvailable');\n\t}\n}\n\n\nREG.reg.registerSkin('c-input-ordered-set', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr min-content 1fr;\n\t\tgrid-template-rows: min-content 1fr;\n\t\tgrid-template-areas: \"sl . al\" \"sg tb ag\";\n\t\tmin-width: 10em;\n\t\tmin-height: 6em;\n\t}\n\n\tc-grid-small[disabled] {\n\t\tpointer-events: none;\n\t\topacity: .5;\n\t}\n\n\t#selectionGrid {\n\t\tgrid-area: sg;\n\t}\n\n\t#selectionLabel {\n\t\tgrid-area: sl;\n\t}\n\n\t#toolbar {\n\t\tgrid-area: tb;\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\tflex-direction: column;\n\t}\n\n\t.spacer {\n\t\tflex: 1;\n\t}\n\n\t#availableGrid {\n\t\tgrid-area: ag;\n\t}\n\n\t#availableLabel {\n\t\tgrid-area: al;\n\t}\n\n`);\n\nREG.reg.registerSkin(\"c-input-ordered-set/grid\", 1, /* language=CSS */ `\n\t.notAvailable {\n\t\tfont-style: italic;\n\t}\n`);\n\ncustomElements.define('c-input-ordered-set', InputOrderedSet);\n\n\nexport class InputOrderedSetPanel extends MxFormElement(BaseElement) {\n\n\tprotected _params: OOrderedSetInit;\n\n\tprotected _preview: HTMLDivElement;\n\n\tprotected _set: InputOrderedSet;\n\n\tname: string;\n\n\tget value(): string[] {\n\t\treturn this._set.value;\n\t}\n\n\tset value(vals: string[]) {\n\t\tthis._set.value = vals;\n\t\tthis._refresh();\n\t}\n\n\tget dataSet(): Dict<IOrderedSetEntry> {\n\t\treturn this._set.dataSet;\n\t}\n\n\tset dataSet(dataSet: Dict<IOrderedSetEntry>) {\n\t\tthis._set.dataSet = dataSet;\n\t\tthis._refresh();\n\t}\n\n\tformDisabledCallback(disabled: boolean) {\n\t\tthis._set.disabled = disabled;\n\t}\n\n\tprotected _initialize(init: OOrderedSetInit) {\n\t\tthis._params = init;\n\t\tconst reg = this.findReg(init);\n\t\tsuper._initialize(init);\n\n\t\tthis._set = new InputOrderedSet().initialize(init);\n\t\tthis._set.style.flex = '1';\n\t\tthis._preview = <div class=\"preview\" data-preview-mode={init.previewMode}/> as HTMLDivElement;\n\t\tthis._attach(this.localName, init, this._preview);\n\t\treg.installSkin(\"scroll/small\", this.shadowRoot);\n\n\t\tthis.tabIndex = 0;\n\t\tthis.addEventListener('click', this._onEdit);\n\t\tBASIS.makeClickable(this);\n\t\tthis._initializeForm(init);\n\t\tthis._refresh();\n\t}\n\n\tprotected async _onEdit() {\n\t\tconst prevVal = JSON.stringify(this.value);\n\t\tconst popup = POPUP.showMenu(this._set, {elem: this, initWidth: '35em', initHeight: '15em', initMaxHeight: '50vh'}, this, {resizer: {}, skinOver: \"c-input-ordered-set-panel/popup\"});\n\t\tawait popup.onNextClose();\n\t\t/* VÃ©rification de l'Ã©tat dirty par comparaison du JSON (TODO pourrait Ãªtre optimisÃ©) */\n\t\tif (JSON.stringify(this.value) != prevVal)\n\t\t\tthis._dispatchChange();\n\t\tthis._refresh();\n\t}\n\n\tprotected _dispatchChange() {\n\t\tthis.dispatchEvent(new CustomEvent(\"input\", {bubbles: true, cancelable: false}));\n\t\tthis.dispatchEvent(new CustomEvent(\"change\", {bubbles: true, cancelable: false}));\n\t}\n\n\tprotected _refresh() {\n\t\tif (this._params.previewMode === \"asLines\") {\n\t\t\tthis._preview.innerText = '';\n\t\t\tif (this._set.value.length > 0) {\n\t\t\t\tthis._set.value.map((val) => {\n\t\t\t\t\tthis._preview.appendChild(<div class=\"entry\">{this._set.dataSet[val] ? this._set.dataSet[val].label : val}</div>)\n\t\t\t\t});\n\t\t\t\tDOM.removeClass(this._preview, \"noEntry\");\n\t\t\t} else {\n\t\t\t\tthis._preview.innerText = this._params.emptySelectionMsg || \"Aucune sÃ©lection\";\n\t\t\t\tDOM.addClass(this._preview, \"noEntry\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._set.value.length > 0) {\n\t\t\t\tthis._preview.innerText = this._set.value.map((val) => this._set.dataSet[val] ? this._set.dataSet[val].label : val).join(\", \");\n\t\t\t\tDOM.removeClass(this._preview, \"noEntry\");\n\t\t\t} else {\n\t\t\t\tthis._preview.innerText = this._params.emptySelectionMsg || \"Aucune sÃ©lection\";\n\t\t\t\tDOM.addClass(this._preview, \"noEntry\");\n\t\t\t}\n\t\t}\n\t\tthis._refreshValidity();\n\t}\n\n\tprotected _refreshValidity() {\n\t\tif (this.required && !this._set.value.length) this.setValidity({valueMissing: true}, \"Veuillez renseigner ce champ.\");\n\t\telse if (this._params.checkValidity) {\n\t\t\tconst result = this._params.checkValidity.call(this, this._set.value);\n\t\t\tif (result == true) {\n\t\t\t\tthis.setValidity({});\n\t\t\t} else {\n\t\t\t\tif (typeof result == \"string\")\n\t\t\t\t\tthis.setValidity({valueMissing: true}, result);\n\t\t\t\telse\n\t\t\t\t\tthis.setValidity({valueMissing: true}, \"Des groupes sÃ©lectionnÃ©s sont incompatibles\");\n\t\t\t}\n\t\t} else this.setValidity({});\n\t}\n}\n\nREG.reg.registerSkin(\"c-input-ordered-set-panel\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\tbackground-color: var(--form-bgcolor);\n\t\tborder: 1px solid var(--border-color);\n\t\tuser-select: none;\n\t}\n\n\t:host(:disabled) {\n\t\tbackground-color: transparent;\n\t}\n\n\n  :host(:focus) {\n\t  outline: var(--focus-outline);\n  }\n\n  :host([indeterminate]) {\n\t  opacity: .5;\n  }\n\n  .preview {\n\t  flex: 1;\n\t  overflow-y: auto;\n\t  overflow-x: hidden;\n\t  white-space: nowrap;\n\t  text-overflow: ellipsis;\n\t  min-width: 5rem;\n\t  align-self: center;\n\t  max-height: 4rem;\n  }\n\n\n  .preview[data-preview-mode='asLines'] {\n\t  border-inline-end: 1px solid var(--border-color);\n  }\n\n  .preview[data-preview-mode='asLines'] > .entry {\n\t  margin-inline-end: .2rem;\n  }\n\n  :host::after {\n\t  content: var(--dropdown-url);\n\t  display: flex;\n\t  min-width: auto;\n\t  min-height: auto;\n\t  width: var(--icon-size);\n\t  height: var(--icon-size);\n\t  align-self: center;\n\t  align-items: center;\n\t  justify-content: center;\n  }\n\n  :host([disabled])::after {\n\t  opacity: 0.2;\n  }\n\n  :host(:hover:not([disabled]))::after {\n\t  filter: var(--hover-filter);\n  }\n`);\n\nREG.reg.registerSkin(\"c-input-ordered-set-panel/popup\", 1, /* language=CSS */ `\n\t#content {\n\t  min-width: 11em;\n\t  min-height: 7em;\n  }\n\n  ::slotted(c-input-ordered-set) {\n\t  margin: 0.5ex 0.5em;\n  }\n`);\n\ncustomElements.define('c-input-ordered-set-panel', InputOrderedSetPanel);\n"]}