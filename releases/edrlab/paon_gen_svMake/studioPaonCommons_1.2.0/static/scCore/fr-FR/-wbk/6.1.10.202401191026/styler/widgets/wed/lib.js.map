{"version":3,"sources":["/@back@/styler/widgets/wed/lib.tsx"],"names":["REG","BaseElementAsync","MsgLabel","DOMSH","ActionBtn","JSX","STYLER","OpenPropsWspAction","StylerSkinCLass","SkinClassStlPreview","POPUP","StylerSkinsetPropsUI","[object Object]","init","this","reg","findReg","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","contentElt","appendChild","createElement","class","_onWspLiveStateChange","onWspLiveStateChange","bind","env","place","eventsMgr","on","refresh","wsp","removeListener","tpl","wedlet","val","children","innerHTML","skinClassesStyler","getSkinClassesStl","wspType","wpOptionSkinTitles","Set","wspOptions","forEach","entry","add","title","wpOptionSkinTitlesStr","sort","join","î","label","level","buildButton","OPEN_WSP_PROPS_ACT","Object","values","length","skinClassesStylerValueElt","listSkinsClasses","skinClass","Array","of","e1","e2","name","localeCompare","skinCLass","setLabel","setDescription","registerSkin","customElements","define","StylerSkinClassPropsUI","skinClassStlCode","longDesc","itAttr_skClassStl","skinClassStl","getSkinClassStl","infosBtn","tooltip","attachTooltip","shortDesc","mode"],"mappings":"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","sourcesContent":["import {IReg, REG} from \"lib/commons/registry\";\nimport {IElementWedlet, IWedlet} from \"back/edit/wed/wedlets/wedlet\";\nimport {BaseElementAsync, MsgLabel, OMsgLabelInit, OSkinableInit} from \"back/commons/basis\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {ActionBtn} from \"back/commons/widgets/buttons\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {IJmlNode, IJmlSubSet} from \"lib/commons/xml/jml\";\nimport {SkinClass, STYLER} from \"lib/styler/styler\";\nimport {OpenPropsWspAction} from \"back/wsp/actions/wspActions\";\nimport {Wsp} from \"lib/wsp/wsp\";\nimport {StylerSkinCLass} from \"back/styler/widgets/widgets\";\nimport {SkinClassStlPreview} from \"back/styler/widgets/previews\";\nimport {POPUP, PopupTooltip} from \"back/commons/widgets/popups\";\n\n/**\n * Skinset : bandeau des propriétés\n */\nexport class StylerSkinsetPropsUI extends BaseElementAsync implements IElementWedlet {\n\twedlet: IWedlet;\n\n\treg: IReg<IItemUiEnv>;\n\n\tcontentElt: HTMLDivElement;\n\n\tprivate _onWspLiveStateChange: any;\n\n\tstatic OPEN_WSP_PROPS_ACT = new OpenPropsWspAction().setLabel(\"Activer...\").setDescription(\"Activer une extension de stylage...\");\n\n\tasync _initialize(init: OSkinableInit): Promise<void> {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\t// Inutile pour le moment vues les infos affichées\n\t\t// this.reg.env.longDescChange.add(()=>this.redraw());\n\t\tthis.contentElt = sr.appendChild(<div class=\"props\"/>) as HTMLDivElement;\n\t\tthis._onWspLiveStateChange = this.onWspLiveStateChange.bind(this);\n\t\tthis.reg.env.place.eventsMgr.on(\"wspLiveStateChange\", this._onWspLiveStateChange);\n\t\tawait this.refresh();\n\t}\n\n\tprotected async onWspLiveStateChange(wsp: Wsp) {\n\t\tif (wsp !== this.reg.env.wsp) return;\n\t\tawait this.refresh();\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.reg.env.place.eventsMgr.removeListener(\"wspLiveStateChange\", this._onWspLiveStateChange);\n\t}\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet;\n\t}\n\n\trefreshBindValue(val: IJmlNode | string | null, children?: IJmlSubSet): void {\n\t\tthis.refresh();\n\t}\n\n\tprotected async _refresh() {\n\t\tif (this.contentElt) {\n\t\t\tthis.contentElt.innerHTML = \"\";\n\t\t\tconst skinClassesStyler = STYLER.getSkinClassesStl(this.reg.env.wsp);\n\t\t\tif (!this.reg.env.wsp.wspType) return;\n\n\t\t\t// - Liste des extensions de stylages\n\t\t\tlet wpOptionSkinTitles = new Set();\n\t\t\tif (this.reg.env.wsp.wspType.wspOptions)\n\t\t\t\tthis.reg.env.wsp.wspType.wspOptions.forEach((entry) => wpOptionSkinTitles.add(entry.title));\n\t\t\tlet wpOptionSkinTitlesStr = [...wpOptionSkinTitles].sort().join(\", \");\n\n\t\t\tthis.contentElt.appendChild(<div class=\"entry\">\n\t\t\t\t<span class=\"key\">Extensions de stylage actives :</span>\n\t\t\t\t<span class=\"value\">\n\t\t\t\t\t<MsgLabel class=\"msg\" î={{label: wpOptionSkinTitlesStr || \"Aucune. Veuillez installer/activer une extension de stylage.\", level: wpOptionSkinTitlesStr ? null : 'warning'} as OMsgLabelInit}/>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"acts\">\n\t\t\t\t\t{ActionBtn.buildButton(StylerSkinsetPropsUI.OPEN_WSP_PROPS_ACT, this.reg, 'custom', this.contentElt)}\n\t\t\t\t</span>\n\t\t\t</div>);\n\n\t\t\t// - Liste des skins activables\n\t\t\tif (skinClassesStyler && Object.values(skinClassesStyler).length) {\n\t\t\t\tlet skinClassesStylerValueElt = <span class=\"value\"/>;\n\t\t\t\tlet listSkinsClasses: Set<SkinClass> = new Set();\n\t\t\t\tObject.values(skinClassesStyler).forEach((entry) => listSkinsClasses.add(entry.skinClass(this.reg.env.wsp)));\n\n\t\t\t\tArray.of(...listSkinsClasses)\n\t\t\t\t\t.sort((e1, e2) => e1.name.localeCompare(e2.name))\n\t\t\t\t\t.forEach((entry) => {\n\t\t\t\t\t\tskinClassesStylerValueElt.appendChild(<StylerSkinCLass î={{skinCLass: entry.class, reg: this.reg}}/>);\n\t\t\t\t\t});\n\t\t\t\tthis.contentElt.appendChild(<div class=\"entry\">\n\t\t\t\t\t<span class=\"key\">Familles de générateurs stylables :</span>\n\t\t\t\t\t{skinClassesStylerValueElt}\n\t\t\t\t\t<span class=\"acts\"/>\n\t\t\t\t</div>);\n\t\t\t}\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin('styler-skinset-propsui', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: block;\n\t\tcolor: var(--info-color);\n\t\tbackground-color: var(--panel-bgcolor);\n\t\tmargin: 0em 1em;\n\t\tpadding: .5em;\n\t\tfont-size: .8rem;\n\t\tborder-radius: 5px;\n\t}\n\n\t.props {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto 1fr auto;\n\t\tgrid-template-rows: auto;\n\t\tgrid-column-gap: 3em;\n\t  margin-inline-start: .5em;\n  }\n\n  .entry {\n\t  display: contents;\n  }\n\n  .key {\n\t  color: var(--alt2-color);\n  }\n\n  .msg {\n\t  justify-content: unset;\n  }\n\n  styler-skinclass + styler-skinclass {\n\t  margin-inline-start: 1em;\n  }\n`);\n\ncustomElements.define('styler-skinset-propsui', StylerSkinsetPropsUI);\n\n/**\n * SkinClassStl : bandeau des propriétés du skinClassStl\n */\nexport class StylerSkinClassPropsUI extends BaseElementAsync implements IElementWedlet {\n\twedlet: IWedlet;\n\n\treg: IReg<IItemUiEnv>;\n\n\ttooltip: PopupTooltip;\n\n\tprivate _onWspLiveStateChange: any;\n\n\tasync _initialize(init: OSkinableInit): Promise<void> {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tconst skinClassStlCode = (this.reg.env.longDesc as any).itAttr_skClassStl;\n\t\tconst skinClassStl = STYLER.getSkinClassStl(this.reg.env.wsp, skinClassStlCode);\n\t\tconst skinClass = skinClassStl.skinClass(this.reg.env.wsp);\n\n\t\tconst infosBtn = sr.appendChild(<img class='infoBtn'/>);\n\t\tsr.appendChild(<div class=\"spacer\"/>);\n\t\tthis.tooltip = POPUP.attachTooltip(infosBtn, <SkinClassStlPreview î={{shortDesc: this.reg.env.longDesc, reg: this.reg, mode: 'details'}}/>);\n\n\t\tsr.appendChild(<StylerSkinCLass î={{skinCLass: skinClass.class, reg: this.reg}}/>);\n\t}\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet;\n\t}\n\n\trefreshBindValue(val: IJmlNode | string | null, children?: IJmlSubSet): void {\n\t}\n\n}\n\nREG.reg.registerSkin('styler-skinclassstyler-propsui', 1, /* language=CSS */ `\n\t:host {\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t}\n\n\t.infoBtn {\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\tcontent: url(/@skin@/styler/widgets/info.svg);\n\t\tcursor: pointer;\n\t}\n\n\t.spacer {\n\t\tflex: 1;\n\t}\n`);\n\ncustomElements.define('styler-skinclassstyler-propsui', StylerSkinClassPropsUI);\n"]}