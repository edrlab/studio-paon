{"version":3,"sources":["/@back@/wsp/views/wspList.tsx"],"names":["BaseElement","GridColDef","GridDataHolderJsonArray","GridSmall","Action","REG","renderAppend","xhtml","DOM","JSX","DOMSH","Wsp","WSP","POPUP","LANG","BarActions","WSPPACK","WspList","[object Object]","this","action","disabled","init","reg","findReg","universe","env","_datas","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","tabIndex","_filterInput","appendChild","createElement","id","hidden","type","spellcheck","placeholder","oninput","onFilterInput","onkeydown","onFilterKeydown","_grid","initialize","hideHeaders","selType","columnDefs","setFlex","setCellBuilder","dataHolder","emptyBody","_fetchState","level","label","value","skinOver","skinScroll","setAttribute","connectToGrid","uiEvents","on","row","ev","gotoWsp","rowDatas","addEventListener","key","getRow","getSelectedRow","findHost","length","focus","defaultMode","defaultWspOpenMode","_defaultAction","OpenWsp","altMode","alternateWspOpenMode","_actionsInCell","setLabel","cellTpl","getSvc","wspList","wspInfo","wspReg","createSubReg","wspServer","wspCd","wspCanOpen","hasPerm","wspInfoTxt","status","wspTypeWarn","buildWspDefTitle","wspType","lang","version","actionsToolbar","actions","uiContext","actionContext","preventDefault","stopImmediatePropagation","props","drfRefWsp","drvMasterWsp","publicWsp","title","fetchDatas","datas","listWsps","fields","wsps","sort","w1","w2","localeCompare","setHidden","parentElement","setDatas","setSelectedRows","e","executeIfAvailable","dispatchEvent","CustomEvent","detail","actionable","bubbles","composed","root","sh","shadowRoot","_buildCell","getDescription","installSkin","me","text","pattern","RegExp","escape4RegexpFuzzy","_filterdDatas","fullArr","getDatas","arr","i","s","v","test","push","countRows","wspAppMode","super","_label","_description","setIcon","requireEnabledPerm","requireVisiblePerm","ctx","wsp","isVisible","infoWsp","infoWspError","OpenPropsWspAction","import","showNotifError","document","body","showNotifForbidden","desk","findAndOpenApp","u","getId","code","wspDoc","registerSkin","customElements","define"],"mappings":"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","sourcesContent":["import {IActionable} from \"back/commons/actionables\";\nimport {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {GridColDef, ICellBuilder, IRowSortFn} from \"back/commons/widgets/grid-core\";\nimport {GridDataHolderJsonArray, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {GridSmall} from \"back/commons/widgets/grid-tags\";\nimport {AppFrameDeskFeat} from \"back/core/appFrame\";\nimport {JWspAppDef, JWspDocAppDef} from \"back/wsp/plugins/wspsPlg\";\nimport {Action, IAction} from \"lib/commons/actions\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {renderAppend, TemplateResult, xhtml} from \"lib/commons/utils/htmlLit\";\nimport {IView} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {ChainUniverse, IChainEnv} from \"lib/wsp/chain\";\nimport {IWspUiEnv, JInfoWsp, JWspInfoInList, Wsp, WSP} from \"lib/wsp/wsp\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {LANG} from \"lib/commons/lang\";\nimport {BarActions} from \"back/commons/widgets/bars\";\nimport {OpenPropsWspAction} from \"back/wsp/actions/wspActions\";\nimport \"back/wsp/views/views_Perms\";\nimport {WSPPACK} from \"lib/wsp/pack\";\n\n\n/** View de s√©lection et d'actions sur un atelier. */\nexport interface WspList extends BaseElement, IView {\n\tinitialize(init: OSkinableInit): this;\n}\n\nexport class WspList extends BaseElement implements IActionable<Element>, ICellBuilder {\n\n\treg: IReg<IChainEnv>;\n\n\tuniverse: ChainUniverse;\n\n\t/* Simulation d'un IActionable, pour navigation dans le menu. */\n\taction: Action<Element> = new Action(); //fake pour\n\tactionContext: Element;\n\n\tget disabled() { return true }\n\n\tcellTpl: (this: void, row: GridDataRowJson<JWspInfoInList>, wspList: WspList, reg: IReg<IChainEnv>) => TemplateResult;\n\n\t_filterInput: HTMLInputElement;\n\t_grid: GridSmall;\n\t_datas: GridDataHolderJsonArray<JWspInfoInList>;\n\t_filterdDatas: GridDataHolderJsonArray<JWspInfoInList>;\n\t_fetchState: 'fetching' | 'fetchFailed' | 'fetchDone';\n\t_actionsInCell: IAction<IRegPointer<IWspUiEnv>>[];\n\t_defaultAction: OpenWsp;\n\n\tprotected _initialize(init: OSkinableInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.universe = this.reg.env.universe;\n\t\tthis._datas = new GridDataHolderJsonArray();\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.tabIndex = 0;\n\t\tthis._filterInput = sr.appendChild(<div id=\"search\" hidden=\"\"/>).appendChild(<input type=\"search\" spellcheck=\"false\" placeholder=\"Filtrer...\" oninput={this.onFilterInput} onkeydown={this.onFilterKeydown}/>) as HTMLInputElement;\n\t\tthis._grid = sr.appendChild(new GridSmall().initialize({\n\t\t\thideHeaders: true,\n\t\t\tselType: 'monoOver',\n\t\t\tcolumnDefs: [new GridColDef('wsps').setFlex('90vw', 0, 1).setCellBuilder(this)],\n\t\t\tdataHolder: this._datas,\n\t\t\temptyBody: () => {\n\t\t\t\tif (this._fetchState === 'fetchFailed') return <c-msg level=\"error\" label=\"Chargement en √©chec\"/>;\n\t\t\t\tif (this._fetchState === 'fetchDone') {\n\t\t\t\t\tif (this._filterInput.value) return <c-msg level=\"info\" label=\"Aucun atelier pour ce filtre\"/>;\n\t\t\t\t\treturn <c-msg level=\"info\" label=\"Aucun atelier disponible\"/>;\n\t\t\t\t}\n\t\t\t\treturn <c-msg level=\"info\" label=\"Chargement en cours...\"/>;\n\t\t\t},\n\t\t\tskinOver: 'wsp-list/c-grid',\n\t\t\tskinScroll: 'scroll/small'\n\t\t}));\n\t\tthis._grid.setAttribute('id', \"grid\");\n\t\tthis._datas.connectToGrid(this._grid);\n\n\t\t// incompatible avec sous-menu\n\t\t// this._grid.uiEvents.on('rowDblclick', (row: GridDataRowJson<JWspInfoInList> | null, ev: MouseEvent) => {\n\t\t// \tif (!row) return;\n\t\t// \tlet wspCd = row.rowDatas.wspCd;\n\t\t// \t(desk as AppFrameDeskFeat).findAndOpenApp({wsp: wspCd} as JWspAppDef);\n\t\t// \tthis.dispatchEvent(new CustomEvent('c-actioned', {detail: {actionable: this}, bubbles: true, composed: true}));\n\t\t// });\n\n\t\tthis._grid.uiEvents.on('rowClick', (row: GridDataRowJson<JWspInfoInList> | null, ev: MouseEvent) => {\n\t\t\tif (row) this.gotoWsp(row.rowDatas, ev);\n\t\t});\n\n\t\t// this._grid.addEventListener('keydown', function (this: GridSmall, ev: KeyboardEvent) {\n\t\t// \tif (ev.key === 'ArrowRight') onKey.call(this)\n\t\t// });\n\n\t\tthis._grid.addEventListener('keydown', function (this: GridSmall, ev: KeyboardEvent) {\n\t\t\tif (ev.key === ' ' || ev.key === 'Enter') {\n\t\t\t\tconst row = this.dataHolder.getRow(this.getSelectedRow()) as GridDataRowJson<JWspInfoInList>;\n\t\t\t\tif (row) DOMSH.findHost<WspList>(this).gotoWsp(row.rowDatas, ev);\n\t\t\t} else if (ev.key.length === 1) {\n\t\t\t\tDOMSH.findHost<WspList>(this)._filterInput.focus();\n\t\t\t}\n\t\t});\n\n\t\tconst defaultMode = WSP.defaultWspOpenMode(this.reg);\n\t\tthis._defaultAction = defaultMode ? new OpenWsp(defaultMode) : null;\n\t\tconst altMode = WSP.alternateWspOpenMode(this.reg);\n\t\tthis._actionsInCell = altMode && altMode !== defaultMode ? [new OpenWsp(altMode).setLabel(null)] : null;\n\n\t\tthis.cellTpl = this.reg.getSvc(\"wspListCellTpl\") || ((row: GridDataRowJson<JWspInfoInList>, wspList: WspList, reg: IReg<IChainEnv>): TemplateResult => {\n\t\t\tconst wspInfo = row.rowDatas;\n\t\t\t//console.log(\"::::::\", wspDef.props);\n\t\t\tconst wspReg: IReg<IWspUiEnv> = REG.createSubReg(reg, new Wsp(reg.env.universe.wspServer, wspInfo.wspCd, wspInfo as JInfoWsp)) as IReg<IWspUiEnv>;\n\t\t\tconst wspCanOpen = wspReg.hasPerm(\"action.wspList#open.wsp\") && (wspReg.hasPerm(\"ui.wspApp\") || wspReg.hasPerm(\"ui.wspDocApp\"));\n\t\t\tlet wspInfoTxt: string;\n\t\t\tif (!wspCanOpen) {\n\t\t\t\twspInfoTxt = \"Acc√®s non autoris√©\";\n\t\t\t} else {\n\t\t\t\tswitch (wspInfo.status) {\n\t\t\t\tcase 'ok' :\n\t\t\t\t\twspInfoTxt = wspInfo.wspTypeWarn === 'unknown' ? \"Mod√®le inconnu\" : WSPPACK.buildWspDefTitle(wspInfo.wspType, {lang: false, version: false});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'failed' :\n\t\t\t\t\twspInfoTxt = 'Mod√®le en erreur';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\twspInfoTxt = wspInfo.wspType ? WSPPACK.buildWspDefTitle(wspInfo.wspType, {lang: false, version: false}) : '...'; //non charg√© ou en cours\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst actionsToolbar = new BarActions<IRegPointer<IWspUiEnv>>().initialize({\n\t\t\t\tactions: this._actionsInCell,\n\t\t\t\tuiContext: \"bar\",\n\t\t\t\tactionContext: {\n\t\t\t\t\treg: wspReg,\n\t\t\t\t}\n\t\t\t});\n\t\t\tactionsToolbar.addEventListener(\"click\", (ev) => {\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t});\n\t\t\treturn xhtml`\n<span id=\"icon\" aria-disabled=\"${!wspCanOpen}\" class=\"${(wspInfo.props.drfRefWsp ? 'drf' : wspInfo.props.drvMasterWsp ? 'drv' : 'wsp') + (wspInfo.props.publicWsp === 'true' ? ' public' : '')}\"/>\n<div id=\"body\" aria-disabled=\"${!wspCanOpen}\">\n\t<span id=\"title\">${wspInfo.title || wspInfo.wspCd}</span>\n\t<div id=\"wspType\">${wspInfoTxt}</div>\n</div>\n${actionsToolbar}`;\n\t\t});\n\t\tthis.fetchDatas();\n\t}\n\n\tasync fetchDatas() {\n\t\tthis._fetchState = \"fetching\";\n\t\ttry {\n\t\t\tconst datas = await WSP.listWsps(this.universe.wspServer, {fields: [\"srcRoles\", \"srcRi\"]});\n\t\t\tdatas.wsps.sort((w1, w2) => (w1.title || w1.wspCd).localeCompare(w2.title || w2.wspCd));\n\t\t\tDOM.setHidden(this._filterInput.parentElement, datas.wsps.length < 8);\n\t\t\tthis._fetchState = \"fetchDone\"; //avant le setDatas pour l'eval du ifEmpty.\n\t\t\tthis._datas.setDatas(datas.wsps);\n\t\t\tthis._grid.setSelectedRows(0);\n\t\t\tthis._grid.focus();\n\t\t} catch (e) {\n\t\t\tthis._fetchState = \"fetchFailed\";\n\t\t\tthis._datas.setDatas([]);\n\t\t\tthrow e;\n\t\t}\n\n\t}\n\n\tgotoWsp(wspInfo: JWspInfoInList | null, ev: KeyboardEvent | MouseEvent) {\n\t\tif (!wspInfo || !this._defaultAction) return;\n\t\tthis._defaultAction.executeIfAvailable({reg: REG.createSubReg(this.reg, new Wsp(this.reg.env.universe.wspServer, wspInfo.wspCd, wspInfo as JInfoWsp))}, ev);\n\t\tthis.dispatchEvent(new CustomEvent('c-actioned', {detail: {actionable: {action: this._defaultAction}}, bubbles: true, composed: true}))\n\t\t//this.getPopup(row.rowDatas).show({initX: ev.pageX - 10, initY: ev.pageY - 10}, this, this);\n\t}\n\n\tfocus() {\n\t\tthis._grid.focus();\n\t}\n\n\t/** api ICellBuilder pour dessiner chaque wsp. */\n\tredrawCell(row: GridDataRowJson<JWspInfoInList>, root: HTMLElement) {\n\t\tconst sh = root.shadowRoot || this._buildCell(root);\n\t\trenderAppend(this.cellTpl(row, this, this.reg), sh);\n\t}\n\n\tprotected _buildCell(root: HTMLElement): ShadowRoot {\n\t\tif (this._defaultAction) root.title = this._defaultAction.getDescription(this);\n\t\tconst sh = root.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin('wsp-list/cellInList', sh);\n\t\treturn sh;\n\t}\n\n\tprotected onFilterInput(this: HTMLInputElement, ev: Event) {\n\t\tconst me = DOMSH.findHost<WspList>(this);\n\t\tconst text = this.value;\n\t\tif (text) {\n\t\t\tconst pattern = new RegExp(LANG.escape4RegexpFuzzy(text), 'i');\n\t\t\tif (!me._filterdDatas) me._filterdDatas = new GridDataHolderJsonArray();\n\t\t\tconst fullArr = me._datas.getDatas();\n\t\t\tconst arr = [] as JWspInfoInList[];\n\t\t\tfor (let i = 0, s = fullArr.length; i < s; i++) {\n\t\t\t\tconst v = fullArr[i];\n\t\t\t\tif (pattern.test(v.title || v.wspCd)) arr.push(v);\n\t\t\t}\n\t\t\tme._filterdDatas.setDatas(arr);\n\t\t\tif (me._grid.dataHolder !== me._filterdDatas) me._grid.dataHolder = me._filterdDatas;\n\t\t} else {\n\t\t\tme._grid.dataHolder = me._datas;\n\t\t}\n\t}\n\n\tprotected onFilterKeydown(this: HTMLInputElement, ev: KeyboardEvent) {\n\t\tif (ev.key === \"ArrowDown\") {\n\t\t\tconst me = DOMSH.findHost<WspList>(this);\n\t\t\tif ((me._filterdDatas || me._datas).countRows() > 0) {\n\t\t\t\tme._grid.setSelectedRows(0);\n\t\t\t\tme._grid.focus();\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\t/** api ICellBuilder, pas de tri */\n\tgetColSortFn(): IRowSortFn {return null};\n}\n\n/**\n * ATTENTION wspMetaUi n'est pas charg√© dans le Wsp du contexte de cette action.\n */\nexport class OpenWsp extends Action<IRegPointer<IWspUiEnv>> {\n\tconstructor(public wspAppMode?: 'wspApp' | 'wspDocApp', id?: string) {\n\t\tsuper(id || \"wspOpen\");\n\t\tthis._label = \"Ouvrir...\";\n\t\tthis._description = wspAppMode === 'wspApp' ? \"Ouvrir l'atelier en mode explorateur\" : \"Ouvrir l'atelier en mode plan\";\n\t\tthis.setIcon(wspAppMode === 'wspApp' ? \"/@skin@/wsp/views/spaceTree/tree.svg\" : \"/@skin@/wsp/views/toc/toc.svg\");\n\t\tthis.requireEnabledPerm(\"action.wspList#open.wsp\");\n\t\tthis.requireVisiblePerm(wspAppMode === 'wspApp' ? \"ui.wspApp\" : \"ui.wspDocApp\");\n\t}\n\n\tisVisible(ctx: IRegPointer<IWspUiEnv>): boolean {\n\t\tif (!ctx.reg.env.wsp) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync execute(ctx: IRegPointer<IWspUiEnv>, ev?: KeyboardEvent | MouseEvent) {\n\t\tconst infoWsp = ctx.reg.env.wsp.infoWsp || ctx.reg.env.wsp.infoWspError;\n\t\tconst {OpenPropsWspAction} = await import(\"back/wsp/actions/wspActions.js\");\n\t\tif (infoWsp && infoWsp.status === 'failed') {\n\t\t\tPOPUP.showNotifError(\"Cet atelier est en erreur et ne peut pas √™tre ouvert. Veuillez v√©rifier ses propri√©t√©s.\", document.body);\n\t\t\tnew OpenPropsWspAction().executeIfAvailable(ctx);\n\t\t} else if (infoWsp && infoWsp.wspTypeWarn === 'unknown') {\n\t\t\tPOPUP.showNotifForbidden(\"Le mod√®le documentaire de cet atelier est inconnu¬†: son ouverture est impossible. Veuillez v√©rifier les propri√©t√©s de l'atelier.\", document.body);\n\t\t\tnew OpenPropsWspAction().executeIfAvailable(ctx);\n\t\t} else {\n\t\t\t(desk as AppFrameDeskFeat).findAndOpenApp(\n\t\t\t\tthis.wspAppMode === \"wspApp\" ?\n\t\t\t\t\t{u: ctx.reg.env.universe.getId(), wsp: ctx.reg.env.wsp.code} as JWspAppDef\n\t\t\t\t\t: {u: ctx.reg.env.universe.getId(), wspDoc: ctx.reg.env.wsp.code} as JWspDocAppDef,\n\t\t\t\tev);\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin('wsp-list', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t#search {\n\t\tpadding: .3em;\n\t\tborder-bottom: 1px solid var(--border-color);\n\t}\n\n\tinput {\n\t\tbackground: .1em / 1em no-repeat url(/@skin@/commons/icons/filter.svg) var(--form-search-bgcolor);\n\t\tbackground-position: left;\n\t\tcolor: var(--form-color);\n\t\tborder: none;\n\t\tpadding-block: .2em;\n\t\tpadding-inline: 1.2em .2em;\n\t\twidth: 100%;\n\t\tfont-size: inherit;\n\t}\n\n\tinput:focus {\n\t\toutline: none;\n\t}\n\n\tinput::placeholder {\n\t\tcolor: var(--fade-color);\n\t\tletter-spacing: 2px;\n\t\tfont-size: .8em;\n\t\tfont-style: italic;\n\t}\n\n\tinput:focus::placeholder {\n\t\tcolor: transparent;\n\t}\n\n\t#grid {\n\t\tborder: none;\n\t}\n\n\t#grid:focus {\n\t\toutline: none;\n\t}\n`);\n\nREG.reg.registerSkin('wsp-list/c-grid', 1, /* language=CSS */ `\n\t.inSel {\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n\n\tc-msg {\n\t\tmargin: .2em .5em;\n\t}\n`);\n\nREG.reg.registerSkin('wsp-list/cellInList', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\talign-items: center;\n\t}\n\n\t*[aria-disabled=true] {\n\t\topacity: 70%;\n\t}\n\n\t#icon {\n\t\theight: 1.2em;\n\t\twidth: 1.2em;\n\t\tmin-width: 1.2em;\n\t\tfilter: var(--filter);\n\t}\n\n\t.wsp {\n\t\tbackground: url('/@skin@/wsp/objects/wsp/wsp.svg') no-repeat center/contain;\n\t}\n\n\t.wsp.public {\n\t\tbackground: url('/@skin@/wsp/objects/lockOpen.svg') no-repeat top right/.7em, url('/@skin@/wsp/objects/wsp/wsp.svg') no-repeat center/contain;\n\t}\n\n\t.drf {\n\t\tbackground: url('/@skin@/wsp/objects/wsp/wspDrf.svg') no-repeat center/contain;\n\t}\n\n\t.drf.public {\n\t\tbackground: url('/@skin@/wsp/objects/lockOpen.svg') no-repeat top right/.7em, url('/@skin@/wsp/objects/wsp/wspDrf.svg') no-repeat center/contain;\n\t}\n\n\t.drv {\n\t\tbackground: url('/@skin@/wsp/objects/wsp/wspDrv.svg') no-repeat center/contain;\n\t}\n\n\t.drv.public {\n\t\tbackground: url('/@skin@/wsp/objects/lockOpen.svg') no-repeat top right/.7em, url('/@skin@/wsp/objects/wsp/wspDrv.svg') no-repeat center/contain;\n\t}\n\n\t#body {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin-inline-start: .3em;\n\t\tmargin-block: .2em;\n\t\tmax-width: 40vw;\n\t}\n\n\t#title {\n\t\tflex: 1;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t#wspType {\n\t\tfont-size: .7em;\n\t\tcolor: var(--fade-color);\n\t}\n\n\tc-action:not(:hover) {\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n`);\n\ncustomElements.define('wsp-list', WspList);\n"]}