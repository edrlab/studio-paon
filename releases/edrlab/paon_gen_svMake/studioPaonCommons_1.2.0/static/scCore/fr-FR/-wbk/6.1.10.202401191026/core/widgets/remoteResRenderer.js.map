{"version":3,"sources":["/@back@/core/widgets/remoteResRenderer.tsx"],"names":["BaseElement","BaseElementAsync","BASIS","REMOTE","RemoteRes","Button","DOMSH","DOM","JSX","REG","LANG","POPUP","BarActions","Action","RemoteResRenderer","[object Object]","res","url","_a","this","resShown","msgShown","config","forceWebRender","webRender","msg","refresh","getBestWebRendition","level","icon","init","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","_msgTag","shadowRoot","appendChild","createElement","setRemoteRes","show","setHidden","_renderTag","hidden","className","sr","remove","showRenderTag","setCustomMsg","insertBefore","class","src","controls","sandbox","allow","î","reg","label","uiContext","onclick","onDownloadBtn","onOpenBtn","onerror","ev","me","findHost","link","document","href","urlRemoteContent","path","URL","pathname","idx","lastIndexOf","setAttribute","substring","click","window","open","registerSkin","customElements","define","RemoteResRendererExtended","findReg","remoteResSelector","previewInit","resDesc","remoteResAsVideo","remoteResAsAudio","remoteResForPreview","installSkin","openBtn","addToList","ACTIONS_LIST_BASE","OpenRemoteResAct","SINGLETON","buildStruct","buildTitle","titleRoot","id","barActions","actions","mergeLists","actionsList","actionContext","disableFullOverlay","preview","remoteResRenderer","newInit","promiseTooltip","async","txtElt","initialize","hoverAllowed","fetchResDesc","status","currentRefresh","_pendingRefresh","Date","now","refreshUi","newDesc","remoteDesc","updateTitle","updatePreview","updateBarActions","call","setTextContent","_b","title","_c","st","setHiddenProp","refreshContent","super","_label","_icon","ctx","view","findOpenView","buildUrlFromResDesc","isVisible","editor","findEditorInResDesc","findFullViewInResDesc","previewTags","getTags","arrayEquals","body","tags","web","_d"],"mappings":"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","sourcesContent":["import {BaseElement, BaseElementAsync, BASIS, MsgLabel, OSkinableInit} from \"back/commons/basis\";\nimport {JRemoteResDescFromClient, REMOTE, RemoteRes} from \"lib/core/remote\";\nimport {Button, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {IBasicUniversePointer, ICoreUniverseEnv} from \"lib/core/universe\";\nimport {LANG} from \"lib/commons/lang\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {Action} from \"lib/commons/actions\";\n\n/**\n * Affiche une ressource distante RemoteRes.\n */\nexport interface RemoteResRenderer extends BaseElement {\n\tinitialize(init: ORemoteResRendererInit): this\n}\n\nexport interface ORemoteResRendererInit extends OSkinableInit {\n\tres?: RemoteRes | null\n\t/** 'embed' =  'img' | 'audio' | 'video' | 'iframe', s'oppose à 'window' et 'download'. */\n\tforceWebRender?: 'img' | 'audio' | 'video' | 'iframe' | 'embed' | 'window' | 'download';\n}\n\nexport class RemoteResRenderer extends BaseElementAsync {\n\tconfig: ORemoteResRendererInit;\n\tresShown: RemoteRes | null;\n\tmsgShown: { msg: string, level?: 'info' | 'error' | 'warning' | 'valid' | null, icon?: string } | null;\n\twebRender: 'img' | 'audio' | 'video' | 'iframe' | 'window' | 'download' | null;\n\n\tprotected _renderTag: HTMLIFrameElement | HTMLImageElement | HTMLAudioElement | HTMLVideoElement | Button;\n\tprotected _msgTag: MsgLabel;\n\n\tasync setRemoteRes(res: RemoteRes | null) {\n\t\tif (res ? res.url === this.resShown?.url : this.resShown == null) return;\n\t\tthis.resShown = res;\n\t\tthis.msgShown = null;\n\t\tif (res) {\n\t\t\tif (this.config.forceWebRender && this.config.forceWebRender !== 'embed') {\n\t\t\t\tthis.webRender = this.config.forceWebRender;\n\t\t\t} else {\n\t\t\t\tthis.msgShown = {msg: \"...\"};\n\t\t\t\tthis.refresh();\n\t\t\t\tconst webRender = await res.getBestWebRendition();\n\t\t\t\tif (this.resShown !== res) return; //raceCond\n\t\t\t\tthis.msgShown = null;\n\t\t\t\tif (this.config.forceWebRender === 'embed' && (webRender === \"window\" || webRender === \"download\")) {\n\t\t\t\t\tthis.webRender = null; //On refuse ce rendu\n\t\t\t\t} else {\n\t\t\t\t\tthis.webRender = webRender;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.refresh();\n\t}\n\n\tsetMsg(msg: string | null, level?: 'info' | 'error' | 'warning' | 'valid' | null, icon?: string) {\n\t\tthis.resShown = null;\n\t\tthis.webRender = null;\n\t\tthis.msgShown = {msg, level, icon};\n\t\tthis.refresh();\n\t}\n\n\tprotected _initialize(init: ORemoteResRendererInit): Promise<void> {\n\t\tthis.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.config = init;\n\t\tthis.config.forceWebRender;\n\t\tthis._msgTag = this.shadowRoot.appendChild(<c-msg/>) as MsgLabel;\n\t\treturn this.setRemoteRes(init.res);\n\t}\n\n\tprotected showRenderTag(show: boolean) {\n\t\tDOM.setHidden(this._msgTag, show);\n\t\tif (this._renderTag) this._renderTag.hidden = !show;\n\t\tthis.className = show ? this._renderTag?.className || \"msg\" : \"msg\";\n\t}\n\n\tprotected _refresh() {\n\t\tconst sr = this.shadowRoot;\n\t\tif (this._renderTag) {\n\t\t\tthis._renderTag.remove();\n\t\t\tthis._renderTag = null;\n\t\t}\n\t\tif (this.msgShown) {\n\t\t\tthis.showRenderTag(false);\n\t\t\tthis._msgTag.setCustomMsg(this.msgShown.msg, this.msgShown.level, this.msgShown.icon);\n\t\t\treturn;\n\t\t}\n\t\tswitch (this.resShown ? this.webRender : null) {\n\t\tcase 'img':\n\t\t\tthis._renderTag = sr.insertBefore(<img class=\"imgView\" hidden=\"\" src={this.resShown.url}/>, this._msgTag) as HTMLImageElement;\n\t\t\tbreak;\n\t\tcase 'video':\n\t\t\tthis._renderTag = sr.insertBefore(<video class=\"videoView\" controls=\"controls\" hidden=\"\" src={this.resShown.url}/>, this._msgTag) as HTMLVideoElement;\n\t\t\t//TODO chercher le poster dans RemoteRes\n\t\t\tbreak;\n\t\tcase 'audio':\n\t\t\tthis._renderTag = sr.insertBefore(<audio class=\"audioView\" controls=\"controls\" hidden=\"\" src={this.resShown.url}/>, this._msgTag) as HTMLAudioElement;\n\t\t\tbreak;\n\t\tcase \"iframe\":\n\t\t\tthis._renderTag = sr.insertBefore(<iframe class=\"htmlView\" hidden=\"\" sandbox=\"allow-scripts allow-same-origin allow-forms\" allow=\"encrypted-media; picture-in-picture\" src={this.resShown.url}/>, this._msgTag) as HTMLIFrameElement;\n\t\t\tbreak;\n\t\tcase \"download\":\n\t\t\tthis._renderTag = sr.insertBefore(<Button class=\"downloadBtn\" hidden=\"\" î={{reg: this.resShown.reg, label: \"Télécharger\", uiContext: \"dialog\"} as OButtonInit} onclick={this.onDownloadBtn}/>, this._msgTag) as Button;\n\t\t\tbreak;\n\t\tcase \"window\":\n\t\t\tthis._renderTag = sr.insertBefore(<Button class=\"openBtn\" hidden=\"\" î={{reg: this.resShown.reg, label: \"Ouvrir...\", uiContext: \"dialog\"} as OButtonInit} onclick={this.onOpenBtn}/>, this._msgTag) as Button;\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tthis._msgTag.setCustomMsg(\"Visualisation non disponible\", \"info\");\n\t\t}\n\t\tif (this._renderTag) {\n\t\t\tif (!(this._renderTag instanceof Button)) this._renderTag.onerror = function (this: HTMLIFrameElement, ev: Event) {\n\t\t\t\tconst me = DOMSH.findHost<RemoteResRenderer>(this)\n\t\t\t\tme.showRenderTag(false);\n\t\t\t\tme._msgTag.setCustomMsg(\"Ressource non disponible\", \"error\");\n\t\t\t};\n\t\t\tthis.showRenderTag(true);\n\t\t} else {\n\t\t\tthis.showRenderTag(false);\n\t\t}\n\t}\n\n\tonDownloadBtn(this: Button, ev: MouseEvent) {\n\t\tconst me = DOMSH.findHost<RemoteResRenderer>(this);\n\t\tconst link = document.createElement('a');\n\t\tlink.href = REMOTE.urlRemoteContent(me.resShown.url, me.config.reg); //via svc remote pour être sameDomain et que l'att download soit opératiobnnel.\n\t\tconst path = new URL(me.resShown.url).pathname;\n\t\tconst idx = path.lastIndexOf(\"/\") + 1;\n\t\tlink.setAttribute(\"download\", idx > 0 ? path.substring(idx) : path);\n\t\tlink.click();\n\t}\n\n\tonOpenBtn(this: Button, ev: MouseEvent) {\n\t\tconst me = DOMSH.findHost<RemoteResRenderer>(this);\n\t\twindow.open(me.resShown.url, \"_blank\");\n\t}\n\n}\n\nREG.reg.registerSkin('wsp-remoteres-renderer', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttext-align: center;\n\t\tvertical-align: middle;\n\t\toverflow: auto;\n\t\tdisplay: flex;\n\t}\n\n\n\t:host > .imgView, :host > .videoView, :host > .audioView, :host > .iframeView, :host > .dynGenView {\n\t\tmax-height: 100%;\n\t\tobject-fit: scale-down;\n\t\tmax-width: 100%;\n\t}\n\n\t:host(.itemPreview) > .imgView, :host(.itemPreview) > .videoView, :host(.itemPreview) > .iframeView, :host(.itemPreview) > .dynGenView {\n\t\tmax-height: 10em;\n\t}\n\n\t:host > .audioView {\n\t\tmax-height: 2em;\n\t}\n\n\t:host > .iframeView, :host > .dynGenView {\n\t\tborder: 1px solid var(--border-color);\n\t\twidth: 100%;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none;\n\t}\n\n\tiframe {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t  border: none;\n  }\n\n  c-msg {\n\t  margin: .5em;\n\t  font-style: italic;\n  }\n`);\n\ncustomElements.define('wsp-remoteres-renderer', RemoteResRenderer);\n\n/**\n * Affiche une ressource distante RemoteRes, avec éventuellement un titre et des actions\n */\nexport interface RemoteResRendererExtended<ACTCTX extends IRemoteResRendererActionCtx = IRemoteResRendererActionCtx> extends BaseElement {\n\tinitialize(init: ORemoteResRendererExtendedInit<ACTCTX>): this\n}\n\nexport interface ORemoteResRendererExtendedInit<CTX extends IRemoteResRendererActionCtx = IRemoteResRendererActionCtx> extends OSkinableInit {\n\tfetchResDesc: () => Promise<JRemoteResDescFromClient>\n\tremoteResSelector?: (reg: IReg<IBasicUniversePointer>, resDesc: JRemoteResDescFromClient) => RemoteRes | null\n\t/** Construction du titre. Si null ou ne retourne pas 'done', le titre =  RemoteRes.title || RemoteRes.url || \"[url non renseignée]\" */\n\tbuildTitle?: ((this: RemoteResRendererExtended<CTX>, target: HTMLSpanElement, resMetas: JRemoteResDescFromClient | null) => 'done') | 'none'\n\tpreview?: 'shown'/*par défaut*/ | 'none' | 'tooltip'\n\tpreviewInit?: ORemoteResRendererInit\n\topenBtn?: 'shown'/*par défaut*/ | 'none'\n\tactionsList?: string\n}\n\nexport interface IRemoteResRendererActionCtx extends IRegPointer<ICoreUniverseEnv> {\n\tremoteDesc?: JRemoteResDescFromClient | null\n\tremoteResRenderer?: RemoteResRenderer\n}\n\nexport class RemoteResRendererExtended<ACTCTX extends IRemoteResRendererActionCtx> extends BaseElement implements IRemoteResRendererActionCtx {\n\tpublic reg: IReg<ICoreUniverseEnv>\n\n\tprotected config: ORemoteResRendererExtendedInit<ACTCTX>;\n\n\tprotected titleRoot?: HTMLSpanElement;\n\n\tprotected barActions: BarActions<ACTCTX>;\n\n\tremoteResRenderer?: RemoteResRenderer;\n\n\tremoteDesc?: JRemoteResDescFromClient | null;\n\n\tstatic ACTIONS_LIST_BASE: string = \"actions:remoteResRendererExtended:base\";\n\n\tprotected _initialize(init: ORemoteResRendererExtendedInit<ACTCTX>) {\n\t\tthis.reg = this.findReg(init);\n\t\tif (!init.remoteResSelector) {\n\t\t\t//Affectation du remoteResSelector.\n\t\t\tswitch (init.previewInit?.forceWebRender) {\n\t\t\tcase \"download\" :\n\t\t\tcase \"window\" :\n\t\t\t\tinit.remoteResSelector = (reg: IReg<IBasicUniversePointer>, resDesc: JRemoteResDescFromClient) => new RemoteRes(reg, resDesc);\n\t\t\t\tbreak;\n\t\t\tcase \"video\" :\n\t\t\t\tinit.remoteResSelector = REMOTE.remoteResAsVideo;\n\t\t\t\tbreak;\n\t\t\tcase \"audio\" :\n\t\t\t\tinit.remoteResSelector = REMOTE.remoteResAsAudio;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tinit.remoteResSelector = REMOTE.remoteResForPreview;\n\t\t\t}\n\t\t}\n\t\tthis.config = init;\n\t\tthis.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tif (this.localName !== \"wsp-remoteres-renderer-extended\") this.reg.installSkin(\"wsp-remoteres-renderer-extended\", this.shadowRoot);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tif (this.config.openBtn != 'none') REG.reg.addToList(RemoteResRendererExtended.ACTIONS_LIST_BASE, 'openBtn', 1, OpenRemoteResAct.SINGLETON);\n\n\t\tthis.buildStruct();\n\t}\n\n\tprivate buildStruct() {\n\t\tif (this.config.buildTitle !== 'none') this.titleRoot = <div id=\"title\"/>;\n\t\tthis.barActions = <BarActions class=\"horizontal\" î={{\n\t\t\treg: this.reg,\n\t\t\tactions: this.reg.mergeLists(RemoteResRendererExtended.ACTIONS_LIST_BASE, this.config.actionsList),\n\t\t\tactionContext: this,\n\t\t\tuiContext: \"dialog\",\n\t\t\tdisableFullOverlay: true,\n\t\t} as OBarActionsInit<IRemoteResRendererActionCtx>}/> as BarActions<ACTCTX>;\n\n\t\tthis.shadowRoot.appendChild(<div id=\"head\">{this.titleRoot}{this.barActions}</div>);\n\n\t\tif (!this.config.preview || this.config.preview === 'shown') {\n\t\t\tthis.remoteResRenderer = <RemoteResRenderer id=\"preview\" î={BASIS.newInit(this.config.previewInit, this.reg)}/> as RemoteResRenderer;\n\t\t} else if (this.config.preview === 'tooltip') {\n\t\t\tPOPUP.promiseTooltip(this, async (txtElt) => {\n\t\t\t\t//TODO\n\t\t\t\treturn new RemoteResRenderer().initialize({\n\t\t\t\t\treg: this.reg,\n\t\t\t\t})\n\t\t\t}, {hoverAllowed: true});\n\t\t}\n\t\tif (this.remoteResRenderer) this.shadowRoot.appendChild(this.remoteResRenderer);\n\t}\n\n\tprotected async fetchResDescFromClient(url: string): Promise<JRemoteResDescFromClient> {\n\t\treturn (await REMOTE.fetchResDesc(url, this.config.reg)) || {url, status: -1};\n\t}\n\n\tprivate _pendingRefresh: number;\n\n\tasync _refresh() {\n\t\tconst currentRefresh = this._pendingRefresh = Date.now();\n\t\tthis.refreshUi();\n\t\tconst newDesc = await this.config.fetchResDesc();\n\t\tif (currentRefresh != this._pendingRefresh) return;//raceCond\n\t\tthis.remoteDesc = newDesc;\n\t\tthis.refreshUi();\n\t}\n\n\tprivate refreshUi() {\n\t\tif (this.titleRoot) this.updateTitle();\n\t\tif (this.remoteResRenderer) this.updatePreview();\n\t\tif (this.barActions) this.updateBarActions();\n\t}\n\n\t/** Rafraichit la zone de Titre */\n\tprivate updateTitle() {\n\t\tif (typeof this.config.buildTitle === 'function' && this.config.buildTitle?.call(this, this.titleRoot, this.remoteDesc) == 'done') return;\n\t\tDOM.setTextContent(this.titleRoot, this.remoteDesc?.title || this.remoteDesc?.url || \"[URL non renseignée]\");\n\t}\n\n\t/** Rafraichit la zone de Preview */\n\tprotected updatePreview() {\n\t\tconst st = this.remoteDesc?.status || 0;\n\t\tif (st < 200 || st > 299) {\n\t\t\tDOM.setHiddenProp(this.remoteResRenderer, true);\n\t\t\treturn;\n\t\t}\n\t\tDOM.setHiddenProp(this.remoteResRenderer, false);\n\t\tthis.remoteResRenderer.setRemoteRes(this.remoteDesc ? this.config.remoteResSelector(this.config.reg, this.remoteDesc) : null);\n\t}\n\n\t/** Rafraichit la barre d'actions */\n\tprivate updateBarActions() {\n\t\tthis.barActions.refreshContent();\n\t}\n\n}\n\ncustomElements.define('wsp-remoteres-renderer-extended', RemoteResRendererExtended);\n\nREG.reg.registerSkin('wsp-remoteres-renderer-extended', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t\tdisplay: flex;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t#head {\n\t\tborder-bottom: 1px solid var(--border-color);\n\t\tdisplay: flex;\n\t}\n\n\t#title {\n\t\tflex: 1;\n\t}\n\n\tc-bar-actions {\n\t\tflex: unset;\n\t\tmin-height: min-content;\n\t\tmin-width: min-content;\n\t}\n\n\t/*\n\t\tc-button {\n\t\t\tdisplay: inline-flex;\n\t\t\t--icon-size: 1em;\n\t\t}*/\n\n\t#preview {\n\t\tdisplay: inline-flex;\n\t}\n`);\n\n\n/**\n * Ouverture du gestionnaire des groupes\n */\nclass OpenRemoteResAct<CTX extends IRemoteResRendererActionCtx> extends Action<CTX> {\n\tstatic SINGLETON = new OpenRemoteResAct();\n\n\tconstructor() {\n\t\tsuper(\"openBtn\");\n\t\tthis._label = \"Ouvrir cette ressource...\";\n\t\tthis._icon = '/@skin@/core/widgets/remote/externalOpen.svg';\n\t}\n\n\texecute(ctx: CTX, ev?: Event): any {\n\t\tconst view = this.findOpenView(ctx);\n\t\tif (view) window.open(REMOTE.buildUrlFromResDesc(ctx.remoteDesc, view), \"_blank\");\n\t}\n\n\tisVisible(ctx: CTX): boolean {\n\t\tif (this.findOpenView(ctx) == null) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tprivate findOpenView(ctx: CTX) {\n\t\tconst editor = REMOTE.findEditorInResDesc(ctx.remoteDesc);\n\t\tif (editor) return editor;\n\t\t//Recherche d'une view complète différente de celle affichéee preview.\n\t\tconst view = REMOTE.findFullViewInResDesc(ctx.remoteDesc);\n\t\tif (!view) return null;\n\t\tconst previewTags = ctx.remoteResRenderer?.resShown?.getTags();\n\t\treturn !LANG.arrayEquals(previewTags.body, view.tags?.body) || !LANG.arrayEquals(previewTags.web, view.tags?.web) ? view : null;\n\t}\n\n\n}"]}