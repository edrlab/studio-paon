{"version":3,"sources":["/@back@/wsp/widgets/resps/respEdit.tsx"],"names":["JSX","REG","ITEM","BaseElement","MsgLabel","InputUserPanel","RESPS","SRC","EUserType","DOMSH","ERROR","RespEditField","resp","this","_resp","[object Object]","init","reg","findReg","longDesc","env","itemType","wsp","wspMetaUi","getItemType","itModel","getResp","_inputSingleUser","createElement","class","î","Object","assign","userCard","required","selectWithConfirm","usersGridInit","usersSrv","universe","useUsers","filterGroups","usersSelection","restrictFromGroups","filterType","userType","group","user","confInput","_update","addEventListener","onChange","_attach","localName","label","level","ev","me","findHost","isWritable","rspUsrs","toRespsList","iniValue","code","value","fetchUpdateRespByRespSingle","srcRef","fetchUpdateRespByRespMulti","newValue","adds","removes","forEach","indexOf","push","e","name","report","hasPerm","disabled","customElements","define","registerSkin"],"mappings":"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","sourcesContent":["import {JSX} from \"lib/commons/xml/dom\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {BaseElement, MsgLabel, OMsgLabelInit, OSkinableInit} from \"back/commons/basis\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {InputUserPanel, OInputUserInit} from \"back/core/widgets/inputs\";\nimport {RESPS, SRC} from \"lib/wsp/src\";\nimport {IDatasResp} from \"lib/wsp/wspMetaUi\";\nimport {EUserType} from \"lib/core/user\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport \"back/wsp/actions/actions_Perms\";\n\nexport interface ORespEditFieldInit extends OSkinableInit {\n\tresp: string,\n\tconfInput?: OInputUserInit<any>,\n}\n\n/**\n * Edition d'une resp sur un item donné\n */\nexport class RespEditField extends BaseElement {\n\n\treg: IReg<IItemUiEnv>;\n\n\tprivate _inputSingleUser: InputUserPanel<any>;\n\n\t/** Objet resp édité */\n\tget resp(): IDatasResp | null {\n\t\treturn this._resp;\n\t}\n\n\tprivate _resp: IDatasResp;\n\n\tprotected _initialize(init: ORespEditFieldInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tconst longDesc = this.reg.env.longDesc;\n\t\tconst itemType = this.reg.env.wsp.wspMetaUi.getItemType(longDesc.itModel);\n\t\tthis._resp = itemType.getResp(init.resp);\n\t\tif (this.resp) {\n\t\t\tthis._inputSingleUser = <InputUserPanel class=\"values\" î={Object.assign({\n\t\t\t\treg: this.reg,\n\t\t\t\tuserCard: this.resp.userCard,\n\t\t\t\trequired: this.resp.required,\n\t\t\t\tselectWithConfirm: true,\n\t\t\t\tusersGridInit: {\n\t\t\t\t\tusersSrv: init.reg.env.universe.useUsers,\n\t\t\t\t\tfilterGroups: this.resp.usersSelection.restrictFromGroups,\n\t\t\t\t\tfilterType: this.resp.usersSelection.userType === 'groups' ? EUserType.group : (this.resp.usersSelection.userType === 'users' ? EUserType.user : null),\n\t\t\t\t}\n\t\t\t} as OInputUserInit<any>, init.confInput)}/> as InputUserPanel<any>;\n\t\t\tthis._update();\n\t\t\tthis._inputSingleUser.addEventListener('change', this.onChange);\n\t\t}\n\t\tthis._attach(this.localName, init, this._inputSingleUser || <MsgLabel class=\"more\" î={{label: \"Responsabilité inconnue\", level: \"error\"} as OMsgLabelInit}/>);\n\t}\n\n\tasync onChange(this: InputUserPanel<any>, ev: FocusEvent) {\n\t\tconst me = DOMSH.findHost(this) as RespEditField;\n\t\ttry {\n\t\t\tif (me.isWritable()) {\n\t\t\t\tconst longDesc = me.reg.env.longDesc;\n\t\t\t\tconst rspUsrs = RESPS.toRespsList(longDesc.rspUsrs);\n\t\t\t\tconst iniValue = rspUsrs[me.resp.code] || [];\n\t\t\t\tif (me.resp.userCard === 'single') {\n\t\t\t\t\tif (this.value && this.value[0])\n\t\t\t\t\t\tawait ITEM.fetchUpdateRespByRespSingle(me.reg.env.wsp, me, [SRC.srcRef(me.reg.env.longDesc)], me.resp.code, this.value[0]);\n\t\t\t\t\telse\n\t\t\t\t\t\tawait ITEM.fetchUpdateRespByRespMulti(me.reg.env.wsp, me, [SRC.srcRef(me.reg.env.longDesc)], me.resp.code, null, iniValue);\n\t\t\t\t} else if (me.resp.userCard === 'multi') {\n\t\t\t\t\tconst newValue = this.value || [];\n\n\t\t\t\t\tconst adds: string[] = [];\n\t\t\t\t\tconst removes: string[] = [];\n\t\t\t\t\tnewValue.forEach((resp) => {\n\t\t\t\t\t\tif (iniValue.indexOf(resp) == -1) adds.push(resp)\n\t\t\t\t\t});\n\t\t\t\t\tiniValue.forEach((resp) => {\n\t\t\t\t\t\tif (newValue.indexOf(resp) == -1) removes.push(resp)\n\t\t\t\t\t});\n\t\t\t\t\tawait ITEM.fetchUpdateRespByRespMulti(me.reg.env.wsp, me, [SRC.srcRef(me.reg.env.longDesc)], me.resp.code, adds, removes);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconst resp = me.resp.name;\n\t\t\tawait ERROR.report(`Échec lors de la mise à jour de la responsabilité '${resp}'`, e);\n\t\t}\n\t}\n\n\t/** Retourne true si cette resp peut être éditée */\n\tprivate isWritable(): boolean {\n\t\t// FIXME : évaluer une perm dédiée à la resp\n\t\treturn this.reg.hasPerm(\"action.item#set.resps\");\n\t}\n\n\t/** Réintialise le composant en fonction des propriétés courantes de l'item */\n\tprivate _update() {\n\t\tconst longDesc = this.reg.env.longDesc;\n\t\tconst rspUsrs = RESPS.toRespsList(longDesc.rspUsrs);\n\t\tthis._inputSingleUser.value = rspUsrs[this.resp.code] || [];\n\t\tthis._inputSingleUser.disabled = !this.isWritable();\n\t}\n}\n\ncustomElements.define(\"resp-field-edit\", RespEditField);\n\nREG.reg.registerSkin('resp-field-edit', 1, /* language=CSS */ `\n\tc-input-users-panel:invalid {\n\t\tborder-color: var(--error-color);\n\t}\n\n\tc-input-users-panel {\n\t\tborder: 1px solid transparent;\n\t}\n\n`);\n\n\n"]}