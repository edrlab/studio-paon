{"version":3,"sources":["/@back@/wsp/views/gen/genActions.tsx"],"names":["Action","ITEM","SRC","ERROR","DOM","JSX","REG","WSP","CID","CidSession","CidUploadStep","ECidSessionState","POPUP","IO","CDM","Desk","LANG","GenAction","[object Object]","statuses","this","_hideForStatuses","ctx","indexOf","genInfo","status","super","isVisible","GenerateAction","id","_label","_icon","startsWith","_description","props","overrideGenProps","msg","confirmMsg","ev","genProps","then","async","Object","assign","confirm","uiContext","genSvc","reg","getSvc","generate","call","wsp","srcRef","shortDesc","pubNode","codeGenStack","customDestPath","ShowGenAction","subPathToShow","isWeb","uriPub","genNature","electron","localPathPub","window","postMessage","type","path","location","origin","open","getGenPubUrl","ShowGenInLOAction","env","url","openReply","sendMessage","encodeURI","log","showNotifInfo","uiRoot","DownloadGenAction","mimeDownload","dwnSvc","getGenDownloadUrl","link","document","createElement","href","download","click","LogGenAction","uriTraces","traceDocUrl","wspServer","config","pubUrl","resolve","substr","traceDoc","fetchDom","showError","technicalDetails","technicalDetailsFromGenTrace","adminDetails","ser","indentDom","traceNode","IS_document","documentElement","item","localName","class","child","children","appendChild","firstElementChild","desc","getAttribute","v","vars","i","push","formatStr","level","classList","add","childMessages","createDocumentFragment","length","addToList","CidAction","processFilter","pass","passOptionalInteraction","scChainOrigin","JSON","stringify","serverUrl","chain","universeUrl","wspCode","code","refUri","metasIn","foreignMetas","processes","cidInfo","cidProcesses","lastManifest","Array","isArray","from","filterIsOr","process","cidPassOptionalInteraction","PRC_IS_DEPLOY","PRC_IS_CONSULT","CidDeployAction","cidSession","isClosed","isEnabled","abortSession","clonePubCtx","createCidSession","launchSession","state","ended","saveLastDeploy","onStateChange","cidRefreshOnSessionChange","doSession","st","failed","failedHttpCode","reportError","details","failedReason","cidErrorToMsg","failedError","showNotif","CidScarDeployAction","fileName","extractItemCode","srcUri","replace","createMetasIn","is","IS_FileName","value","IS_ContentType","overrideMetas","overrideSession","manifest","uiHandler","customUpload","session","uploadStep","webUpload","sendBySrv","getSendByServerBody","params","qs","scarScope","scarFormat","scarMode","scarLink","content","exportUrl","fetch","method","body","ok","bodyToUpload","blob","isAvailable","previousCidEndPoints","lastCidEndPoints","undefined","metasToSave","allMetas","metasOut","metaDef","cidProcess","metas","values","val","name","isExcludeForRecall","fd","FormData","Promise","append","mvcc","endPoints","idx","manifestUrl","cidProps","newCidEndPoints","wspSrcUrl","fetchJson","cidEndPoints","e","webUploadMedia","PUT","POST","resp","universe","httpFrames","web","fetchSvc","urls","uploadUrl","asJson","sendOpts","queryString","enrichUrl","def","headerProps","enrichHeaders","REQUEST_LANG_HEADER","reqInit","addLang","headers","CidScarReDeployAction","fetchSrc","fields","catch","logError","find","ep","cidField","endPoint","isCidEndPointAvailable","createMetasInFromEndPoints","IS_Resend","CidGenDeployAction","stack","split","genCodeStack","slice","join","extractFileNameFromContentDisposition","get","contentType","wspGenUrl","lastCidProps","store","cidProcessIs","_b","_a","query","ctDisp","substring","trim","k","end","CidGenReDeployAction","fetchSvcJson","datas","d","isReDeployDataAvailable","createMetasInFromLast","CidConsultLastAction","CidScarConsultAction","CidGenConsultAction","CidConsultAction"],"mappings":"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","sourcesContent":["import {Action} from \"lib/commons/actions\";\nimport {IPubCtx} from \"lib/wsp/wspMetaUi\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {JSrcFields, SRC, srcRef, srcUri} from \"lib/wsp/src\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {REG} from \"lib/commons/registry\";\nimport {Wsp, WSP, wspCd, wspUri} from \"lib/wsp/wsp\";\nimport {CID, CidProcess, CidSession, CidUploadStep, ECidSessionState, ICidWebUploadDef, OCidSessionConfig} from \"lib/core/cid\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {IO} from \"lib/commons/io/io\";\nimport {CDM} from \"lib/commons/utils/cdm\";\nimport {Generators} from \"back/wsp/views/generators\";\nimport {Desk} from \"lib/commons/desk\";\nimport {JCidEnPoints, JCidStoredProps} from \"back/core/widgets/cidUi\";\nimport {LANG} from \"lib/commons/lang\";\n\nexport class GenAction extends Action<IPubCtx> {\n\n\t_hideForStatuses: string;\n\n\tsetHideForStatuses(statuses: string): this {\n\t\tthis._hideForStatuses = statuses;\n\t\treturn this;\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (this._hideForStatuses && this._hideForStatuses.indexOf(ctx.genInfo.status) >= 0) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n}\n\nexport class GenerateAction extends GenAction {\n\n\toverrideGenProps: Dict<Jsonisable>;\n\n\tconfirmMsg: string | null;\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"generate\");\n\t\tthis._label = \"Générer\";\n\t\tthis._icon = id && id.startsWith(\"send\") ? \"/@skin@/wsp/views/generators/send.svg\" : \"/@skin@/wsp/views/generators/generate.svg\";\n\t\tthis._description = \"Nouvelle génération\";\n\t}\n\n\tsetOverrideGenProps(props: Dict<Jsonisable>): this {\n\t\tthis.overrideGenProps = props;\n\t\treturn this;\n\t}\n\n\tsetConfirmMsg(msg: string): this {\n\t\tthis.confirmMsg = msg;\n\t\treturn this;\n\t}\n\n\texecute(ctx: IPubCtx, ev?: Event): any | 'noPreventDefault' {\n\t\tctx.genProps().then(async (props: Jsonisable | null | false) => {\n\t\t\tif (props === false) return; //echec à la validation des genProps.\n\t\t\tif (this.overrideGenProps) {\n\t\t\t\tif (props) Object.assign(props, this.overrideGenProps);\n\t\t\t\telse props = this.overrideGenProps;\n\t\t\t}\n\t\t\tif (!this.confirmMsg || await POPUP.confirm(this.confirmMsg, ctx.uiContext)) {\n\t\t\t\tconst genSvc: (wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef, codeGenStack: string, props: Jsonisable, customFullUriDest?: string) => Promise<void> = ctx.reg.getSvc(\"gen.action.generate\") || ITEM.generate;\n\t\t\t\tgenSvc.call(this, ctx.wsp, ctx.uiContext, SRC.srcRef(ctx.shortDesc), ctx.pubNode.codeGenStack, props, ctx.customDestPath);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class ShowGenAction extends GenAction {\n\n\tconstructor(id?: string, protected subPathToShow?: string, protected isWeb?: true | null) {\n\t\tsuper(id || \"show\");\n\t\tthis._label = \"Consulter\";\n\t\tthis._icon = \"/@skin@/wsp/views/generators/show.svg\";\n\t\tthis._description = \"Consulter la dernière génération\";\n\t\tthis._hideForStatuses = \"failed,null\";\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!ctx.genInfo.uriPub) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\texecute(ctx: IPubCtx, ev?: Event): any | 'noPreventDefault' {\n\t\tconst genNature = this.isWeb ? \"web\" : ctx.pubNode.genNature;\n\t\tif (Desk.electron && ctx.genInfo.localPathPub && genNature !== \"web\") {\n\t\t\twindow.postMessage({type: \"client:modules:localServer:open\", path: ctx.genInfo.localPathPub}, location.origin);\n\t\t} else {\n\t\t\twindow.open(ITEM.getGenPubUrl(ctx.wsp, ctx.genInfo.uriPub + (this.subPathToShow ? `/${this.subPathToShow}` : \"\")), '_blank');\n\t\t}\n\t}\n}\n\nexport class ShowGenInLOAction extends ShowGenAction {\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!Desk.electron || !ctx.genInfo.uriPub) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync execute(ctx: IPubCtx, ev?: Event): Promise<any | 'noPreventDefault'> {\n\t\tconst {env} = ctx.reg;\n\t\tif (ctx.genInfo.localPathPub) {\n\t\t\twindow.postMessage({type: \"client:modules:localServer:open\", path: ctx.genInfo.localPathPub}, location.origin);\n\t\t} else {\n\t\t\tconst url = ITEM.getGenPubUrl(ctx.wsp, ctx.genInfo.uriPub);\n\t\t\tconst openReply = await IO.sendMessage({type: \"client:modules:odEditor:open\", url: encodeURI(url)});\n\t\t\tif (openReply.type == 'error') ERROR.log(openReply.msg);\n\t\t\telse if (openReply.type === \"notFound\") POPUP.showNotifInfo(\"L'éditeur de document 'OpenDocument' (LibreOffice, ...) n'a pu être trouvé.\", env.uiRoot);\n\t\t}\n\t}\n}\n\nexport class DownloadGenAction extends GenAction {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"download\");\n\t\tthis._label = \"Télécharger\";\n\t\tthis._icon = \"/@skin@/wsp/views/generators/download.svg\";\n\t\tthis._description = \"Télécharger la dernière génération\";\n\t\tthis._hideForStatuses = \"failed,null\";\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!ctx.genInfo.mimeDownload) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\texecute(ctx: IPubCtx, ev?: Event): any | 'noPreventDefault' {\n\t\tconst dwnSvc: (wsp: Wsp, srcRef: srcRef, codeGenStack: string, customFullUriDest?: string) => string = ctx.reg.getSvc(\"gen.action.download\") || ITEM.getGenDownloadUrl;\n\t\tconst link = document.createElement('a');\n\t\tlink.href = dwnSvc.call(this, ctx.wsp, SRC.srcRef(ctx.shortDesc), ctx.pubNode.codeGenStack, ctx.customDestPath);\n\t\tlink.download = \"\";\n\t\tlink.click();\n\t}\n}\n\nexport class LogGenAction extends GenAction {\n\n\tconstructor(id?: string) {\n\t\tsuper(id || \"log\");\n\t\tthis._label = \"Rapport\";\n\t\tthis._icon = \"/@skin@/wsp/views/generators/log.svg\";\n\t\tthis._description = \"Consulter les traces\";\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!ctx.genInfo.uriTraces) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync execute(ctx: IPubCtx, ev?: Event): Promise<any | 'noPreventDefault'> {\n\t\tconst traceDocUrl = ctx.wsp.wspServer.config.pubUrl.resolve(ctx.genInfo.uriTraces.substr(1));\n\t\tconst traceDoc = await traceDocUrl.fetchDom();\n\t\tawait ERROR.showError({\n\t\t\tmsg: \"Une erreur est survenue lors de la génération.\",\n\t\t\ttechnicalDetails: this.technicalDetailsFromGenTrace(traceDoc),\n\t\t\tadminDetails: DOM.ser(DOM.indentDom(traceDoc)),\n\t\t\tctx\n\t\t});\n\t}\n\n\t/**\n\t * Crée une liste HTML à partir d'une trace de generation\n\t */\n\ttechnicalDetailsFromGenTrace(traceNode: Document | Element): HTMLElement {\n\t\tif (DOM.IS_document(traceNode)) return this.technicalDetailsFromGenTrace(traceNode.documentElement);\n\t\tlet item: HTMLElement;\n\t\tif (traceNode.localName == 'trace') {\n\t\t\titem = <ul class=\"msgList\"/>;\n\t\t\tfor (const child of traceNode.children) {\n\t\t\t\tif (child.localName == 'l') item.appendChild(this.technicalDetailsFromGenTrace(child.firstElementChild));\n\t\t\t}\n\t\t} else if (traceNode.localName == 'message') {\n\t\t\tlet desc = traceNode.getAttribute('desc');\n\t\t\tlet v = traceNode.getAttribute('var1');\n\t\t\tif (v != null) {\n\t\t\t\tconst vars = [v];\n\t\t\t\tv = traceNode.getAttribute(`var2`);\n\t\t\t\tlet i = 3;\n\t\t\t\twhile (v != null) {\n\t\t\t\t\tvars.push(v);\n\t\t\t\t\tv = traceNode.getAttribute(`var${i++}`);\n\t\t\t\t}\n\t\t\t\tdesc = LANG.formatStr(desc, vars);\n\t\t\t}\n\t\t\titem = <li><span>{desc}</span></li> as HTMLLIElement;\n\t\t\tconst level = traceNode.getAttribute('type');\n\t\t\tif (level == 'Warning') item.classList.add('warn');\n\t\t\telse if (level == 'Error' || level == 'Exception') item.classList.add('error');\n\n\t\t\tconst childMessages = document.createDocumentFragment();\n\t\t\tfor (const child of traceNode.children) {\n\t\t\t\tif (child.localName == 'message') childMessages.appendChild(this.technicalDetailsFromGenTrace(child));\n\t\t\t}\n\t\t\tif (childMessages.children.length) item.appendChild(<ul class=\"msgList\">{childMessages}</ul>);\n\t\t}\n\t\treturn item;\n\t}\n}\n\n\nREG.reg.addToList(\"actions:gen\", \"generate\", 1, new GenerateAction(), 0);\nREG.reg.addToList(\"actions:gen\", \"show\", 1, new ShowGenAction(), 10);\nREG.reg.addToList(\"actions:gen\", \"download\", 1, new DownloadGenAction(), 20);\n//REG.reg.addToList(\"actions:gen\", \"reveal\", 1, new RevealGenAction(), 30);\nREG.reg.addToList(\"actions:gen\", \"log\", 1, new LogGenAction(), 40);\n\nexport interface JWspGenMsg {\n\tsvc: 'wspGen'\n\ttype: 'genStart' | 'genEnd'\n\twsp: wspCd\n\tsrcUri: srcUri\n\tcodeGenStack: string\n\t/** dest path libre de génération. Usage : styler */\n\tcustomDestPath?: wspUri\n}\n\n\nexport class CidAction extends Action<IPubCtx> {\n\n\t/**\n\t * Définition par défaut des process de déploiement.\n\t * Note : par défaut, le déploiement d'un accueil \"scenari.eu:cid:deployIndexAction\" n'est pas recherché,\n\t * il faut configurer un bouton explicitement pour cet usage.\n\t */\n\tstatic PRC_IS_DEPLOY = [\"scenari.eu:cid:deployResourceAction\", \"http://schema.org/TransferAction\", \"http://schema.org/SendAction\"];\n\n\t/** Définition par défaut des process de consult.*/\n\tstatic PRC_IS_CONSULT = [\"scenari.eu:cid:consultResourceAction\", \"http://schema.org/ConsumeAction\", \"http://schema.org/ViewAction\"];\n\n\t/** Restreint les proccess disponibles\n\t * \t\t@see filterIsOr */\n\tprocessFilter: string[] | string[][] | ((ctx: IPubCtx) => CidProcess[]);\n\n\t/** Ignore les steps d'interactions optionnelles. **/\n\tpassOptionalInteraction?: boolean\n\n\tsetProcessFilter(processFilter: string[] | ((ctx: IPubCtx) => CidProcess[])): this {\n\t\tthis.processFilter = processFilter;\n\t\treturn this;\n\t}\n\n\tsetPassOptionalInteraction(pass: boolean): this {\n\t\tthis.passOptionalInteraction = pass;\n\t\treturn this;\n\t}\n\n\tcreateMetasIn(ctx: IPubCtx): Dict<string> {\n\t\treturn {\n\t\t\tscChainOrigin: JSON.stringify({serverUrl: ctx.wsp.wspServer.chain.config.universeUrl, wspCode: ctx.wsp.code, refUri: SRC.srcRef(ctx.shortDesc)})\n\t\t};\n\t}\n\n\t/** Si retour false, l'action est annulée. */\n\tasync overrideMetas(ctx: IPubCtx, metasIn: Dict<any>, foreignMetas: { is: string[], value: string | ((session: CidSession) => string) }[]): Promise<void | boolean> {\n\t}\n\n\t/** Surcharge la config de la session. */\n\toverrideSession(config: OCidSessionConfig, ctx: IPubCtx): OCidSessionConfig {\n\t\tlet processes = ctx.cidInfo.cidProcesses || ctx.cidInfo.lastManifest.processes;\n\t\tif (Array.isArray(this.processFilter)) {\n\t\t\tprocesses = Array.from(CID.filterIsOr(processes, this.processFilter));\n\t\t} else if (typeof this.processFilter === \"function\") {\n\t\t\tprocesses = this.processFilter(ctx);\n\t\t}\n\t\tif (processes.length === 1) {\n\t\t\tconfig.process = processes[0];\n\t\t} else {\n\t\t\tconfig.processes = processes;\n\t\t}\n\t\tif (this.passOptionalInteraction != null) config.cidPassOptionalInteraction = this.passOptionalInteraction;\n\t\treturn config;\n\t}\n}\n\n\ninterface JCidEnPointsFields extends JSrcFields {\n\tcidEndPoints?: JCidEnPoints\n}\n\n\nexport abstract class CidDeployAction extends CidAction {\n\t_label = \"Déployer\";\n\t_icon = \"/@skin@/wsp/views/generators/send.svg\";\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.processFilter = CidAction.PRC_IS_DEPLOY;\n\t}\n\n\tisEnabled(ctx: IPubCtx): boolean {\n\t\tif (ctx.cidInfo.cidSession && !ctx.cidInfo.cidSession.isClosed()) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\n\tasync execute(ctx: IPubCtx, ev?: Event) {\n\t\tif (ctx.cidInfo.cidSession) ctx.cidInfo.cidSession.abortSession();\n\t\ttry {\n\t\t\tctx = clonePubCtx(ctx);\n\t\t\tctx.cidInfo.cidSession = await this.createCidSession(ctx);\n\t\t\tif (!ctx.cidInfo.cidSession) return;\n\t\t\tawait this.launchSession(ctx);\n\t\t\tif (ctx.cidInfo.cidSession.state === ECidSessionState.ended) this.saveLastDeploy(ctx);\n\t\t} finally {\n\t\t\tctx.cidInfo.cidSession = null;\n\t\t}\n\t}\n\n\tasync launchSession(ctx: IPubCtx) {\n\t\tctx.cidInfo.cidSession.onStateChange.add(() => (ctx.uiContext as Generators).cidRefreshOnSessionChange());\n\t\tawait ctx.cidInfo.cidSession.doSession();\n\t\tconst st = ctx.cidInfo.cidSession.state;\n\t\tif (st === ECidSessionState.failed) {\n\t\t\tconst technicalDetails = ctx.cidInfo.cidSession.failedHttpCode ? `Failed CID http code : ${ctx.cidInfo.cidSession.failedHttpCode}` : null;\n\t\t\tERROR.reportError({\n\t\t\t\tmsg: ctx.cidInfo.cidSession.failedHttpCode === 403 ? \"Vous ne disposez pas des autorisations nécessaires pour effectuer cette action.\" : \"Échec au déploiement.\",\n\t\t\t\tdetails: ctx.cidInfo.cidSession.failedReason || CID.cidErrorToMsg(ctx.cidInfo.cidSession.failedError),\n\t\t\t\ttechnicalDetails\n\t\t\t});\n\t\t} else if (st === ECidSessionState.ended) {\n\t\t\t//Temporaire : en attente de la mémorisation et de l'affichage du dernier état d'envoi.\n\t\t\tPOPUP.showNotif(\"Déploiement réalisé avec succès\", ctx.uiContext);\n\t\t}\n\t}\n\n\tabstract createCidSession(ctx: IPubCtx): Promise<CidSession>;\n\n\tabstract saveLastDeploy(ctx: IPubCtx): Promise<void>;\n}\n\nexport class CidScarDeployAction extends CidDeployAction {\n\n\tpublic scarScope: \"net\" | \"node\";\n\tpublic scarFormat: \"jar\" | \"zip\" /*| \"stream\" non : mimetype alors dynamique. */;\n\tpublic scarMode: \"wspTree\" | \"flat\" | \"rootAndRes\";\n\tpublic scarLink: \"absolute\" | \"relative\";\n\n\n\tasync createCidSession(ctx: IPubCtx): Promise<CidSession> {\n\t\tconst fileName = ITEM.extractItemCode(ctx.shortDesc.srcUri).replace(/\\..*/, \"\"); //code item sans extension\n\t\tconst metasIn = this.createMetasIn(ctx);\n\t\tconst foreignMetas = [{is: CID.IS_FileName, value: fileName}, {is: CID.IS_ContentType, value: \"application/java-archive\"}];\n\t\tif (await this.overrideMetas(ctx, metasIn, foreignMetas) === false) return;\n\n\t\treturn new CidSession(this.overrideSession({\n\t\t\tmanifest: ctx.cidInfo.lastManifest,\n\t\t\tuiHandler: ctx.uiContext as Generators,\n\t\t\tmetasIn,\n\t\t\tforeignMetas,\n\t\t\tcustomUpload: async (session: CidSession, uploadStep: CidUploadStep, webUpload: ICidWebUploadDef): Promise<null | Response> => {\n\t\t\t\tconst sendBySrv = await CidScarDeployAction.getSendByServerBody(ctx, session, uploadStep, webUpload);\n\t\t\t\tconst params = IO.qs(\"cdaction\", sendBySrv ? \"SendTo\" : \"Export\",\n\t\t\t\t\t\"scope\", this.scarScope || \"net\",\n\t\t\t\t\t\"format\", this.scarFormat || \"jar\",\n\t\t\t\t\t\"mode\", this.scarMode || \"wspTree\",\n\t\t\t\t\t\"link\", this.scarLink || \"absolute\",\n\t\t\t\t\t\"downloadFileName\", fileName,\n\t\t\t\t\t\"param\", ctx.reg.env.wsp.code,\n\t\t\t\t\t\"refUris\", SRC.srcRef(ctx.shortDesc)\n\t\t\t\t);\n\t\t\t\tconst content = await ctx.reg.env.wsp.wspServer.config.exportUrl.fetch(params, \"none\", sendBySrv ? {method: \"PUT\", body: JSON.stringify(sendBySrv)} : null);\n\t\t\t\tif (!content.ok) return content;//new Response(null, {status: content.status}) ?\n\t\t\t\tif (sendBySrv) return content; //Envoi par le serveur ok.\n\t\t\t\tsession.config.bodyToUpload = await content.blob();\n\t\t\t\treturn null; //déploiement standard à partir de bodyToUpload\n\t\t\t}\n\t\t}, ctx));\n\t}\n\n\tasync saveLastDeploy(ctx: IPubCtx): Promise<void> {\n\t\ttry {\n\t\t\tif (!ctx.wsp.isAvailable) return; //rupture de co => abandon\n\t\t\tlet previousCidEndPoints = ctx.cidInfo.lastCidEndPoints;\n\t\t\tif (previousCidEndPoints === undefined) return; //Fonction de republi non active, on n'enregistre pas.\n\t\t\tconst cidInfo = ctx.cidInfo;\n\t\t\tconst metasToSave: Dict<any> = {};\n\t\t\tconst allMetas = cidInfo.cidSession.metasOut;\n\t\t\tfor (let metaDef of cidInfo.cidSession.cidProcess.metas.values()) {\n\t\t\t\tconst val = allMetas[metaDef.name];\n\t\t\t\tif (val !== undefined && !metaDef.isExcludeForRecall) metasToSave[metaDef.name] = val;\n\t\t\t}\n\t\t\tconst fd = new FormData();\n\t\t\tif (previousCidEndPoints instanceof Promise) previousCidEndPoints = await previousCidEndPoints; //pour le mvcc.\n\t\t\tfd.append(\"options\", JSON.stringify({\n\t\t\t\tmvcc: previousCidEndPoints?.mvcc || 0,\n\t\t\t\tendPoints: [{\n\t\t\t\t\tidx: 0, //TODO multi manifestUrl\n\t\t\t\t\tmanifestUrl: cidInfo.lastManifest.manifestUrl,\n\t\t\t\t\tcidProps: metasToSave\n\t\t\t\t}]\n\t\t\t}));\n\t\t\tconst newCidEndPoints = await ctx.wsp.wspServer.config.wspSrcUrl.fetchJson<JCidEnPointsFields>(IO.qs(\"cdaction\", \"UpdateCidEndPoints\", \"fields\", \"cidEndPoints\", \"param\", ctx.wsp.code, \"refUri\", SRC.srcRef(ctx.shortDesc)), {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: fd\n\t\t\t});\n\t\t\tif (newCidEndPoints) {\n\t\t\t\tctx.cidInfo.lastCidEndPoints = newCidEndPoints.cidEndPoints;\n\t\t\t\t(ctx.uiContext as Generators).cidRefreshOnSessionChange();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tERROR.log(\"Save last Cid deploy failed\", e);\n\t\t}\n\t}\n\n\t/** Evalue si l'upload CID peut être directement envoyé par le serveur, ou si le téléchargement via le client s'impose. */\n\tstatic async getSendByServerBody(ctx: IPubCtx, session: CidSession, uploadStep: CidUploadStep, webUpload: ICidWebUploadDef): Promise<null | { method: string, url: string, headers: any }> {\n\t\tconst webUploadMedia = webUpload.PUT || webUpload.POST;\n\t\tif (!webUploadMedia) return null;\n\t\tconst resp = await ctx.reg.env.universe.httpFrames.web.fetchSvc(\"u/remoteContent\", \"CheckReachableUrls\", {urls: CDM.stringify([uploadStep.uploadUrl])}, \"json\");\n\t\tif (resp.ok && resp.asJson[0]) {\n\t\t\tconst sendOpts = {\n\t\t\t\tmethod: webUploadMedia === webUpload.PUT ? \"PUT\" : \"POST\"\n\t\t\t} as any;\n\t\t\tif (webUploadMedia.queryString) {\n\t\t\t\tsendOpts.url = CidUploadStep.enrichUrl(uploadStep.uploadUrl, session, uploadStep.def);\n\t\t\t} else {\n\t\t\t\tsendOpts.headerProps = CidUploadStep.enrichHeaders(session, uploadStep.def);\n\t\t\t}\n\t\t\tif (!sendOpts.headerProps) sendOpts.headerProps = {};\n\t\t\tif (!sendOpts.headerProps[IO.REQUEST_LANG_HEADER]) {\n\t\t\t\tconst reqInit = IO.addLang();\n\t\t\t\tif (reqInit?.headers) sendOpts.headerProps[IO.REQUEST_LANG_HEADER] = (reqInit.headers as any)[IO.REQUEST_LANG_HEADER];\n\t\t\t}\n\t\t\treturn sendOpts;\n\t\t}\n\t\treturn null;\n\t}\n}\n\n\nexport class CidScarReDeployAction extends CidScarDeployAction {\n\n\t_label = \"Redéployer\";\n\t_icon = \"/@skin@/wsp/views/generators/resend.svg\";\n\n\tstatic isCidEndPointAvailable(ctx: IPubCtx): boolean {\n\t\tconst url = ctx.cidInfo.lastManifest.manifestUrl;\n\t\tconst endPoints = ctx.cidInfo.lastCidEndPoints;\n\t\tif (endPoints === undefined) {\n\t\t\t//cidEndPoints pas chargés, on interroge...\n\t\t\tctx.cidInfo.lastCidEndPoints = WSP.fetchSrc(ctx.wsp, ctx.uiContext, SRC.srcRef(ctx.shortDesc), ['cidEndPoints'] as (keyof JCidEnPointsFields)[] as any).then((fields: JCidEnPointsFields) => {\n\t\t\t\t//console.log(\"CidScarReDeployAction:::fields:::\", fields);\n\t\t\t\tctx.cidInfo.lastCidEndPoints = fields?.cidEndPoints || null;\n\t\t\t\t(ctx.uiContext as Generators).cidRefreshOnSessionChange();\n\t\t\t\treturn ctx.cidInfo.lastCidEndPoints;\n\t\t\t}).catch((e) => {\n\t\t\t\tctx.cidInfo.lastCidEndPoints = null;\n\t\t\t\tERROR.logError(e);\n\t\t\t\treturn null;\n\t\t\t});\n\t\t\treturn false;\n\t\t} else if (endPoints === null) {\n\t\t\t//Aucun endPoints enregistrés\n\t\t\treturn false;\n\t\t} else if (endPoints instanceof Promise) {\n\t\t\t//Chargement en cours, pas encore dispo.\n\t\t\treturn false;\n\t\t}\n\t\t//XXX comment gérer le switch de serveur CID (url !=) mais données compatibles ? ajouter host.manifestUrlCompat(url):boolean ?\n\t\treturn endPoints.endPoints.find((ep) => ep.manifestUrl === url) != null;\n\t}\n\n\tstatic createMetasInFromEndPoints(ctx: IPubCtx, metasIn: Dict<string>): Dict<string> {\n\t\tconst cidField = ctx.cidInfo.lastCidEndPoints;\n\t\tif (cidField && !(cidField instanceof Promise)) {\n\t\t\tconst url = ctx.cidInfo.lastManifest.manifestUrl;\n\t\t\tconst endPoint = cidField.endPoints.find((ep) => ep.manifestUrl === url);\n\t\t\tif (endPoint) return Object.assign(metasIn, endPoint.cidProps);\n\t\t}\n\t\treturn metasIn;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.passOptionalInteraction = true;\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!super.isVisible(ctx)) return false;\n\t\treturn CidScarReDeployAction.isCidEndPointAvailable(ctx);\n\t}\n\n\tcreateMetasIn(ctx: IPubCtx): Dict<string> {\n\t\treturn CidScarReDeployAction.createMetasInFromEndPoints(ctx, super.createMetasIn(ctx));\n\t}\n\n\toverrideSession(config: OCidSessionConfig, ctx: IPubCtx): OCidSessionConfig {\n\t\tif (!config.foreignMetas)\n\t\t\tconfig.foreignMetas = [];\n\t\tconfig.foreignMetas.push({is: CID.IS_Resend, value: ''});\n\n\t\treturn super.overrideSession(config, ctx);\n\t}\n}\n\nexport class CidGenDeployAction extends CidDeployAction {\n\n\tasync createCidSession(ctx: IPubCtx): Promise<CidSession> {\n\t\tconst stack = ctx.pubNode.codeGenStack.split('_');\n\t\t//on interroge le type et le name pour le download\n\t\tconst genCodeStack = stack.slice(0, stack.length - 1).join('_');\n\t\tconst resp = await fetch(ITEM.getGenDownloadUrl(ctx.wsp, SRC.srcRef(ctx.shortDesc), genCodeStack), {method: \"HEAD\"});\n\t\tif (!resp.ok) {\n\t\t\tPOPUP.showNotifInfo(\"Génération non disponible\", ctx.uiContext);\n\t\t\treturn null;\n\t\t}\n\t\tconst fileName = extractFileNameFromContentDisposition(resp.headers.get(\"Content-Disposition\"));\n\t\tconst contentType = resp.headers.get(\"Content-Type\");\n\t\tconst metasIn = this.createMetasIn(ctx);\n\t\tconst foreignMetas = [{is: CID.IS_FileName, value: fileName}, {is: CID.IS_ContentType, value: contentType}];\n\t\tif (await this.overrideMetas(ctx, metasIn, foreignMetas) === false) return;\n\n\t\treturn new CidSession(this.overrideSession({\n\t\t\tmanifest: ctx.cidInfo.lastManifest,\n\t\t\tuiHandler: ctx.uiContext as Generators,\n\t\t\tmetasIn,\n\t\t\tforeignMetas,\n\t\t\tcustomUpload: async (session: CidSession, uploadStep: CidUploadStep, webUpload: ICidWebUploadDef): Promise<null | Response> => {\n\t\t\t\tconst sendBySrv = await CidScarDeployAction.getSendByServerBody(ctx, session, uploadStep, webUpload);\n\t\t\t\tconst params = IO.qs(\"cdaction\", sendBySrv ? \"SendGenTo\" : \"Download\", \"param\", ctx.wsp.code, \"refUri\", SRC.srcRef(ctx.shortDesc), \"codeGenStack\", genCodeStack);\n\t\t\t\tconst content = await ctx.wsp.wspServer.config.wspGenUrl.fetch(params, \"none\", sendBySrv ? {method: \"PUT\", body: JSON.stringify(sendBySrv)} : null);\n\t\t\t\tif (!content.ok) {\n\t\t\t\t\t//A voir... POPUP.showNotif(\"Génération non disponible\", ctx.uiContext);\n\t\t\t\t\treturn content;//new Response(null, {status: content.status}) ?\n\t\t\t\t}\n\t\t\t\tif (sendBySrv) return content; //Envoi par le serveur ok.\n\t\t\t\tsession.config.bodyToUpload = await content.blob();\n\t\t\t\treturn null; //déploiement standard à partir de bodyToUpload\n\t\t\t}\n\t\t}, ctx));\n\t}\n\n\tasync saveLastDeploy(ctx: IPubCtx): Promise<void> {\n\t\ttry {\n\t\t\tif (!ctx.wsp.isAvailable) return; //rupture de co => abandon\n\t\t\tlet lastCidProps = ctx.cidInfo.lastCidProps;\n\t\t\tif (lastCidProps === undefined) return; //Fonction de republi non active, on n'enregistre pas.\n\t\t\tconst cidInfo = ctx.cidInfo;\n\t\t\tconst metasToSave: Dict<any> = {};\n\t\t\tconst allMetas = cidInfo.cidSession.metasOut;\n\t\t\tfor (let metaDef of cidInfo.cidSession.cidProcess.metas.values()) {\n\t\t\t\tconst val = allMetas[metaDef.name];\n\t\t\t\tif (val !== undefined && !metaDef.isExcludeForRecall) metasToSave[metaDef.name] = val;\n\t\t\t}\n\t\t\t// if (lastCidProps instanceof Promise) lastCidProps = await lastCidProps;\n\t\t\t// if (lastCidProps) {\n\t\t\t// \t\t//TODO fusion si multi-store manifestUrl / cidProcessIs.\n\t\t\t// } else {\n\t\t\tctx.cidInfo.lastCidProps = {\n\t\t\t\tstore: [{\n\t\t\t\t\tmanifestUrl: cidInfo.lastManifest.manifestUrl,\n\t\t\t\t\tcidProcessIs: cidInfo.cidSession?.cidProcess?.is,\n\t\t\t\t\tcidProps: metasToSave\n\t\t\t\t}]\n\t\t\t}\n\t\t\t//}\n\t\t\tctx.reg.env.universe.httpFrames.web.fetchSvc(\n\t\t\t\t\"u/genPropsStored\", \"SaveGenProps\",\n\t\t\t\tIO.query(null, \"param\", ctx.wsp.code, \"srcRef\", SRC.srcRef(ctx.shortDesc), \"codeGenStack\", ctx.pubNode.codeGenStack),\n\t\t\t\t'none',\n\t\t\t\t{method: \"PUT\", body: JSON.stringify(ctx.cidInfo.lastCidProps)}\n\t\t\t);\n\t\t\t(ctx.uiContext as Generators).cidRefreshOnSessionChange();\n\t\t} catch (e) {\n\t\t\tERROR.log(\"Save last Cid deploy failed\", e);\n\t\t}\n\t}\n}\n\n/**\n * @see https://httpwg.org/specs/rfc6266.html#header.field.definition\n * @see https://www.rfc-editor.org/rfc/rfc2616.html#section-3.6\n *\n * NOTE: la variante filename* (https://datatracker.ietf.org/doc/html/rfc5987) non implémenté\n */\nfunction extractFileNameFromContentDisposition(ctDisp?: string): string {\n\tif (!ctDisp) return \"\";\n\tconst i = ctDisp.indexOf(\"filename=\");\n\tif (i < 0) return \"\";\n\tlet value = ctDisp.substring(i + 9).trim();\n\tif (value.startsWith('\"')) {\n\t\t//Nom entre quote : quoted-string\n\t\tvalue = value.substring(1);\n\t\tfor (let k = 0; k < value.length; k++) {\n\t\t\tswitch (value[k]) {\n\t\t\tcase '\\\\':\n\t\t\t\tvalue = value.substring(0, k) + value.substring(k + 1);\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\treturn value.substring(0, k);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t//pas de quote : token\n\t\tconst end = value.indexOf(';');\n\t\tif (end >= 0) value = value.substring(0, end);\n\t}\n\treturn value;\n}\n\n\nexport class CidGenReDeployAction extends CidGenDeployAction {\n\n\t_label = \"Redéployer\";\n\t_icon = \"/@skin@/wsp/views/generators/resend.svg\";\n\n\tstatic isReDeployDataAvailable(ctx: IPubCtx): boolean {\n\t\tconst url = ctx.cidInfo.lastManifest.manifestUrl;\n\t\tconst lastCidProps = ctx.cidInfo.lastCidProps;\n\t\tif (lastCidProps === undefined) {\n\t\t\t//lastCidProps pas chargés, on interroge...\n\t\t\tctx.cidInfo.lastCidProps = ctx.reg.env.universe.httpFrames.web.fetchSvcJson<JCidStoredProps>(\"u/genPropsStored\", \"GetGenProps\", IO.query(null, \"param\", ctx.wsp.code, \"srcRef\", SRC.srcRef(ctx.shortDesc), \"codeGenStack\", ctx.pubNode.codeGenStack)).then((datas) => {\n\t\t\t\tctx.cidInfo.lastCidProps = datas || null; // null = pas de lastCidProps\n\t\t\t\t(ctx.uiContext as Generators).cidRefreshOnSessionChange();\n\t\t\t\treturn ctx.cidInfo.lastCidProps;\n\t\t\t}).catch((e) => {\n\t\t\t\tctx.cidInfo.lastCidProps = null; //pas de lastCidProps\n\t\t\t\tERROR.logError(e);\n\t\t\t\treturn null;\n\t\t\t});\n\t\t\treturn false;\n\t\t} else if (lastCidProps === null) {\n\t\t\t//Aucun lastCidProps enregistrés\n\t\t\treturn false;\n\t\t} else if (lastCidProps instanceof Promise) {\n\t\t\t//Chargement en cours, pas encore dispo.\n\t\t\treturn false;\n\t\t}\n\t\t//XXX comment gérer le switch de serveur CID (url !=) mais données compatibles ? ajouter host.manifestUrlCompat(url):boolean ?\n\t\treturn lastCidProps.store.find((d) => d.manifestUrl === url) != null;\n\t}\n\n\tstatic createMetasInFromLast(ctx: IPubCtx, metasIn: Dict<string>): Dict<string> {\n\t\tconst lastCidProps = ctx.cidInfo.lastCidProps;\n\t\tif (lastCidProps && !(lastCidProps instanceof Promise)) {\n\t\t\tconst url = ctx.cidInfo.lastManifest.manifestUrl;\n\t\t\tconst datas = lastCidProps.store.find((d) => d.manifestUrl === url);\n\t\t\tif (datas) return Object.assign(metasIn, datas.cidProps);\n\t\t}\n\t\treturn metasIn;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.passOptionalInteraction = true;\n\t}\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!super.isVisible(ctx)) return false;\n\t\treturn CidGenReDeployAction.isReDeployDataAvailable(ctx);\n\t}\n\n\tcreateMetasIn(ctx: IPubCtx): Dict<string> {\n\t\treturn CidGenReDeployAction.createMetasInFromLast(ctx, super.createMetasIn(ctx));\n\t}\n\n\toverrideSession(config: OCidSessionConfig, ctx: IPubCtx): OCidSessionConfig {\n\t\tif (!config.foreignMetas) config.foreignMetas = [];\n\t\tconfig.foreignMetas.push({is: CID.IS_Resend, value: ''});\n\t\treturn super.overrideSession(config, ctx);\n\t}\n}\n\n\nexport class CidConsultLastAction extends CidAction {\n\n\t_label = \"Consulter\";\n\t_description = \"Consulter la dernière ressource déployée\";\n\t_icon = \"/@skin@/wsp/views/generators/show.svg\";\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.processFilter = CidAction.PRC_IS_CONSULT;\n\t}\n\n\tasync execute(ctx: IPubCtx, ev?: Event) {\n\t\tctx = clonePubCtx(ctx);\n\t\tctx.cidInfo.cidSession = await this.createCidSession(ctx);\n\t\tif (!ctx.cidInfo.cidSession) return;\n\t\tawait ctx.cidInfo.cidSession.doSession();\n\t}\n\n\tasync createCidSession(ctx: IPubCtx): Promise<CidSession> {\n\t\tconst metasIn = this.createMetasIn(ctx);\n\t\tconst foreignMetas: { is: string[], value: string | ((session: CidSession) => string) }[] = [];\n\t\tif (await this.overrideMetas(ctx, metasIn, foreignMetas) === false) return;\n\t\treturn new CidSession(this.overrideSession({\n\t\t\tmanifest: ctx.cidInfo.lastManifest,\n\t\t\tuiHandler: ctx.uiContext as Generators,\n\t\t\tmetasIn,\n\t\t\tforeignMetas,\n\t\t}, ctx));\n\t}\n\n}\n\nexport class CidScarConsultAction extends CidConsultLastAction {\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!super.isVisible(ctx)) return false;\n\t\treturn CidScarReDeployAction.isCidEndPointAvailable(ctx);\n\t}\n\n\tcreateMetasIn(ctx: IPubCtx): Dict<string> {\n\t\treturn CidScarReDeployAction.createMetasInFromEndPoints(ctx, super.createMetasIn(ctx));\n\t}\n}\n\nexport class CidGenConsultAction extends CidConsultLastAction {\n\n\tisVisible(ctx: IPubCtx): boolean {\n\t\tif (!super.isVisible(ctx)) return false;\n\t\treturn CidGenReDeployAction.isReDeployDataAvailable(ctx);\n\t}\n\n\tcreateMetasIn(ctx: IPubCtx): Dict<string> {\n\t\treturn CidGenReDeployAction.createMetasInFromLast(ctx, super.createMetasIn(ctx));\n\t}\n}\n\n/**\n *\n * @deprecated pour compat packs 6.0, à suppr en SC7\n */\nexport const CidConsultAction = CidScarConsultAction;\n\n/**\n * Au démmarage d'une génération, d'un déploiement (...) clone le IPubCtx pour le geler\n * afin qu'il ne dépende plus d'un changement de contexte graphique pendant le traitement (changement de IPubCtx.pubNode).\n */\nfunction clonePubCtx(ctx: IPubCtx) {\n\treturn Object.assign({}, ctx);\n}"]}