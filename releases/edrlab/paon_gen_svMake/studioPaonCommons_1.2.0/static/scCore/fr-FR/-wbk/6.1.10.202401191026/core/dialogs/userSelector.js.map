{"version":3,"sources":["/@back@/core/dialogs/userSelector.tsx"],"names":["BaseElement","BASIS","Button","POPUP","Action","REG","JSX","DOMSH","UsersGrid","UserSelector","[object Object]","init","this","reg","findReg","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","initTree","newInit","Object","assign","preserveSelectionOnFilter","userGrid","selectAndCloseOnDblClick","defaultAction","setExecute","doSelectAndClose","appendChild","initialize","footer","createElement","id","msgArea","selectBtn","label","buttonLabel","class","ui-context","onclick","onSelectBtn","onCancelBtn","addEventListener","ev","refrehUi","onSelChange","getSelectedUsers","startSel","initializedAsync","then","selectByJUser","selection","disabled","length","msg","allowSelect","textContent","r","findPopupableParent","close","findHost","visitor","options","registerSkin","customElements","define"],"mappings":"OAAQA,YAAaC,UAAqB;OAClCC,WAAsB;OACtBC,UAAM;OACNC,WAAO;OACOC,QAAI;OAElBC,QAAI;OACJC,UAAM;OAEUC,cAAU;OAiB5B,MAAOC,qBAAqBT,YASvBU,YAAYC,MACrBC,KAAKC,IAAMD,KAAKE,QAAQH;AACxB,MAAMI,GAAKH,KAAKI,aAAaT,MAAMU;AACnCZ,IAAIQ,IAAIK,YAAY,kBAAmBH;AACvCH,KAAKO,oBAAoBP,KAAKQ,UAAWT;AAEzC,MAAMU,SAAWpB,MAAMqB,QAAQC,OAAOC,OAAO,CAACC,0BAA2B,MAA8Bd,KAAKe,UAAWd,KAAKC;AAE5H,GAAIF,KAAKgB,yBAA0BN,SAASO,eAAgB,IAAIxB,QAAcyB,WAAW,KAAOjB,KAAKkB;AAErGlB,KAAKc,SAAWX,GAAGgB,aAAY,IAAIvB,WAAYwB,WAAWX;AAC1D,MAAMY,OAASlB,GAAGgB,YAAYzB,IAAA4B,cAAA,MAAA,CAAKC,GAAG;AACtCvB,KAAKwB,QAAUH,OAAOF,YAAYzB,IAAA4B,cAAA,MAAA,CAAKC,GAAG;AAC1CvB,KAAKyB,UAAYJ,OAAOF,YAAYzB,IAAA4B,cAAChC,OAAM,CAACiC,GAAG,SAASG,MAAO3B,KAAK4B,aAAe,iBAAkBC,MAAM,UAASC,aAAY,SAASC,QAAS9B,KAAK+B;AACvJV,OAAOF,YAAYzB,IAAA4B,cAAChC,OAAM,CAACiC,GAAG,SAASG,MAAM,YAAWG,aAAY,SAASC,QAAS9B,KAAKgC;AAE3FhC,KAAKc,SAASmB,iBAAiB,cAAgBC,KAC9ClC,KAAKmC;AACL,GAAIpC,KAAKqC,YAAarC,KAAKqC,YAAYpC,KAAKc,SAASuB,mBAAoBrC;AAG1E,GAAID,KAAKuC,SAAUtC,KAAKc,SAASyB,iBAAiBC,KAAK,KAAOxC,KAAKc,SAAS2B,cAAc1C,KAAKuC,SAAU;AAEzGtC,KAAKmC,WAGErC,WACP,MAAM4C,UAAY1C,KAAKc,SAASuB;AAChCrC,KAAKyB,UAAUkB,UAAYD,WAAaA,UAAUE,QAAU,EAG7D9C,OAAO+C,IAAaC,aACnB9C,KAAKwB,QAAQuB,YAAcF;AAC3B7C,KAAKyB,UAAUkB,UAAYG,YAG5BhD,mBACC,MAAMkD,EAAIhD,KAAKc,SAASuB;AACxB,GAAIW,EAAEJ,OAAS,EAAGrD,MAAM0D,oBAAoBjD,MAAMkD,MAAMF,GAGzDlD,cACCP,MAAM0D,oBAAoBjD,MAAMkD,QAGjCpD,cACCH,MAAMwD,SAAuBnD,MAAMkB,mBAGpCpB,WAAWsD,QAA+BC,SACzC,OAAOD,QAAQpD,KAAKc,UAGrBhB,gBAAgBsD,QAAwCC,SACvD,OAAOD,QAAQpD,KAAKc,WAItBrB,IAAIQ,IAAIqD,aAAa,wBAAyB,EAAsB;AAkBpEC,eAAeC,OAAO,wBAAyB3D","sourcesContent":["import {BaseElement, BASIS, OSkinableInit} from \"back/commons/basis\";\nimport {Button, ButtonActions} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {Action} from \"lib/commons/actions\";\nimport {IReg, IUiEnv, REG} from \"lib/commons/registry\";\nimport {IView, IViewsContainer, OViewVisitOptions} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JUser} from \"lib/core/user\";\nimport {OUsersGridInit, UsersGrid} from \"back/core/widgets/usersGrid\";\n\n/**\n * Dialogue de sélection d'un ou plusieurs users.\n */\nexport interface UserSelector extends BaseElement, IView {\n\tinitialize(init: OUserSelectorInit): this\n}\n\nexport interface OUserSelectorInit extends OSkinableInit {\n\tuserGrid?: OUsersGridInit<any>\n\tbuttonLabel?: string\n\tselectAndCloseOnDblClick?: boolean\n\tonSelChange?: (sel: JUser[], usSel: UserSelector) => void\n\tstartSel?: JUser[];\n}\n\nexport class UserSelector extends BaseElement implements IViewsContainer {\n\t/** Contexte */\n\treg: IReg<IUiEnv>;\n\n\t/** Eléments UI */\n\tuserGrid: UsersGrid<any>;\n\tmsgArea: HTMLElement;\n\tselectBtn: ButtonActions<UserSelector>;\n\n\tprotected _initialize(init: OUserSelectorInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tREG.reg.installSkin(\"standard-dialog\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tconst initTree = BASIS.newInit(Object.assign({preserveSelectionOnFilter: true} as OUsersGridInit<any>, init.userGrid), this.reg);\n\n\t\tif (init.selectAndCloseOnDblClick) initTree.defaultAction = new Action<any>().setExecute(() => {this.doSelectAndClose()});\n\n\t\tthis.userGrid = sr.appendChild(new UsersGrid().initialize(initTree));\n\t\tconst footer = sr.appendChild(<div id=\"footer\"/>);\n\t\tthis.msgArea = footer.appendChild(<div id=\"msg\"/>);\n\t\tthis.selectBtn = footer.appendChild(<Button id=\"select\" label={init.buttonLabel || \"Sélectionner\"} class=\"default\" ui-context=\"dialog\" onclick={this.onSelectBtn}/>) as ButtonActions<UserSelector>;\n\t\tfooter.appendChild(<Button id=\"cancel\" label=\"Annuler\" ui-context=\"dialog\" onclick={this.onCancelBtn}/>);\n\n\t\tthis.userGrid.addEventListener(\"grid-select\", (ev: CustomEvent) => {\n\t\t\tthis.refrehUi();\n\t\t\tif (init.onSelChange) init.onSelChange(this.userGrid.getSelectedUsers(), this);\n\t\t});\n\n\t\tif (init.startSel) this.userGrid.initializedAsync.then(() => {this.userGrid.selectByJUser(init.startSel, true)});\n\n\t\tthis.refrehUi();\n\t}\n\n\tprivate refrehUi() {\n\t\tconst selection = this.userGrid.getSelectedUsers();\n\t\tthis.selectBtn.disabled = !selection || selection.length == 0;\n\t}\n\n\tsetMsg(msg: string, allowSelect: boolean) {\n\t\tthis.msgArea.textContent = msg;\n\t\tthis.selectBtn.disabled = !allowSelect;\n\t}\n\n\tdoSelectAndClose() {\n\t\tconst r = this.userGrid.getSelectedUsers();\n\t\tif (r.length > 0) POPUP.findPopupableParent(this).close(r);\n\t}\n\n\tonCancelBtn(this: Button) {\n\t\tPOPUP.findPopupableParent(this).close();\n\t}\n\n\tonSelectBtn(this: Button) {\n\t\tDOMSH.findHost<UserSelector>(this).doSelectAndClose();\n\t}\n\n\tvisitViews(visitor: (view: IView) => any, options?: OViewVisitOptions): any {\n\t\treturn visitor(this.userGrid);\n\t}\n\n\tvisitViewsAsync(visitor: (view: IView) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn visitor(this.userGrid);\n\t}\n}\n\nREG.reg.registerSkin('server-users-selector', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\theight: 50vh;\n\t\tmax-height: 30em;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\twidth: 20em;\n\t}\n\n\t#msg {\n\t\tflex: 1;\n\t\tmargin: 0 .5em;\n\t}\n`);\n\ncustomElements.define(\"server-users-selector\", UserSelector);\n"]}