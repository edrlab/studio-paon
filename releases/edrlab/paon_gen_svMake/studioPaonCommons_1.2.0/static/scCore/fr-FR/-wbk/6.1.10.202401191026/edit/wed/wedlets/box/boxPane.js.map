{"version":3,"sources":["/@back@/edit/wed/wedlets/box/boxPane.tsx"],"names":["DOM","findWedEditor","WEDLET","AgEltBoxSelection","DOMSH","ACTION","LANG","BoxContainer","REG","BoxPane","collapsed","this","hasAttribute","state","setAttrBool","_doClose","_doOpen","[object Object]","tpl","wedlet","sh","shadowRoot","attachShadow","SHADOWDOM_INIT","installSkins","subEltWedlets","cloneWedletContent","head","querySelector","onclick","onClickHead","onkeydown","onKeyDown","body","hidden","style","zIndex","wedMgr","listeners","removeListener","_focusLstn","_pointerTarget","addEventListener","_pointerLstn","_ctnResizer","disconnect","position","refreshEditMode","ctn","findCtn","fixPosition","focused","isAncestor","ev","composedPath","on","rootNode","_a","ResizeObserver","entries","target","observe","me","findHost","stopImmediatePropagation","preventDefault","in","key","isAccelPressed","getBoundingClientRect","left","clientWidth","around","st","aroundRect","offset","offsetParent","document","top","Math","round","bottom","paneLeft","width","maxWidth","paneWidth","selMode","actionsLists","reg","registerSkin","window","customElements","define"],"mappings":"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","sourcesContent":["import {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {findWedEditor, IParentWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {AgEltBoxSelection} from \"back/edit/wed/features/boxSel\";\nimport {IWedletSingleElt} from \"back/edit/wed/wedlets/wedletSingleElt\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {ACTION} from \"lib/commons/actions\";\nimport {LANG} from \"lib/commons/lang\";\nimport {BoxContainer} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {REG} from \"lib/commons/registry\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\n\n/**\n *\n * Attributs :\n * - skin : Attention : remplace le skin par dÃ©faut \"box-pane\".\n * - skinOver\n */\nclass BoxPane extends BoxContainer {\n\n\tprotected head: HTMLElement;\n\tprotected body: HTMLElement;\n\n\tprotected _focusLstn: (wedMgr: WedMgr, focused: Element) => void;\n\tprotected _pointerTarget: HTMLElement;\n\tprotected _pointerLstn: (ev: PointerEvent) => void;\n\tprotected _ctnResizer: ResizeObserver;\n\n\tget collapsed(): boolean {return !this.hasAttribute('opened')}\n\n\tset collapsed(state: boolean) {\n\t\tif (DOM.setAttrBool(this, 'opened', !state)) {\n\t\t\tif (state) this._doClose();\n\t\t\telse this._doOpen();\n\t\t}\n\t}\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet as IParentWedlet & IWedletSingleElt;\n\t\tconst sh = this.shadowRoot || this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tWEDLET.installSkins(tpl, sh, wedlet, \"box-pane\");\n\t\tthis.subEltWedlets = WEDLET.cloneWedletContent(this, tpl, wedlet as IWedletSingleElt, true);\n\t\tconst head = this.head = this.shadowRoot.querySelector<HTMLElement>(\".head\");\n\t\thead.onclick = this.onClickHead;\n\t\tthis.onkeydown = this.onKeyDown;\n\t\tthis.body = this.shadowRoot.querySelector<HTMLElement>(\".body\");\n\t\tthis.body.hidden = true;\n\t\tthis.body.style.zIndex = \"901\";\n\t}\n\n\tprotected _doClose() {\n\t\tthis.body.hidden = true;\n\t\tthis.wedlet.wedMgr.listeners.removeListener(\"getFocus\", this._focusLstn);\n\t\tif (this._pointerTarget) {\n\t\t\tthis._pointerTarget.addEventListener(\"pointerdown\", this._pointerLstn);\n\t\t\tthis._pointerTarget = null\n\t\t}\n\t\tif (this._ctnResizer) {\n\t\t\tthis._ctnResizer.disconnect();\n\t\t\tthis._ctnResizer = null;\n\t\t}\n\t}\n\n\tprotected _doOpen() {\n\t\tthis.style.position = \"relative\"; //permet de maintenir le pane ouvert stable pendant le scroll.\n\t\tthis.body.hidden = false;\n\t\tWEDLET.refreshEditMode(this.wedlet);\n\t\tconst ctn = this.findCtn();\n\t\tthis.fixPosition(ctn, this.head, this.body);\n\t\tif (!this._focusLstn) this._focusLstn = (wedMgr: WedMgr, focused: Element) => {\n\t\t\tif (focused && !DOMSH.isAncestor(this, focused)) this.collapsed = true;\n\t\t};\n\t\tif (!this._pointerLstn) this._pointerLstn = (ev: PointerEvent) => {\n\t\t\tif (!DOMSH.isAncestor(this, ev.composedPath()[0] as Element)) this.collapsed = true;\n\t\t}\n\t\tthis.wedlet.wedMgr.listeners.on(\"getFocus\", this._focusLstn);\n\t\tthis._pointerTarget = findWedEditor(this).rootNode;\n\t\tthis._pointerTarget?.addEventListener(\"pointerdown\", this._pointerLstn);\n\t\tthis._ctnResizer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n\t\t\tthis.fixPosition(entries[0].target as HTMLElement, this.head, this.body);\n\t\t});\n\t\tthis._ctnResizer.observe(ctn);\n\t}\n\n\tprotected onClickHead(this: HTMLElement, ev: MouseEvent) {\n\t\tconst me = DOMSH.findHost<BoxPane>(this);\n\t\tme.collapsed = !me.collapsed;\n\t\tev.stopImmediatePropagation();\n\t\tev.preventDefault();\n\t}\n\n\tprotected onKeyDown(ev: KeyboardEvent) {\n\t\tif (ev.target === this && LANG.in(ev.key, 'ArrowRight', 'Enter', ' ') && !ACTION.isAccelPressed(ev)) {\n\t\t\tif (ev.key === 'ArrowRight') {\n\t\t\t\tthis.collapsed = false;\n\t\t\t\treturn; //On laisse l'event continuer pour que boxSel sel le prochain.\n\t\t\t}\n\t\t\tthis.collapsed = !this.collapsed;\n\t\t\tev.stopImmediatePropagation();\n\t\t\tev.preventDefault();\n\t\t}\n\t}\n\n\tprotected findCtn(): HTMLElement {\n\t\treturn findWedEditor(this).rootNode;\n\t}\n\n\tprotected paneLeft(ctn: HTMLElement): number {\n\t\treturn ctn.getBoundingClientRect().left + 5;\n\t}\n\n\tprotected paneWidth(ctn: HTMLElement): string {\n\t\treturn (ctn.clientWidth - 11) + 'px';\n\t}\n\n\tprotected fixPosition(ctn: HTMLElement, around: HTMLElement, target: HTMLElement) {\n\t\tconst st = target.style;\n\t\tconst aroundRect = around.getBoundingClientRect();\n\t\tconst offset = (target.offsetParent || document.body).getBoundingClientRect();\n\t\tst.top = Math.round(aroundRect.bottom - offset.top) + 'px';\n\t\tst.left = Math.round(this.paneLeft(ctn) - offset.left) + 'px';\n\t\tst.width = st.maxWidth = this.paneWidth(ctn);\n\t}\n}\n\nAgEltBoxSelection(BoxPane, {selMode: 'box', actionsLists: ['actions:wed:box-ctn', 'actions:wed:box']});\n\nREG.reg.registerSkin('box-pane', 1, /* language=CSS */ `\n\t:host([opened]) {\n\t\tbackground-color: var(--edit-select-bgcolor);\n\t}\n\n\t:host(:focus) {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t.head {\n\t\tcursor: pointer;\n\t\tborder: 1px solid var(--border-color);\n\t\tborder-radius: 4px;\n\t\tpadding: .3em;\n\t\tbackground-color: var(--edit-btn-bgcolor);\n\t\tcolor: var(--edit-btn-color);\n\t\tfont-weight: bold;\n\t}\n\n\t:host(.virtual) .head {\n\t\tfont-weight: normal;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\t.body {\n\t\tbox-sizing: border-box;\n\t\tbackground-color: var(--edit-bgcolor);\n\t\tposition: absolute;\n\t\tborder: solid 1px var(--border-color);\n\t\tborder-radius: 4px;\n\t\tbox-shadow: 1px 1px 5px var(--fade-color);\n\t\tpadding: .2em .3em;\n\t}\n`);\nwindow.customElements.define(\"box-pane\", BoxPane);"]}