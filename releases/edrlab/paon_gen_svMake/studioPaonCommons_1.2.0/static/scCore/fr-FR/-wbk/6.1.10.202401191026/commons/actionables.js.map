{"version":3,"sources":["/@back@/commons/actionables.tsx"],"names":["BaseElement","BASIS","isEltRefreshable","ACTION","isRefreshHook","DOM","JSX","Actionable","icon","this","_icon","_action","getIcon","_actionContext","val","refresh","label","_label","getLabel","title","_title","getDescription","ariaLabel","_ariaLabel","disabled","_disabled","isEnabled","hidden","_hidden","isVisible","action","actionContext","toggleOn","isToggle","undefined","getDatas","[object Object]","init","makeClickable","tabIndexCustom","initButtonNode","onclick","_executeAction","super","buildInitFromAtts","ACTIONABLES","extractActionContextFromDom","extractActionFromDom","hasAttribute","extractAttrAsNumber","extractAttr","getAttribute","ctx","ev","isAvailable","dispatchEvent","CustomEvent","detail","actionable","bubbles","composed","_iconElt","shadowRoot","appendChild","createElement","class","_labelElt","setHidden","_createIcon","_lastUrlIcon","style","setProperty","startsWith","setAttr","_createLabel","setTextContent","setAttrBool","toString","ActionableList","actions","_actions","groupOrder","injectSepByGroup","onRefreshCycle","findNext","elt","cleanupDoubleSep","uiContext","extractActionsFromDom","textContent","nextTag","firstElementChild","i","length","IS_Actionable","nextElementSibling","b","_createButton","insertBefore","toRem","remove","Error","n","IS_ActionableEnabled","root","prevWdgt","lastSep","ch","getId","findReg","getSvc","actionCtx","mergeLists","split"],"mappings":"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","sourcesContent":["import {BaseElement, BASIS, isEltRefreshable, OLabelInit, OSkinableInit} from \"back/commons/basis\";\nimport {ACTION, Action, EButtonUiContext, IAction} from \"lib/commons/actions\";\nimport {IRegPointer} from 'lib/commons/registry';\nimport {isRefreshHook} from \"lib/commons/utils/signboard\";\nimport {DOM, INodeFilter, JSX} from \"lib/commons/xml/dom\";\n\n\n/**\n * Class de base pour les widgets actionables comme des boutons.\n *\n * Attributes : cf BaseElement +\n * State refresh attributes: disabled, hidden\n * State init attributes: label, icon, tabindex-custom\n * Config init attribute : action, action-context\n */\nexport interface Actionable<C> extends BaseElement {\n\tinitialize(init?: OActionableInit<C>): this;\n}\n\n/* Utilisation de Partial<IClickable> à la place de IClickableInit car disabled ne dépend pas uniquement de l'attribut sur Actionable */\nexport interface OActionableInit<C> extends OLabelInit {\n\taction?: IAction<C>\n\tactionContext?: C\n\tdisabled?: boolean\n\ttabIndexCustom?: number\n}\n\nexport abstract class Actionable<C> extends BaseElement {\n\tprotected _label: string;\n\n\tprotected _ariaLabel: string;\n\tprotected _icon: string;\n\tprotected _title: string;\n\tprotected _disabled: boolean;\n\tprotected _hidden: boolean;\n\tprotected _action: IAction<C>;\n\tprotected _actionContext: C;\n\n\tget icon(): string {\n\t\tif (this._icon) return this._icon;\n\t\tif (this._action) return this._action.getIcon(this._actionContext);\n\t\treturn null;\n\t}\n\n\tset icon(val: string) {\n\t\tif (this._icon !== val) {\n\t\t\tthis._icon = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tget label(): string {\n\t\tif (this._label != null) return this._label;\n\t\tif (this._action) return this._action.getLabel(this._actionContext);\n\t\treturn null;\n\t}\n\n\tset label(val: string) {\n\t\tif (this._label != val) {\n\t\t\tthis._label = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tget title(): string {\n\t\tif (this._title != null) return this._title;\n\t\tif (this._action) return this._action.getDescription(this._actionContext);\n\t\treturn null;\n\t}\n\n\tset title(val: string) {\n\t\tif (this._title != val) {\n\t\t\tthis._title = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\t/** Label destiné à fournir le label de ce bouton pour les lecteurs d'écran */\n\tget ariaLabel(): string {\n\t\tif (this._ariaLabel != null) return this._ariaLabel;\n\t\tconst label = this.label;\n\t\treturn label || this.title;\n\t}\n\n\tset ariaLabel(val: string) {\n\t\tif (this._ariaLabel != val) {\n\t\t\tthis._ariaLabel = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\ttabIndexCustom: number;\n\n\tget disabled(): boolean {\n\t\tif (this._disabled != null) return this._disabled;\n\t\tif (this._action) return !this._action.isEnabled(this._actionContext);\n\t\treturn false;\n\t}\n\n\tset disabled(val: boolean | null) {\n\t\tif (this._disabled !== val) {\n\t\t\tthis._disabled = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tget hidden(): boolean {\n\t\tif (this._hidden != null) return this._hidden;\n\t\tif (this._action) return !this._action.isVisible(this._actionContext);\n\t\treturn true;\n\t}\n\n\tset hidden(val: boolean | null) {\n\t\tif (this._hidden !== val) {\n\t\t\tthis._hidden = val;\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tget action(): IAction<C> {return this._action}\n\n\tget actionContext(): C {return this._actionContext}\n\n\t/** Pour une action de type IActionToggle, retourne son statut 'on'. */\n\tget toggleOn(): boolean | null | undefined {\n\t\tif (!this._action || !this._action.isToggle(this._actionContext)) return undefined;\n\t\treturn this._action.getDatas('toggle', this._actionContext);\n\t}\n\n\tprotected _iconElt: HTMLElement;\n\tprotected _labelElt: HTMLElement;\n\n\tprotected _initialize(init: OActionableInit<C>) {\n\t\tBASIS.makeClickable(this);\n\t\tthis._icon = init.icon;\n\t\tthis._label = init.label;\n\t\tthis._title = init.title;\n\t\tthis._disabled = init.disabled;\n\t\tthis._hidden = init.hidden;\n\t\tthis.tabIndexCustom = init.tabIndexCustom || 0;\n\t\tthis._action = init.action;\n\t\tthis._actionContext = init.actionContext;\n\t\tthis._action.initButtonNode(this, this._actionContext);\n\t\tif (!this.onclick) {\n\t\t\t//pas d'attribut onclick surchargé\n\t\t\tthis.onclick = this._executeAction;\n\t\t}\n\t}\n\n\tbuildInitFromAtts(init?: OActionableInit<C>): OActionableInit<C> {\n\t\tinit = super.buildInitFromAtts(init);\n\t\tinit.actionContext = ACTIONABLES.extractActionContextFromDom<C>(this, init);\n\t\tinit.action = ACTIONABLES.extractActionFromDom<C>(this, init);\n\t\tif (this.hasAttribute('tabindex-custom')) init.tabIndexCustom = BASIS.extractAttrAsNumber(this, 'tabindex-custom', 0);\n\t\tif (this.hasAttribute('label')) init.label = BASIS.extractAttr(this, 'label');\n\t\tif (this.hasAttribute('icon')) init.icon = BASIS.extractAttr(this, 'icon');\n\t\tif (this.hasAttribute('disabled')) init.disabled = this.getAttribute('disabled') !== 'false';\n\t\tif (this.hasAttribute('hidden')) init.hidden = this.getAttribute('hidden') !== 'false';\n\t\treturn init;\n\t}\n\n\t/**\n\t * Change l'action et son contexte associé à ce widget. Attention, à utiliser avec précaution, certains widgets\n\t * pourraient mal gérer ce changement dynamique, l'action et l'actionContext étant en prinicpe des propriétés statiques\n\t * de config et non des states.\n\t */\n\tresetAction(action: Action<C>, ctx: C) {\n\t\tthis._action = action;\n\t\tthis._actionContext = ctx;\n\t\tthis.refresh();\n\t}\n\n\t/** L'implémentation de base ne fait que dispatcher l'event c-actioned. Les sous-classes peuvent exécuter l'action. */\n\tprotected _executeAction(ev: Event) {\n\t\t//if (this._action) this._action.executeIfAvailable(this._actionContext, ev);\n\t\tif (this._action.isAvailable(this._actionContext)) this.dispatchEvent(new CustomEvent('c-actioned', {detail: {actionable: this}, bubbles: true, composed: true}));\n\t}\n\n\t/** création de l'icon à la demande. */\n\tprotected _createIcon() {\n\t\tthis._iconElt = this.shadowRoot.appendChild(<span class='icon'/>);\n\t}\n\n\t/** création du label à la demande. */\n\tprotected _createLabel() {\n\t\tthis._labelElt = this.shadowRoot.appendChild(<span class='label'/>);\n\t}\n\n\tprotected _refresh() {\n\t\tconst hidden = this.hidden;\n\t\tDOM.setHidden(this, hidden);\n\t\tif (hidden) return;\n\n\t\tconst label = this.label;\n\t\tconst title = this.title;\n\t\tconst icon = this.icon;\n\n\t\tif (icon) {\n\t\t\tif (!this._iconElt) this._createIcon();\n\t\t\tif (this._lastUrlIcon !== icon) {\n\t\t\t\t//NOTE : DOM.setStyle() avec une url ne marche pas à cause des escapings.\n\t\t\t\tthis._lastUrlIcon = icon;\n\t\t\t\tthis.style.setProperty('--icon-img', icon.startsWith('--') ? `var(${icon})` : `url(\"${icon}\")`);\n\t\t\t}\n\n\t\t\t// accessibilité (indispensable si le label n'est pas affiché sur le bouton. ex : toolbar, ...)\n\t\t\t// NOTE @title ne semble pas pris en compte en fallback pour caractériser le bouton\n\t\t\tDOM.setAttr(this, \"aria-label\", this.ariaLabel);\n\n\t\t\tDOM.setHidden(this._iconElt, false);\n\t\t} else {\n\t\t\tif (this._iconElt) DOM.setHidden(this._iconElt, true);\n\t\t}\n\n\t\tif (label != null) {\n\t\t\tif (!this._labelElt) this._createLabel();\n\t\t\tDOM.setTextContent(this._labelElt, label);\n\t\t\tDOM.setHidden(this._labelElt, false);\n\t\t} else {\n\t\t\tif (this._labelElt) DOM.setHidden(this._labelElt, true);\n\t\t}\n\n\t\tDOM.setAttr(this, 'title', title);\n\n\t\tconst disabled = this.disabled;\n\t\tDOM.setAttrBool(this, 'disabled', disabled);\n\n\t\tDOM.setAttr(this, \"tabindex\", disabled ? null : this.tabIndexCustom === -2 ? null : (this.tabIndexCustom || 0).toString());\n\n\t\t//Action de type Toggle\n\t\tconst toggleOn = this.toggleOn;\n\t\tDOM.setAttr(this, 'aria-pressed', toggleOn === undefined ? null : toggleOn === null ? 'mixed' : toggleOn.toString());\n\n\t}\n\n\tprotected _lastUrlIcon: string;\n}\n\n/**\n * Classe de base des toolbars, popup menu, etc. gérant une liste d'actions.\n *\n * Attributes : cf BaseElement +\n * Config init attribute : action-context, ui-context, group-order\n * State init attributes : actions\n */\nexport interface ActionableList<C> extends BaseElement {\n\tinitialize(init: OActionableListInit<C>): this;\n}\n\n/** Etats pour widgets gérant une liste d'actions. */\n\n/** Etats pour widgets gérant une liste d'actions. */\nexport interface OActionableListInit<C> extends OSkinableInit {\n\tactions?: IAction<C>[]\n\tactionContext?: C\n\tuiContext?: EButtonUiContext\n\tgroupOrder?: string\n}\n\n/** Widgets gérant une liste d'actions. */\nexport class ActionableList<C> extends BaseElement implements IActionableList<C>{\n\tuiContext: EButtonUiContext;\n\n\tgroupOrder: string;\n\n\tprotected _actions: IAction<C>[];\n\tprotected _actionContext: C;\n\n\tget actions(): IAction<C>[] {return this._actions}\n\n\tset actions(actions: IAction<C>[]) {\n\t\tif (this._actions !== actions) {\n\t\t\tthis._actions = this.groupOrder == null ? actions : ACTION.injectSepByGroup(actions, this.groupOrder, this._actionContext);\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tget actionContext(): C {return this._actionContext}\n\n\t/**\n\t * Rafraichit chaque bouton existant, sans reconstruire la liste des actions.\n\t */\n\trefreshContent() {\n\t\tif (isRefreshHook(this._actionContext) && this._actionContext.onRefreshCycle(true) === 'stop') return;\n\t\ttry {\n\t\t\tDOM.findNext(this, this, (elt: Node): elt is Node => {\n\t\t\t\tif (isEltRefreshable(elt)) elt.refresh();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tACTIONABLES.cleanupDoubleSep(this);\n\t\t} finally {\n\t\t\tif (isRefreshHook(this._actionContext)) this._actionContext.onRefreshCycle(false);\n\t\t}\n\t}\n\n\tprotected _initialize(init: OActionableListInit<C>) {\n\t\tthis._actionContext = init.actionContext;\n\t\tthis.uiContext = init.uiContext || 'bar';\n\t\tthis.groupOrder = init.groupOrder;\n\t\tthis.actions = init.actions;\n\t}\n\n\tbuildInitFromAtts(init?: OActionableListInit<C>): OActionableListInit<C> {\n\t\tinit = super.buildInitFromAtts(init);\n\t\tinit.actions = ACTIONABLES.extractActionsFromDom(this, init);\n\t\tinit.actionContext = ACTIONABLES.extractActionContextFromDom(this, init);\n\t\tif (this.hasAttribute('ui-context')) init.uiContext = BASIS.extractAttr(this, \"ui-context\");\n\t\tif (this.hasAttribute('group-order')) init.groupOrder = BASIS.extractAttr(this, \"group-order\");\n\t\treturn init;\n\t}\n\n\tprotected _refresh() {\n\t\tif (!this._actionContext) {\n\t\t\tthis.textContent = null;\n\t\t\treturn;\n\t\t}\n\t\tif (isRefreshHook(this._actionContext) && this._actionContext.onRefreshCycle(true) === 'stop') return;\n\t\ttry {\n\t\t\t//this.textContent = null; //désactivation refresh par diff\n\t\t\tlet nextTag = this.firstElementChild;\n\t\t\tif (this._actions) for (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tconst action = this._actions[i];\n\t\t\t\tif (IS_Actionable(nextTag) && nextTag.action === action) {\n\t\t\t\t\tif (isEltRefreshable(nextTag)) nextTag.refresh();\n\t\t\t\t\tnextTag = nextTag.nextElementSibling;\n\t\t\t\t} else {\n\t\t\t\t\tconst b = this._createButton(action);\n\t\t\t\t\tif (b) this.insertBefore(b, nextTag);\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (nextTag) {\n\t\t\t\tconst toRem = nextTag;\n\t\t\t\tnextTag = nextTag.nextElementSibling;\n\t\t\t\ttoRem.remove();\n\t\t\t}\n\t\t\tACTIONABLES.cleanupDoubleSep(this);\n\t\t} finally {\n\t\t\tif (isRefreshHook(this._actionContext)) this._actionContext.onRefreshCycle(false);\n\t\t}\n\t}\n\n\tprotected _createButton(action: IAction<C>): Element {throw Error(\"To implement\")}\n\n}\n\n\n/** Représente tout widget susceptible d'être vu comme un bouton actionable. */\nexport interface IActionable<C> extends HTMLElement {\n\taction: IAction<C>\n\tactionContext: C\n\ttitle: string\n\thidden: boolean\n\tdisabled: boolean\n\tuiContext?: EButtonUiContext\n\n\tclick(): void\n}\n\n\nexport const IS_Actionable = ((n: any): n is IActionable<any> => n && n.action) as INodeFilter<IActionable<any>>;\nexport const IS_ActionableEnabled = ((n: any): n is IActionable<any> => n && n.action && !n.hidden && !n.disabled) as INodeFilter<IActionable<any>>;\n\n\n/**\n * Représente un ensemble de boutons à insérer dans une barre d'outils commune (cf BarShared).\n * Interface implémentée par :\n * - CustomEvent.detail pour l'event 'c-focus-actions' pour forcer une mse à jour de la toolbar.\n * - les widgets HTML. Le 1er widget de la hiérarchie retournée par Event.composedPath() lors\n * d'un event 'focusin' et définissant la propriété 'focusActionables' sera utilisé pour construire la toolbar.\n */\nexport interface IFocusActionables<C> {\n\tfocusActionables?: IActionable<C>[]\n}\n\n\n/**\n *\n */\nexport interface IContextMenuActionsPointer<C> {\n\tctxMenuActions?: IContextMenuActions<C> | null\n}\n\nexport interface IContextMenuActions<C> {\n\tactions: IAction<C>[]\n\tactionContext: C\n\t/** Spécifie la zone associée à ce menu contextuel. */\n\trect?: DOMRectReadOnly;\n}\n\nexport interface IActionableList<C> extends HTMLElement {\n\tactions: IAction<C>[]\n\treadonly actionContext: C\n}\n\nexport namespace ACTIONABLES {\n\n\t/**\n\t * Après un refresh d'un ensemble d'actions, masque les séparateurs consécutifs ou au début/fin\n\t */\n\texport function cleanupDoubleSep(this: void, root: HTMLElement) {\n\t\tlet prevWdgt = false;\n\t\tlet lastSep: IActionable<any> = null;\n\t\tfor (let ch = root.firstElementChild as HTMLElement; ch; ch = ch.nextElementSibling as HTMLElement) {\n\t\t\tif (IS_Actionable(ch) && ch.action.getId() === '#SEP') {\n\t\t\t\tDOM.setHidden(ch, !prevWdgt);\n\t\t\t\tprevWdgt = false;\n\t\t\t\tlastSep = ch;\n\t\t\t} else if (!prevWdgt && !ch.hidden) {\n\t\t\t\tprevWdgt = true;\n\t\t\t}\n\t\t}\n\t\tif (!prevWdgt && lastSep)\n\t\t\tDOM.setHidden(lastSep, !prevWdgt);\n\t}\n\n\texport function extractActionFromDom<C>(elt: BaseElement, init: IRegPointer<any>): Action<C> {\n\t\tconst action = elt.getAttribute('action');\n\t\treturn action ? elt.findReg(init).getSvc<Action<C>>(action) : null;\n\t}\n\n\texport function extractActionContextFromDom<C>(elt: BaseElement, init: IRegPointer<any>): C {\n\t\tconst actionCtx = elt.getAttribute('action-context');\n\t\t//Si pas de contexte => contexte == le bouton.\n\t\treturn actionCtx ? elt.findReg(init).getSvc<C>(actionCtx) : elt as any as C;\n\t}\n\n\texport function extractActionsFromDom<C>(elt: BaseElement, init: IRegPointer<any>): Action<C>[] {\n\t\tconst actions = BASIS.extractAttr(elt, 'actions');\n\t\treturn actions ? elt.findReg(init).mergeLists<Action<C>>(...actions.split(' ')) : [];\n\t}\n}\n"]}