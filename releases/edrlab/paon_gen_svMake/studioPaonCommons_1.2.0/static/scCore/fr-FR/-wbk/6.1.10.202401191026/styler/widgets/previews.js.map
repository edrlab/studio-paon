{"version":3,"sources":["/@back@/styler/widgets/previews.tsx"],"names":["REG","JSX","DOMSH","BaseElement","MsgLabel","SRC","STYLER","StylerSkinCLass","SkinClassStlPreview","[object Object]","init","this","reg","findReg","shortDesc","mode","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","contentElt","appendChild","createElement","class","textContent","msgElt","î","level","label","longDesc","env","wsp","fetchLongDesc","srcRef","skinClassStlCode","itAttr_skClassStl","skinClassStl","getSkinClassStl","skinClass","skinCLass","mainUlPropsElt","model","ownerWspTypeStlName","modelTxt","setCustomMsg","registerSkin","customElements","define"],"mappings":"OAAcA,QAAI;OACVC,QAAI;OACJC,UAAM;OACNC,YAAaC,aAAuC;OAExCC,QAAI;OAChBC,WAAO;OACPC,oBAAgB;OAMlB,MAAOC,4BAA4BL,YASxCM,YAAYC,MACXC,KAAKC,IAAMD,KAAKE,QAAQH;AACxBC,KAAKG,UAAYJ,KAAKI;AACtBH,KAAKI,KAAOL,KAAKK,MAAQ;AAEzB,MAAMC,GAAKL,KAAKM,aAAaf,MAAMgB;AACnCP,KAAKQ,oBAAoBR,KAAKS,UAAWV;AACzCC,KAAKU,WAAaL,GAAGM,YAAYrB,IAAAsB,cAAA,MAAA,CAAKC,MAAM,WAGnCf,iBACTE,KAAKU,WAAWI,YAAc;AAC9B,MAAMC,OAASf,KAAKU,WAAWC,YAAYrB,IAAAsB,cAACnB,SAAQ,CAACoB,MAAM,WAAUG,IAAI,CAACC,MAAO,OAAQC,MAAO;AAEhG,GAAIlB,KAAKG,UAAW,CACnB,IAAIgB,eAAiBnB,KAAKC,IAAImB,IAAIC,IAAIC,cAAc5B,IAAI6B,OAAOvB,KAAKG,WAAYH;AAChF,MAAMwB,iBAAoBL,SAAiBM;AAC3C,MAAMC,aAAe/B,OAAOgC,gBAAgB3B,KAAKC,IAAImB,IAAIC,IAAKG;AAG9D,GAAIE,aAAc,CACjB,MAAME,UAAYF,aAAaE,UAAU5B,KAAKC,IAAImB,IAAIC;AACtDrB,KAAKU,WAAWI,YAAc;AAM9B,GAAId,KAAKI,MAAQ,UAAWJ,KAAKU,WAAWC,YAAYrB,IAAAsB,cAAA,MAAA,CAAKC,MAAM,YAAWvB,IAAAsB,cAAChB,gBAAe,CAAAoB,IAAI,CAACa,UAAWH,aAAab,MAAOZ,IAAKD,KAAKC;AAE5I,MAAM6B,eAAiB9B,KAAKU,WAAWC,YAAYrB,IAAAsB,cAAA,KAAA;AAGnD,GAAIZ,KAAKI,MAAQ,UAAW,CAC3B,MAAM2B,MAAQL,aAAaM;AAC3B,MAAMC,SAAW,0CAA0CF;AAC3D,GAAIA,MAAOD,eAAenB,YAAYrB,IAAAsB,cAAA,KAAA,KAAKqB,iBAI5ClB,OAAOmB,aAAa,kCAAmC,aAExDnB,OAAOmB,aAAa,kCAAmC,SAI1D7C,IAAIY,IAAIkC,aAAa,sBAAuB,EAAsB;AAmDlEC,eAAeC,OAAO,sBAAuBxC","sourcesContent":["import {IReg, REG} from 'lib/commons/registry';\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {BaseElement, MsgLabel, OMsgLabelInit, OSkinableInit} from \"back/commons/basis\";\nimport {IWspUiEnv} from \"lib/wsp/wsp\";\nimport {JSrcFields, SRC} from \"lib/wsp/src\";\nimport {STYLER} from \"lib/styler/styler\";\nimport {StylerSkinCLass} from \"back/styler/widgets/widgets\";\n\n/**\n * Preview d'un skinCLass\n * \t\tclass : details\n */\nexport class SkinClassStlPreview extends BaseElement {\n\tprivate reg: IReg<IWspUiEnv>;\n\n\tprivate shortDesc: JSrcFields;\n\n\tprivate mode?: 'details' | 'preview'\n\n\tprivate contentElt: HTMLDivElement;\n\n\t_initialize(init: OSkinableInit & { shortDesc: JSrcFields, mode?: 'details' | 'preview' }) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.shortDesc = init.shortDesc;\n\t\tthis.mode = init.mode || 'preview';\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.contentElt = sr.appendChild(<div class=\"props\"/>) as HTMLDivElement;\n\t}\n\n\tprotected async _refresh() {\n\t\tthis.contentElt.textContent = \"\";\n\t\tconst msgElt = this.contentElt.appendChild(<MsgLabel class=\"headband\" î={{level: \"info\", label: \"Chargement en cours...\"} as OMsgLabelInit}/>) as MsgLabel;\n\n\t\tif (this.shortDesc) {\n\t\t\tlet longDesc = await this.reg.env.wsp.fetchLongDesc(SRC.srcRef(this.shortDesc), this);\n\t\t\tconst skinClassStlCode = (longDesc as any).itAttr_skClassStl;\n\t\t\tconst skinClassStl = STYLER.getSkinClassStl(this.reg.env.wsp, skinClassStlCode);\n\t\t\t//const wspTypesDefList = await WSPPACK.listWspTypesDef(this.reg.env.universe.packServer, [skinClassStl.class], true);\n\n\t\t\tif (skinClassStl) {\n\t\t\t\tconst skinClass = skinClassStl.skinClass(this.reg.env.wsp);\n\t\t\t\tthis.contentElt.textContent = \"\";\n\n\t\t\t\t// - title\n\t\t\t\t//if(this.mode=='preview')  this.contentElt.appendChild(<div class=\"maintitle\">{skinClassStl.name}</div>);\n\n\t\t\t\t// - skinClass\n\t\t\t\tif (this.mode == 'preview') this.contentElt.appendChild(<div class=\"subtitle\"><StylerSkinCLass î={{skinCLass: skinClassStl.class, reg: this.reg}}/></div>);\n\n\t\t\t\tconst mainUlPropsElt = this.contentElt.appendChild(<ul/>);\n\n\t\t\t\t// - Props \"Modèle d'appartenance de ce skin styler\"\n\t\t\t\tif (this.mode == 'details') {\n\t\t\t\t\tconst model = skinClassStl.ownerWspTypeStlName;\n\t\t\t\t\tconst modelTxt = `Extension de stylage d'appartenance : ${model}`;\n\t\t\t\t\tif (model) mainUlPropsElt.appendChild(<li>{modelTxt}</li>);\n\t\t\t\t}\n\n\t\t\t} else\n\t\t\t\tmsgElt.setCustomMsg(\"Aucune information disponible\", 'info');\n\t\t} else\n\t\t\tmsgElt.setCustomMsg(\"Aucune information disponible\", 'info');\n\t}\n}\n\nREG.reg.registerSkin('styler-skin-preview', 1, /* language=CSS */ `\n\t:host {\n\t\tfont-size: .8em;\n\t\tcolor: var(--info-color);\n\t}\n\t\n\t.maintitle {\n\t\tcolor: var(--alt2-color);\n\t\tfont-variant: small-caps;\n\t\tfont-weight: bold;\n\t}\n\n\t.subtitle {\n\t\tcolor: var(--alt2-color);\n\t\tfont-weight: bold;\n\t\ttext-align: end;\n\t}\n\n\t.version {\n\t\tfont-style: italic;\n\t}\n\n\t.version::before {\n\t\tcontent: \"(\";\n\t}\n\n\t.version::after {\n\t\tcontent: \") :\";\n\t}\n\n\t.info {\n\t\tfont-style: italic;\n\t}\n\n\t.props > ul > li {\n\t\tmargin-block-start: .5rem;\n\t}\n\n\tul {\n\t\tmargin-block-start: 0;\n\t\tpadding-inline-start: 0em;\n\t\tlist-style-type: none;\n\t}\n\n\tul > * > ul {\n\t\tpadding-inline-start: 1.5rem;\n\t\tlist-style-type: \"- \";\n\t}\n\n`);\n\ncustomElements.define('styler-skin-preview', SkinClassStlPreview);\n"]}