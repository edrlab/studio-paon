{"version":3,"sources":["/@back@/edit/wed/wedlets/box/boxWebFrag.tsx"],"names":["AgEltBoxSelection","EWedletEditMode","EWedletEditModeLabel","WEDLET","DOM","JSX","LANG","REG","AgEltBoxInputAnnotable","removeAnnots","DOMSH","Action","POPUP","BarActions","BoxWebFrag","HTMLElement","[object Object]","tpl","wedlet","this","disabled","isWritableWedlet","wedMgr","reg","sr","attachShadow","SHADOWDOM_INIT","installSkins","localName","appendChild","createElement","î","actionContext","actions","getList","uiContext","disableFullOverlay","previewFrame","elt","eraseFrag","xml","vNode","firstChild","ser","nextSibling","isVirtual","insertDatasFromDisplay","docHolder","newBatch","setText","wedAnchor","doBatch","deleteSequence","mode","write","setAttr","val","xhtmlValue","contentDocument","updateFrameBody","onload","bind","body","innerHTML","dom","parseDomValid","textContent","ownerDocument","importNode","documentElement","from","chars","msg","refreshBindValue","stringInsert","len","stringDelete","selMode","registerSkin","window","customElements","define","BoxWebFragCopy","super","_label","_description","ctx","ev","showNotifInfo","navigator","clipboard","writeText","e","showNotifForbidden","BoxWebFragPaste","isEnabled","ct","readText","doc","setNewFrag","BoxWebFragErase","addAction","action","addToList","getId"],"mappings":"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","sourcesContent":["import {AgEltBoxSelection, IEltBoxSelection} from \"back/edit/wed/features/boxSel\";\nimport {EWedletEditMode, EWedletEditModeLabel, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IJmlNode} from \"lib/commons/xml/jml\";\nimport {IXmlMsg} from \"lib/edit/ot/xmlHouse\";\nimport {LANG} from \"lib/commons/lang\";\nimport {REG} from \"lib/commons/registry\";\nimport {AgEltBoxInputAnnotable, removeAnnots} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {Action, IAction} from \"lib/commons/actions\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\n\n/** box-web-frag pour l'affichage du fragment avec les fonctions de copier / coller / effacer. */\nclass BoxWebFrag extends HTMLElement implements IEltBoxSelection {\n\n\twedlet: IWedlet;\n\n\tdisabled: boolean;\n\n\txhtmlValue: string;\n\n\tpreviewFrame: HTMLIFrameElement;\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet;\n\t\tthis.disabled = !WEDLET.isWritableWedlet(wedlet);\n\t\tconst wedMgr = wedlet.wedMgr;\n\t\tconst reg = wedMgr.reg;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tWEDLET.installSkins(tpl, sr, wedlet, this.localName);\n\n\t\tsr.appendChild(<BarActions î={{\n\t\t\treg,\n\t\t\tactionContext: this,\n\t\t\tactions: reg.getList<IAction<BoxWebFrag>>(\"wed:BoxWebFrag:actions\"),\n\t\t\tuiContext: 'dialog',\n\t\t\tdisableFullOverlay: true\n\t\t} as OBarActionsInit<BoxWebFrag>}/>);\n\t\tthis.previewFrame = sr.appendChild(<iframe/>) as HTMLIFrameElement;\n\t}\n\n\tsetNewFrag(elt: Element) {\n\t\tif (!elt) return this.eraseFrag();\n\t\tconst wedlet = this.wedlet;\n\t\tif (!WEDLET.isWritableWedlet(wedlet)) return;\n\t\tlet xml = \"\";\n\t\tlet vNode = elt.firstChild;\n\t\twhile(vNode) {\n\t\t\txml += DOM.ser(vNode, false);\n\t\t\tvNode = vNode.nextSibling;\n\t\t}\n\t\t//console.log(\"setNewFrag::::\", xml);\n\t\tif (wedlet.isVirtual()) {\n\t\t\tWEDLET.insertDatasFromDisplay(wedlet, null, xml);\n\t\t} else {\n\t\t\twedlet.wedMgr.docHolder.newBatch().setText(this.wedlet.wedAnchor, xml).doBatch();\n\t\t}\n\t}\n\n\teraseFrag() {\n\t\tconst wedlet = this.wedlet;\n\t\tif (wedlet.isVirtual() || !WEDLET.isWritableWedlet(wedlet)) return;\n\t\twedlet.wedMgr.docHolder.newBatch().deleteSequence(this.wedlet.wedAnchor, 1).doBatch();\n\t}\n\n\tsetEditMode(mode: EWedletEditMode) {\n\t\tthis.disabled = mode !== EWedletEditMode.write;\n\t\tDOM.setAttr(this, \"edit-mode\", EWedletEditModeLabel[mode]);\n\t}\n\n\trefreshBindValue(val: IJmlNode) {\n\t\tthis.xhtmlValue = val as string;\n\t\tif (this.wedlet.isVirtual()) removeAnnots(this);\n\t\tif (this.previewFrame.contentDocument) {\n\t\t\tthis.updateFrameBody();\n\t\t} else {\n\t\t\tthis.previewFrame.onload = this.updateFrameBody.bind(this);\n\t\t}\n\t}\n\n\tprivate updateFrameBody() {\n\t\tthis.previewFrame.onload = null;\n\t\tconst body = this.previewFrame.contentDocument.body;\n\t\tif (!this.xhtmlValue) {\n\t\t\tbody.innerHTML = `<div style=\"font-style: italic; color: gray; text-align: center; margin: 1em; font-family: sans-serif;\">Fragment HTML vide</div>`;\n\t\t} else {\n\t\t\tconst dom = DOM.parseDomValid(this.xhtmlValue);\n\t\t\tif (!dom) {\n\t\t\t\tbody.innerHTML = `<div style=\"font-style: italic; color:red; text-align: center; margin: 1em; font-family: sans-serif;\">Fragment HTML invalide</div>`;\n\t\t\t\tbody.appendChild(<pre>{this.xhtmlValue}</pre>);\n\t\t\t} else {\n\t\t\t\tbody.textContent = null;\n\t\t\t\tbody.appendChild(body.ownerDocument.importNode(dom.documentElement, true));\n\t\t\t}\n\t\t}\n\t}\n\n\tinsertChars(from: number, chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringInsert(this.xhtmlValue, from, chars));\n\t}\n\n\tdeleteChars(from: number, len: number, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringDelete(this.xhtmlValue, from, len));\n\t}\n\n\treplaceChars(chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(chars);\n\t}\n\n\tisEmpty(): boolean {return !this.xhtmlValue}\n}\n\nAgEltBoxSelection(AgEltBoxInputAnnotable(BoxWebFrag), {selMode: \"box\"});\n\nREG.reg.registerSkin('box-web-frag', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-height: min-content;\n\t\tmin-width: 5em;\n\t\tflex-direction: column;\n\t\tborder: 1px solid var(--border-color);\n\t\tmargin: 0;\n\t}\n\n\t:host(:focus) {\n\t\toutline: var(--edit-input-focus);\n\t}\n\n\tc-bar-actions {\n\t\tborder-bottom: 1px solid var(--border-color);\n\t}\n\n\tiframe {\n\t\twidth: 100%;\n\t\tmin-height: 400px;\n\t\tborder: none;\n\t}\n`);\n\nwindow.customElements.define(\"box-web-frag\", BoxWebFrag);\n\n\nclass BoxWebFragCopy extends Action<BoxWebFrag> {\n\tconstructor() {\n\t\tsuper('fragCopy');\n\t\tthis._label = \"Copier\";\n\t\tthis._description = \"Copier le fragment HTML dans le presse-papier\";\n\t}\n\n\tasync execute(ctx: BoxWebFrag, ev?: Event) {\n\t\tif (!ctx.xhtmlValue) {\n\t\t\tPOPUP.showNotifInfo(\"Ce fragment est vide\", ctx);\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tawait navigator.clipboard.writeText(ctx.xhtmlValue);\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifForbidden(\"Copie dans le presse-papier impossible. Vérifiez dans votre navigateur que vous avez autorisé ce site à accéder au presse-papier.\", ctx);\n\t\t}\n\t}\n}\n\n\nclass BoxWebFragPaste extends Action<BoxWebFrag> {\n\n\tconstructor() {\n\t\tsuper('fragPaste');\n\t\tthis._label = \"Coller\";\n\t\tthis._description = \"Coller le fragment HTML\";\n\t}\n\n\tisEnabled(ctx: BoxWebFrag): boolean {\n\t\tif (ctx.disabled) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: BoxWebFrag, ev?: Event) {\n\t\tlet ct: string;\n\t\ttry {\n\t\t\tct = await navigator.clipboard.readText();\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifForbidden(\"Impossible de lire dans le presse-papier. Vérifiez dans votre navigateur que vous avez autorisé ce site à accéder au presse-papier.\", ctx);\n\t\t\treturn;\n\t\t}\n\n\t\tconst doc = ct ? DOM.parseDomValid(`<body>${ct}</body>`, null, \"text/html\") : null;\n\t\tif (!doc) {\n\t\t\t//XXX tenter en xhtml ?\n\t\t\tPOPUP.showNotifInfo(\"Aucun contenu HTML n'a pu être reconnu\", ctx);\n\t\t\treturn;\n\t\t}\n\t\tctx.setNewFrag(doc.body);\n\t}\n}\n\nclass BoxWebFragErase extends Action<BoxWebFrag> {\n\tconstructor() {\n\t\tsuper('fragErase');\n\t\tthis._label = \"Effacer\";\n\t\tthis._description = \"Effacer le fragment HTML\";\n\t}\n\n\tisEnabled(ctx: BoxWebFrag): boolean {\n\t\tif (ctx.disabled) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\texecute(ctx: BoxWebFrag, ev?: Event) {\n\t\tctx.eraseFrag();\n\t}\n}\n\nfunction addAction(action: Action<BoxWebFrag>) {\n\tREG.reg.addToList(\"wed:BoxWebFrag:actions\", action.getId(), 1, action);\n}\n\naddAction(new BoxWebFragPaste());\naddAction(new BoxWebFragCopy());\naddAction(new BoxWebFragErase());\n"]}