{"version":3,"sources":["/@back@/wsp/views/spaceTree.tsx"],"names":["BASIS","ActionBtn","EGridDropPos","Grid","POPUP","EFolderState","GridColTreeDef","GridDataHolderJsonTree","CopyToSrc","CreateItem","CreateSpace","DuplicateSrc","FocusItemOrSpace","ImportItemsToSrc","MoveToSrc","RenameSrc","SrcAction","WriteMainStreamToSrc","ACTION","Action","LANG","REG","BaseAreaViewAsync","DOM","JSX","DOMSH","InfoCurrentItem","InfoFocusItem","InfoHighlighItemSgn","InfoReqCurrentItem","InfoSelectUris","ITEM","ESrcSt","SRC","WSP","EItemTypeFamily","CellBuilderSrcIconCodeTitle","redrawSrcLine","EWspChangesEvts","TASK","SearchItems","WspAction","SpaceTree","[object Object]","this","shortDescs","emitter","grid","me","currentDatas","dataHolder","uriFilter","search","value","srcUri","openIt","modeSearch","datasSearch","fetchSrcUri","datas","openToTargets","rowKey","findRowKeyBySrcUri","setSelectedRows","getOffset","openFolderAsync","srcUris","fetchSrcUris","concat","map","filter","ensureRowVisible","init","super","_initialize","wsp","reg","env","place","newPlaceWsp","uriRoot","showRoot","infoBroker","itemHandlingReact","emptyTree","_initSpaceTreeData","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","hideSearch","_initSearchUi","showTitleLive","showTitle","colDefs","primaryCol","setDefaultSort","setFlex","setMinWidth","setSortable","setRowDropMgr","rowDropMgr","setCellBuilder","CellBuilderSpaceTree","secondaryCols","push","appendChild","initialize","selType","columnDefs","hideHeaders","lineDrawer","skinOver","skinScroll","noResizableCol","emptyBody","lastError","undefined","createElement","label","level","defaultAction","defaultActionCtx","setAttrBool","Object","defineProperty","get","actions","actionContext","rect","getSelRect","addEventListener","ev","spaceTree","findHost","getSelectedDatas","matches","dispatchEvent","CustomEvent","detail","bubbles","composed","linesNode","setAttribute","setShortDescTransferToDragSession","resetShortDescTransferToDragSession","accelKeyMgr","handleKeyboardEvent","hasAttribute","mergeLists","extractAttr","split","injectSepByGroup","getPref","focusActionables","buildButtons","initSpTrDataFull","type","placeholder","spellcheck","onchange","onSearchChange","oninput","onkeydown","onSearchKeydown","onfocus","onSearchFocus","onblur","onSearchBlur","shadowRoot","id","ctxMenuActions","assign","create","SpaceTreeDataFull","srcFilter","callbackSearching","hideItemFolderContent","connectedCallback","_highlightSgn","_assigned","req","dispatchInfo","setCurrentItem","addConsumer","removeConsumer","info","sgnPattern","assigned","invalidateRows","shortDesc","infoHolders","indexOf","getSrcUriType","gotoModeTree","selectSrcUri","then","focus","setTimeout","selectSrcUris","handled","_currentSrcUri","row","line","length","currentItem","request","updateParams","fetchSearchStart","gotoModeSearch","key","countRows","stopImmediatePropagation","preventDefault","_initDataSearch","classList","toggle","SpaceTreeDataSearchLive","fieldsFilter","initSpTrDataLive","closed","closePlace","state","_searchingMsg","remove","insertBefore","nextSibling","src","srcSt","extractSpaceUri","itModel","wspMetaUi","getItemType","isFamily","folder","undef","other","file","extractUriParent","extractFolderUri","registerSkin","customElements","define","SpaceTreeDataBase","excludeTildeRootUriExcept","data","startsWith","findIndex","u","subFilter","setNaturalOrder","a","b","srcUriItemsSortFn","lastAncestor","isSubUriOrEqual","isSubUri","URI_ROOT","_datas","offset","nextEnd","children","ch","previous","uriParent","substring","parent","find","fields","sequentialReq","DEBUG","console","log","roots","findRootsToFetchOrOpenAnc","_openToTargets","root","targets","Promise","all","_fetchRootDatas","_refetchTree","onSearching","fetchShortDescTree","_grid","rootSrcFields","setDatas","openFolder","e","scrollTopUri","scrollTopOffset","getVisibleOffsetStart","getRowKey","fetchShortDescSubTree","forEach","memOpenStates","defaultOpenState","newRowKey","block","behavior","folderSt","setFolderSt","opening","isRowkeyAlive","setChilrenTo","showNotifError","closeFolder","chList","_killRowData","setCh","r","i","target","newRoot","k","getRowKeyParent","fetchShortDesc","srcId","mustHideNode","deleteRowKey","replaceRowKey","isRowSelected","parentRowKey","findInChildren","_insertSrcUri","getRowKeyFolderState","opened","insertRowKey","showDeletedDrfEntries","none","drfState","msg","nodeFound","_initRowData","eventsMgr","on","from","code","wspCd","isSpecialUri","fetchRootDatas","node","parentUri","shouldHideEntry","insertSrcUri","anc","chUri","isRowKeyShown","resetAsyncChildren","s","itSt","refreshRowKey","listTargets","oldLen","refetchTree","_a","wspDefProps","drfRefWsp","SpaceTreeDataSearch","_afterEndFolder","connectToGrid","listenGridLimits","maxStartSearch","maxNextSearch","defaultOpened","resetUi","_nextSearch","stamp","getStamp","isSameStamp","_fetchSearchStart","_afterSrcUri","count","fetchSearchNext","_fetchSearchNext","folderUri","fetchSearchReplaceChildren","_fetchSearchReplaceChildren","guard","searching","reachedLimitsCb","start","unlistenGridLimits","res","fetchSearch","getStartReq","resetAfterSrcUri","insertInTreeFromSearch","columns","results","max","getNextReq","getReplaceFolderReq","hasMore","last","lastP","idx","lastIndexOf","toDel","updateDatasInTree","keys","values","rootDatas","updateGrid","refreshFreeze","lastSrcUri","v","insertInTree","refresh","toInsert","inRootDatas","offsetInsert","countInsert","prevSlash","uriToSplit","isAirItem","isExtItem","nextSlash","index","newFolder","findInsertPoint","splice","getOffsetInChildren","updateSubRowsShown","defaultClosed","rowCountChanged","initSpTrDataSearch","SpaceTreeReqUri","initReq","getShortDescDef","isSrcUriMustBeIncluded","insertSrcUriInTree","text","slash","space","RegExp","escape4RegexpFuzzy","mainCrit","excludeTildeRoot","includeDrfErased","_req","asXml","Array","isArray","f","dataKey","dataKeys","toDom","_itemsExp","querySelector","_srcUriExp","nextElementSibling","_selectReq","firstElementChild","params","newTxt","toLowerCase","_textToSearch","_lastRegexpFetch","buildSrcUriPattern","source","toString","removeAttribute","ser","afterSrcUri","path","test","dataTransfer","dropEffect","rowDatas","srcFields","srcUriType","hasPermission","srcRoles","srcRi","transfer","getShortDescsTransferFromDragSession","targetSrcType","canCreate","ctx","act","SpaceTreePaste","getProxiedAction","isCopyOverMove","isAvailable","isMove","over","pos","extractDatasNow","executeIfAvailable","showNotifInfo","SpaceTreeFocusItem","getLabel","toggleFolder","wspServer","wspsLive","reloadHouse","buildWspRef","execute","SpaceTreeCreateItem","sd","_b","srcRef","uiRoot","SpaceTreeCreateSpace","getParentSpace","SpaceTreeRename","newUris","openUri","SpaceTreeDuplicate","SpaceTreeCopyTo","SpaceTreeImportTo","newSrcs","SpaceTreeMoveTo","uri","_label","_group","preferMove","bestType","findBestType","getType","spaceUri","clipboardItem","svc","getSvc","types","bestCtType","bestScore","itemType","getItemTypes","t","score","matchType","promiseBody","uiCtx","setLabel","requireSrcEnabledPerm","setExecute","async","newSrc","importSrc","defaultUriParent","isImport","server","universe","config","universeUrl","url","setDescription","setEnabled","isTask","targetUri","targetSrcFields","extractFolderSrcFields","targetWsp","svcImportInterWsp","newSrcUris","opts","refExtItemAcceptable","uriParentFrozen","allowReplace","repeatedImports","result","setTarget","makeTargetFilter","isCtxInitialized","isEnabled","uiContext","buttonNode","pendingBtns","pending","getShortDescsTransferFromClipboard","srcs","showNotifWarning","btn","action","updateButton","newCtx","resetAction","SpaceTreePasteMove","ctrl","atLeastOne","initButtonNode","sourceCtx","targetCtx","disabled","SpaceTreeCollapseAllAction","getDatas","isVisible","closeAllFolders","_srcFields","span","_buildContent","redrawIcon","setTextContent","_getValue","_getTitle"],"mappings":"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","sourcesContent":["import {IActionable, IContextMenuActions, IContextMenuActionsPointer, IFocusActionables} from \"back/commons/actionables\";\nimport {BASIS} from \"back/commons/basis\";\nimport {ActionBtn} from \"back/commons/widgets/buttons\";\nimport {EGridDropPos, GridColDef, IGrid, IGridDataRow, IGridLineDrawer, IGridRowDropMgr} from \"back/commons/widgets/grid-core\";\nimport {GridDataHolderJsonArray, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {Grid} from \"back/commons/widgets/grid-tags\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {EFolderState, GridColTreeDef, GridDataHolderJsonTree} from \"back/commons/widgets/tree\";\nimport {CopyToSrc, CreateItem, CreateSpace, DuplicateSrc, FocusItemOrSpace, IMoveAction, ImportItemsToSrc, MoveToSrc, RenameSrc, SrcAction, WriteMainStreamToSrc} from \"back/wsp/actions/srcActions\";\nimport {AccelKeyMgr, ACTION, Action, EButtonUiContext, IAccelKeyMgrPointer, IAction} from \"lib/commons/actions\";\nimport {IInfo, IInfoBroker, IInfoConsumer} from \"lib/commons/infos\";\nimport {LANG} from \"lib/commons/lang\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {BaseAreaViewAsync, OBaseAreaViewInit} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {IImportInterWspSvc, IImportInWspSvc, InfoCurrentItem, InfoFocusItem, InfoHighlighItemSgn, InfoReqCurrentItem, InfoSelectUris, IShortDescCtx, IShortDescsTransfer, ITEM, OImportInterWspOptions} from \"lib/wsp/item\";\nimport {ESrcField, ESrcSt, JSrcFields, JSrcFieldsTree, SRC, srcRef, srcUri} from \"lib/wsp/src\";\nimport {IWspUiEnv, JWspUriChangeMsg, Wsp, WSP} from \"lib/wsp/wsp\";\nimport {EItemTypeFamily} from \"lib/wsp/wspMetaUi\";\nimport {CellBuilderSrcIconCodeTitle, JSrcFieldsPointer, redrawSrcLine} from \"back/wsp/widgets/srcGridColumns\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {TASK} from \"lib/wsp/lcTask\";\nimport {SearchItems} from \"lib/wsp/search\";\nimport {WspAction} from \"back/wsp/actions/wspActions\";\n\n/**\n * Widget SpaceTree : arbre des espaces et items d'un atelier avec filtre.\n *\n * TODO pour avoir d'autres colonnes de tri :\n * - désactiver les autres modes de tri lorsqu'on est en mode \"search\" et que les résultats sont encore incomplets,\n *   les réactiver une fois la recherche complète (ie SpaceTreeDataFiltered._afterSrcUri null).\n * - cf plus bas \"FIXME Si ajout colonnes avec autres critères de tri\"\n */\nexport interface SpaceTree extends BaseAreaViewAsync<IRegPointer<IWspUiEnv>> {\n\tinitialize(init: OSpaceTreeInit): this\n}\n\nexport interface OSpaceTreeInit extends OBaseAreaViewInit<IRegPointer<IWspUiEnv>> {\n\n\treg?: IReg<IWspUiEnv>\n\n\t/** Racine de l'arbre. '' par défaut. */\n\turiRoot?: string;\n\n\t/** Affiche la racine de l'arbre (si uriRoot renseigné). */\n\tshowRoot?: boolean;\n\n\t/** Actions associées aux items sélectionnés (toolbar et menu contextuel). */\n\tactions?: IAction<IShortDescCtx>[];\n\n\t/** Racourcis claviers à capter sur la sel courante. */\n\taccelKeyMgr?: AccelKeyMgr<ISpaceTreeCtx>;\n\n\t/** Masque le filtre textuel. */\n\thideSearch?: boolean\n\n\t/** Affiche le titre des items. */\n\tshowTitle?: boolean\n\n\t/** Redéfinition de la colonne primaire. */\n\tprimaryCol?: GridColTreeDef\n\n\t/** Colonnes secondaires à ajouter du grid. */\n\tsecondaryCols?: GridColDef[]\n\n\t/** Réagira aux infos issues de ce broker (item courant, highlight d'items selon signature) */\n\titemHandlingReact?: IInfoBroker\n\n\t/** Action excutée au double-click ou sur les frappes entrée ou espace. */\n\tdefaultAction?: IAction<ISpaceTreeCtx>\n\n\t/** Restreint l'affichage aux noeuds respectant ce filtre. */\n\tsrcFilter?: (data: JSrcFields) => boolean;\n\n\t/** Ne permet pas l'ouverture d'un item de type dossier. */\n\thideItemFolderContent?: boolean\n\n\t/** Contenu affiché si arbre vide. */\n\temptyTree?: (spaceTree: SpaceTree) => Node\n}\n\n/**\n * Contexte pour les actions du SpaceTree.\n * Abstraction de SpaceTree pour être utilisé en contexte d'actions wrappées/surchagées.\n */\nexport interface ISpaceTreeCtx extends IShortDescCtx {\n\tme: SpaceTree\n}\n\nexport class SpaceTree extends BaseAreaViewAsync<IRegPointer<IWspUiEnv>> implements IInfoConsumer, IGridLineDrawer, ISpaceTreeCtx, IFocusActionables<IShortDescCtx>, IContextMenuActionsPointer<IShortDescCtx>, IAccelKeyMgrPointer<IShortDescCtx> {\n\treg: IReg<IWspUiEnv>;\n\twsp: Wsp;\n\tplace: WspsLivePlace;\n\n\turiRoot: string;\n\tshowRoot?: boolean;\n\n\tinfoBroker: IInfoBroker;\n\n\taccelKeyMgr?: AccelKeyMgr<ISpaceTreeCtx>;\n\n\t/** Sélection en cours */\n\tshortDescs: JSrcFieldsTree[] = [];\n\n\tget emitter() {return this.grid} //on pointe le noeud focusable.\n\tget me() {return this} // Astuce pour retrouver le SpaceTree quand l'actionContext a été surchargé.\n\n\t/** boutons à afficher dans la focusToolbar. */\n\tfocusActionables?: IActionable<IShortDescCtx>[];\n\n\t/** Actions associées aux items sélectionnés (mémoire pour le menuContextuel). */\n\tactions?: IAction<IShortDescCtx>[];\n\n\temptyTree: (spaceTree: SpaceTree) => Node;\n\n\tgrid: Grid;\n\tsearch: HTMLInputElement;\n\tshowTitle: boolean;\n\tshowTitleLive: boolean;\n\n\tdatas: SpaceTreeDataFull;\n\tdatasSearch: SpaceTreeDataSearchLive;\n\n\tget currentDatas(): SpaceTreeDataBase {return this.grid.dataHolder as SpaceTreeDataBase}\n\n\t/** Filtre sur l'uri, utilisé par SpaceTreeReqUri en mode search. */\n\tget uriFilter(): string {return this.search ? this.search.value : null}\n\n\tasync selectSrcUri(srcUri: srcUri, openIt?: boolean): Promise<boolean> {\n\t\tif (this.modeSearch) {\n\t\t\tif (!await this.datasSearch.fetchSrcUri(srcUri)) return false;\n\t\t} else {\n\t\t\tawait this.datas.openToTargets([srcUri]);\n\t\t}\n\t\tconst rowKey = this.currentDatas.findRowKeyBySrcUri(srcUri);\n\t\tif (rowKey) {\n\t\t\tthis.grid.setSelectedRows(this.currentDatas.getOffset(rowKey));\n\t\t\tif (openIt) return this.currentDatas.openFolderAsync(rowKey);\n\t\t}\n\t\treturn rowKey != null;\n\t}\n\n\tasync selectSrcUris(srcUris: srcUri[]): Promise<void> {\n\t\tif (this.modeSearch) {\n\t\t\tawait this.datasSearch.fetchSrcUris(srcUris);\n\t\t} else {\n\t\t\tawait this.datas.openToTargets(srcUris.concat());\n\t\t}\n\t\tthis.grid.setSelectedRows(\n\t\t\tsrcUris.map((srcUri) => this.currentDatas.findRowKeyBySrcUri(srcUri))\n\t\t\t\t.filter((rowKey) => rowKey != null)\n\t\t\t\t.map((rowKey) => this.currentDatas.getOffset(rowKey))\n\t\t);\n\t}\n\n\tasync ensureRowVisible(srcUri: srcUri): Promise<boolean> {\n\t\tif (this.modeSearch) {\n\t\t\tif (!await this.datasSearch.fetchSrcUri(srcUri)) return false;\n\t\t} else {\n\t\t\tawait this.datas.openToTargets([srcUri]);\n\t\t}\n\t\tconst rowKey = this.currentDatas.findRowKeyBySrcUri(srcUri);\n\t\tif (rowKey) this.grid.ensureRowVisible(this.currentDatas.getOffset(rowKey));\n\t\treturn rowKey != null;\n\t}\n\n\tprotected async _initialize(init: OSpaceTreeInit): Promise<void> {\n\t\tsuper._initialize(init); //init : reg, area, areaContext\n\t\tthis.wsp = this.reg.env.wsp;\n\t\tthis.place = this.wsp.newPlaceWsp(); //TODO A suppr utiliser le IWspUiEnv.place ?\n\t\tthis.uriRoot = init.uriRoot || \"\";\n\t\tthis.showRoot = init.showRoot;\n\t\tthis.infoBroker = init.itemHandlingReact;\n\t\tthis.emptyTree = init.emptyTree;\n\n\t\tthis._initSpaceTreeData(init);\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tif (!init.hideSearch) this._initSearchUi();\n\t\tthis.showTitleLive = this.showTitle = init.showTitle;\n\n\t\tconst colDefs: GridColDef[] = [init.primaryCol || new GridColTreeDef('srcTree')\n\t\t\t.setDefaultSort(1, 'ascendant')\n\t\t\t.setFlex('1rem', 1, 1).setMinWidth('55px').setSortable(true)\n\t\t\t.setRowDropMgr(rowDropMgr)\n\t\t\t.setCellBuilder(new CellBuilderSpaceTree(this))];\n\t\tif (init.secondaryCols) colDefs.push(...init.secondaryCols);\n\n\t\tthis.grid = sr.appendChild(new Grid().initialize({\n\t\t\tselType: 'multi',\n\t\t\tcolumnDefs: colDefs,\n\t\t\tdataHolder: this.datas,\n\t\t\thideHeaders: true,\n\t\t\tlineDrawer: this.infoBroker ? this : null,\n\t\t\tskinOver: 'wsp-space-tree/grid',\n\t\t\tskinScroll: 'scroll/small',\n\t\t\tnoResizableCol: true,\n\t\t\t//autoSelOnFocus: 'first', NON pb pour executer des actions (Créer un item, ...) sur la racine.\n\t\t\temptyBody: (): Node => {\n\t\t\t\tif (this.datas.lastError === undefined) {\n\t\t\t\t\treturn <c-msg label=\"Chargement...\" level=\"info\"/>\n\t\t\t\t} else if (this.datas.lastError === null) {\n\t\t\t\t\tif (this.modeSearch) return <c-msg label=\"Aucun item ne correspond à votre recherche\" level=\"info\"/>\n\t\t\t\t\treturn this.emptyTree ? this.emptyTree(this) : <c-msg label=\"Aucun contenu\" level=\"info\"/>\n\t\t\t\t} else {\n\t\t\t\t\treturn <c-msg label=\"Accès au serveur impossible\" level=\"error\"/>\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultAction: init.defaultAction,\n\t\t\tdefaultActionCtx: this\n\t\t}));\n\n\t\tif (init.secondaryCols) DOM.setAttrBool(this.grid, \"data-has-secondary-cols\", true);\n\n\t\t//Impl IContextMenuActionsPointer<IShortDescCtx> sur le grid\n\t\tObject.defineProperty(this.grid, \"ctxMenuActions\", {\n\t\t\tget: (): IContextMenuActions<IShortDescCtx> | null => {return {actions: this.actions, actionContext: this, rect: this.grid.getSelRect()}}\n\t\t});\n\n\t\tthis.grid.addEventListener('grid-select', function (this: IGrid, ev: Event) {\n\t\t\tconst spaceTree = DOMSH.findHost<SpaceTree>(this);\n\t\t\tspaceTree.shortDescs = (this.dataHolder as GridDataHolderJsonArray<JSrcFieldsTree>).getSelectedDatas();\n\t\t\t//console.log(\"spaceTree.shortDescs::::\", spaceTree.shortDescs);\n\t\t\tif (this.matches(':focus')) this.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: spaceTree, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis.grid.addEventListener('focus', function (this: IGrid, ev: Event) {\n\t\t\tthis.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: DOMSH.findHost(this) as SpaceTree, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis.grid.linesNode.setAttribute(\"draggable\", \"true\");\n\t\tthis.grid.linesNode.addEventListener('dragstart', function (ev: DragEvent) {\n\t\t\t//console.log(ev);\n\t\t\tITEM.setShortDescTransferToDragSession(DOMSH.findHost<SpaceTree>(DOMSH.findHost<IGrid>(this)), ev, 'build');\n\t\t});\n\t\tthis.grid.linesNode.addEventListener('dragend', ITEM.resetShortDescTransferToDragSession);\n\n\t\tif (init.accelKeyMgr) {\n\t\t\tthis.accelKeyMgr = init.accelKeyMgr;\n\t\t\tthis.grid.addEventListener('keydown', (ev: KeyboardEvent) => {\n\t\t\t\tthis.accelKeyMgr.handleKeyboardEvent(ev, this);\n\t\t\t});\n\t\t}\n\n\t\tlet actions = init.actions;\n\t\tif (!actions && this.hasAttribute(\"actions\")) actions = this.reg.mergeLists(...BASIS.extractAttr(this, 'actions').split(' '));\n\t\tif (actions) {\n\t\t\tactions = ACTION.injectSepByGroup(actions, this.reg.getPref(\"groupOrder.wsp.shortDesc\", \"\"), this);\n\t\t\tthis.actions = actions;\n\t\t\tthis.focusActionables = ActionBtn.buildButtons(actions, this, 'bar');\n\t\t}\n\t\tawait this.datas.initSpTrDataFull(this.place);\n\t}\n\n\tprotected _initSearchUi() {\n\t\tthis.search = <input type=\"search\" placeholder=\"Filtrer...\" spellcheck=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t onchange={this.onSearchChange} oninput={this.onSearchChange} onkeydown={this.onSearchKeydown} onfocus={this.onSearchFocus} onblur={this.onSearchBlur}/> as HTMLInputElement;\n\t\tthis.shadowRoot.appendChild(<label id=\"search\">{this.search}</label>);\n\t}\n\n\t/** Menu contextuel relatif à l'atelier (pas à la sel dans le grid). */\n\tget ctxMenuActions() {return {actions: this.actions, actionContext: Object.assign(Object.create(this), {shortDescs: []})}};\n\n\tprotected _initSpaceTreeData(init: OSpaceTreeInit) {\n\t\tthis.datas = new SpaceTreeDataFull(this.reg, this.uriRoot, this.showRoot, init.srcFilter);\n\t\tthis.datas.callbackSearching = this;\n\t\tif (init.hideItemFolderContent) this.datas.hideItemFolderContent = true;\n\t}\n\n\tconnectedCallback() {\n\t\tsuper.connectedCallback();\n\t\tif (this.infoBroker) {\n\t\t\tthis._highlightSgn = null;\n\t\t\tthis._assigned = null;\n\t\t\tconst req = new InfoReqCurrentItem();\n\t\t\tthis.infoBroker.dispatchInfo(req, this);\n\t\t\tthis.setCurrentItem(req.srcUri || null);\n\t\t\tthis.infoBroker.addConsumer(this);\n\t\t}\n\t}\n\n\tdiconnectedCallback() {\n\t\tif (this.infoBroker) this.infoBroker.removeConsumer(this);\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (info instanceof InfoCurrentItem) {\n\t\t\tthis.setCurrentItem(info.srcUri);\n\t\t} else if (info instanceof InfoHighlighItemSgn) {\n\t\t\tthis._highlightSgn = info.sgnPattern;\n\t\t\tthis._assigned = info.assigned;\n\t\t\tthis.grid.invalidateRows();\n\t\t} else if (info instanceof InfoFocusItem && info.shortDesc && info.infoHolders.indexOf(this.grid) < 0) {\n\t\t\t//Si on a une demande extérieure de focuser un espace, on prend la main\n\t\t\tif (ITEM.getSrcUriType(info.shortDesc.srcUri) === \"space\") {\n\t\t\t\tif (this.modeSearch) this.gotoModeTree();\n\t\t\t\tthis.selectSrcUri(info.shortDesc.srcUri, true).then(() => {\n\t\t\t\t\tthis.grid.focus();\n\t\t\t\t\tthis.ensureRowVisible(info.shortDesc.srcUri);\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (info instanceof InfoSelectUris) {\n\t\t\tif (this.modeSearch) this.gotoModeTree();\n\t\t\tsetTimeout(() => {\n\t\t\t\t//timeout car les events websockets pourraient ne pas encore être revenus.\n\t\t\t\tthis.selectSrcUris(info.srcUris).then(() => {\n\t\t\t\t\tthis.grid.focus();\n\t\t\t\t\tthis.ensureRowVisible(info.srcUris[0]);\n\t\t\t\t});\n\t\t\t}, 200);\n\t\t\tinfo.handled = true;\n\t\t}\n\t}\n\n\tsetCurrentItem(srcUri: srcUri | null) {\n\t\tthis._currentSrcUri = srcUri;\n\t\tthis.grid.invalidateRows();\n\t\tif (this._currentSrcUri) this.ensureRowVisible(this._currentSrcUri);\n\t}\n\n\t/** */\n\tredrawLine(row: IGridDataRow, line: HTMLElement): void {\n\t\tredrawSrcLine(this.wsp, row.rowKey, line, this._currentSrcUri, this._highlightSgn, this._assigned);\n\t}\n\n\t_currentSrcUri: srcUri;\n\tprotected _highlightSgn: RegExp;\n\tprotected _assigned: srcRef;\n\n\t/** Mode actuellement affiché. */\n\tget modeSearch(): boolean {return this.grid.dataHolder === this.datasSearch};\n\n\tprotected onSearchChange(this: HTMLInputElement, ev: Event) {\n\t\tconst me = DOMSH.findHost<SpaceTree>(this);\n\t\tif (me.modeSearch) {\n\t\t\tif (me.search.value.length === 0) {\n\t\t\t\t//Préservation du currentItem\n\t\t\t\tme.gotoModeTree();\n\t\t\t\tconst currentItem = new InfoReqCurrentItem();\n\t\t\t\tme.infoBroker.dispatchInfo(currentItem, me);\n\t\t\t\tif (currentItem.srcUri) me.selectSrcUri(currentItem.srcUri).then(() => {\n\t\t\t\t\tme.ensureRowVisible(currentItem.srcUri);\n\t\t\t\t});\n\t\t\t} else if (me.datasSearch.request.updateParams(me)) {\n\t\t\t\tme.datasSearch.fetchSearchStart();\n\t\t\t}\n\t\t} else {\n\t\t\tif (me.search.value.length > 0) me.gotoModeSearch();\n\t\t}\n\t}\n\n\tonSearchKeydown(this: HTMLInputElement, ev: KeyboardEvent) {\n\t\tif (ev.key === \"ArrowDown\") {\n\t\t\tconst me = DOMSH.findHost<SpaceTree>(this);\n\t\t\tif (me.grid.dataHolder.countRows() > 0) {\n\t\t\t\tme.grid.setSelectedRows(0);\n\t\t\t\tme.grid.focus();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\tev.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\tonSearchFocus(this: HTMLInputElement, ev: UIEvent) {\n\t\tconst me = DOMSH.findHost<SpaceTree>(this);\n\t\tif (me.showTitleLive) {\n\t\t\tme.showTitleLive = false;\n\t\t\tme.grid.invalidateRows();\n\t\t}\n\t}\n\n\tonSearchBlur(this: HTMLInputElement, ev: UIEvent) {\n\t\tconst me = DOMSH.findHost<SpaceTree>(this);\n\t\tif (me.showTitleLive !== me.showTitle) {\n\t\t\tme.showTitleLive = me.showTitle;\n\t\t\tme.grid.invalidateRows();\n\t\t}\n\t}\n\n\tprotected gotoModeSearch() {\n\t\t//if(this.modeSearch) return;\n\t\tif (!this.datasSearch) this._initDataSearch();\n\t\tthis.search.classList.toggle(\"filtered\", true);\n\t\tthis.grid.classList.toggle(\"filtered\", true);\n\t\tthis.grid.dataHolder = this.datasSearch;\n\t\tthis.datasSearch.request.updateParams(this);\n\t\tthis.datasSearch.fetchSearchStart();\n\t}\n\n\tprotected _initDataSearch() {\n\t\tthis.datasSearch = new SpaceTreeDataSearchLive(this.reg, this.uriRoot, this.showRoot, this.datas.fieldsFilter);\n\t\tthis.datasSearch.callbackSearching = this;\n\t\tthis.datasSearch.hideItemFolderContent = this.datas.hideItemFolderContent;\n\t\tthis.datasSearch.initSpTrDataLive(this.place);\n\t}\n\n\tprotected gotoModeTree() {\n\t\t//if(!this.modeSearch) return;\n\t\tthis.search.classList.toggle(\"filtered\", false);\n\t\tthis.grid.classList.toggle(\"filtered\", false);\n\t\tthis.search.value = \"\";\n\t\tthis.grid.dataHolder = this.datas;\n\t}\n\n\tonViewHidden(closed: boolean) {\n\t\tif (closed) this.place.closePlace();\n\t}\n\n\tprotected _searchingMsg: HTMLElement;\n\n\t/** cf SpaceTreeData.callbackSearching. */\n\tonSearching(state: 'searchInit' | 'searchNext' | 'searchInside' | 'searchEnd') {\n\t\t//window.requestIdleCallback(() => { NON ordre d'appel searchInit -> searchEnd pas toujours garanti (Chrome/69 avec debugger).\n\t\tif (this._searchingMsg) {\n\t\t\tthis._searchingMsg.remove();\n\t\t\tthis._searchingMsg = null;\n\t\t}\n\t\tif (state === 'searchInit') {\n\t\t\tthis._searchingMsg = this.shadowRoot.insertBefore(<div id=\"searchInit\">Recherche...</div>, this.grid);\n\t\t} else if (state === 'searchNext') {\n\t\t\tthis._searchingMsg = this.shadowRoot.insertBefore(<div id=\"searchNext\">Recherche suivants...</div>, this.grid.nextSibling);\n\t\t}\n\t}\n\n\t/** Retrouve le 1er noeud de type dossier à partir d'un noeud.*/\n\textractFolderUri(src: JSrcFields): srcUri {\n\t\tif (!src || !src.srcUri || !src.srcSt) return this.uriRoot;\n\t\tif (this.datas.hideItemFolderContent) {\n\t\t\t//Tous les items sont terminaux, on retourne toujours son espace\n\t\t\treturn ITEM.extractSpaceUri(src.srcUri);\n\t\t} else if (!src.itModel || this.wsp.wspMetaUi.getItemType(src.itModel).isFamily(EItemTypeFamily.folder, EItemTypeFamily.undef, EItemTypeFamily.other)) {\n\t\t\treturn src.srcSt === ESrcSt.file ? SRC.extractUriParent(src.srcUri) : src.srcUri;\n\t\t}\n\t\treturn ITEM.extractSpaceUri(src.srcUri);\n\t}\n\n\t/** Retrouve les props du 1er noeud de type dossier à partir d'un noeud (si disponible)*/\n\textractFolderSrcFields(src: JSrcFields): JSrcFields {\n\t\tconst srcUri = this.extractFolderUri(src);\n\t\tif (srcUri)\n\t\t\treturn this.datas.findRowKeyBySrcUri(srcUri);\n\t}\n\n}\n\nREG.reg.registerSkin('wsp-space-tree', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tposition: relative;\n\t}\n\n\t#search {\n\t\tbackground: .1em / 1em no-repeat url(/@skin@/commons/icons/filter.svg) var(--form-search-bgcolor);\n\t\tpadding-inline-start: 1.2em;\n\t\tborder-bottom: 1px solid var(--border-color);\n\t}\n\n\tinput {\n\t\tpadding: 2px;\n\t\tbackground: var(--form-search-bgcolor);\n\t\tcolor: var(--form-color);\n\t\tborder: none;\n\t\twidth: 100%;\n\t\tfont-size: inherit;\n\t}\n\n\t.filtered {\n\t\tbackground: url(/@skin@/commons/icons/filtered.svg) var(--row-bgcolor);\n\t}\n\n\tinput:focus {\n\t\toutline: var(--focus-outline);\n\t}\n\n\tinput::placeholder {\n\t\tcolor: var(--fade-color);\n\t\tletter-spacing: 2px;\n\t\tfont-size: .8em;\n\t\tfont-style: italic;\n\t}\n\n\tinput:focus::placeholder {\n\t\tcolor: transparent;\n\t}\n\n\tc-grid {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n\n\t#searchInit, #searchNext {\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t\tbackground-color: var(--bgcolor);\n\t\tcolor: var(--color);\n\t\talign-self: center;\n\t\tpadding: .5em;\n\t\tborder: 1px solid var(--border-color);\n\t\tborder-radius: 1em;\n\t}\n\n\t#searchInit {\n\t\ttop: 2em;\n\t}\n\n\t#searchNext {\n\t\tbottom: 1em;\n\t}\n`);\n\nREG.reg.registerSkin('wsp-space-tree/grid', 1, /* language=CSS */ `\n\t.highlight {\n\t\tbackground-color: var(--row-highlight-bgcolor);\n\t}\n\n\t.assigned {\n\t\tbackground-color: var(--row-assigned-bgcolor);\n\t}\n\n\t/** Réservation de la largeur de background-image pour qu'il n'y ait pas de superposition avec les secondary-cols */\n\t:host([data-has-secondary-cols]) .line {\n\t\tpadding-inline-end: .8rem;\n\t}\n\n\t.current {\n\t\tbackground-position: right;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-image: var(--row-current-img-end);\n\t\tbackground-color: var(--row-current-bgcolor);\n\t}\n\n\t.icon {\n\t\tfilter: var(--filter);\n\t}\n`);\n\ncustomElements.define('wsp-space-tree', SpaceTree);\n\n/**\n * Gestionnaire des données du grid (arbre json des noeuds du wsp).\n */\nexport abstract class SpaceTreeDataBase extends GridDataHolderJsonTree<JSrcFieldsTree> {\n\n\twsp: Wsp;\n\n\t/** Fields de la racine de l'arbre (root de l'atelier). Renseigné uniquement si showRoot = false. */\n\trootSrcFields: JSrcFields;\n\n\thideItemFolderContent: boolean;\n\n\t/** Force l'affichage des entrées supprimées pour les ateliers draft. */\n\tshowDeletedDrfEntries: boolean;\n\n\t/** Callback pour retour graphique d'une recherche en cours. */\n\tcallbackSearching: { onSearching: (state: 'searchInit' | 'searchNext' | 'searchInside' | 'searchEnd') => void };\n\n\tlastError: undefined /* initing*/ | null /* pas d'erreur */ | any;\n\n\t/** Séquentilisation des requetes pour éviter des races conditions. */\n\tsequentialReq: Promise<any>;\n\n\t/**\n\t * @param excludeTildeRootUri\n\t * \tsi [] (valeur par défaut), toutes les uri \"/~\" sont exclues, y compris airItems et extItems.\n\t *  si null aucune exclusion n'est ajoutée par rapport à fieldsFilter.\n\t *  si [\"/~air/\", \"/~ext/\"] les uris \"/~\" sont exclues sauf les airItems et extItems.\n\t */\n\tconstructor(public readonly reg: IReg<IWspUiEnv>, public uriRoot = '', public showRoot: boolean = false, public fieldsFilter?: (data: JSrcFields) => boolean, excludeTildeRootUriExcept: string[] | null = []) {\n\t\tsuper('ch');\n\t\tthis.wsp = reg.env.wsp;\n\t\tif (excludeTildeRootUriExcept) {\n\t\t\tconst filter = excludeTildeRootUriExcept.length === 0\n\t\t\t\t? (data: JSrcFields) => !data.srcUri.startsWith(\"/~\")\n\t\t\t\t: (data: JSrcFields) => !data.srcUri.startsWith(\"/~\") || excludeTildeRootUriExcept.findIndex((u) => data.srcUri.startsWith(u)) >= 0\n\t\t\tif (this.fieldsFilter) {\n\t\t\t\tconst subFilter = this.fieldsFilter;\n\t\t\t\tthis.fieldsFilter = (data: JSrcFields) => filter(data) && subFilter(data);\n\t\t\t} else {\n\t\t\t\tthis.fieldsFilter = filter;\n\t\t\t}\n\t\t}\n\t\tthis.setNaturalOrder((a: JSrcFieldsTree, b: JSrcFieldsTree) => this.wsp.srcUriItemsSortFn(a.srcUri, b.srcUri));\n\t}\n\n\tfindRowKeyBySrcUri(srcUri: srcUri, lastAncestor?: boolean): JSrcFieldsTree {\n\t\tif (this.showRoot ? !SRC.isSubUriOrEqual(this.uriRoot, srcUri) : !SRC.isSubUri(this.uriRoot, srcUri)) return null;\n\t\tif (this.showRoot && srcUri === SRC.URI_ROOT) return this._datas[0];\n\t\tlet offset = this.uriRoot.length + 1;\n\t\tlet nextEnd = srcUri.indexOf('/', offset);\n\t\tlet children = this.showRoot ? this._datas[0].ch : this._datas;\n\t\tif (!children) return;\n\t\tlet previous: JSrcFieldsTree = null;\n\t\twhile (nextEnd > 0) {\n\t\t\t//On n'est pas sur le dernier fragment\n\t\t\tconst uriParent = srcUri.substring(0, nextEnd);\n\t\t\tconst parent = children.find((fields: JSrcFieldsTree) => fields.srcUri === uriParent) as any;\n\t\t\tif (!parent) return lastAncestor ? previous : null;\n\t\t\tprevious = parent;\n\t\t\tchildren = this.ch(parent);\n\t\t\tif (!children) return lastAncestor ? parent : null;\n\t\t\toffset = nextEnd + 1;\n\t\t\tnextEnd = srcUri.indexOf('/', offset);\n\t\t}\n\t\t//Dernier fragment de l'uri\n\t\treturn children.find((fields: JSrcFieldsTree) => fields.srcUri === srcUri) as JSrcFieldsTree || (lastAncestor ? previous : null);\n\t}\n\n\tasync openToTargets(srcUris: srcUri[]): Promise<void> {\n\t\twhile (this.sequentialReq) await this.sequentialReq;\n\t\tif (DEBUG) console.log(\"openToTargetsSeq:::start\", srcUris);\n\t\tconst roots = this.findRootsToFetchOrOpenAnc(srcUris);\n\t\ttry {\n\t\t\tif (roots.length === 0) return;\n\t\t\tif (roots.length === 1) return await (this.sequentialReq = this._openToTargets(roots[0].root, roots[0].targets));\n\t\t\tawait (this.sequentialReq = Promise.all(roots.map((root) => this._openToTargets(root.root, root.targets))));\n\t\t} finally {\n\t\t\tthis.sequentialReq = null;\n\t\t\tif (DEBUG) console.log(\"openToTargetsSeq:::end\", roots);\n\t\t}\n\t}\n\n\t/** Construction par défaut du contenu. */\n\tprotected async fetchRootDatas() {\n\t\twhile (this.sequentialReq) await this.sequentialReq;\n\t\ttry {\n\t\t\tawait (this.sequentialReq = this._fetchRootDatas());\n\t\t} finally {\n\t\t\tthis.sequentialReq = null;\n\t\t}\n\t}\n\n\t/** RE-Construction du contenu en tentant d'afficher targets. */\n\tprotected async refetchTree(targets: srcUri[]) {\n\t\twhile (this.sequentialReq) await this.sequentialReq;\n\t\ttry {\n\t\t\tawait (this.sequentialReq = this._refetchTree(targets));\n\t\t} finally {\n\t\t\tthis.sequentialReq = null;\n\t\t}\n\t}\n\n\n\t/** Ne pas utiliser directement, cf fetchRootDatas(); */\n\tprotected async _fetchRootDatas() {\n\t\tif (DEBUG) console.log(\"fetchRootDatas:::start\");\n\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchInit');\n\t\tthis.lastError = undefined;\n\t\ttry {\n\t\t\tconst datas = await WSP.fetchShortDescTree(this.wsp, this._grid, this.uriRoot, 1);\n\t\t\tif (!datas.ch) datas.ch = [];\n\t\t\tthis.lastError = null;\n\t\t\tif (this.fieldsFilter) datas.ch = datas.ch.filter(this.fieldsFilter);\n\t\t\tif (this.showRoot) {\n\t\t\t\tthis.rootSrcFields = null;\n\t\t\t\tthis.setDatas([datas]);\n\t\t\t\tthis.openFolder(datas);\n\t\t\t} else {\n\t\t\t\tthis.rootSrcFields = datas;\n\t\t\t\tthis.setDatas(datas.ch);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.lastError = e;\n\t\t\tthis.setDatas([]);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchEnd');\n\t\t\tif (DEBUG) console.log(\"fetchRootDatas:::end\");\n\t\t}\n\t}\n\n\t/** Ne pas utiliser directement, cf refetchTree(); */\n\tprotected async _refetchTree(targets: srcUri[]): Promise<void> {\n\t\tif (DEBUG) console.log(\"refetchTree:::start\", targets);\n\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchInit');\n\t\tthis.lastError = undefined;\n\t\ttry {\n\t\t\tlet scrollTopUri: srcUri;\n\t\t\tlet scrollTopOffset: number;\n\t\t\tif (this._grid) {\n\t\t\t\tscrollTopOffset = this._grid.getVisibleOffsetStart();\n\t\t\t\tscrollTopUri = scrollTopOffset > 0 ? (this.getRowKey(scrollTopOffset) as JSrcFieldsTree).srcUri : null;\n\t\t\t}\n\t\t\tconst datas = await WSP.fetchShortDescSubTree(this.wsp, this._grid, this.uriRoot, targets);\n\t\t\tthis.lastError = null;\n\t\t\tif (!datas.ch) datas.ch = [];\n\t\t\tif (this.fieldsFilter) {\n\t\t\t\tconst filter = (datas: JSrcFieldsTree) => {\n\t\t\t\t\tif (datas.ch) (datas.ch = datas.ch.filter(this.fieldsFilter)).forEach(filter);\n\t\t\t\t};\n\t\t\t\tfilter(datas);\n\t\t\t}\n\t\t\t//console.log(\"refetchTree.rootDatas::::\", datas);\n\t\t\tconst memOpenStates = this.defaultOpenState;\n\t\t\ttry {\n\t\t\t\tthis.defaultOpenState = (data: JSrcFieldsTree) => data.ch != null;\n\t\t\t\tif (this.showRoot) {\n\t\t\t\t\tthis.rootSrcFields = null;\n\t\t\t\t\tthis.setDatas([datas]);\n\t\t\t\t\tthis.openFolder(datas);\n\t\t\t\t} else {\n\t\t\t\t\tthis.rootSrcFields = datas;\n\t\t\t\t\tthis.setDatas(datas.ch || []);\n\t\t\t\t}\n\t\t\t\tif (this._grid) {\n\t\t\t\t\tconst newRowKey = scrollTopUri ? this.findRowKeyBySrcUri(scrollTopUri) : null;\n\t\t\t\t\tif (newRowKey) {\n\t\t\t\t\t\t//srcUri retrouvé, on scroll\n\t\t\t\t\t\tthis._grid.ensureRowVisible(this.getOffset(newRowKey), {block: \"start\", behavior: \"auto\"});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//srcUri pas retrouvé on repossitionne dans l'absolu\n\t\t\t\t\t\tthis._grid.ensureRowVisible(scrollTopOffset, {block: \"start\", behavior: \"auto\"});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.defaultOpenState = memOpenStates;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.lastError = e;\n\t\t\tthis.setDatas([]);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchEnd');\n\t\t\tif (DEBUG) console.log(\"refetchTree:::end\", targets);\n\t\t}\n\t}\n\n\tasync openFolderAsync(rowKey: JSrcFieldsTree): Promise<boolean> {\n\t\ttry {\n\t\t\tif (DEBUG) console.log(\"openFolderAsync:::start\", rowKey.srcUri);\n\t\t\tif (this.folderSt(rowKey) !== EFolderState.closed) return false;\n\t\t\tthis.setFolderSt(rowKey, EFolderState.opening);\n\t\t\tconst datas = await WSP.fetchShortDescTree(this.wsp, this._grid, rowKey.srcUri, 1);\n\t\t\tif (!this.isRowkeyAlive(rowKey)) return false; //modification de l'arbre entre temps, noeud perdu.\n\t\t\tif (this.fieldsFilter && datas.ch) datas.ch = datas.ch.filter(this.fieldsFilter);\n\t\t\tif (!datas.ch) datas.ch = [];//reeval si datas est toujours un dossier ?\n\t\t\tthis.setChilrenTo(rowKey, datas.ch, this.defaultOpenState);\n\t\t\tthis.setFolderSt(rowKey, EFolderState.closed);\n\t\t\treturn this.openFolder(rowKey);\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifError(\"Accès au serveur impossible\", this.grid);\n\t\t\tthis.closeFolder(rowKey);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tif (DEBUG) console.log(\"openFolderAsync:::end\", rowKey.srcUri);\n\t\t}\n\t}\n\n\tcloseFolder(rowKey: any): boolean {\n\t\tif (super.closeFolder(rowKey)) {\n\t\t\t//reset des fils à la fermeture, forcera un refresh à la réouverture.\n\t\t\tconst chList = this.ch(rowKey);\n\t\t\tif (chList) {\n\t\t\t\tfor (const ch of chList) this._killRowData(ch);\n\t\t\t\tthis.setCh(rowKey, null);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** Ne pas utiliser directement, cf openToTargets(); */\n\tprotected async _openToTargets(rowKey: JSrcFieldsTree, targets: srcUri[]): Promise<void> {\n\t\ttry {\n\t\t\tconst datas = await WSP.fetchShortDescSubTree(this.wsp, this._grid, rowKey.srcUri, targets);\n\t\t\tif (!this.isRowkeyAlive(rowKey)) return; //modification de l'arbre entre temps, noeud perdu.\n\t\t\tif (this.fieldsFilter) {\n\t\t\t\tconst filter = (datas: JSrcFieldsTree) => {\n\t\t\t\t\tif (datas.ch) (datas.ch = datas.ch.filter(this.fieldsFilter)).forEach(filter);\n\t\t\t\t};\n\t\t\t\tfilter(datas);\n\t\t\t}\n\t\t\tif (!datas.ch) datas.ch = [];//reeval si datas est toujours un dossier ?\n\t\t\tthis.setChilrenTo(rowKey, datas.ch, (data: JSrcFieldsTree) => data.ch != null);\n\t\t\tthis.openFolder(rowKey);\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifError(\"Accès au serveur impossible\", this.grid);\n\t\t\tthis.closeFolder(rowKey);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/** Attention targets est modifié par l'algo (=> cloner en amont si besoin) */\n\tprotected findRootsToFetchOrOpenAnc(targets: srcUri[]): { root: JSrcFieldsTree, targets: srcUri[] }[] {\n\t\tconst r = [] as { root: JSrcFieldsTree, targets: srcUri[] }[];\n\t\tfor (let i = 0; i < targets.length; i++) {\n\t\t\tconst target = targets[i];\n\t\t\tif (!target) continue;\n\t\t\tconst rowKey = this.findRowKeyBySrcUri(target, true) || this.rootSrcFields;\n\t\t\tif (rowKey) {\n\t\t\t\tif (rowKey.srcUri !== target) {\n\t\t\t\t\t//trouvé un root à charger\n\t\t\t\t\tconst newRoot = {root: rowKey, targets: [target]};\n\t\t\t\t\tr.push(newRoot);\n\t\t\t\t\tfor (let k = i + 1; k < targets.length; k++) {\n\t\t\t\t\t\t//On ajoute les autres subUri qui ont ce root\n\t\t\t\t\t\tif (SRC.isSubUri(rowKey.srcUri, targets[k])) {\n\t\t\t\t\t\t\tnewRoot.targets.push(targets[k]);\n\t\t\t\t\t\t\ttargets[k] = null; //traité\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//rowKey trouvé, on s'assure que ses ancêtres sont ouverts.\n\t\t\t\t\tconst parent = this.getRowKeyParent(rowKey);\n\t\t\t\t\tif (parent) this.openFolder(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tprotected async refreshRowKey(rowKey: JSrcFieldsTree) {\n\t\tconst fields = await this.wsp.fetchShortDesc(rowKey.srcId || rowKey.srcUri, this._grid);\n\t\tif (!this.isRowkeyAlive(rowKey)) return; //modification de l'arbre entre temps, noeud perdu.\n\t\tif (this.mustHideNode(fields)) {\n\t\t\tthis.deleteRowKey(rowKey);\n\t\t} else {\n\t\t\t// FIXME Si ajout colonnes avec autres critères de tri que le srcUri => on doit repositionner au bon index dans l'arbre.\n\t\t\tconst newRowKey = Object.assign(Object.create(null), fields);\n\t\t\tthis.replaceRowKey(rowKey, newRowKey, true);\n\t\t\tif (this._grid && this._grid.isRowSelected(this.getOffset(newRowKey))) {\n\t\t\t\t//on simule une resélection pour update de SpaceTree.shortDescs.\n\t\t\t\tthis._grid.dispatchEvent(new CustomEvent('grid-select', {bubbles: true, composed: true}));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async insertSrcUri(parentRowKey: JSrcFieldsTree | null, srcUri: srcUri, shortDesc?: JSrcFields) {\n\t\tif (this.sequentialReq) {\n\t\t\twhile (this.sequentialReq) await this.sequentialReq;\n\t\t\t//Réévalue si l'insertion n'a pas déjà été réalisée\n\t\t\tif (this.findInChildren(parentRowKey ? parentRowKey.ch : this._datas, srcUri) >= 0) return; //uri insérée entre temps.\n\t\t}\n\t\ttry {\n\t\t\tawait (this.sequentialReq = this._insertSrcUri(parentRowKey, srcUri, shortDesc));\n\t\t} finally {\n\t\t\tthis.sequentialReq = null;\n\t\t}\n\t}\n\n\t/** Ne pas utiliser directement, cf insertSrcUri(); */\n\tprotected async _insertSrcUri(parentRowKey: JSrcFieldsTree | null, srcUri: srcUri, shortDesc?: JSrcFields) {\n\t\tconst fields = shortDesc || await this.wsp.fetchShortDesc(srcUri, this._grid);\n\t\tif (this.mustHideNode(fields)) return;\n\t\tif (parentRowKey && !this.isRowkeyAlive(parentRowKey) && this.getRowKeyFolderState(parentRowKey) !== EFolderState.opened) return; //modification de l'arbre entre temps, noeud perdu.\n\t\tif (this.findInChildren(parentRowKey ? parentRowKey.ch : this._datas, srcUri) >= 0) return; //uri insérée entre temps.\n\t\tthis.insertRowKey(parentRowKey, Object.assign(Object.create(null), fields));\n\t}\n\n\tprotected findInChildren(children: JSrcFieldsTree[], srcUri: srcUri): number {\n\t\treturn children.findIndex((e) => e.srcUri === srcUri);\n\t}\n\n\n\t/** Evalue si ce noeud doit être supprimé de l'arbre. */\n\tmustHideNode(fields: JSrcFields): boolean {\n\t\tif (!fields) return true;\n\t\tif (this.fieldsFilter && !this.fieldsFilter(fields)) return true;\n\t\tif (this.showDeletedDrfEntries) {\n\t\t\t//Mode \"src supprimées visibles\" (ateliers drafts)\n\t\t\tif (fields.srcSt === ESrcSt.none) {\n\t\t\t\tif (fields.drfState === \"createdDeleted\") return true; //Si atelier draft en corbeille local, on masque\n\t\t\t}\n\t\t} else {\n\t\t\t//Mode normal\n\t\t\tif (fields.srcSt === ESrcSt.none) return true; //item supprimés éliminés de l'arbre\n\t\t}\n\t\treturn false\n\t}\n\n\t/** Préévalue à partir d'un msg JWspUriChangeMsg si l'entrée devrait être supprimées. */\n\tprotected shouldHideEntry(msg: JWspUriChangeMsg, nodeFound?: JSrcFieldsTree): boolean {\n\t\tif (msg.type !== EWspChangesEvts.r && msg.type !== EWspChangesEvts.drfState) return false;\n\t\tif (this.showDeletedDrfEntries) {\n\t\t\tif (nodeFound) {\n\t\t\t\tif (nodeFound.srcSt < 0) return true; //noeud déjà supprimé, => suppr définitivie ou déplacement (retsoreTo) => on suppr.\n\t\t\t\tif (nodeFound.drfState === \"created\") return true; //noeud draft local => on suppr.\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _initRowData(data: JSrcFieldsTree, parent: Dict<any>, openIt: (data: any) => boolean): number {\n\t\t//On init la prop 'ch'.\n\t\tif (data.srcSt === ESrcSt.folder) {\n\t\t\tif (data.itModel != null) {\n\t\t\t\t//item ou res d'item.\n\t\t\t\tif (!this.hideItemFolderContent && (this.wsp.wspMetaUi.getItemType(data.itModel).isFamily(EItemTypeFamily.folder, EItemTypeFamily.undef, EItemTypeFamily.other))) {\n\t\t\t\t\tif (data.ch === undefined) data.ch = null; //On déclare l'état folder.\n\t\t\t\t} else if ('ch' in data) {\n\t\t\t\t\t//On ne veut pas voir les fils, on les élimine.\n\t\t\t\t\tdata.ch = undefined;\n\t\t\t\t}\n\t\t\t} else if (!('ch' in data)) {\n\t\t\t\tdata.ch = null; //On déclare l'état folder.\n\t\t\t}\n\t\t}\n\t\treturn super._initRowData(data, parent, openIt);\n\t}\n}\n\n/**\n *\n */\nexport class SpaceTreeDataFull extends SpaceTreeDataBase {\n\n\tinitSpTrDataFull(place?: WspsLivePlace): Promise<void> {\n\t\tif (place) place.eventsMgr.on('wspUriChange', (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => {\n\t\t\tif (this.wsp.code !== msg.wspCd) return;\n\t\t\tconst srcUri = !this.hideItemFolderContent && msg.shortDesc ? msg.shortDesc.srcUri : msg.srcUri; //msg.shortDesc.srcUri => resUri dans item folder.\n\t\t\tif (ITEM.isSpecialUri(srcUri)) return;\n\t\t\tif (srcUri === this.uriRoot) {\n\t\t\t\treturn this.fetchRootDatas();\n\t\t\t} else if (this.uriRoot && !SRC.isSubUri(this.uriRoot, srcUri)) return;\n\t\t\tconst node = this.findRowKeyBySrcUri(srcUri);\n\t\t\tif (!node) {\n\t\t\t\t//source actuellement non affichée\n\t\t\t\tconst parentUri = SRC.extractUriParent(srcUri);\n\t\t\t\tif (parentUri === this.uriRoot && !this.showRoot) {\n\t\t\t\t\t//On insert d'un nouvel objet à la racine\n\t\t\t\t\tif (!this.shouldHideEntry(msg)) return this.insertSrcUri(null, srcUri, msg.shortDesc);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst anc = this.findRowKeyBySrcUri(parentUri, true);\n\t\t\t\tif (!anc) {\n\t\t\t\t\t//Aucun ancêtre commun trouvé, on vérifie qu'on n'es pas en création d'un descendant d'une nouvelle racine\n\t\t\t\t\tif (!this.shouldHideEntry(msg)) {\n\t\t\t\t\t\tconst chUri = srcUri.substring(0, srcUri.indexOf('/', 1));\n\t\t\t\t\t\tif (!this._datas.find((src) => src.srcUri === chUri)) {\n\t\t\t\t\t\t\t//nouvelle racine détectée\n\t\t\t\t\t\t\treturn this.insertSrcUri(null, chUri);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (anc.srcUri === parentUri) {\n\t\t\t\t\t//On a trouvé le parent direct\n\t\t\t\t\tif (this.isRowKeyShown(anc) && this.getRowKeyFolderState(anc) === EFolderState.opened) {\n\t\t\t\t\t\t//On insert ce nouvel élément dans son dossier père visible et ouvert\n\t\t\t\t\t\tif (!this.shouldHideEntry(msg)) return this.insertSrcUri(anc, srcUri, msg.shortDesc);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Le dossier parent ou un de ses ancêtre est clos.\n\t\t\t\t\t\t//On cleanup le contenu du dossier qui devra être rechargé.\n\t\t\t\t\t\tthis.resetAsyncChildren(anc);\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.type === EWspChangesEvts.u && anc.ch) {\n\t\t\t\t\t//dossier ancêtre trouvé, avec des fils, et msg est un update/create: ce pourrait être une création dans une sous-struct\n\t\t\t\t\t//entrainant la création dynammique des dossiers parents.\n\t\t\t\t\tconst chUri = srcUri.substring(0, srcUri.indexOf('/', anc.srcUri.length + 1));\n\t\t\t\t\tif (!anc.ch.find((src) => src.srcUri === chUri)) {\n\t\t\t\t\t\t//Pas trouvé chUri dans anc\n\t\t\t\t\t\tif (this.isRowKeyShown(anc) && this.getRowKeyFolderState(anc) === EFolderState.opened) {\n\t\t\t\t\t\t\t//anc est visible et ouvert, on l'insert\n\t\t\t\t\t\t\treturn this.insertSrcUri(anc, chUri);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//On cleanup le contenu du dossier qui devra être rechargé.\n\t\t\t\t\t\t\tthis.resetAsyncChildren(anc);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//node trouvé\n\t\t\tif (this.shouldHideEntry(msg, node)) {\n\t\t\t\tthis.deleteRowKey(node);\n\t\t\t} else if (msg.type === EWspChangesEvts.s) {\n\t\t\t\tnode['itSt'] = msg.itSt;\n\t\t\t\t(node as any)['icon'] = undefined; //FIXME API reset IGridDataRow.cacheHolder\n\t\t\t\tif (this._grid) {\n\t\t\t\t\tconst offset = this.getOffset(node);\n\t\t\t\t\tif (offset >= 0) this._grid.invalidateRows(offset, 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.isRowKeyShown(node)) {\n\t\t\t\t\t//Ce noeud est visible.\n\t\t\t\t\tif (msg.type === EWspChangesEvts.u && this.getRowKeyFolderState(node) === EFolderState.opened) {\n\t\t\t\t\t\t//msg.type===u signifie en général un changement du contenu du dossier issue d'une fusion de 2 dossiers.\n\t\t\t\t\t\t//Si le dossier est ouvert, il faudrait donc un algo qui retrouve les fils ajoutés par la fusion\n\t\t\t\t\t\t//pour les injecter dans l'arbre sans perturber l'état ouvert/fermé des autres fils préexistant.\n\t\t\t\t\t\t//En attendant : on clos le dossier et on reset son contenu !\n\t\t\t\t\t\tthis.closeFolder(node);\n\t\t\t\t\t\tthis.resetAsyncChildren(node);\n\t\t\t\t\t}\n\t\t\t\t\treturn this.refreshRowKey(node);\n\t\t\t\t} else {\n\t\t\t\t\t//On cleanup le contenu du dossier parent qui devra être rechargé.\n\t\t\t\t\tthis.resetAsyncChildren(this.getRowKeyParent(node));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (place) place.eventsMgr.on(\"onConnectionRenewed\", () => {\n\t\t\tconst targets = [] as srcUri[];\n\n\t\t\tfunction listTargets(datas: JSrcFieldsTree[]): boolean {\n\t\t\t\t//XXX algo moins couteux, plus complexe : on ne garde ouvert que les dossiers visibles dans le grid.\n\t\t\t\tconst oldLen = targets.length;\n\t\t\t\tfor (const node of datas) {\n\t\t\t\t\tif (node.ch) {\n\t\t\t\t\t\t//c'est un dossier ouvert\n\t\t\t\t\t\tif (listTargets(node.ch)) {\n\t\t\t\t\t\t\t//Ce dossier ne conteint aucun dossier fils ouvert, on ajoute ce dossier en cible\n\t\t\t\t\t\t\ttargets.push(node.srcUri + '/');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn oldLen === targets.length;//true = aucun dossier fils ouvert trouvé.\n\t\t\t}\n\n\t\t\tif (listTargets(this._datas)) targets.push(this.uriRoot + '/');\n\t\t\tthis.refetchTree(targets);\n\t\t});\n\t\tthis.showDeletedDrfEntries = this.wsp.wspDefProps?.drfRefWsp != null;\n\t\treturn this.fetchRootDatas();\n\t}\n}\n\n/** On hérite de SpaceTreeDataBase pour bénéficier de l'ouverture asynchrone des items de type folder. */\nexport class SpaceTreeDataSearch extends SpaceTreeDataBase {\n\n\t/** Chargement progressif. Donc impl Grid obligatoire (ie pas SmallGrid). */\n\t_grid: Grid;\n\n\trequest: ISpaceTreeReq;\n\tmaxStartSearch: number;\n\tmaxNextSearch: number;\n\n\t/** Requete en cours (pour gérer l'attente avant insertion dans l'arbre d'une détection d'un update d'un item)*/\n\tprotected _nextSearch: Promise<any>;\n\n\t/** Dernier noeud remonté permettant de fixer le point de départ de la prochaine recherche. */\n\tprotected _afterSrcUri: srcUri;\n\tprotected _afterEndFolder = false;\n\n\tconnectToGrid(grid: IGrid | null) {\n\t\tsuper.connectToGrid(grid);\n\t\tthis.listenGridLimits();\n\t}\n\n\tinitSpTrDataSearch(req: ISpaceTreeReq, maxStartSearch: number, maxNextSearch: number) {\n\t\tthis.request = req;\n\t\tthis.maxStartSearch = maxStartSearch;\n\t\tthis.maxNextSearch = maxNextSearch;\n\t\tthis.defaultOpenState = GridDataHolderJsonTree.defaultOpened;\n\t}\n\n\tfetchSearchStart(resetUi?: boolean): Promise<void> {\n\t\tif (resetUi) {\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.setDatas([]);\n\t\t}\n\t\tif (this._nextSearch) {\n\t\t\tconst stamp = this.request.getStamp();\n\t\t\tthis._nextSearch = this._nextSearch.then(() => {if (this.request.isSameStamp(stamp)) return this.fetchSearchStart()});\n\t\t} else {\n\t\t\tthis._nextSearch = this._fetchSearchStart();\n\t\t}\n\t\treturn this._nextSearch;\n\t}\n\n\thasNextToPopulate(): boolean {return this._afterSrcUri != null}\n\n\tfetchSearchNext(count?: number): Promise<void> {\n\t\tif (!this._afterSrcUri || !this._grid) return;\n\t\tif (this._nextSearch) {\n\t\t\tconst stamp = this.request.getStamp();\n\t\t\tthis._nextSearch = this._nextSearch.then(() => {if (this.request.isSameStamp(stamp)) return this.fetchSearchNext(count)});\n\t\t} else {\n\t\t\tthis._nextSearch = this._fetchSearchNext(count || this.maxNextSearch);\n\t\t}\n\t\treturn this._nextSearch;\n\t}\n\n\tasync fetchSearchReplaceChildren(folderUri: srcUri): Promise<boolean> {\n\t\tif (!this._grid) return;\n\t\tif (this._nextSearch) {\n\t\t\tconst stamp = this.request.getStamp();\n\t\t\tthis._nextSearch = this._nextSearch.then(() => {return this.request.isSameStamp(stamp) ? this.fetchSearchReplaceChildren(folderUri) : false});\n\t\t} else {\n\t\t\tthis._nextSearch = this._fetchSearchReplaceChildren(folderUri, this.maxNextSearch);\n\t\t}\n\t\treturn this._nextSearch;\n\t}\n\n\t/**\n\t * Charge la liste jusqu'à l'uri soit présente dans la liste.\n\t * Retourne false si srcUri ne matche pas les critères de sélection.\n\t */\n\tasync fetchSrcUri(srcUri: srcUri): Promise<boolean> {\n\t\tlet guard = 0;\n\t\twhile (this._afterSrcUri && this.wsp.srcUriItemsSortFn(srcUri, this._afterSrcUri) > 0 && guard < 100) {\n\t\t\tawait this.fetchSearchNext(2000);\n\t\t\tguard++;\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync fetchSrcUris(srcUris: srcUri[]): Promise<void> {\n\t\tlet guard = 0;\n\t\tfor (const srcUri of srcUris) {\n\t\t\twhile (this._afterSrcUri && this.wsp.srcUriItemsSortFn(srcUri, this._afterSrcUri) > 0 && guard < 100) {\n\t\t\t\tawait this.fetchSearchNext(2000);\n\t\t\t\tguard++;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync openFolderAsync(rowKey: JSrcFieldsTree): Promise<boolean> {\n\t\ttry {\n\t\t\tif (this.folderSt(rowKey) !== EFolderState.closed) return false;\n\t\t\tthis.setFolderSt(rowKey, EFolderState.opened);\n\t\t\tthis.setChilrenTo(rowKey, [], this.defaultOpenState);\n\t\t\tif (await this.fetchSearchReplaceChildren(rowKey.srcUri)) {\n\t\t\t\tconst offset = this.getOffset(rowKey);\n\t\t\t\tif (offset >= 0) this.grid.invalidateRows(offset, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifError(\"Accès au serveur impossible\", this.grid);\n\t\t\tthis.closeFolder(rowKey);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tcloseFolder(rowKey: JSrcFieldsTree): boolean {\n\t\tif (this._nextSearch) return false; //Si search en cours, on bloque : sinon raceCond sur this._afterSrcUri\n\t\tif (super.closeFolder(rowKey)) {\n\t\t\tif (this._afterSrcUri && SRC.isSubUriOrEqual(rowKey.srcUri, this._afterSrcUri)) {\n\t\t\t\t//this._afterSrcUri dans le dossier clos, on se replace juste après ce dossier clos\n\t\t\t\tthis._afterSrcUri = rowKey.srcUri;\n\t\t\t\tthis._afterEndFolder = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** Retourne null si aucune requete en cours de traitement. */\n\tget searching(): Promise<void> | null {return this._nextSearch}\n\n\tprotected unlistenGridLimits() {\n\t\tif (this._grid) this._grid.reachedLimitsCb = null;\n\t}\n\n\tprotected listenGridLimits() {\n\t\tif (this._afterSrcUri && this._grid) this._grid.reachedLimitsCb = (start) => {\n\t\t\tif (start) return;\n\t\t\t//console.log(\"reachedLimitsCb::::new _afterSrcUri, _afterEndFolder:::\", this._afterSrcUri, this._afterEndFolder);\n\t\t\tthis.fetchSearchNext(this.maxNextSearch);\n\t\t};\n\t}\n\n\tprotected async _fetchSearchStart() {\n\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchInit');\n\t\tthis.lastError = undefined;\n\t\tthis.unlistenGridLimits();\n\t\tconst datas = [] as JSrcFieldsTree[];\n\t\ttry {\n\t\t\tconst stamp = this.request.getStamp();\n\t\t\tconst res = await WSP.fetchSearch(this.wsp, this._grid, this.request.getStartReq(this.maxStartSearch));\n\t\t\tif (!this._grid || !this.request.isSameStamp(stamp)) return; //raceCond\n\t\t\tthis.resetAfterSrcUri();\n\t\t\tthis.insertInTreeFromSearch(res.columns as ESrcField[], res.results, datas, false, res.results.length >= this.maxStartSearch);\n\t\t\tthis.lastError = null;\n\t\t\tthis.listenGridLimits();\n\t\t\tthis.setDatas(datas);\n\t\t} catch (e) {\n\t\t\tthis.lastError = e;\n\t\t\tthis.setDatas([]);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis._nextSearch = null;\n\t\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchEnd');\n\t\t}\n\t}\n\n\tprotected async _fetchSearchNext(max: number): Promise<void> {\n\t\ttry {\n\t\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchNext');\n\t\t\tthis.lastError = undefined;\n\t\t\tthis.unlistenGridLimits();\n\t\t\tconst stamp = this.request.getStamp();\n\t\t\tconst res = await WSP.fetchSearch(this.wsp, this._grid, this.request.getNextReq(this._afterEndFolder ? this._afterSrcUri + \"//\" : this._afterSrcUri, max));\n\t\t\tif (!this._grid || !this.request.isSameStamp(stamp)) return; //raceCond\n\t\t\tthis.resetAfterSrcUri();\n\t\t\tthis.insertInTreeFromSearch(res.columns as ESrcField[], res.results, this._datas, true, res.results.length >= max);\n\t\t\tthis.lastError = null;\n\t\t\tthis.listenGridLimits();\n\t\t} catch (e) {\n\t\t\tthis.lastError = e;\n\t\t\tthis.setDatas([]);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis._nextSearch = null;\n\t\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchEnd');\n\t\t}\n\t}\n\n\t/** Retourne true si réalisé, pas abandonné pour raceCond*/\n\tprotected async _fetchSearchReplaceChildren(folderUri: srcUri, max: number): Promise<boolean> {\n\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchInside');\n\t\tthis.lastError = undefined;\n\t\tthis.unlistenGridLimits();\n\t\ttry {\n\t\t\tconst stamp = this.request.getStamp();\n\t\t\tconst res = await WSP.fetchSearch(this.wsp, this._grid, this.request.getReplaceFolderReq(folderUri, max));\n\t\t\tif (!this._grid || !this.request.isSameStamp(stamp)) return false; //raceCond\n\t\t\tconst hasMore = res.results.length >= max;\n\t\t\tif (hasMore) this.resetAfterSrcUri();\n\t\t\tlet last = this.insertInTreeFromSearch(res.columns as ESrcField[], res.results, this._datas, true, hasMore);\n\t\t\tif (hasMore && last) {\n\t\t\t\t//Le folder n'est pas complet, on doit éliminer toutes les datas à partir du nouveau this._afterSrcUri\n\t\t\t\t//console.log(\"HasMore in folder:::: this._afterSrcUri\", this._afterSrcUri);\n\t\t\t\twhile (last) {\n\t\t\t\t\tconst lastP = this.parent(last);\n\t\t\t\t\tconst ch = lastP ? this.ch(lastP) : this._datas;\n\t\t\t\t\tconst idx = ch.lastIndexOf(last) + 1;\n\t\t\t\t\tconst toDel = ch.length - idx;\n\t\t\t\t\tif (toDel > 0) this.updateDatasInTree(lastP, idx, toDel);\n\t\t\t\t\tlast = lastP;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lastError = null;\n\t\t\tthis.listenGridLimits();\n\t\t} catch (e) {\n\t\t\tthis.lastError = e;\n\t\t\tthis.setDatas([]);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis._nextSearch = null;\n\t\t\tif (this.callbackSearching) this.callbackSearching.onSearching('searchEnd');\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected resetAfterSrcUri() {\n\t\tthis._afterSrcUri = null;\n\t\tthis._afterEndFolder = false;\n\t}\n\n\t/**\n\t * @return dernière entrée ajoutée ou undefined.\n\t */\n\tprotected insertInTreeFromSearch(keys: ESrcField[], values: any[][], rootDatas: JSrcFieldsTree[], updateGrid: boolean, hasMore: boolean): JSrcFieldsTree | undefined {\n\t\tif (!this._grid) return; // affichage clos\n\t\ttry {\n\t\t\tthis._grid.refreshFreeze(1);\n\t\t\tlet data: JSrcFieldsTree;\n\t\t\tlet lastSrcUri: string;\n\t\t\tfor (let i = 0, s = values.length; i < s; i++) {\n\t\t\t\tconst v = values[i];\n\t\t\t\tdata = {};\n\t\t\t\tfor (let k = 0; k < keys.length; k++) (data as Dict<any>)[keys[k]] = v[k];\n\t\t\t\tif (this.fieldsFilter && !this.fieldsFilter(data)) continue;\n\t\t\t\tlastSrcUri = data.srcUri;\n\t\t\t\tthis.insertInTree(data, rootDatas, updateGrid);\n\t\t\t}\n\t\t\tif (hasMore) this._afterSrcUri = lastSrcUri;\n\t\t\treturn data;\n\t\t} finally {\n\t\t\tthis._grid.refreshFreeze(-1);\n\t\t\tthis._grid.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * @param updateGrid false uniquement avant l'init du grid. setData(inRootDatas) sera appelé ensuite.\n\t */\n\tprotected insertInTree(toInsert: JSrcFields, inRootDatas: JSrcFieldsTree[], updateGrid: boolean) {\n\t\tlet parent = null;\n\t\tlet children = inRootDatas;\n\t\tlet offsetInsert: number = updateGrid ? undefined : -1;\n\t\tlet countInsert = 0;\n\t\tlet prevSlash = this.uriRoot ? this.showRoot ? this.uriRoot.lastIndexOf('/') + 1 : this.uriRoot.length + 1 : 1;\n\t\tlet uriToSplit = toInsert.srcUri;\n\t\tif (ITEM.isAirItem(uriToSplit) || ITEM.isExtItem(uriToSplit)) {\n\t\t\t//change l'uri pour fusionner l'id de l'item avec son code en un seul fragment.\n\t\t\tconst i = uriToSplit.lastIndexOf('/');\n\t\t\turiToSplit = uriToSplit.substring(0, i) + '_' + uriToSplit.substring(i + 1);\n\t\t}\n\t\tlet nextSlash = uriToSplit.indexOf('/', prevSlash);\n\t\t//Insertion ou recherche de l'espace existant\n\t\twhile (nextSlash > 0) {\n\t\t\tconst srcUri = uriToSplit.substring(0, nextSlash);\n\t\t\tconst index = this.findInChildren(children, srcUri);\n\t\t\tif (index >= 0) {\n\t\t\t\tparent = children[index];\n\t\t\t\tchildren = parent.ch;\n\t\t\t\tif (children == null) {\n\t\t\t\t\t//dossier fermé, on va le peupler, il devrait être ouvert après.\n\t\t\t\t\tchildren = parent.ch = [];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst newFolder = {srcUri: srcUri, srcSt: ESrcSt.folder, ch: []} as JSrcFieldsTree;\n\t\t\t\tconst index = this.findInsertPoint(children, newFolder);\n\t\t\t\tchildren.splice(index, 0, newFolder);\n\t\t\t\tif (updateGrid) {\n\t\t\t\t\tif (offsetInsert === undefined) offsetInsert = this.getOffsetInChildren(parent, children, index);\n\t\t\t\t\tthis._initRowData(newFolder, parent, GridDataHolderJsonTree.defaultOpened);\n\t\t\t\t\tthis.updateSubRowsShown(parent, 1);\n\t\t\t\t\tcountInsert++;\n\t\t\t\t}\n\t\t\t\tparent = newFolder;\n\t\t\t\tchildren = newFolder.ch;\n\t\t\t}\n\t\t\tprevSlash = nextSlash + 1;\n\t\t\tnextSlash = uriToSplit.indexOf('/', prevSlash);\n\t\t}\n\t\t//si maj live on check si cette srcUri n'a pas été inséré entre temps (inutile sinon car 1er insert).\n\t\tif (updateGrid && this.findInChildren(children, toInsert.srcUri) >= 0) return;\n\t\t//Insertion de l'item\n\t\tconst index = this.findInsertPoint(children, toInsert);\n\t\tchildren.splice(index, 0, toInsert);\n\t\tif (updateGrid) {\n\t\t\tif (offsetInsert === undefined) offsetInsert = this.getOffsetInChildren(parent, children, index);\n\t\t\tthis._initRowData(toInsert, parent, GridDataHolderJsonTree.defaultClosed);\n\t\t\tthis.updateSubRowsShown(parent, 1);\n\t\t\tcountInsert++;\n\t\t\tif (this._grid && offsetInsert >= 0) this._grid.rowCountChanged(offsetInsert, countInsert);\n\t\t}\n\t}\n}\n\n/**\n * Source de données pour la vue avec filtre qui est \"Live\",\n * ie qui se met à jour dynamiquement en fonction des events wspUriChange.\n *\n * Cette contrainte \"Live\" réduit les possibilités de filtre au srcUri.\n */\nexport class SpaceTreeDataSearchLive extends SpaceTreeDataSearch {\n\n\trequest: SpaceTreeReqUri;\n\n\tinitSpTrDataLive(place?: WspsLivePlace): Promise<void> {\n\t\tthis.initSpTrDataSearch(new SpaceTreeReqUri(this.wsp).initReq(this.wsp.getShortDescDef(), this.uriRoot), 75, 150);\n\t\tif (place) place.eventsMgr.on('wspUriChange', (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => {\n\t\t\tif (this.wsp.code !== msg.wspCd) return;\n\t\t\tconst srcUri = !this.hideItemFolderContent && msg.shortDesc ? msg.shortDesc.srcUri : msg.srcUri; //msg.shortDesc.srcUri => resUri dans item folder.\n\t\t\tif (ITEM.isSpecialUri(srcUri)) return;\n\t\t\tconst node = this.findRowKeyBySrcUri(srcUri);\n\t\t\tif (node) {\n\t\t\t\tif (this.shouldHideEntry(msg, node)) {\n\t\t\t\t\tthis.deleteRowKey(node);\n\t\t\t\t} else if (msg.type === EWspChangesEvts.u && ITEM.getSrcUriType(srcUri) === \"space\") {\n\t\t\t\t\t//msg.type===u signifie en général un changement du contenu de l'espace issu d'une fusion de 2 dossiers.\n\t\t\t\t\t//=> On requête sur tout l'espace et on le remplace.\n\t\t\t\t\tthis.fetchSearchReplaceChildren(srcUri);\n\t\t\t\t} else {\n\t\t\t\t\tthis.refreshRowKey(node);\n\t\t\t\t}\n\t\t\t} else if (ITEM.getSrcUriType(srcUri) === \"space\") {\n\t\t\t\tif (msg.type === EWspChangesEvts.u) {\n\t\t\t\t\t//msg.type===u signifie en général un changement du contenu de l'espace issu d'une fusion de 2 dossiers.\n\t\t\t\t\tif (!this._afterSrcUri || this.wsp.srcUriItemsSortFn(srcUri, this._afterSrcUri) <= 0) {\n\t\t\t\t\t\t//cet espace est dans la zone déjà construite des résultats\n\t\t\t\t\t\t//=> On requête sur tout l'espace et on l'insère.\n\t\t\t\t\t\tthis.fetchSearchReplaceChildren(srcUri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (this.request.isSrcUriMustBeIncluded(srcUri) && !this.shouldHideEntry(msg)) {\n\t\t\t\tthis.insertSrcUriInTree(srcUri, msg.shortDesc);\n\t\t\t}\n\t\t});\n\t\tif (place) place.eventsMgr.on(\"onConnectionRenewed\", () => {\n\t\t\tthis.fetchSearchStart();\n\t\t});\n\t\treturn null;\n\t}\n\n\t/**\n\t * Charge la liste jusqu'à l'uri soit présente dans la liste.\n\t * Retourne false si srcUri ne matche pas les critères de sélection.\n\t */\n\tasync fetchSrcUri(srcUri: srcUri): Promise<boolean> {\n\t\tif (!this.request.isSrcUriMustBeIncluded(srcUri)) return false;\n\t\tlet guard = 0;\n\t\twhile (this._afterSrcUri && this.wsp.srcUriItemsSortFn(srcUri, this._afterSrcUri) > 0 && guard < 100) {\n\t\t\tawait this.fetchSearchNext(2000);\n\t\t\tguard++;\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync fetchSrcUris(srcUris: srcUri[]): Promise<void> {\n\t\tlet guard = 0;\n\t\tfor (const srcUri of srcUris) {\n\t\t\tif (!this.request.isSrcUriMustBeIncluded(srcUri)) continue;\n\t\t\twhile (this._afterSrcUri && this.wsp.srcUriItemsSortFn(srcUri, this._afterSrcUri) > 0 && guard < 100) {\n\t\t\t\tawait this.fetchSearchNext(2000);\n\t\t\t\tguard++;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async insertSrcUriInTree(srcUri: srcUri, shortDesc: JSrcFields) {\n\t\tconst fields = shortDesc || await this.wsp.fetchShortDesc(srcUri, this._grid);\n\t\tif (this.fieldsFilter && !this.fieldsFilter(fields)) return;\n\t\tif (this._nextSearch) await this._nextSearch;\n\t\tif (this.request.isSrcUriMustBeIncluded(srcUri)) this.insertInTree(Object.assign(Object.create(null), fields), this._datas, true);\n\t}\n}\n\n/**\n * Abstraction des critères d'une recherche pour afficher un SpaceTree.\n */\nexport interface ISpaceTreeReq {\n\n\t/** Retourne la requête initiale (xml sérialisé) */\n\tgetStartReq(max: number): string\n\n\t/** Retourne la requête de pagination suivante. */\n\tgetNextReq(afterSrcUri: srcUri, max: number): string\n\n\t/**\n\t * Construit la requête pour recharger un espace/dossier entier.\n\t */\n\tgetReplaceFolderReq(folderUri: srcUri, max: number): string\n\n\t/**\n\t * Avec isSameStamp() permet d'évaluer si les critères\n\t * ont été modifiés au cours d'un traitement async.\n\t */\n\tgetStamp(): any\n\n\tisSameStamp(stamp: any): boolean\n}\n\n/**\n * Critères de recherche progressive pour un SpaceTreeDataSearchLive, c.a.d. qui doit se mettre à jour dynamiquement.\n */\nexport interface ISpaceTreeReqLive<P> extends ISpaceTreeReq {\n\n\t/**\n\t * Met à jour les paramètres de la requete et retourne true s'ils ont effectivement été modifiés\n\t */\n\tupdateParams(params?: P): boolean\n\n\t/**\n\t * Suite à evt de modif d'une srcUri évalue si cette srcUri\n\t * devrait être insérée dans l'arbre.\n\t */\n\tisSrcUriMustBeIncluded(srcUri: srcUri): boolean;\n}\n\n/** Requête limitée à un filtre sur le srcUri. */\nexport class SpaceTreeReqUri implements ISpaceTreeReqLive<{ uriFilter: string }> {\n\n\turiRoot: string;\n\n\tprotected _textToSearch: string;\n\n\tprotected _lastRegexpFetch: RegExp;\n\n\n\tprotected _req: Element;\n\tprotected _itemsExp: Element;\n\tprotected _srcUriExp: Element;\n\tprotected _selectReq: Element;\n\n\tconstructor(protected wsp: Wsp) {}\n\n\tstatic buildSrcUriPattern(text: string): RegExp {\n\t\tconst slash = text.indexOf('/');\n\t\tif (slash >= 1) {\n\t\t\t//match un espace avant\n\t\t\tconst space = text.substring(0, slash);\n\t\t\ttext = text.substring(slash + 1);\n\t\t\treturn new RegExp(`.*${LANG.escape4RegexpFuzzy(space)}.*/.*${LANG.escape4RegexpFuzzy(text)}[^\\/]*`, 'i');\n\t\t}\n\t\treturn new RegExp(`.*${LANG.escape4RegexpFuzzy(text)}[^\\/]*`, 'i');\n\t}\n\n\tinitReq(fields: string | ESrcField[], uriRoot: string): this {\n\t\tthis.uriRoot = uriRoot;\n\t\tconst mainCrit = new SearchItems().excludeTildeRoot().includeDrfErased(this.wsp.wspDefProps.drfRefWsp != null);\n\t\tthis._req = JSX.asXml(() => <request>\n\t\t\t<select>{Array.isArray(fields) ? fields.map((f) => JSX.asXml(() => <column dataKey={f}/>)) : <columns dataKeys={fields}/>}</select>\n\t\t\t<where>\n\t\t\t\t{mainCrit.toDom()}\n\t\t\t\t<exp type=\"RegexpUri\"/>\n\t\t\t</where>\n\t\t</request>);\n\t\t//console.log(\"req::::::\", DOM.ser(this._req));\n\t\tthis._itemsExp = this._req.querySelector('exp[type=Items]');\n\t\tif (uriRoot) this._itemsExp.setAttribute('beforeEndFolder', uriRoot + \"/\");\n\t\tthis._srcUriExp = this._itemsExp.nextElementSibling;\n\t\tthis._selectReq = this._req.firstElementChild;\n\t\treturn this;\n\t}\n\n\tupdateParams(params?: { uriFilter: string }): boolean {\n\t\tconst newTxt = params.uriFilter.toLowerCase();\n\t\tif (this._textToSearch === newTxt) return false;\n\t\tthis._textToSearch = newTxt;\n\t\tthis._lastRegexpFetch = SpaceTreeReqUri.buildSrcUriPattern(newTxt);\n\t\treturn true;\n\t}\n\n\tgetStartReq(max: number): string {\n\t\tthis._srcUriExp.setAttribute(\"regexp\", `(?i)${this._lastRegexpFetch.source}`);\n\t\tthis._selectReq.setAttribute(\"max\", max.toString());\n\t\tif (this.uriRoot) this._itemsExp.setAttribute('afterUri', this.uriRoot + \"/\");\n\t\telse this._itemsExp.removeAttribute('afterUri');\n\t\tthis._itemsExp.removeAttribute('beforeEndFolder');\n\t\treturn DOM.ser(this._req);\n\t}\n\n\tgetNextReq(afterSrcUri: srcUri, max: number): string {\n\t\tthis._selectReq.setAttribute(\"max\", max.toString());\n\t\tthis._itemsExp.setAttribute('afterUri', afterSrcUri);\n\t\tthis._itemsExp.removeAttribute('beforeEndFolder');\n\t\treturn DOM.ser(this._req);\n\t}\n\n\tgetReplaceFolderReq(folderUri: srcUri, max: number): string {\n\t\tthis._selectReq.setAttribute(\"max\", max.toString());\n\t\tconst path = folderUri + '/';\n\t\tthis._itemsExp.setAttribute('afterUri', path);\n\t\tthis._itemsExp.setAttribute('beforeEndFolder', path);\n\t\treturn DOM.ser(this._req);\n\t}\n\n\tgetStamp(): any {return this._lastRegexpFetch}\n\n\tisSameStamp(stamp: any): boolean { return stamp === this._lastRegexpFetch}\n\n\tisSrcUriMustBeIncluded(srcUri: srcUri): boolean {\n\t\tif (this.uriRoot && !SRC.isSubUri(this.uriRoot, srcUri)) return false;\n\t\treturn this._lastRegexpFetch ? this._lastRegexpFetch.test(srcUri) : false;\n\t}\n}\n\n\n// function transformArrayToObj<D>(keys: (keyof D)[], values: any[][]): D[] {\n// \tfor (let i = 0; i < values.length; i++) {\n// \t\tlet v = values[i];\n// \t\tlet d = {} as D;\n// \t\tfor (let k = 0; k < keys.length; k++) d[keys[k]] = v[k];\n// \t\tvalues[i] = d as any;\n// \t}\n// \treturn values as any as D[];\n// }\n\n/** Gestion du drop dans l'arbre. */\nconst rowDropMgr = {\n\tonDragOverRow(ev: DragEvent, grid: IGrid, row: GridDataRowJson<JSrcFields>, line: HTMLElement): EGridDropPos | EGridDropPos {\n\t\tev.dataTransfer.dropEffect = 'none';\n\t\tif (row && row.rowDatas.srcSt !== ESrcSt.folder) return EGridDropPos.none;\n\t\tconst spaceTree = DOMSH.findHost<SpaceTree>(grid);\n\t\tconst srcFields = row ? row.rowDatas : spaceTree.datas.rootSrcFields;\n\t\tif (!srcFields) return EGridDropPos.none;\n\t\tconst srcUriType = ITEM.getSrcUriType(srcFields.srcUri);\n\t\tif (spaceTree.datas.hideItemFolderContent) {\n\t\t\t//dropable que sur les espaces.\n\t\t\tif (srcUriType !== \"space\") return EGridDropPos.none;\n\t\t} else {\n\t\t\t//dropables, les items de famille \"folder\" et les res (de srcSt folder).\n\t\t\tif (srcUriType === \"item\" && !spaceTree.wsp.wspMetaUi.getItemType(srcFields.itModel).isFamily(EItemTypeFamily.folder, EItemTypeFamily.undef, EItemTypeFamily.other)) {\n\t\t\t\treturn EGridDropPos.none;\n\t\t\t}\n\t\t}\n\t\tif (!spaceTree.reg.hasPermission(\"action.src#importTo\", srcFields.srcRoles, undefined, srcFields.srcRi)) {\n\t\t\treturn EGridDropPos.none;\n\t\t}\n\t\tconst transfer = ITEM.getShortDescsTransferFromDragSession(spaceTree.reg, ev.dataTransfer, {targetSrcType: srcUriType === \"space\" ? \"itemOrSpace\" : \"res\", canCreate: true}, grid);\n\t\tconst ctx = {\n\t\t\tshortDescs: [srcFields] as JSrcFields[],\n\t\t\treg: spaceTree.reg,\n\t\t\temitter: grid,\n\t\t\tme: spaceTree\n\t\t} as ISpaceTreeCtx;\n\t\tconst act = SpaceTreePaste.getProxiedAction(ctx, transfer, !ACTION.isCopyOverMove(ev));\n\t\tif (!act) return EGridDropPos.none;\n\t\tctx.shortDescs = transfer.shortDescs;\n\t\tif (act && act.isAvailable(ctx)) {\n\t\t\tev.dataTransfer.dropEffect = (act as IMoveAction).isMove ? 'move' : 'copy';\n\t\t\treturn EGridDropPos.over;\n\t\t}\n\t\treturn EGridDropPos.none;\n\t},\n\n\tasync dropOnRow(ev: DragEvent, grid: IGrid, row: GridDataRowJson<JSrcFields>, line: HTMLElement, pos: EGridDropPos) {\n\t\tconst spaceTree = DOMSH.findHost<SpaceTree>(grid);\n\t\tconst srcFields = row ? row.rowDatas : spaceTree.datas.rootSrcFields;\n\t\tconst transfer = ITEM.getShortDescsTransferFromDragSession(spaceTree.reg, ev.dataTransfer, {targetSrcType: ITEM.getSrcUriType(srcFields.srcUri) === \"space\" ? \"itemOrSpace\" : \"res\", canCreate: true}, grid);\n\t\tconst ctx = {\n\t\t\tshortDescs: [srcFields] as JSrcFields[],\n\t\t\treg: spaceTree.reg,\n\t\t\temitter: grid,\n\t\t\tme: spaceTree\n\t\t} as ISpaceTreeCtx;\n\t\tconst act = SpaceTreePaste.getProxiedAction(ctx, transfer, !ACTION.isCopyOverMove(ev) /*ev.dataTransfer.dropEffect==='move' BUG chrome 71 ?*/);\n\t\tif (act) {\n\t\t\tif (transfer.extractDatasNow) await transfer.extractDatasNow(ev.dataTransfer);\n\t\t\tctx.shortDescs = transfer.shortDescs;\n\t\t\tact.executeIfAvailable(ctx, ev);\n\t\t} else {\n\t\t\tPOPUP.showNotifInfo(`Format non autorisé`, line);\n\t\t}\n\t},\n\n\n} as IGridRowDropMgr;\n\n\n//FIXME supprimer ces actions spécialisées en utilisant InfoFocusItem et InfoSelectUris dans les implémentations génériques ?\n\n/** Force un reload au double-click sur l'item courant. Effectue un toggle sur un espace. */\nexport class SpaceTreeFocusItem extends FocusItemOrSpace {\n\n\tgetLabel(ctx: SpaceTree): string {\n\t\treturn ctx.currentDatas.getRowKeyFolderState(ctx.shortDescs[0]) === EFolderState.opened ? \"Refermer cet espace\" : super.getLabel(ctx);\n\t}\n\n\tasync execute(ctx: SpaceTree, ev?: Event) {\n\t\tif (ITEM.getSrcUriType(ctx.shortDescs[0]?.srcUri) === \"space\") {\n\t\t\tctx.currentDatas.toggleFolder(ctx.shortDescs[0]);\n\t\t} else if (ctx._currentSrcUri === ctx.shortDescs[0].srcUri) {\n\t\t\tconst wsp = ctx.reg.env.wsp;\n\t\t\treturn wsp.wspServer.wspsLive.reloadHouse(WSP.buildWspRef(wsp.code, ctx.shortDescs[0]));\n\t\t} else {\n\t\t\tsuper.execute(ctx, ev);\n\t\t}\n\t}\n}\n\n/**\n * Création d'un item (spécifique à la view SpaceTree).\n */\nexport class SpaceTreeCreateItem extends CreateItem<SpaceTree> {\n\n\tasync execute(ctx: SpaceTree, ev?: Event): Promise<JSrcFields> {\n\t\tconst sd = await super.execute(ctx, ev);\n\t\tctx.emitter.focus();\n\t\tif (sd) {\n\t\t\tif (await ctx.selectSrcUri(sd.srcUri)) {\n\t\t\t\tctx.grid.defaultAction?.executeIfAvailable(ctx);\n\t\t\t} else {\n\t\t\t\t//Echec à l'affichage dans le spaceTree, si c'est un airItem par exemple.\n\t\t\t\t//Problème : court-circuite la config de SpaceTree.grid.defaultAction\n\t\t\t\t//Configurer ce comportement ? ou appeler ctx.grid.defaultAction avec un Ctx hacké ?\n\t\t\t\tctx.reg.env.infoBroker?.dispatchInfo(new InfoFocusItem(SRC.srcRef(sd), sd), ctx.reg.env.uiRoot);\n\t\t\t}\n\t\t}\n\t\treturn sd;\n\t}\n}\n\n\n/**\n * Création d'un espace (spécifique à la view SpaceTree).\n */\nexport class SpaceTreeCreateSpace extends CreateSpace<SpaceTree> {\n\n\tasync execute(ctx: SpaceTree, ev?: Event): Promise<JSrcFields> {\n\t\tconst shortDesc = await super.execute(ctx, ev);\n\t\tctx.emitter.focus();\n\t\tif (shortDesc && await ctx.selectSrcUri(shortDesc.srcUri) && ctx.grid.defaultAction) ctx.grid.defaultAction.executeIfAvailable(ctx);\n\t\treturn shortDesc;\n\t}\n\n\tprotected getParentSpace(ctx: SpaceTree, ev?: Event): string {\n\t\treturn super.getParentSpace(ctx, ev) || ctx.uriRoot || \"\";\n\t}\n}\n\nexport class SpaceTreeRename extends RenameSrc<ISpaceTreeCtx> {\n\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<srcUri[]> {\n\t\tconst newUris = await super.execute(ctx, ev);\n\t\tctx.emitter.focus();\n\t\tif (newUris) {\n\t\t\t//Pas de possibilité actuellement coté java d'exclure notre clId de la remontée des wspChanges events sur un rename.\n\t\t\t//if (await ctx.selectSrcUri(newUri) && ctx.grid.defaultAction) ctx.grid.defaultAction.executeIfAvailable(ctx);\n\t\t\t//Donc pas d'autre solution qu'un timeout pour re-sélectionner la cible du renommage.\n\t\t\tsetTimeout(() => {\n\t\t\t\tctx.me.selectSrcUris(newUris);\n\t\t\t\topenUri(newUris, ctx);\n\t\t\t}, 300);\n\t\t}\n\t\treturn newUris;\n\t}\n}\n\nexport class SpaceTreeDuplicate extends DuplicateSrc<ISpaceTreeCtx> {\n\n\t/** Appelable dans le contexte d'un SpaceTree ou d'un SpaceTree wrappé (cf SpaceTreePaste). */\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<srcUri[]> {\n\t\tconst newUris = await super.execute(ctx, ev);\n\t\tif (newUris) {\n\t\t\t//Pas de possibilité actuellement coté java d'exclure notre clId de la remontée des wspChanges events sur un rename.\n\t\t\t//if (await ctx.selectSrcUri(newUri) && ctx.grid.defaultAction) ctx.grid.defaultAction.executeIfAvailable(ctx);\n\t\t\t//Donc pas d'autre solution qu'un timeout pour re-sélectionner la cible du renommage.\n\t\t\tsetTimeout(() => {\n\t\t\t\tctx.emitter.focus();\n\t\t\t\tctx.me.selectSrcUris(newUris);\n\t\t\t\topenUri(newUris, ctx);\n\t\t\t}, 300);\n\t\t}\n\t\treturn newUris;\n\t}\n}\n\nexport class SpaceTreeCopyTo extends CopyToSrc<ISpaceTreeCtx> {\n\n\t/** Appelable dans le contexte d'un SpaceTree ou d'un SpaceTree wrappé (cf SpaceTreePaste). */\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<srcUri[]> {\n\t\tconst newUris = await super.execute(ctx, ev);\n\t\tctx.emitter.focus();\n\t\tif (newUris) {\n\t\t\t//Pas de possibilité actuellement coté java d'exclure notre clId de la remontée des wspChanges events sur un moveTo.\n\t\t\t//await ctx.selectSrcUris(newUris);\n\t\t\t//Donc pas d'autre solution qu'un timeout pour re-sélectionner la cible du renommage.\n\t\t\tsetTimeout(() => {\n\t\t\t\tctx.me.selectSrcUris(newUris);\n\t\t\t\topenUri(newUris, ctx);\n\t\t\t}, 300);\n\t\t}\n\t\treturn newUris;\n\t}\n}\n\nexport class SpaceTreeImportTo extends ImportItemsToSrc<ISpaceTreeCtx> {\n\n\t/** Appelable dans le contexte d'un SpaceTree ou d'un SpaceTree wrappé (cf SpaceTreePaste). */\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<JSrcFields[]> {\n\t\tconst newSrcs = await super.execute(ctx, ev);\n\t\tctx.emitter.focus();\n\t\tif (newSrcs) {\n\t\t\tawait ctx.me.selectSrcUris(newSrcs.map(s => s.srcUri));\n\t\t\t//Pas de possibilité actuellement coté java d'exclure notre clId de la remontée des wspChanges events sur un moveTo.\n\t\t\t//Donc pas d'autre solution qu'un timeout pour re-sélectionner la cible du renommage.\n\t\t\t// setTimeout(() => {\n\t\t\t// \tctx.me.selectSrcUris(newSrcs);\n\t\t\t// }, 300);\n\t\t}\n\t\treturn newSrcs;\n\t}\n}\n\n\nexport class SpaceTreeMoveTo extends MoveToSrc<ISpaceTreeCtx> {\n\n\t/** Appelable dans le contexte d'un SpaceTree ou d'un SpaceTree wrappé (cf SpaceTreePaste). */\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<srcUri[]> {\n\t\tconst newUris = await super.execute(ctx, ev);\n\t\tctx.emitter.focus();\n\t\tif (newUris) {\n\t\t\t//Pas de possibilité actuellement coté java d'exclure notre clId de la remontée des wspChanges events sur un moveTo.\n\t\t\t//if (await ctx.selectSrcUri(newUri) && ctx.grid.defaultAction) ctx.grid.defaultAction.executeIfAvailable(ctx);\n\t\t\t//Donc pas d'autre solution qu'un timeout pour re-sélectionner la cible du renommage.\n\t\t\tsetTimeout(() => {\n\t\t\t\tctx.me.selectSrcUris(newUris);\n\t\t\t\topenUri(newUris, ctx);\n\t\t\t}, 300);\n\t\t}\n\t\treturn newUris;\n\t}\n}\n\n/** Cas partiluier si un seul item a été dupliqué ou déplacé on l'ouvre. */\nfunction openUri(newUris: srcUri[], ctx: ISpaceTreeCtx) {\n\tif (newUris.length === 1 && ctx.infoBroker) {\n\t\tconst uri = newUris[0];\n\t\tif (ITEM.getSrcUriType(uri) === \"item\") ctx.infoBroker.dispatchInfo(new InfoFocusItem(uri), ctx.me);\n\t}\n}\n\ninterface ISpaceTreePaste {\n\t/** false pa défaut */\n\tisCtxInitialized?: boolean\n}\n\n/**\n * Coller dans la view SpaceTree.\n * ATTENTION: Cette action n'est pas utilisable en toolbar : l'état aysnchrone du clipboard n'est pas rafraichit.\n * Utilisé en menu contextuel et racourci clavier.\n *\n * Cette implémentation est un proxy vers l'action réelle qui sera executée en asynchrone.\n * Elle sert aussi de controller central pour d'autres actions exploitant le clipboard (cf SpaceTreePasteMove).\n */\nexport class SpaceTreePaste extends SrcAction<ISpaceTreeCtx> {\n\n\t/**\n\t * A ce stade ctx.shortDescs correspond à la cible du paste.\n\t * L'action retournée attend un ctx où ctx.shortDescs = transfer.shortDescs\n\t */\n\tstatic getProxiedAction(ctx: ISpaceTreeCtx, transfer: IShortDescsTransfer | ClipboardItem[], preferMove?: boolean): Action<ISpaceTreeCtx> | null {\n\t\tif (!transfer) return null;\n\t\tif (Array.isArray(transfer)) {\n\t\t\t//Import d'un stream dans le src courant\n\t\t\tconst bestType = WriteMainStreamToSrc.findBestType(ctx, transfer);\n\t\t\tif (bestType) return new WriteMainStreamToSrc(transfer[0].getType(bestType));\n\t\t\t//Tentative de création d'item si on est sur un espace\n\t\t\tconst spaceUri = ctx.shortDescs[0]?.srcUri || \"\";\n\t\t\tconst clipboardItem = transfer[0];\n\t\t\tif (clipboardItem && ITEM.getSrcUriType(spaceUri) === \"space\") {\n\t\t\t\tconst svc = ctx.reg.getSvc<IImportInWspSvc>(\"wspImportInWsp\");\n\t\t\t\tif (svc) {\n\t\t\t\t\tconst types = clipboardItem.types;\n\t\t\t\t\tlet bestCtType: string\n\t\t\t\t\tlet bestScore = 0\n\t\t\t\t\tfor (const itemType of ctx.reg.env.wsp.wspMetaUi.getItemTypes()) {\n\t\t\t\t\t\tfor (const t of types) {\n\t\t\t\t\t\t\tconst score = itemType.matchType(t)\n\t\t\t\t\t\t\tif (score > bestScore) {\n\t\t\t\t\t\t\t\tbestScore = score;\n\t\t\t\t\t\t\t\tbestCtType = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bestCtType) {\n\t\t\t\t\t\tconst promiseBody = clipboardItem.getType(bestCtType);\n\t\t\t\t\t\tconst spaceTree = ctx.me;\n\t\t\t\t\t\tconst uiCtx = ctx.emitter;\n\t\t\t\t\t\treturn new SrcAction<ISpaceTreeCtx>(\"paste\").setLabel(\"Coller (importer)...\").requireSrcEnabledPerm(\"action.src#importTo\").setExecute(async (ctx: ISpaceTreeCtx) => {\n\t\t\t\t\t\t\tconst newSrc = await svc.importSrc(await promiseBody, {targetSrcType: \"item\", defaultUriParent: spaceUri}, ctx.reg, uiCtx);\n\t\t\t\t\t\t\tif (newSrc) {\n\t\t\t\t\t\t\t\tif (await spaceTree.selectSrcUri(newSrc.srcUri)) {\n\t\t\t\t\t\t\t\t\tspaceTree.grid.defaultAction?.executeIfAvailable(ctx);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//Echec à l'affichage dans le spaceTree, si c'est un airItem par exemple.\n\t\t\t\t\t\t\t\t\t//Problème : court-circuite la config de SpaceTree.grid.defaultAction\n\t\t\t\t\t\t\t\t\t//Configurer ce comportement ? ou appeler ctx.grid.defaultAction avec un Ctx hacké ?\n\t\t\t\t\t\t\t\t\tctx.reg.env.infoBroker?.dispatchInfo(new InfoFocusItem(SRC.srcRef(newSrc), newSrc), ctx.reg.env.uiRoot);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn newSrc;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (!transfer.isImport && !(transfer.shortDescs?.length > 0)) {\n\t\t\tif (transfer.server !== ctx.reg.env.universe.config.universeUrl.url) {\n\t\t\t\t//serveur différent (todo wspImportInterRepos)\n\t\t\t\treturn new Action<ISpaceTreeCtx>(\"paste\").setLabel(\"Coller (d'un autre entrepôt)\").setDescription(\"Il est impossible d'exploiter des items d'un autre entrepôt.\").setEnabled(false);\n\t\t\t}\n\t\t\treturn null; //pas de source trouvée dans le clipboard\n\t\t}\n\t\tif (transfer.shortDescs.findIndex((src) => TASK.isTask(src)) >= 0) {\n\t\t\t//Interdit de coller des tâches.\n\t\t\treturn null;\n\t\t}\n\t\tconst targetUri = ctx.me.extractFolderUri(ctx.shortDescs[0]);\n\t\tconst targetSrcFields = ctx.me.extractFolderSrcFields(ctx.shortDescs[0]);\n\t\tconst targetWsp = ctx.reg.env.wsp;\n\t\tif (transfer.wspCd && transfer.wspCd !== targetWsp.code) {\n\t\t\t//transfer est issu d'un wsp (pas file, stream...) qui n'est pas le notre.\n\t\t\treturn new Action<ISpaceTreeCtx>(\"paste\").setLabel(\"Coller (d'un autre atelier)\").setExecute(async (ctx: ISpaceTreeCtx) => {\n\t\t\t\tconst svcImportInterWsp = ctx.reg.getSvc<IImportInterWspSvc>(\"wspImportInterWsp\");\n\t\t\t\tif (!svcImportInterWsp) {\n\t\t\t\t\tPOPUP.showNotifInfo(\"Coller des contenus issus d'un autre atelier est impossible.\", ctx.emitter);\n\t\t\t\t} else {\n\t\t\t\t\tconst newSrcUris: srcUri[] = [];\n\t\t\t\t\tconst opts = {\n\t\t\t\t\t\trefExtItemAcceptable: false,\n\t\t\t\t\t\tdefaultUriParent: targetUri,\n\t\t\t\t\t\turiParentFrozen: true,\n\t\t\t\t\t\tallowReplace: true,\n\t\t\t\t\t\trepeatedImports: transfer.shortDescs.length > 0 ? {} : undefined\n\t\t\t\t\t} as OImportInterWspOptions\n\t\t\t\t\tfor (const sd of transfer.shortDescs) {\n\t\t\t\t\t\tconst result = await svcImportInterWsp.importSrc(transfer.wsp, sd, opts, ctx.reg, ctx.emitter)\n\t\t\t\t\t\tif (!result) break;\n\t\t\t\t\t\tnewSrcUris.push(result.srcUri);\n\t\t\t\t\t}\n\t\t\t\t\tctx.emitter.focus();\n\t\t\t\t\tif (newSrcUris.length > 0) await ctx.me.selectSrcUris(newSrcUris);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (transfer.isImport) {\n\t\t\treturn new SpaceTreeImportTo(transfer).setTarget(targetUri, 'hide');\n\t\t}\n\t\tif (transfer.shortDescs.findIndex((src) => SRC.extractUriParent(src.srcUri) !== targetUri) < 0) {\n\t\t\t//Tous les éléments du clipboard sont fils de la cible => on duplique\n\t\t\treturn new SpaceTreeDuplicate('paste').setLabel(\"Coller (dupliquer)...\");\n\t\t}\n\t\tif (transfer.shortDescs.length === 1 && transfer.shortDescs[0].srcUri === targetUri) {\n\t\t\t//Copier/coller sur le folder lui-même, on duplique\n\t\t\treturn new SpaceTreeDuplicate('paste').setLabel(\"Coller (dupliquer)...\");\n\t\t}\n\t\tif (CopyToSrc.makeTargetFilter(transfer.shortDescs)(targetUri)) {\n\t\t\t//Recopie dans cette cible possible.\n\t\t\tif (preferMove) {\n\t\t\t\treturn new SpaceTreeMoveTo('paste').setTarget(targetSrcFields || targetUri, \"hide\").setLabel(\"Coller (déplacer)\");\n\t\t\t} else {\n\t\t\t\treturn new SpaceTreeCopyTo('paste').setTarget(targetSrcFields || targetUri, \"hide\").setLabel(\"Coller (recopier)\");\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected pending: Promise<IShortDescsTransfer | false | null | ClipboardItem[]>;\n\tprotected pendingBtns: ActionBtn<ISpaceTreeCtx>[];\n\n\tconstructor() {\n\t\tsuper('paste');\n\t\tthis._label = \"Coller\";\n\t\tthis._group = \"clipboard\";\n\t}\n\n\t//A l'init, toujours inactif le temps d'analyser le clipboard en async\n\tisEnabled(ctx: ISpaceTreeCtx & ISpaceTreePaste): boolean {return ctx.isCtxInitialized ? super.isEnabled(ctx) : false}\n\n\t/** On bloque dans les barre d'outils. */\n\tbuildCustomButton(ctx: ISpaceTreeCtx, uiContext: EButtonUiContext, parent?: Element): Element | null | undefined {return uiContext === 'bar' ? null : undefined}\n\n\tasync initButtonNode(buttonNode: Element, ctx: SpaceTree) {\n\t\tif (buttonNode instanceof ActionBtn) {\n\t\t\tif (!this.pendingBtns) this.pendingBtns = [buttonNode];\n\t\t\telse this.pendingBtns.push(buttonNode);\n\t\t\tif (!this.pending) {\n\t\t\t\tthis.pending = ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter);\n\t\t\t\ttry {\n\t\t\t\t\tconst srcs = await this.pending;\n\t\t\t\t\t//console.log(\"getShortDescTransferFromClipboard::::::\", srcs);\n\t\t\t\t\tif (srcs === false) {\n\t\t\t\t\t\tPOPUP.showNotifWarning(\"L'accès au presse-papier n'est pas autorisé par votre navigateur. Modifiez les paramètres du site pour rendre opérationnelles les fonctions de copier/coller.\", buttonNode);\n\t\t\t\t\t} else if (this.pendingBtns) for (const btn of this.pendingBtns) {\n\t\t\t\t\t\t(btn.action as SpaceTreePaste | SpaceTreePasteMove).updateButton(btn, srcs);\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\t\t\t\t\tthis.pendingBtns = null;\n\t\t\t\t\tthis.pending = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateButton(btn: ActionBtn<ISpaceTreeCtx>, transfer: IShortDescsTransfer | ClipboardItem[]) {\n\t\tconst action = SpaceTreePaste.getProxiedAction(btn.actionContext, transfer);\n\t\tif (action) {\n\t\t\tconst newCtx: ISpaceTreeCtx & ISpaceTreePaste = Object.create(btn.actionContext);\n\t\t\tif (\"shortDescs\" in transfer) newCtx.shortDescs = transfer.shortDescs;\n\t\t\tbtn.resetAction(action, newCtx);\n\t\t}\n\t}\n\n\t/** Apppelé par le racourci clavier uniqument. */\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<void> {\n\t\tconst transfer = await ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter);\n\t\tif (!transfer) return;\n\t\tconst action = SpaceTreePaste.getProxiedAction(ctx, transfer);\n\t\tif (action == null) return;\n\t\tconst newCtx = Object.create(ctx);\n\t\tObject.defineProperty(newCtx, \"me\", {value: ctx.me}); //on n'a pas le droit de pointer les props d'un HTMLElement (nodeType, ...) dans une chaine de prototype\n\t\tif (\"shortDescs\" in transfer) newCtx.shortDescs = transfer.shortDescs;\n\t\taction.executeIfAvailable(newCtx, ev);\n\t}\n\n\t//on court-circuite la rééval 'isEnabled', pas calculable en synchrone.\n\tisAvailable(ctx: IShortDescCtx): boolean {return true}\n\n}\n\n/**\n * 2ème menu Coller dans la view SpaceTree, dédié au déplacement de sources (remplace le Cut).\n * ATTENTION : Ne peut être utilisé en racourci clavier, ni en toolbar.\n * Doit n'être utilisé qu'en menu contextuel (interrogation asynchrone du clipboard à l'affichage)\n */\nexport class SpaceTreePasteMove extends SpaceTreeMoveTo {\n\t/** On pointe l'action prinicpale Coller pour mutualiser l'appel au clipboard. */\n\tconstructor(public ctrl: SpaceTreePaste) {\n\t\tsuper('pasteMove');\n\t\tthis._label = \"Coller (déplacer)\";\n\t\tthis._group = \"clipboard\";\n\t\tthis.atLeastOne = false;\n\t}\n\n\t/** A l'init, toujours inactif le temps d'analyser le clipboard en async. */\n\tisEnabled(ctx: ISpaceTreeCtx & ISpaceTreePaste): boolean {return ctx.isCtxInitialized ? super.isEnabled(ctx) : false}\n\n\t/** On bloque dans les barre d'outils. */\n\tbuildCustomButton(ctx: ISpaceTreeCtx, uiContext: EButtonUiContext, parent?: Element): Element | null | undefined {return uiContext === 'bar' ? null : undefined}\n\n\t/** on redirige sur le controler unique. */\n\tinitButtonNode(buttonNode: Element, ctx: SpaceTree) {\n\t\tthis.ctrl.initButtonNode(buttonNode, ctx);\n\t}\n\n\t/** Active le bouton si un déplacement de sources est possible. */\n\tupdateButton(btn: ActionBtn<ISpaceTreeCtx>, transfer: IShortDescsTransfer | ClipboardItem[]) {\n\t\tif (!transfer || Array.isArray(transfer)) return;\n\t\tif (!transfer.shortDescs || transfer.shortDescs.length === 0 || transfer.isImport) return; //pas de source trouvée dans le clipboard\n\t\tif (transfer.shortDescs.findIndex((src) => TASK.isTask(src)) >= 0) return;\n\n\t\tconst sourceCtx: ISpaceTreeCtx & ISpaceTreePaste = Object.create(btn.actionContext);\n\t\tif (\"shortDescs\" in transfer) sourceCtx.shortDescs = transfer.shortDescs;\n\t\tsourceCtx.isCtxInitialized = true;\n\t\tbtn.resetAction(btn.action as Action<ISpaceTreeCtx>, sourceCtx);\n\t\tif (!this.isEnabled(sourceCtx)) return;\n\n\t\tconst targetCtx = btn.actionContext;\n\t\tif (targetCtx.reg.env.wsp.code !== transfer.wspCd) return; //move inter-atelier impossible.\n\t\tconst targetUri = targetCtx.me.extractFolderUri(targetCtx.shortDescs[0]);\n\t\tif (!MoveToSrc.makeTargetFilter(transfer.shortDescs)(targetUri)) return; //cible du déplacement incompatible avec les sources du clipboard\n\t\tbtn.disabled = false; //on active le bouton\n\t}\n\n\tasync execute(ctx: ISpaceTreeCtx, ev?: Event): Promise<srcUri[] | null> {\n\t\tconst targetUri = ctx.me.extractFolderUri(ctx.shortDescs[0]);\n\t\tconst transfer = await ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter);\n\t\tif (!transfer || Array.isArray(transfer)) return null;\n\t\tif (!transfer.shortDescs || transfer.shortDescs.length === 0) return null;\n\t\tif (transfer.shortDescs.findIndex((src) => TASK.isTask(src)) >= 0) return null;\n\t\t//On spécifie la target.\n\t\tthis.setTarget(targetUri, \"hide\");\n\t\tconst newCtx = Object.create(ctx);\n\t\tnewCtx.shortDescs = transfer.shortDescs;\n\t\treturn super.execute(newCtx, ev);\n\t}\n\n\t//on court-circuite la rééval 'isEnabled', pas calculable en synchrone.\n\tisAvailable(ctx: IShortDescCtx): boolean {return true}\n}\n\n\nexport class SpaceTreeCollapseAllAction extends WspAction<ISpaceTreeCtx> {\n\tconstructor(id?: string) {\n\t\tsuper(id || \"collapseAll\");\n\t\tthis._label = \"Tout refermer\";\n\t\tthis._group = \"open\";\n\t}\n\n\tisVisible(ctx: ISpaceTreeCtx): boolean {\n\t\tif (ctx.shortDescs.length == 1) return false;\n\t\tconst datas = ctx.me.currentDatas;\n\t\tif ((ctx.shortDescs.length === 0 ? datas.getDatas() : ctx.shortDescs).findIndex((sd) => datas.getRowKeyFolderState(sd) === EFolderState.opened) < 0) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\texecute(ctx: ISpaceTreeCtx, ev?: Event): any | \"noPreventDefault\" | \"noStopPropag\" | \"noStopPropag-noPreventDefault\" {\n\t\tctx.me.currentDatas.closeAllFolders(ctx.shortDescs.length > 0 ? ctx.shortDescs : undefined, false);\n\t}\n}\n\nexport class CellBuilderSpaceTree extends CellBuilderSrcIconCodeTitle {\n\n\tconstructor(public spaceTree: SpaceTree) {\n\t\tsuper(spaceTree.reg, spaceTree.wsp.wspMetaUi, false, spaceTree.wsp.srcUriItemsSortFn);\n\t}\n\n\tredrawCell(row: GridDataRowJson<JSrcFields>, root: HTMLElement): void {\n\t\t(root as JSrcFieldsPointer)._srcFields = row.rowDatas;\n\t\tlet span = root.firstElementChild as HTMLElement;\n\t\tif (!span) span = this._buildContent(row, root);\n\t\tthis.redrawIcon(row, span);\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this._getValue(row));\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this.spaceTree.showTitleLive ? this._getTitle(row) : null);\n\t}\n}\n\nconst DEBUG = false; //false\n"]}