{"version":3,"sources":["/@back@/edit/wed/wedlets/decor/decorCharLength.tsx"],"names":["WedletFork","DOM","JSX","REG","DOMSH","XA","DecorCharLength","HTMLElement","[object Object]","tpl","wedlet","this","DecorCharLengthWedlet","maxCharsAdvised","hasAttribute","Number","parseInt","getAttribute","maxChars","throwPrefix","sr","attachShadow","SHADOWDOM_INIT","wedMgr","reg","installSkin","localName","appendChild","createElement","val","children","planComputeLength","len","target","shadowRoot","lastElementChild","max","setTextContent","setAttr","node","Attr","value","length","prefix","it","ownerDocument","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","n","Text","FILTER_ACCEPT","FILTER_SKIP","FILTER_REJECT","nextNode","nodeValue","findNext","registerSkin","window","customElements","define","elt","mainWedlet","super","futureTask","msg","requestIdleCallback","deadline","docHolderAsync","isAvailable","isVirtual","redraw","docHolder","computeLen","findDomLast","wedAnchor","getDocument","console","log"],"mappings":"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","sourcesContent":["import {IElementWedlet, IWedlet, WedletFork} from \"back/edit/wed/wedlets/wedlet\";\nimport {IXmlMsg} from \"lib/edit/ot/xmlHouse\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {REG} from \"lib/commons/registry\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {XA} from \"lib/commons/xml/xAddr\";\nimport {IJmlNode, IJmlSubSet} from \"lib/commons/xml/jml\";\n\n/**\n * Widget d'affichage de la longueur d'un contenu (en charactères) avec gestion\n * d'une limite consiellée et maxixmale.\n *\n * Attributs :\n * max-chars-advised : nb de char max recommandé\n * max-chars : nb de char max autorisé\n * throw-prefix : Pour restreindre la concaténation des noeuds textes aux éléments fils containers avec ce préfixe.\n * \t\t\t\t\t\t\tex: throwPrefix=\"sc\"\n */\nclass DecorCharLength extends HTMLElement implements IElementWedlet {\n\n\twedlet: DecorCharLengthWedlet;\n\n\tmaxCharsAdvised: number;\n\tmaxChars: number;\n\n\tthrowPrefix: string | null;\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet): void {\n\t\tthis.wedlet = new DecorCharLengthWedlet(this, wedlet);\n\t\tthis.maxCharsAdvised = this.hasAttribute(\"max-chars-advised\") ? Number.parseInt(this.getAttribute(\"max-chars-advised\")) : -1;\n\t\tthis.maxChars = this.hasAttribute(\"max-chars\") ? Number.parseInt(this.getAttribute(\"max-chars\")) : -1;\n\t\tthis.throwPrefix = this.getAttribute(\"throw-prefix\");\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\twedlet.wedMgr.reg.installSkin(this.localName, sr);\n\t\tsr.appendChild(<span>...</span>);\n\t}\n\n\trefreshBindValue(val: IJmlNode | string | null, children?: IJmlSubSet) {\n\t\tthis.wedlet.planComputeLength();\n\t}\n\n\tredraw(len: number) {\n\t\tconst target = this.shadowRoot.lastElementChild;\n\t\tif (this.maxChars != -1 && len > this.maxChars) {\n\t\t\tconst max = this.maxChars;\n\t\t\tDOM.setTextContent(target, len + \" / \" + max);\n\t\t\tDOM.setAttr(target, \"title\", `Cette chaîne de ${len} caractères dépasse les ${max} autorisés.`);\n\t\t\tDOM.setAttr(this, \"state\", \"error\");\n\t\t} else if (this.maxCharsAdvised >= 0 && len > this.maxCharsAdvised) {\n\t\t\tconst max = this.maxCharsAdvised;\n\t\t\tDOM.setTextContent(target, len + \" / \" + max);\n\t\t\tDOM.setAttr(target, \"title\", `Cette chaîne de ${len} caractères dépasse les ${max} conseillés.`);\n\t\t\tDOM.setAttr(this, \"state\", \"warning\");\n\t\t} else {\n\t\t\tDOM.setTextContent(target, len + \" / \" + (this.maxCharsAdvised >= 0 ? this.maxCharsAdvised : this.maxChars));\n\t\t\tDOM.setAttr(target, \"title\", \"\");\n\t\t\tDOM.setAttr(this, \"state\", \"\");\n\t\t}\n\t}\n\n\t/** Calcule de la longueur (méthode à surcharger pour algo custom de la longueur). */\n\tcomputeLen(node: Node | Attr | null): number {\n\t\tif (node == null) return 0;\n\t\t//Si attribut : longeur de la chaine\n\t\tif (node instanceof Attr) return node.value.length;\n\t\t//Sinon, on parcours le contenu de l'élément\n\t\tlet len = 0;\n\t\tif (this.throwPrefix) {\n\t\t\tconst prefix = this.throwPrefix;\n\t\t\tconst it = (node.ownerDocument || node as Document).createTreeWalker(node, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n\t\t\t\tacceptNode(n: Text | Element): number {\n\t\t\t\t\tif (n instanceof Text) return NodeFilter.FILTER_ACCEPT;\n\t\t\t\t\treturn n.prefix === prefix ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\t\t\t})\n\t\t\tlet n: Node;\n\t\t\twhile ((n = it.nextNode()) != null) len += n.nodeValue.length;\n\t\t} else {\n\t\t\t//Sinon, somme des noeuds textes descendants\n\t\t\tDOM.findNext(node, node, (n: Node): n is Node => {\n\t\t\t\tif (n instanceof Text) len += n.nodeValue.length;\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\t\treturn len;\n\t}\n}\n\nREG.reg.registerSkin('decor-charlength', 1, /* language=CSS */ `\n\t:host {\n\t\tfont-size: 80%;\n\t\tfont-style: italic;\n\t\tcolor: var(--fade-color);\n\t\tcursor: default;\n\t}\n\n\t:host([state=warning]) {\n\t\tcolor: var(--warning-color);\n\t}\n\n\t:host([state=error]) {\n\t\tcolor: var(--error-color);\n\t}\n`);\n\nwindow.customElements.define(\"decor-charlength\", DecorCharLength);\n\nclass DecorCharLengthWedlet extends WedletFork {\n\n\tfutureTask = 0;\n\n\tconstructor(public elt: DecorCharLength, mainWedlet: IWedlet) {super(mainWedlet)}\n\n\tupdateInDescendants(msg: IXmlMsg) {\n\t\tthis.planComputeLength();\n\t}\n\n\tplanComputeLength() {\n\t\tif (this.futureTask === 0) {\n\t\t\tthis.futureTask = window.requestIdleCallback((deadline: RequestIdleDeadline) => {\n\t\t\t\tthis.futureTask = 0;\n\t\t\t\tconst wedMgr = this.wedMgr;\n\t\t\t\tif (!wedMgr.docHolderAsync.isAvailable) return;\n\t\t\t\tif (this.isVirtual()) {\n\t\t\t\t\tthis.elt.redraw(0);\n\t\t\t\t} else if (wedMgr.docHolder) {\n\t\t\t\t\tthis.elt.redraw(this.elt.computeLen(XA.findDomLast(this.wedAnchor, wedMgr.docHolder.getDocument())));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"TODO:wedMgr.docHolderAsync\", this);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n"]}