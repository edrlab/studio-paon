{"version":3,"sources":["/@back@/wsp/views/netItems.tsx"],"names":["REG","BaseAreaView","DOM","JSX","DOMSH","SRC","WSP","EWspChangesEvts","InfoCurrentItem","InfoHighlighItemSgn","InfoReqCurrentItem","ITEM","SRCDRAWER","SrcPointer","SrcPointerDblClick","SrcPointerFastSelect","SrcPointerSetterAction","ActionBtn","Button","ButtonToggle","ACTION","Action","ActionSeparator","POPUP","EFolderState","GridColTreeDef","GridDataHolderJsonTree","GridDataRowJsonTree","CellBuilderSrcIconCode","redrawSrcLine","NetItems","[object Object]","this","dataHolder","NetItemsDataHolder","shortDescs","ctxMenuActions","actions","actionContext","rect","_grid","getSelRect","emitter","srcRef","netState","root","initialized","Object","assign","idx","histo","findIndex","v","splice","unshift","length","_a","_rootSrc","setSrcRef","rebuildFromRoot","conf","dir","undefined","refresh","srcUri","init","super","_initialize","wsp","reg","env","infoBroker","itemHandlingReact","confs","fixedConf","find","entry","code","CONF_ALL_CODE","label","_b","lastDatas","buildState","ld","c","i","push","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","installSkin","headBar","appendChild","createElement","id","hidePtrItemFrom","_histoBtn","title","Ã®","icon","onclick","onClickHisto","initialize","draggable","dropable","tpl","itemCodeAloneTpl","tplOver","detailsPreviewTpl","place","defaultAction","getSvc","SINGLETON","classList","add","onSrcRefChange","drawer","setRootSrcRef","srcRefSub","_dirDescBtn","onDescBtn","_dirAscBtn","onAscBtn","_confsSelect","selected","onchange","onSelectConf","_refreshBtn","onRefresh","colDefs","primaryCol","setDefaultSort","setFlex","setMinWidth","setSortable","setCellBuilder","CellBuilderNet","wspMetaUi","srcUriItemsSortFn","setNetItems","secondaryCols","selType","columnDefs","hideHeaders","noResizableCol","autoSelOnFocus","skinScroll","defaultActionCtx","lineDrawer","setAttrBool","shadowRoot","addEventListener","ev","netItems","findHost","sel","getSelectedDatas","Array","from","reduce","set","node","src","Set","matches","dispatchEvent","CustomEvent","detail","bubbles","composed","accelKeyMgr","handleKeyboardEvent","injectSepByGroup","getPref","focusActionables","buildButtons","req","dispatchInfo","_setCurrentItem","linesNode","setAttribute","itemNets","setShortDescTransferToDragSession","preventDefault","resetShortDescTransferToDragSession","setHidden","getDir","toggleOn","skin","_ascSkin","createSkin","_descSkin","_activeSkin","replaceChild","insertBefore","scrollNode","sgnPattern","assigned","_highlightSgn","_assigned","invalidateRows","row","line","rowKey","toggle","_currentSrcUri","ensureRowVisible","parentLastDatas","lastDatasKey","getAttribute","h","info","setHighlightSgn","addConsumer","_onConnRenewed","shortDesc","onConnRenewed","bind","eventsMgr","on","_wspUriChange","onWspUriChange","closed","removeConsumer","removeListener","msg","wspCd","refreshSrc","type","s","target","uris","curr","srcs","fetchShortDescs","srcSt","itModel","setEnabled","setLabel","reverse","showPopupActionsFromEvent","setDir","setNetConf","selectedIndex","registerSkin","customElements","define","GridDataRowNetItems","key","rowDatas","_srcUsed","setDefaultOpenState","subItem","ch","setFolderSt","opening","getNetConf","itemNet","fetchSrcNetJson","fieldsLnks","linksAllowed","itemTargeted","fieldsFrom","isRowkeyAlive","newNode","fillNodesFromItemNetResp","replaceRowKey","openFolder","clearCaches","preserveOpenStates","oldTree","setDatas","getRootSrcRef","getShortDescFields","fromSubItems","concat","openNodes","async","oldNode","oldN","folderSt","opened","oldRef","newN","openFolderAsync","n","ident","stOnly","has","scanNode","refreshSrcNode","closeFolder","setCh","fields","fetchSrc","resetRowCache","grid","getOffset","resp","toFill","net","lnks","lnk","findSubItem","subIt","itSubItems","subNodes","Map","subNetNode","get","subItems","findSubItemStack","buildCh","subN","values","clear","_srcFields","span","firstElementChild","_buildContent","redrawIcon","nextElementSibling","setTextContent","_getValue","_getSpace","setAttr","_getDescription","isSubItem","previousElementSibling","iconSpan","document","space","ti","cacheHolder","srcRdr","getMainName","getIcon","sp","extractSpaceLabel"],"mappings":"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","sourcesContent":["import {IInfo, IInfoBroker, IInfoConsumer} from \"lib/commons/infos\";\nimport {ILastDatasBuilder, JLastDatas} from \"lib/commons/lastDatas\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {BaseAreaView, OBaseAreaViewInit} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {ESrcField, JSrcFields, JSrcFieldsTree, JSrcIdent, JSubItem, SRC, srcRef, srcUri} from \"lib/wsp/src\";\nimport {IWspUiEnv, JWspUriChangeMsg, WSP, Wsp} from \"lib/wsp/wsp\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {InfoCurrentItem, InfoHighlighItemSgn, InfoReqCurrentItem, IShortDescCtx, ITEM, JItemNetLnkResp, JItemNetResp, srcRefSub} from \"lib/wsp/item\";\nimport {SrcBtn, SRCDRAWER, SrcDrawer, SrcPointer, SrcPointerDblClick, SrcPointerFastSelect, SrcPointerSetterAction} from \"back/wsp/widgets/srcDrawer\";\nimport {ActionBtn, Button, ButtonToggle, OButtonToggleInit} from \"back/commons/widgets/buttons\";\nimport {AccelKeyMgr, ACTION, Action, ActionSeparator, EButtonUiContext, IAccelKeyMgrPointer, IAction} from \"lib/commons/actions\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {OpenFastFindItem} from \"back/wsp/actions/srcActions\";\nimport {Grid, OGridSmallInit} from \"back/commons/widgets/grid-tags\";\nimport {EFolderState, GridColTreeDef, GridDataHolderJsonTree, GridDataRowJsonTree} from \"back/commons/widgets/tree\";\nimport {GridColDef, IGrid, IGridDataRow, IGridLineDrawer} from \"back/commons/widgets/grid-core\";\nimport {CellBuilderSrcIconCode, JSrcFieldsPointer, redrawSrcLine} from \"back/wsp/widgets/srcGridColumns\";\nimport {GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {Bookmarks} from \"back/wsp/views/bookmarks\";\nimport {IActionable, IContextMenuActionsPointer, IFocusActionables} from \"back/commons/actionables\";\n\n\n/**\n */\nexport interface NetItems extends BaseAreaView<IRegPointer<IWspUiEnv>> {\n\tinitialize(init: ONetItemsInit): this\n}\n\nexport interface ONetItemsInit extends OBaseAreaViewInit<IRegPointer<IWspUiEnv>> {\n\t/** Pour dispatcher les demandes de focus / sÃ©lection. */\n\tinfoBroker?: IInfoBroker;\n\n\t/** RÃ©agira aux infos issues de ce broker (item courant, highlight d'items selon signature) */\n\titemHandlingReact?: IInfoBroker\n\n\t/** Liste des confs possibles. Si moins de 2 confs, aucun de menu de sel de la conf n'est affichÃ©. */\n\tconfs?: JNetItemConf[]\n\n\t/** Masque l'entÃªte avec le ptrItem du point de dÃ©part. */\n\thidePtrItemFrom?: boolean\n\n\t/** RedÃ©finition de la colonne primaire. */\n\tprimaryCol?: GridColTreeDef\n\n\t/** Colonnes secondaires Ã  ajouter du grid. */\n\tsecondaryCols?: GridColDef[]\n\n\tdefaultAction?: IAction<IShortDescCtx>;\n\n\t/** Actions pour le menuContextuel. */\n\tactions?: IAction<IShortDescCtx>[];\n\n\taccelKeyMgr?: AccelKeyMgr<IShortDescCtx>;\n\n\tlastDatas?: JLDNetItems\n}\n\ninterface JNetItemState {\n\troot?: srcRefSub\n\tdir?: 'asc' | 'desc' //si non spÃ©cifiÃ© dans la conf\n\tconf: JNetItemConf\n}\n\nexport interface JNetItemConf {\n\t/** Conf issue du modÃ¨le pour lastDatas. */\n\tcode?: string\n\n\t/** LibellÃ© localisÃ© de cette configuration (pour affichage dans le menu de choix). */\n\tlabel?: string\n\n\t/** Formule de restruction sur liens Ã  parcourir (cf eu.scenari.wsp.item.LinkNameFilter). */\n\tlinksAllowed?: string\n\n\t/** Requete de type 'match' sur les items cibles (xml de tage racine <match>, cf com.scenari.src.feature.search.SrcFeatureSearch). */\n\titemTargeted?: string\n\n\t/** Si renseignÃ©, impose la dir et Ã©limine le choix Ã  l'utilisateur. */\n\tdir?: 'desc' | 'asc'\n\n\t/**\n\t * Affichage des subItems qui sont au dÃ©part des liens au sein de l'item ou subItem parent :\n\t * - folded : replier, aucun affichage des subItems Ã  l'origine des liens (par dÃ©faut)\n\t * - flat : affichage Ã  plat des subItems Ã  l'origine des liens\n\t * - unfolded : affichage des subItems Ã  l'origine des liens en affichant la hiÃ©rarchie des subItems ancÃªtres.\n\t *\n\t * UtilisÃ© UNIQUEMENT si dir==\"desc\"\n\t */\n\tfromSubItems?: 'folded' | 'flat' | 'unfolded'\n}\n\ninterface JLDNetItems {\n\thisto: JLDNetItemsHisto[]\n}\n\ninterface JLDNetItemsHisto {\n\troot: srcRefSub\n\tconf: string | JNetItemConf\n\tdir?: 'asc' | 'desc' //si choisi par le user\n}\n\nexport class NetItems extends BaseAreaView<IRegPointer<IWspUiEnv>> implements IShortDescCtx, IInfoConsumer, ILastDatasBuilder, IFocusActionables<IShortDescCtx>, IContextMenuActionsPointer<IShortDescCtx>, IAccelKeyMgrPointer<IShortDescCtx>, IGridLineDrawer {\n\treg: IReg<IWspUiEnv>;\n\twsp: Wsp;\n\n\tstatic CONF_ALL_CODE = \"_all\";\n\n\tconfs: JNetItemConf[];\n\tinfoBroker: IInfoBroker;\n\titemHandlingReact: IInfoBroker;\n\n\tdataHolder = new NetItemsDataHolder(this);\n\n\tactions?: IAction<IShortDescCtx>[];\n\taccelKeyMgr?: AccelKeyMgr<IShortDescCtx>;\n\n\t/** boutons Ã  afficher dans la focusToolbar. */\n\tfocusActionables: IActionable<IShortDescCtx>[];\n\n\tget ctxMenuActions() {return {actions: this.actions, actionContext: this, rect: this._grid.getSelRect()}}\n\n\t/** SÃ©lection en cours des src nodes dÃ©doublonnÃ©s */\n\tshortDescs: JSrcFieldsTree[] = [];\n\n\tget emitter() {return this._grid} //on pointe le noeud focusable.\n\n\tprotected netState: JNetItemState;\n\tprotected histo: JNetItemState[];\n\n\t/** widgets html */\n\tprotected _histoBtn?: Button;\n\tprotected _rootSrc?: SrcPointer;\n\tprotected _dirAscBtn?: ButtonToggle;\n\tprotected _dirDescBtn?: ButtonToggle;\n\tprotected _confsSelect?: HTMLSelectElement;\n\tprotected _refreshBtn?: Button;\n\tprotected _ascSkin?: HTMLStyleElement;\n\tprotected _descSkin?: HTMLStyleElement;\n\tprotected _activeSkin?: HTMLStyleElement;\n\n\tprotected _grid: Grid;\n\n\t/** SrcUri actuellement \"courant\" (InfoCurrentItem) pour le repÃ©rer dans l'arbre */\n\tprotected _currentSrcUri: srcUri;\n\tprotected _highlightSgn: RegExp;\n\tprotected _assigned: srcRef;\n\n\tsetRootSrcRef(srcRef: srcRefSub) {\n\t\tif (this.netState.root == srcRef && this.initialized) return;\n\t\tthis.netState = Object.assign({}, this.netState);\n\t\tthis.netState.root = srcRef;\n\t\tif (srcRef) {\n\t\t\tconst idx = this.histo.findIndex(v => v.root === srcRef);\n\t\t\tif (idx >= 0) this.histo.splice(idx, 1);\n\t\t\tthis.histo.unshift(this.netState);\n\t\t\tif (this.histo.length > 12) this.histo.length = 12;\n\t\t}\n\t\tthis._rootSrc?.setSrcRef(srcRef);\n\t\tthis.dataHolder.rebuildFromRoot(true);\n\t}\n\n\t/** info synchrone */\n\tgetRootSrcRef(): srcRefSub {\n\t\treturn this.netState.root;\n\t}\n\n\t/** info dispo que quand root chargÃ©. */\n\tgetRootSrcUri(): srcUri | null {\n\t\treturn null; //TODO from datas\n\t\t// const sd = this._rootSrc.shortDescs[0];\n\t\t// return sd ? sd.srcUri : null;\n\t}\n\n\tsetNetConf(conf: JNetItemConf) {\n\t\tthis.netState.conf = conf;\n\t\tif (conf.dir) this.netState.dir = undefined;\n\t\tthis.refresh();\n\t\tthis.dataHolder.rebuildFromRoot(true);\n\t}\n\n\tgetNetConf() {return this.netState.conf}\n\n\tsetDir(dir: \"desc\" | \"asc\") {\n\t\tif (this.netState.conf.dir) return;\n\t\tthis.netState.dir = dir === \"asc\" ? \"asc\" : \"desc\";\n\t\tthis.refresh();\n\t\tthis.dataHolder.rebuildFromRoot(true);\n\t}\n\n\tgetDir(): \"desc\" | \"asc\" {return this.netState.conf.dir || this.netState.dir || \"desc\"}\n\n\tasync ensureRowVisible(srcUri: srcUri) {\n\t\t//TODO ensureRowVisible\n\t}\n\n\tprotected _initialize(init: ONetItemsInit) {\n\t\tsuper._initialize(init); //init this.reg, this.area, this.areaContext\n\t\tthis.wsp = this.reg.env.wsp;\n\t\tthis.infoBroker = init.infoBroker;\n\t\tthis.itemHandlingReact = init.itemHandlingReact;\n\t\tthis.confs = init.confs && init.confs.length > 0 ? init.confs : [{}];\n\n\t\t//Si on est dans le mode fixedConf non modifiable.\n\t\tconst fixedConf = this.confs.length < 2 ? this.confs[0] : null;\n\n\t\t// Ajout de l'option \"aucun filtre\" si plus d'un choix\n\t\tif (this.confs?.length >= 2 && !this.confs.find(entry => entry.code === NetItems.CONF_ALL_CODE))\n\t\t\tthis.confs.unshift({code: NetItems.CONF_ALL_CODE, label: \"Aucun filtre\"});\n\n\t\tif ((init.lastDatas as JLDNetItems)?.histo) {\n\t\t\tconst histo = (init.lastDatas as JLDNetItems).histo;\n\t\t\tif (histo.length > 0) {\n\t\t\t\tconst buildState = (ld: JLDNetItemsHisto): JNetItemState => {\n\t\t\t\t\tconst conf = fixedConf || (typeof ld.conf === \"string\" ? this.confs.find((c) => c.code === ld.conf) || this.confs[0] : ld.conf)\n\t\t\t\t\treturn {\n\t\t\t\t\t\troot: ld.root,\n\t\t\t\t\t\tconf,\n\t\t\t\t\t\tdir: conf.dir ? undefined : ld.dir //si la conf impose une dir\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.netState = buildState(histo[0]);\n\t\t\t\tthis.histo = [];\n\t\t\t\tfor (let i = 1; i < histo.length; i++) this.histo.push(buildState(histo[i]));\n\t\t\t}\n\t\t}\n\t\tif (!this.netState) this.netState = {conf: fixedConf || this.confs[0]};\n\t\tif (!this.histo) this.histo = [];\n\n\t\t//Construction Ui\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.reg.installSkin('scroll/small', sr);\n\n\t\tconst headBar = sr.appendChild(<div id=\"headBar\"/>);\n\n\t\tif (!init.hidePtrItemFrom) {\n\t\t\tthis._histoBtn = <Button title=\"Historique des derniÃ¨res racines sÃ©lectionnÃ©es\" Ã®={{\n\t\t\t\treg: this.reg,\n\t\t\t\ticon: \"/@skin@/wsp/views/netItems/histo.svg\"\n\t\t\t}} onclick={this.onClickHisto}/> as Button\n\t\t\tthis._rootSrc = new SrcPointer().initialize({\n\t\t\t\treg: this.reg,\n\t\t\t\tdraggable: true,\n\t\t\t\tdropable: true,\n\t\t\t\ttpl: SRCDRAWER.itemCodeAloneTpl,\n\t\t\t\ttplOver: SRCDRAWER.detailsPreviewTpl,\n\t\t\t\tplace: this.reg.env.place,\n\t\t\t\tdefaultAction: this.reg.getSvc(\"ptrItemDblClick\", SrcPointerDblClick.SINGLETON),\n\t\t\t});\n\t\t\tthis._rootSrc.classList.add(\"fixedIconSize\");\n\t\t\tthis._rootSrc.onSrcRefChange.add((drawer: SrcDrawer) => {\n\t\t\t\tthis.setRootSrcRef(drawer.srcRefSub);\n\t\t\t});\n\t\t\theadBar.appendChild(<div id=\"rootSel\">{this._rootSrc}{this._histoBtn}</div>);\n\t\t}\n\n\t\tif (!fixedConf || !fixedConf.dir) {\n\t\t\t//Ajout des btns de choix de dir.\n\t\t\tthis._dirDescBtn = <ButtonToggle title=\"RÃ©seau descendant\" Ã®={{\n\t\t\t\treg: this.reg,\n\t\t\t\ticon: \"/@skin@/wsp/views/netItems/descBtn.svg\"\n\t\t\t} as OButtonToggleInit} onclick={this.onDescBtn}/> as ButtonToggle\n\t\t\tthis._dirAscBtn = <ButtonToggle title=\"RÃ©seau ascendant\" Ã®={{\n\t\t\t\treg: this.reg,\n\t\t\t\ticon: \"/@skin@/wsp/views/netItems/ascBtn.svg\"\n\t\t\t} as OButtonToggleInit} onclick={this.onAscBtn}/> as ButtonToggle\n\t\t}\n\n\t\tif (!fixedConf) {\n\t\t\t//Ajout du Select de conf\n\t\t\tthis._confsSelect = <select/> as HTMLSelectElement;\n\t\t\tfor (const conf of this.confs) {\n\t\t\t\tthis._confsSelect.appendChild(<option label={conf.label} selected={conf === this.netState.conf ? \"\" : undefined}/>);\n\t\t\t}\n\t\t\tthis._confsSelect.onchange = this.onSelectConf;\n\t\t}\n\n\t\tif (!fixedConf || fixedConf.dir !== \"desc\") {\n\t\t\t//Ajout du bouton refresh\n\t\t\tthis._refreshBtn = <Button title=\"RafraÃ®chir\" Ã®={{\n\t\t\t\treg: this.reg,\n\t\t\t\ticon: \"/@skin@/commons/icons/refresh.svg\"\n\t\t\t}} onclick={this.onRefresh}/> as Button\n\t\t}\n\t\theadBar.appendChild(<div id=\"options\">{this._dirDescBtn}{this._dirAscBtn}{this._confsSelect}{this._refreshBtn}</div>);\n\n\t\tconst colDefs: GridColDef[] = [init.primaryCol || new GridColTreeDef('srcTree')\n\t\t\t.setDefaultSort(1, 'ascendant')\n\t\t\t.setFlex('1rem', 1, 1).setMinWidth('55px').setSortable(true)\n\t\t\t.setCellBuilder(new CellBuilderNet(this.reg, this.wsp.wspMetaUi, false, this.wsp.srcUriItemsSortFn).setNetItems(this))];\n\t\tif (init.secondaryCols) colDefs.push(...init.secondaryCols);\n\n\t\tthis._grid = sr.appendChild(<c-grid Ã®={{\n\t\t\tselType: 'multi',\n\t\t\treg: this.reg,\n\t\t\tcolumnDefs: colDefs,\n\t\t\tdataHolder: this.dataHolder,\n\t\t\thideHeaders: true,\n\t\t\tnoResizableCol: true,\n\t\t\tautoSelOnFocus: 'first',\n\t\t\tskinScroll: \"scroll/small\",\n\t\t\tdefaultAction: init.defaultAction,\n\t\t\tdefaultActionCtx: this,\n\t\t\tlineDrawer: this\n\t\t} as OGridSmallInit}/>) as Grid;\n\t\tif (init.secondaryCols) DOM.setAttrBool(this._grid, \"data-has-secondary-cols\", true);\n\t\tthis.reg.installSkin('wsp-src-grid', this._grid.shadowRoot);\n\n\t\tthis._grid.addEventListener('grid-select', function (this: IGrid, ev: Event) {\n\t\t\tconst netItems = DOMSH.findHost<NetItems>(this);\n\t\t\tconst sel = netItems.dataHolder.getSelectedDatas();\n\t\t\tnetItems.shortDescs = Array.from(sel.reduce((set, node) => {\n\t\t\t\tif (node.src) set.add(node.src);\n\t\t\t\treturn set;\n\t\t\t}, new Set<JSrcFields>()));\n\t\t\t//console.log(\"bookmarks.shortDescs::::\", bk.shortDescs);\n\t\t\tif (this.matches(':focus')) this.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: netItems, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis._grid.addEventListener('focus', function (this: IGrid, ev: Event) {\n\t\t\tthis.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: DOMSH.findHost(this) as Bookmarks, bubbles: true, composed: true}));\n\t\t});\n\n\t\tif (init.accelKeyMgr) {\n\t\t\tthis.accelKeyMgr = init.accelKeyMgr;\n\t\t\tthis._grid.addEventListener('keydown', (ev: KeyboardEvent) => {\n\t\t\t\tthis.accelKeyMgr.handleKeyboardEvent(ev, this);\n\t\t\t});\n\t\t}\n\n\t\tlet actions = init.actions;\n\t\tif (actions) {\n\t\t\tactions = ACTION.injectSepByGroup(actions, this.reg.getPref(\"groupOrder.wsp.shortDesc\", \"\"), this);\n\t\t\tthis.actions = actions;\n\t\t\tthis.focusActionables = ActionBtn.buildButtons(actions, this, 'bar');\n\t\t}\n\n\t\tif (init.itemHandlingReact) {\n\t\t\tconst req = new InfoReqCurrentItem();\n\t\t\tinit.itemHandlingReact.dispatchInfo(req, this);\n\t\t\tif (req.srcUri) this._setCurrentItem(req.srcUri);\n\t\t}\n\n\t\tthis._grid.linesNode.setAttribute(\"draggable\", \"true\");\n\t\tthis._grid.linesNode.addEventListener('dragstart', function (ev: DragEvent) {\n\t\t\t//console.log(ev);\n\t\t\tconst itemNets = DOMSH.findHost<NetItems>(DOMSH.findHost<Grid>(this));\n\t\t\tif (itemNets.shortDescs.length > 0) ITEM.setShortDescTransferToDragSession(itemNets, ev, 'build');\n\t\t\telse ev.preventDefault();\n\t\t});\n\t\tthis._grid.linesNode.addEventListener('dragend', ITEM.resetShortDescTransferToDragSession);\n\n\t\t//fetch\n\t\tthis.setRootSrcRef(this.netState.root);\n\t}\n\n\tprotected _refresh() {\n\t\tif (this._dirAscBtn) {\n\t\t\tif (this.netState.conf.dir) {\n\t\t\t\tDOM.setHidden(this._dirAscBtn, true);\n\t\t\t\tDOM.setHidden(this._dirDescBtn, true);\n\t\t\t} else {\n\t\t\t\tDOM.setHidden(this._dirAscBtn, false);\n\t\t\t\tDOM.setHidden(this._dirDescBtn, false);\n\t\t\t\tconst dir = this.getDir();\n\t\t\t\tthis._dirAscBtn.toggleOn = dir === \"asc\";\n\t\t\t\tthis._dirDescBtn.toggleOn = dir === \"desc\";\n\t\t\t}\n\t\t}\n\t\tconst skin = this.getDir() === \"asc\" ? this._ascSkin || (this._ascSkin = this.reg.createSkin(\"wsp-net-items/grid/asc\")) : this._descSkin || (this._descSkin = this.reg.createSkin(\"wsp-net-items/grid/desc\"));\n\t\tif (this._activeSkin !== skin) {\n\t\t\tif (this._activeSkin) this._grid.shadowRoot.replaceChild(skin, this._activeSkin);\n\t\t\telse this._grid.shadowRoot.insertBefore(skin, this._grid.scrollNode);\n\t\t\tthis._activeSkin = skin;\n\t\t}\n\t}\n\n\n\tsetHighlightSgn(sgnPattern: RegExp, assigned: srcRef) {\n\t\tthis._highlightSgn = sgnPattern;\n\t\tthis._assigned = assigned;\n\t\tthis._grid.invalidateRows();\n\t}\n\n\tredrawLine(row: GridDataRowJson<INetNode>, line: HTMLElement): void {\n\t\tconst src = row.rowKey.src;\n\t\tif (src === null) {\n\t\t\t//\"Aucun lien trouvÃ©\"\n\t\t\tline.classList.toggle('info', true);\n\t\t} else {\n\t\t\tline.classList.toggle('info', false);\n\t\t\tredrawSrcLine(this.wsp, row.rowKey.src, line, this._currentSrcUri, this._highlightSgn, this._assigned);\n\t\t}\n\t}\n\n\n\t/** Identifie l'item courant dans l'app. */\n\t_setCurrentItem(srcUri: srcUri | null) {\n\t\tthis._currentSrcUri = srcUri;\n\t\tthis._grid.invalidateRows();\n\t\tif (this._currentSrcUri) this.ensureRowVisible(this._currentSrcUri);\n\t}\n\n\tbuildLastDatas?(parentLastDatas: JLastDatas): void {\n\t\tconst lastDatasKey = this.getAttribute('last-datas');\n\t\tif (lastDatasKey) {\n\t\t\tconst ld: JLDNetItems = {histo: []};\n\t\t\tif (this.netState.root) ld.histo.push({\n\t\t\t\troot: this.netState.root,\n\t\t\t\tdir: this.netState.dir,\n\t\t\t\tconf: this.netState.conf.code || this.netState.conf\n\t\t\t}); //state en cours valide\n\t\t\tif (this.histo) for (const h of this.histo) {\n\t\t\t\tld.histo.push({\n\t\t\t\t\troot: h.root,\n\t\t\t\t\tdir: h.dir,\n\t\t\t\t\tconf: h.conf.code || h.conf\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (ld.histo.length > 0) parentLastDatas[lastDatasKey] = ld;\n\t\t}\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (info instanceof InfoCurrentItem) {\n\t\t\tthis._setCurrentItem(info.srcUri);\n\t\t} else if (info instanceof InfoHighlighItemSgn) {\n\t\t\tthis.setHighlightSgn(info.sgnPattern, info.assigned);\n\t\t}\n\t}\n\n\tonViewShown() {\n\t\tif (this.itemHandlingReact) {\n\t\t\tthis.itemHandlingReact.addConsumer(this);\n\t\t\tconst req = new InfoReqCurrentItem();\n\t\t\tthis.itemHandlingReact.dispatchInfo(req, this);\n\t\t\tthis._setCurrentItem(req.srcUri);\n\t\t\tif (!this._onConnRenewed && !this.netState.root) {\n\t\t\t\t//1er init, on prend l'item courant par dÃ©faut.\n\t\t\t\tif (req.srcUri) this._rootSrc.setSrcRef(req.srcUri, req.shortDesc);\n\t\t\t}\n\t\t}\n\t\tif (!this._onConnRenewed) {\n\t\t\t//1er init\n\t\t\tthis._onConnRenewed = this.onConnRenewed.bind(this);\n\t\t\tthis.reg.env.place.eventsMgr.on(\"onConnectionRenewed\", this._onConnRenewed);\n\t\t\tthis._wspUriChange = this.onWspUriChange.bind(this);\n\t\t\tthis.reg.env.place.eventsMgr.on(\"wspUriChange\", this._wspUriChange);\n\t\t}\n\t}\n\n\tonViewHidden(closed?: boolean): void {\n\t\tif (this.itemHandlingReact) this.itemHandlingReact.removeConsumer(this);\n\t\tif (closed) {\n\t\t\tthis.reg.env.place.eventsMgr.removeListener(\"onConnectionRenewed\", this._onConnRenewed);\n\t\t\tthis.reg.env.place.eventsMgr.removeListener(\"wspUriChange\", this._wspUriChange);\n\t\t}\n\t}\n\n\tprotected _wspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => void;\n\n\tprotected onWspUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') {\n\t\tif (msg.wspCd === this.wsp.code) this.dataHolder.refreshSrc(msg, msg.type === EWspChangesEvts.s);\n\t}\n\n\tprotected _onConnRenewed: () => void;\n\n\tprotected async onConnRenewed() {\n\t\tthis.dataHolder.rebuildFromRoot(true, true);\n\t}\n\n\tprotected async onClickHisto(this: HTMLElement, ev: MouseEvent) {\n\t\tconst target = ev.target as HTMLElement; //pour mÃ©moire aprÃ¨s async\n\t\tconst actions: IAction<SrcPointer>[] = [];\n\t\tconst netItems = DOMSH.findHost<NetItems>(this);\n\t\tif (netItems.histo.length > 0) {\n\t\t\tconst uris: srcRefSub[] = [];\n\t\t\tconst curr = netItems._rootSrc.srcRefSub;\n\t\t\tfor (let h of netItems.histo) if (h.root && h.root !== curr) uris.push(h.root);\n\t\t\tconst srcs = await WSP.fetchShortDescs(netItems.wsp, netItems, ...uris);\n\t\t\tfor (const src of srcs) {\n\t\t\t\tif (src && src.srcSt > 0 && src.itModel != null) actions.push(new SrcPointerSetterAction(src));\n\t\t\t}\n\t\t}\n\t\tif (actions.length === 0) actions.push(new Action<SrcPointer>('none').setEnabled(false).setLabel(\"Historique vide\"));\n\t\telse actions.reverse();\n\t\tactions.push(\n\t\t\tnew ActionSeparator(),\n\t\t\tnew SrcPointerFastSelect(\"selOther\" /*Autre id pour tuer accelKey*/).setLabel(\"Autre item...\")\n\t\t);\n\t\tPOPUP.showPopupActionsFromEvent({\n\t\t\treg: netItems.reg,\n\t\t\tactions,\n\t\t\tactionContext: netItems._rootSrc\n\t\t}, ev, target);\n\t}\n\n\tprotected onDescBtn(this: Button, ev: MouseEvent) {\n\t\tDOMSH.findHost<NetItems>(this).setDir(\"desc\");\n\t}\n\n\tprotected onAscBtn(this: Button, ev: MouseEvent) {\n\t\tDOMSH.findHost<NetItems>(this).setDir(\"asc\");\n\t}\n\n\tprotected onRefresh(this: Button, ev: MouseEvent) {\n\t\tDOMSH.findHost<NetItems>(this).dataHolder.rebuildFromRoot(true, true);\n\t}\n\n\tprotected onSelectConf(this: HTMLSelectElement) {\n\t\tconst netItems = DOMSH.findHost<NetItems>(this);\n\t\tnetItems.setNetConf(netItems.confs[this.selectedIndex]);\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-net-items\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t:focus-visible:not(c-grid) {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\t#headBar {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-wrap: wrap;\n\t\tborder-bottom: 1px solid var(--border-color);\n\t\tpadding: .2em;\n\t}\n\n\t#rootSel,\n\t#options {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex: 1 0 auto;\n\t}\n\n\t#options {\n\t\tjustify-content: flex-end;\n\t}\n\n\twsp-src-pointer {\n\t\tflex: 0 1 auto;\n\t\tmargin: 0;\n\t}\n\n\tselect {\n\t\tborder: 1px solid var(--border-color);\n\t\tmargin-inline: 2px;\n\t\tbackground-color: unset;\n\t\tcolor: var(--color);\n\t\tfont-size: inherit;\n\t}\n\n\tc-grid {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tbackground-color: var(--row-bgcolor);\n\t}\n`);\n\n\nREG.reg.registerSkin(\"wsp-net-items/grid/desc\", 1, /* language=CSS */ `\n\tx-twisty {\n\t\tpadding-inline-start: 1.5em !important;\n\t}\n\n\tx-twisty.opened {\n\t\tbackground: url(/@skin@/wsp/views/netItems/descTwistyOpened.svg) no-repeat center / 1.5em !important;\n\t}\n\n\tx-twisty.closed {\n\t\tbackground: url(/@skin@/wsp/views/netItems/descTwistyClosed.svg) no-repeat center / 1.5em !important;\n\t}\n\n\tx-twisty.subItem.opened {\n\t\tbackground: url(/@skin@/wsp/views/netItems/subItemTwistyOpened.svg) no-repeat center / 1.5em !important;\n\t}\n\n\tx-twisty.subItem.closed {\n\t\tbackground: url(/@skin@/wsp/views/netItems/subItemTwistyClosed.svg) no-repeat center / 1.5em !important;\n\t}\n\n\t.info > * > x-twisty {\n\t\tvisibility: hidden;\n\t}\n\n\t.info {\n\t\tcolor: var(--fade-color);\n\t\tfont-style: italic;\n\t\tmargin-inline-start: -1em;\n\t}\n\n\t/** RÃ©servation de la largeur de background-image pour qu'il n'y ait pas de superposition avec les secondary-cols */\n\t:host([data-has-secondary-cols]) .line {\n\t\tpadding-inline-end: .8rem;\n\t}\n\n\t.space {\n\t\tcolor: var(--alt1-color);\n\t\tfont-style: italic;\n\t\tmargin-inline-start: .3em;\n\t}\n`);\n\nREG.reg.registerSkin(\"wsp-net-items/grid/asc\", 1, /* language=CSS */ `\n\tx-twisty {\n\t\tpadding-inline-start: 1.5em !important;\n\t}\n\n\tx-twisty.opened {\n\t\tbackground: url(/@skin@/wsp/views/netItems/ascTwistyOpened.svg) no-repeat center / 1.5em !important;\n\t}\n\n\tx-twisty.closed {\n\t\tbackground: url(/@skin@/wsp/views/netItems/ascTwistyClosed.svg) no-repeat center / 1.5em !important;\n\t}\n\n\t.info > * > x-twisty {\n\t\tvisibility: hidden;\n\t}\n\n\t.info {\n\t\tcolor: var(--fade-color);\n\t\tfont-style: italic;\n\t\tmargin-inline-start: -1em;;\n\t}\n\n\t.space {\n\t\tcolor: var(--alt1-color);\n\t  font-style: italic;\n\t\tmargin-inline-start: .3em;\n\t}\n`);\n\ncustomElements.define(\"wsp-net-items\", NetItems);\n\nclass GridDataRowNetItems extends GridDataRowJsonTree<INetNode> {\n\tgetData(key: ESrcField): any {\n\t\tconst src = this.rowDatas.src;\n\t\treturn src ? src[key] : undefined;\n\t}\n}\n\nclass NetItemsDataHolder extends GridDataHolderJsonTree<INetNode> {\n\n\tfieldsLnks: ESrcField[];\n\tfieldsFrom?: ESrcField[];\n\n\t/** Noeud racine des this._datas. */\n\troot: INetNode;\n\n\t/** Pour refresh, set des items listÃ©s (pas des subItems), en source et ou cible des liens. */\n\tprotected _srcUsed: Set<srcRef> = new Set();\n\n\t/** Cache des itemNets recherchÃ©s */\n\n\t//protected _itemNetFetched: Map<srcRefSub, JItemNetResp> = new Map();\n\n\t/**\n\t *\n\t * @param netState todo abstraire via une interface INetState\n\t */\n\tconstructor(public netState: NetItems) {\n\t\tsuper('ch');\n\t\tthis.setDefaultOpenState((node: INetNode) => (node as ISubNetNode).subItem != null);\n\t}\n\n\tprotected newDataRow(): GridDataRowJsonTree<INetNode> {return new GridDataRowNetItems(this, null)}\n\n\tasync openFolderAsync(rowKey: INetNode): Promise<boolean> {\n\t\tif (this.ch(rowKey) === null) {\n\t\t\tconst srcRef = ITEM.srcRefSub(rowKey.src);\n\t\t\t//let itemNet = this._itemNetFetched.get(srcRef);\n\t\t\tthis.setFolderSt(rowKey, EFolderState.opening);\n\t\t\t//if (!itemNet) {\n\t\t\tconst wsp = this.netState.wsp;\n\t\t\tconst conf = this.netState.getNetConf();\n\t\t\tconst itemNet = await ITEM.fetchSrcNetJson(wsp, this.netState, srcRef, this.fieldsLnks,\n\t\t\t\tthis.netState.getDir(), true, conf.linksAllowed, conf.itemTargeted, 100, 1, this.fieldsFrom\n\t\t\t);\n\t\t\tif (!this.isRowkeyAlive(rowKey)) return false; //racecond\n\t\t\t//this._itemNetFetched.set(srcRef, itemNet);\n\t\t\t//}\n\t\t\tconst newNode: INetNode = {src: itemNet.src, ch: null};\n\t\t\tthis.fillNodesFromItemNetResp(itemNet, newNode);\n\t\t\tthis.setFolderSt(rowKey, EFolderState.closed);\n\t\t\tif (this.replaceRowKey(rowKey, newNode, false)) return super.openFolder(newNode);\n\t\t\treturn false;\n\t\t}\n\t\treturn this.openFolder(rowKey);\n\t}\n\n\t/** AppelÃ© Ã  l'init, Ã  chaque chgt de config, en cas de perte de connexion. */\n\tasync rebuildFromRoot(clearCaches?: boolean, preserveOpenStates?: boolean) {\n\t\tif (clearCaches) this.clearCaches();\n\t\tlet oldTree = preserveOpenStates ? this.root : null;\n\t\tthis.setDatas([]); //todo ifEmpty du grid\n\t\tconst srcRef = this.netState.getRootSrcRef();\n\t\tif (!srcRef) return;\n\t\t//let itemNet = this._itemNetFetched.get(srcRef);\n\t\t//if (!itemNet) {\n\t\tconst wsp = this.netState.wsp;\n\t\tconst conf = this.netState.getNetConf();\n\t\tthis.fieldsLnks = wsp.getShortDescFields();\n\t\tconst dir = this.netState.getDir();\n\t\tthis.fieldsFrom = dir === \"desc\" && (conf.fromSubItems === \"flat\" || conf.fromSubItems === \"unfolded\") ? this.fieldsLnks.concat(\"itSubItems\") : undefined;\n\t\tconst itemNet = await ITEM.fetchSrcNetJson(wsp, this.netState, srcRef, this.fieldsLnks,\n\t\t\tdir, true, conf.linksAllowed, conf.itemTargeted, 100, 1, this.fieldsFrom\n\t\t);\n\t\tif (srcRef !== this.netState.getRootSrcRef()) return; //raceCond\n\t\t//this._itemNetFetched.set(srcRef, itemNet);\n\t\t//}\n\t\tthis.root = {src: itemNet.src, ch: null};\n\t\tthis._srcUsed.add(SRC.srcRef(itemNet.src));\n\t\tthis.fillNodesFromItemNetResp(itemNet, this.root);\n\t\tthis.setDatas(this.root.ch || []);\n\t\tif (oldTree) {\n\t\t\t//On rÃ©ouvre les noeuds\n\t\t\tconst openNodes = async (oldNode: INetNode, newNode: INetNode) => {\n\t\t\t\tif (newNode.ch == null) return; // pas de fils pour newNode\n\t\t\t\tfor (let oldN of oldNode.ch) {\n\t\t\t\t\tif (!oldN.src || this.folderSt(oldN) !== EFolderState.opened) continue;\n\t\t\t\t\t//oldN ouvert, on cherche newN\n\t\t\t\t\tconst oldRef = SRC.srcRef(oldN.src);\n\t\t\t\t\tfor (let newN of newNode.ch) {\n\t\t\t\t\t\tif (SRC.srcRef(newN.src) === oldRef) {\n\t\t\t\t\t\t\tawait this.openFolderAsync(newN)\n\t\t\t\t\t\t\tnewN = newNode.ch.find((n) => n.src && SRC.srcRef(n.src) === oldRef);\n\t\t\t\t\t\t\tawait openNodes(oldN, newN);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait openNodes(oldTree, this.root);\n\t\t}\n\t}\n\n\trefreshSrc(ident: JSrcIdent, stOnly?: boolean) {\n\t\tif (!this.root) return;\n\t\tconst srcRef = SRC.srcRef(ident);\n\t\tif (!this._srcUsed.has(srcRef)) return; //item pas dans le rÃ©seau affichÃ©\n\t\tconst scanNode = (node: INetNode) => {\n\t\t\tif (node.src && SRC.srcRef(node.src) === srcRef) {\n\t\t\t\tif (node.ch === null) {\n\t\t\t\t\t//Fils non calculÃ©s, on ne refresh que le node.\n\t\t\t\t\tthis.refreshSrcNode(node);\n\t\t\t\t} else if (this.netState.getDir() === \"asc\" || stOnly) {\n\t\t\t\t\t//Fils calculÃ©s, mais liens ascendants ou chgt de st uniquement\n\t\t\t\t\t// on ne refresh que le node.\n\t\t\t\t\tthis.refreshSrcNode(node);\n\t\t\t\t\t// on poursuit le scan\n\t\t\t\t\tfor (const ch of node.ch) scanNode(ch);\n\t\t\t\t} else {\n\t\t\t\t\t//Fils calculÃ©s et liens descendants\n\t\t\t\t\tif (node === this.root) {\n\t\t\t\t\t\tthis.rebuildFromRoot(true, true);\n\t\t\t\t\t} else if (this.folderSt(node) === EFolderState.opened) {\n\t\t\t\t\t\t//on refresh l'itemNet complet.\n\t\t\t\t\t\tthis.closeFolder(node);\n\t\t\t\t\t\tthis.openFolderAsync(node);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//dossier clos, on purge le calcul des fils\n\t\t\t\t\t\tthis.setCh(node, null); // Ã  recalculer.\n\t\t\t\t\t\tthis.setFolderSt(node, EFolderState.closed);\n\t\t\t\t\t\tthis.refreshSrcNode(node);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node.ch) for (const ch of node.ch) scanNode(ch);\n\t\t}\n\t\tscanNode(this.root);\n\t}\n\n\tprotected async refreshSrcNode(node: INetNode) {\n\t\tconst fields = await WSP.fetchSrc(this.netState.wsp, this.netState, ITEM.srcRefSub(node.src), this.fieldsFrom || this.fieldsLnks);\n\t\tif (!this.isRowkeyAlive(node)) return; //raceCond\n\t\tnode.src = fields;\n\t\tthis.resetRowCache(node);\n\t\tthis.grid?.invalidateRows(this.getOffset(node));\n\t}\n\n\tprotected fillNodesFromItemNetResp(resp: JItemNetResp, toFill: INetNode) {\n\t\t//toFill.src = resp.src; //dÃ©jÃ  renseignÃ©\n\t\ttoFill.net = resp;\n\t\tswitch (this.netState.getDir() !== \"desc\" ? \"folded\" : this.netState.getNetConf().fromSubItems || \"folded\") {\n\t\tcase \"folded\":\n\t\t\t//Pas de subItems affihcÃ©s en fils.\n\t\t\ttoFill.lnks = resp.lnks.length > 0 ? resp.lnks : undefined;\n\t\t\tbreak;\n\t\tcase \"flat\":\n\t\t\tfor (const lnk of resp.lnks) {\n\t\t\t\tconst subItem = ITEM.findSubItem(lnk.subIt, resp.src.itSubItems);\n\t\t\t\tif (!subItem) {\n\t\t\t\t\tif (!toFill.lnks) toFill.lnks = [];\n\t\t\t\t\ttoFill.lnks.push(lnk);\n\t\t\t\t} else {\n\t\t\t\t\tif (!toFill.subNodes) toFill.subNodes = new Map<string, ISubNetNode>();\n\t\t\t\t\tlet subNetNode: ISubNetNode = toFill.subNodes.get(lnk.subIt);\n\t\t\t\t\tif (!subNetNode) {\n\t\t\t\t\t\tsubNetNode = {\n\t\t\t\t\t\t\tsrc: resp.src,\n\t\t\t\t\t\t\tsubItem: subItem,\n\t\t\t\t\t\t\tlnks: [],\n\t\t\t\t\t\t\tch: null //Ã  calculer\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttoFill.subNodes.set(lnk.subIt, subNetNode);\n\t\t\t\t\t}\n\t\t\t\t\tsubNetNode.lnks.push(lnk);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"unfolded\":\n\t\t\tfor (const lnk of resp.lnks) {\n\t\t\t\tconst subItems = ITEM.findSubItemStack(lnk.subIt, resp.src.itSubItems);\n\t\t\t\tif (!subItems) {\n\t\t\t\t\tif (!toFill.lnks) toFill.lnks = [];\n\t\t\t\t\ttoFill.lnks.push(lnk);\n\t\t\t\t} else {\n\t\t\t\t\tlet curr = toFill;\n\t\t\t\t\tfor (let i = 0; i < subItems.length; i++) {\n\t\t\t\t\t\tconst subIt = subItems[i];\n\t\t\t\t\t\tif (!curr.subNodes) curr.subNodes = new Map<string, ISubNetNode>();\n\t\t\t\t\t\tlet subNetNode: ISubNetNode = curr.subNodes.get(subIt.id);\n\t\t\t\t\t\tif (!subNetNode) {\n\t\t\t\t\t\t\tsubNetNode = {\n\t\t\t\t\t\t\t\tsrc: resp.src,\n\t\t\t\t\t\t\t\tsubItem: subIt,\n\t\t\t\t\t\t\t\tch: null //Ã  calculer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcurr.subNodes.set(subIt.id, subNetNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i == subItems.length - 1) (subNetNode.lnks || (subNetNode.lnks = [])).push(lnk);\n\t\t\t\t\t\tcurr = subNetNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\tconst buildCh = (node: INetNode) => {\n\t\t\t//Construction des nodes fils\n\t\t\tnode.ch = [];\n\t\t\t// 1. SubItems\n\t\t\tif (node.subNodes) for (const subN of node.subNodes.values()) {\n\t\t\t\tnode.ch.push(subN);\n\t\t\t\tbuildCh(subN);\n\t\t\t}\n\t\t\t// 2. Links\n\t\t\tif (node.lnks) for (const lnk of node.lnks) {\n\t\t\t\tnode.ch.push({\n\t\t\t\t\tsrc: lnk.src, //cible du lien\n\t\t\t\t\tch: null //Ã  calculer\n\t\t\t\t});\n\t\t\t\tthis._srcUsed.add(SRC.srcRef(lnk.src));\n\t\t\t}\n\t\t}\n\n\t\tbuildCh(toFill);\n\t\tif (toFill.ch.length === 0) {\n\t\t\ttoFill.ch.push({src: null, ch: undefined});\n\t\t}\n\t}\n\n\tclearCaches() {\n\t\tthis._srcUsed.clear();\n\t\t//this._itemNetFetched.clear();\n\t}\n}\n\n/** Noeud reprÃ©sentant un item ou un subItem racine cible d'un lien. */\ninterface INetNode {\n\n\t/**\n\t * Src du noeud pour l'affichage des rows lorsqu'ils sont une racine d'une cible d'un lien.\n\t * Cet src est soit issu de JItemNetLnkResp.src (cible du lien amont), soit d'un refresh liÃ© Ã  un update de l'item container.\n\t *\n\t * Si null, indique une absence de noeuds fils dans le rÃ©seau.\n\t */\n\tsrc: JSrcFields | null\n\n\t/**\n\t * Liens sortants (disponible en async, une fois chargÃ©s).\n\t */\n\tnet?: JItemNetResp\n\n\t/**\n\t * En mode fromSubItems='folded', Ã©gal Ã  this.net.lnks\n\t * En mode fromSubItems='unfolded'|'flat',\n\t * \t- Si ce noeud est une racine (pas un ISubNetNode) Ã©gal aux net.lnks qui ne partent pas d'un subItem (JItemNetLnkResp.subIt==null).\n\t * \t- Si ce noeud est un ISubNetNode Ã©gal aux net.lnks qui partent de ce subItem (JItemNetLnkResp.subIt==this.subNode.id).\n\t */\n\tlnks?: JItemNetLnkResp[]\n\n\t/**\n\t * Map intermÃ©diaire pour construire les noeuds fils this.ch\n\t * En mode fromSubItems='folded', reste indÃ©fini\n\t * En mode fromSubItems='unfolded'|'flat' liste les subItems fils contenant des liens.\n\t */\n\tsubNodes?: Map<string, ISubNetNode>\n\n\t/**\n\t * Fils issus de la concatÃ©nation des noeuds construits Ã  partir de this.subNodes (ISubNetNode) et this.lnks.\n\t * null = non calculÃ© (this.net non fetchÃ©)\n\t * undefined = pas de fils\n\t */\n\tch: undefined | null | INetNode[]\n}\n\n/**\n * Pour le mode fromSubItems='unfolded' | 'flat'.\n * Noeud reprÃ©sentant un subItem interne Ã  INetNode.\n */\ninterface ISubNetNode extends INetNode {\n\t/**\n\t * L'affichage doit se limiter aux infos dans ce ISubNetNode.subNode, les infos de son INetNode.src contenant\n\t * sont dÃ©jÃ  affichÃ©es dans les rows ancÃªtres.\n\t */\n\tsubItem: JSubItem\n}\n\nclass CellBuilderNet extends CellBuilderSrcIconCode {\n\tprotected netItems: NetItems;\n\n\tsetNetItems(netItems: NetItems) {\n\t\tthis.netItems = netItems;\n\t\treturn this;\n\t}\n\n\tredrawCell(row: GridDataRowJson<any | INetNode>, root: HTMLElement): void {\n\t\t(root as JSrcFieldsPointer)._srcFields = (row.rowDatas as INetNode).src;\n\t\tlet span = root.firstElementChild as HTMLElement;\n\t\tif (!span) span = this._buildContent(row, root);\n\t\tthis.redrawIcon(row, span);\n\t\t//Code\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this._getValue(row));\n\t\t//Space\n\t\tspan = span.nextElementSibling as HTMLElement;\n\t\tDOM.setTextContent(span, this._getSpace(row));\n\n\t\tDOM.setAttr(root, \"title\", this._getDescription(row) || undefined);\n\n\t\t//On masque l'icone si row de type subItem\n\t\tconst isSubItem = (row.rowDatas as ISubNetNode).subItem != null;\n\t\tDOM.setHidden(root.firstElementChild, isSubItem); //pas d'icone si subItem\n\t\t(root.previousElementSibling as HTMLElement).classList.toggle(\"subItem\", isSubItem); //twisty != si subItem\n\t}\n\n\tprotected _buildContent(row: IGridDataRow, root: HTMLElement): HTMLElement {\n\t\t//icon\n\t\tconst iconSpan = super._buildContent(row, root);\n\t\t//code\n\t\troot.appendChild(document.createElement('span'));\n\t\t//space\n\t\tconst space = root.appendChild(document.createElement('span'));\n\t\tspace.classList.add(\"space\");\n\t\treturn iconSpan;\n\t}\n\n\tprotected _getValue(row: GridDataRowJson<any | INetNode>): string {\n\t\tconst node = row.rowDatas as INetNode;\n\t\tif ((node as ISubNetNode).subItem) return (node as ISubNetNode).subItem.ti;\n\t\tif (node.src === null) return this.netItems.getDir() === \"asc\" ? \"Aucun item rÃ©fÃ©renÃ§ant\" : \"Aucun item rÃ©fÃ©rencÃ©\";\n\t\treturn row.cacheHolder['code'] || (row.cacheHolder['code'] = this.srcRdr.getMainName(node.src, this.wspMetaUi));\n\t}\n\n\tprotected _getIcon(row: GridDataRowJson<any | INetNode>): string | null {\n\t\tconst node = row.rowDatas as INetNode;\n\t\tif ((node as ISubNetNode).subItem || node.src === null) return null;\n\t\treturn row.cacheHolder['icon'] || (row.cacheHolder['icon'] = this.srcRdr.getIcon(node.src, this.wspMetaUi));\n\t}\n\n\tprotected _getSpace(row: GridDataRowJson<any | INetNode>): string | null {\n\t\tconst node = row.rowDatas as INetNode;\n\t\tif ((node as ISubNetNode).subItem || node.src === null) return null;\n\t\tconst sp = ITEM.extractSpaceLabel(node.src.srcUri, null);\n\t\treturn row.cacheHolder['space'] || (row.cacheHolder['space'] = sp == null ? null : `(${sp})`);\n\t}\n}\n"]}