{"version":3,"sources":["/@back@/styler/views/item/testSkin.tsx"],"names":["BaseElement","MsgLabel","REG","VIEWS","DOM","JSX","DOMSH","Action","POPUP","WspsGrid","WSP","STYLER","IO","ESrcSt","SRC","FastFindItem","SearchAnd","SearchItemModel","ItemCreator","ERROR","SrcDrawerInline","Generators","ITEM","ItemDynGen","Tabs","AreaAsync","EWspChangesEvts","WSPPACK","ItemSkinClassStlTest","skinClassStl","getSkinClassStl","this","reg","env","wsp","params","skinClassStlCode","privateUri","srcRef","longDesc","[object Object]","init","findReg","itAttr_skClassStl","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","testWspBtn","createElement","id","ui-context","role","onclick","findTestWsp","addEventListener","async","ev","key","findDocumentOrShadowRoot","activeElement","setTestWsp","stopPropagation","testItemBtn","findTestItem","setTestItem","headerElt","appendChild","class","msgElt","setStandardMsg","contentElt","hidden","_onWspUriChange","onWspUriChange","bind","place","eventsMgr","on","wspCode","wspTitle","wspTypesDefList","listWspTypesDef","universe","packServer","_a","skinClass","wspTypesKeys","map","e","wspTypesListTitle","title","join","testWsp","code","label","wspServer","wspsLive","newPlace","getWsp","listenChanges","testWspReg","createSubRegMixed","uiRoot","initTestWspCtx","setMsg","waitForAvailable","isAvailable","isWspAllowed","includes","infoWsp","wspType","_b","wspOptions","find","entry","disabled","setAttrBool","testItem","innerText","skin","name","srcFields","silent","gensCodeList_item","Map","gensCodeList_dyn","undefined","filterCtxGens","itemGens","dynGens","src","findIndex","wspOption","skinClassGenerators","generators","filter","gen","forEach","rootModels","indexOf","itModel","sgn","match","set","call","gensTitles","Set","Array","of","values","sort","srcDrawer","Ã®","testItemSd","fetchShortDesc","clear","srcSt","file","tabs","vertical","skinOver","tabSkinOver","view","onViewHidden","size","dynGenGenerators","value","push","genProps","GEN_SKIN_BY_URI_PREFIX","buildWspUri","srcUri","addTab","setLabel","length","setDescription","setBodyBuilder","ctx","srcRefSub","toolbar","skinSelector","refresh","onViewBehaviour","select","gensBox","pubNodeMatchFilter","genNodeType","idx","codeGenStack","lastIndexOf","cdGen","substring","has","customDestPath","setSrc","hasTabs","me","findHost","rootModelsKeys","md","add","ct","initialize","restrictions","from","emptyBody","itemCreator","setDefaultConfigFromReg","itemTypesTree","itemTypeReducer","acc","cur","getModel","selectedItem","showMenu","initHeight","viewPortY","titleBar","barLabel","onNextClose","showNotifError","log","wspTypeWhiteList","selectedWsp","showMenuFromEvent","wspMatchFilter","gridInit","autoSelOnFocus","level","defaultAction","setExecute","findPopupableParent","close","getSelectedWsp","defaultActionOnClick","initMaxHeight","initWidth","wspCd","msg","isFatal","setCustomMsg","setHidden","fields","config","privateFolderUrl","fetchJson","qs","method","body","JSON","stringify","testWspCode","testSrcRef","headers","Content-Type","_currentLoadRequest","fetch","resp","status","lastSaveDatas","asJson","wspReg","registerSvc","uiContext","props","customFullUriDest","saveAllHouses","transform","generate","addExtraInfos","genInfo","fetchGenInfo","skins","msgSrcRef","type","r","getSrcUriType","isSubUri","visitor","options","Promise","resolve","closed","saveItemDatas","removeListener","loadItemDatas","onViewShown","customElements","define","registerSkin"],"mappings":"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","sourcesContent":["import {BaseElement, MsgLabel} from \"back/commons/basis\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView, IViewContainer, OViewVisitOptions, VIEWS} from \"lib/commons/views\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {ORemoteViewInit} from \"back/wsp/widgets/remoteView\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {Action} from \"lib/commons/actions\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {WspsGrid} from \"back/wsp/widgets/wsp/wspsGrid\";\nimport {IWspUiEnv, JWspInfoInList, JWspUriChangeMsg, WSP, Wsp} from \"lib/wsp/wsp\";\nimport {SkinClassStl, STYLER} from \"lib/styler/styler\";\nimport {IO, IResponse} from \"lib/commons/io/io\";\nimport {ESrcSt, JSrcFields, SRC, srcRef} from \"lib/wsp/src\";\nimport {FastFindItem, OFastFindItemsInit} from \"back/wsp/dialogs/fastFindItem\";\nimport {SearchAnd, SearchItemModel} from \"lib/wsp/search\";\nimport {ItemCreator} from \"back/wsp/dialogs/itemCreator\";\nimport {ItemType} from \"lib/wsp/wspMetaUi\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {SrcDrawerInline} from \"back/wsp/widgets/srcDrawer\";\nimport {Generators, OGeneratorsInit} from \"back/wsp/views/generators\";\nimport {ITEM, JGenInfo} from \"lib/wsp/item\";\nimport {IDatasItemDynGen, ItemDynGen, OItemDynGenInit} from \"back/wsp/views/item/itemDynGen\";\nimport {OTabsInit, Tabs} from \"back/commons/widgets/tabs\";\nimport {AreaAsync} from \"lib/commons/areas\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {JWspOptionDef, JWspTypeDef, WSPPACK} from \"lib/wsp/pack\";\n\n\n/**\n * View d'une res remote d'un item\n */\n\nexport interface OItemSkinClassStlTestInit extends ORemoteViewInit {\n\t/** SpÃ©cifiÃ© explicitement, ou repris dans le longDesc de l'item courant */\n\tskinClassStlCode?: string\n\treg?: IReg<IItemUiEnv>\n}\n\nexport interface OItemSkinClassPersisData {\n\ttestWspCode?: string\n\ttestSrcRef?: srcRef\n}\n\nexport class ItemSkinClassStlTest extends BaseElement implements IView, IViewContainer {\n\tpublic reg: IReg<IItemUiEnv>;\n\tprotected params: OItemSkinClassStlTestInit;\n\tprotected msgElt: MsgLabel;\n\tprotected contentElt: HTMLDivElement;\n\n\tprotected testWspBtn: Button;\n\tprotected testItemBtn: Button;\n\n\tview: IView;\n\n\t/** Wsp de test actuellement sÃ©lectionnÃ© */\n\tprivate testWsp: Wsp | null;\n\tprivate testWspReg: IReg<IWspUiEnv>;\n\n\tprivate testItem: JSrcFields | null;\n\n\tget skinClassStl(): SkinClassStl {\n\t\treturn STYLER.getSkinClassStl(this.reg.env.wsp, this.params.skinClassStlCode);\n\t}\n\n\tget privateUri(): string {\n\t\t// FIXME : on enregistre et load ces datas dans une structure custom Ã  la racine du privateFolder pour compat ODB (@see eu.scenari.wspodb.wsp.OdbWspDefinition.getPrivateDataFolder)\n\t\treturn \"/~styler/\" + SRC.srcRef(this.reg.env.longDesc) + \"/@testSkin.json\";\n\t}\n\n\t_initialize(init: OItemSkinClassStlTestInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tthis.params = init;\n\t\tif (!this.params.skinClassStlCode)\n\t\t\tthis.params.skinClassStlCode = (this.reg.env.longDesc as any).itAttr_skClassStl;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tthis.testWspBtn = <c-button id=\"selectWsp\" ui-context=\"dialog\" role=\"menu\" onclick={this.findTestWsp}/> as Button;\n\t\tthis.testWspBtn.addEventListener('keydown', async (ev: KeyboardEvent) => {\n\t\t\tif ((ev.key === 'Delete' || ev.key === 'Backspace') && this === DOMSH.findDocumentOrShadowRoot(this).activeElement) {\n\t\t\t\tawait this.setTestWsp(null);\n\t\t\t\tev.stopPropagation();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.testItemBtn = <c-button id=\"selectItem\" ui-context=\"dialog\" role=\"menu\" onclick={this.findTestItem}/> as Button;\n\t\tthis.testItemBtn.addEventListener('keydown', async (ev: KeyboardEvent) => {\n\t\t\tif ((ev.key === 'Delete' || ev.key === 'Backspace') && this === DOMSH.findDocumentOrShadowRoot(this).activeElement) {\n\t\t\t\tawait this.setTestItem(null);\n\t\t\t\tev.stopPropagation();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tconst headerElt = sr.appendChild(<div id=\"headBar\">\n\t\t\t<span class=\"headTi\">Contexte de test :</span>\n\t\t\t<span id=\"ctxWsp\">\n\t\t\t\t<label class=\"headSubTi\">Atelier</label>\n\t\t\t\t{this.testWspBtn}\n\t\t\t</span>\n\t\t\t<span id=\"levelSeparator\"/>\n\t\t\t<span id=\"ctxItem\">\n\t\t\t\t<label class=\"headSubTi\">Item</label>\n\t\t\t\t{this.testItemBtn}\n\t\t\t</span>\n\t\t</div>) as HTMLDivElement;\n\n\t\tthis.msgElt = sr.appendChild(new MsgLabel().setStandardMsg(\"loading\"));\n\n\t\tthis.contentElt = sr.appendChild(<div id=\"contentBox\" hidden/>) as HTMLDivElement;\n\n\t\tthis.setTestWsp(null);\n\n\t\tthis._onWspUriChange = this.onWspUriChange.bind(this);\n\t\tthis.reg.env.place.eventsMgr.on(\"wspUriChange\", this._onWspUriChange);\n\t}\n\n\t/**\n\t * Affectation de l'atelier de test\n\t */\n\tpublic async setTestWsp(wspCode: string, wspTitle?: string): Promise<void> {\n\t\tconst wspTypesDefList = await WSPPACK.listWspTypesDef(this.reg.env.universe.packServer, [this.skinClassStl.skinClass(this.reg.env.wsp)?.class], true);\n\t\tconst wspTypesKeys = wspTypesDefList.map(e => e.key);\n\t\tconst wspTypesListTitle = wspTypesDefList.map(e => e.title).join(\", \");\n\t\tlet title = wspTitle || wspCode;\n\n\t\tif (wspCode) {\n\t\t\tif (this.testWsp && this.testWsp.code === wspCode)\n\t\t\t\treturn;\n\n\t\t\tif (this.testWsp)\n\t\t\t\tthis.setTestItem(null);\n\n\t\t\tthis.testWspBtn.label = \"...\";\n\n\t\t\tconst place = this.reg.env.universe.wspServer.wspsLive.newPlace();\n\t\t\tthis.testWsp = place.getWsp(wspCode).listenChanges();\n\t\t\tthis.testWspReg = REG.createSubRegMixed(this.reg, this.testWsp.reg);\n\t\t\tthis.testWspReg.env.uiRoot = this;\n\t\t\tthis.testWspReg.env.place = place;\n\n\t\t\tthis.initTestWspCtx(this.testWspReg);\n\t\t\tthis.setMsg(`Chargement de l'atelier '${title}'...`, \"info\", true);\n\t\t\tawait this.testWsp.waitForAvailable();\n\t\t\tif (this.testWsp.wspTitle) title = this.testWsp.wspTitle;\n\t\t\tthis.testWspBtn.label = title;\n\t\t\tif (this.testWsp.isAvailable) {\n\t\t\t\tlet isWspAllowed = wspTypesKeys.includes(this.testWsp.infoWsp.wspType.key) || this.testWsp.infoWsp.wspOptions?.find((entry) => wspTypesKeys.includes(entry.key));\n\t\t\t\tif (isWspAllowed) {\n\t\t\t\t\tthis.testWspBtn.disabled = false;\n\t\t\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isEmpty\", false);\n\t\t\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isError\", false);\n\t\t\t\t\tthis.testItemBtn.disabled = false;\n\t\t\t\t\tawait this.setTestItem(this.testItem ? SRC.srcRef(this.testItem) : null);\n\t\t\t\t} else {\n\t\t\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isEmpty\", false);\n\t\t\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isError\", true);\n\t\t\t\t\tthis.testItemBtn.disabled = true;\n\t\t\t\t\t//await this.setTestItem(null, null, true);\n\t\t\t\t\tthis.setMsg(`L'atelier '${title}' sÃ©lectionnÃ© n'est pas compatible avec ce skin.\\nVeuillez sÃ©lectionner un atelier de test compatible avec l'un des modÃ¨les suivants : ${wspTypesListTitle}.`, \"warning\", true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isEmpty\", false);\n\t\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isError\", true);\n\t\t\t\tthis.testItemBtn.disabled = true;\n\t\t\t\tawait this.setTestItem(null, null, true);\n\t\t\t\tthis.setMsg(`L'atelier '${title}' n'est pas dans un statut valide. Veuillez en corriger les propriÃ©tÃ©s.`, \"warning\", true);\n\t\t\t}\n\t\t} else {\n\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isEmpty\", true);\n\t\t\tDOM.setAttrBool(this.testWspBtn, \"data-isError\", false);\n\t\t\t// Btn item disabled + clear\n\t\t\tthis.testItemBtn.disabled = true;\n\t\t\tawait this.setTestItem(null, null, true);\n\t\t\tthis.testWsp = null;\n\t\t\tthis.contentElt.innerText = \"\";\n\t\t\tthis.testWspBtn.label = \"SÃ©lectionner un atelier...\";\n\t\t\tthis.testItem = null;\n\t\t\tconst skin = this.skinClassStl.skinClass(this.reg.env.wsp).name;\n\t\t\tthis.setMsg(wspTypesListTitle ?\n\t\t\t\t`Veuillez sÃ©lectionner un atelier de test compatible avec l'un des modÃ¨les suivants : ${wspTypesListTitle}.`\n\t\t\t\t: `Veuillez installer un modÃ¨le documentaire exploitant le skin '${skin}'.`, \"info\", true);\n\t\t}\n\t}\n\n\t/**\n\t * Affectation l'item de test\n\t */\n\tpublic async setTestItem(srcRef: srcRef, srcFields?: JSrcFields, silent?: boolean): Promise<void> {\n\t\t// GÃ©nÃ©rateurs de l'item\n\t\tconst gensCodeList_item: Map<string, string> = new Map();\n\t\t// GÃ©nÃ©rateurs interactifs\n\t\tconst gensCodeList_dyn: Map<string, string> = new Map();\n\n\t\tif (silent === undefined && this.testItemBtn.disabled)\n\t\t\tsilent = true;\n\n\t\tlet wspTypesDefList: (JWspTypeDef | JWspOptionDef)[];\n\n\t\tfunction filterCtxGens(this: ItemSkinClassStlTest, itemGens: Map<string, string>, dynGens: Map<string, string>, wsp: Wsp, src?: JSrcFields) {\n\t\t\tif (wspTypesDefList) {\n\t\t\t\tfor (const entry of wspTypesDefList) {\n\t\t\t\t\tif (!(wsp.infoWsp.wspType.key === entry.key || wsp.infoWsp.wspOptions?.findIndex(wspOption => wspOption.key === entry.key) > -1))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tconst skinClassGenerators = entry.generators?.filter((gen) => gen.skinClass === this.skinClassStl.class);\n\t\t\t\t\tif (skinClassGenerators) {\n\t\t\t\t\t\tskinClassGenerators.forEach((gen) => {\n\t\t\t\t\t\t\tif (!src || gen.rootModels?.indexOf(src.itModel) > -1) {\n\t\t\t\t\t\t\t\tif (gen.sgn.match(/.*#dyn\\b.*/)) dynGens.set(gen.code, gen.name);\n\t\t\t\t\t\t\t\telse itemGens.set(gen.code, gen.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.testWsp) {\n\t\t\twspTypesDefList = await WSPPACK.listWspTypesDef(this.reg.env.universe.packServer, [this.skinClassStl.skinClass(this.reg.env.wsp)?.class], true);\n\t\t\tfilterCtxGens.call(this, gensCodeList_item, gensCodeList_dyn, this.testWsp);\n\t\t}\n\n\t\tlet gensTitles = [...new Set(Array.of(...gensCodeList_item.values(), ...gensCodeList_dyn.values()))].sort().join(\", \");\n\n\t\tif (this.testWsp && srcRef) {\n\t\t\tthis.testItemBtn.innerText = \"\";\n\t\t\tDOM.setAttrBool(this.testItemBtn, \"data-isEmpty\", false);\n\t\t\tDOM.setAttrBool(this.testItemBtn, \"data-isError\", false);\n\n\t\t\tconst srcDrawer = this.testItemBtn.appendChild(<SrcDrawerInline Ã®={{\n\t\t\t\treg: this.testWspReg,\n\t\t\t\tsrcRef: srcRef,\n\t\t\t}}/>);\n\t\t\tconst testItemSd = await this.testWsp.fetchShortDesc(srcRef);\n\n\t\t\t// Refresh de la liste des gens pour CE srcRef\n\t\t\t// Remarque : il peut rester des faux positifs (gen masquÃ© cotÃ© UI (sub gen, gen pas dans un onglet ou conditionn Ã  une perm, ...)\n\t\t\tgensCodeList_item.clear();\n\t\t\tgensCodeList_dyn.clear();\n\t\t\tfilterCtxGens.call(this, gensCodeList_item, gensCodeList_dyn, this.testWsp, testItemSd);\n\t\t\tgensTitles = [...new Set(Array.of(...gensCodeList_item.values(), ...gensCodeList_dyn.values()))].sort().join(\", \");\n\n\t\t\tif (testItemSd.srcSt === ESrcSt.file) {\n\t\t\t\tthis.testItem = testItemSd;\n\t\t\t\tthis.contentElt.innerText = \"\";\n\t\t\t\tif (!silent) this.setMsg(\"Chargement en cours...\", \"info\", true);\n\t\t\t\tconst tabs = this.contentElt.appendChild(<Tabs id=\"tabs\" Ã®={{\n\t\t\t\t\tvertical: true,\n\t\t\t\t\tskinOver: \"styler-testSkin/tabs\",\n\t\t\t\t\ttabSkinOver: \"styler-testSkin/tab\"\n\t\t\t\t} as OTabsInit<any>}/>) as Tabs;\n\t\t\t\tif (this.view) VIEWS.onViewHidden(this.view, true);\n\t\t\t\tthis.view = tabs;\n\n\t\t\t\t// Tab 'dynGen'\n\t\t\t\tif (gensCodeList_dyn.size > 0) {\n\t\t\t\t\tconst dynGenGenerators: IDatasItemDynGen[] = [];\n\t\t\t\t\tgensCodeList_dyn.forEach((value, key) => {\n\t\t\t\t\t\tdynGenGenerators.push({\n\t\t\t\t\t\t\tcode: key,\n\t\t\t\t\t\t\tlabel: value,\n\t\t\t\t\t\t\tgenProps: {\n\t\t\t\t\t\t\t\tskin: ITEM.GEN_SKIN_BY_URI_PREFIX + WSP.buildWspUri(this.reg.env.wsp.code, this.reg.env.longDesc.srcUri) + \";transform=facet&facet=resolveSkin\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tawait tabs.addTab(new AreaAsync<ItemSkinClassStlTest>()\n\t\t\t\t\t\t.setLabel(dynGenGenerators.length > 1 ? \"AperÃ§us\" : \"AperÃ§u\")\n\t\t\t\t\t\t.setDescription(\"Skin exploitÃ© par des publications dynamiques\")\n\t\t\t\t\t\t.setBodyBuilder((ctx) => {\n\t\t\t\t\t\t\treturn <ItemDynGen Ã®={{\n\t\t\t\t\t\t\t\treg: this.testWspReg,\n\t\t\t\t\t\t\t\tsrcRef: ITEM.srcRefSub(testItemSd),\n\t\t\t\t\t\t\t\tgenerators: dynGenGenerators,\n\t\t\t\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\t\t\t\tskinSelector: false,\n\t\t\t\t\t\t\t\t\trefresh: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonViewBehaviour: \"refresh\",\n\t\t\t\t\t\t\t} as OItemDynGenInit}/>\n\t\t\t\t\t\t}), {select: true});\n\t\t\t\t}\n\n\t\t\t\t// Tab 'generators'\n\t\t\t\tif (gensCodeList_item.size > 0) {\n\t\t\t\t\tawait tabs.addTab(new AreaAsync<ItemSkinClassStlTest>()\n\t\t\t\t\t\t.setLabel(\"Publications\")\n\t\t\t\t\t\t.setDescription(\"Skin exploitÃ© par des publications\")\n\t\t\t\t\t\t.setBodyBuilder((ctx) => {\n\t\t\t\t\t\t\tconst gensBox = <Generators Ã®={{\n\t\t\t\t\t\t\t\treg: this.testWspReg,\n\t\t\t\t\t\t\t\tpubNodeMatchFilter: (entry) => {\n\t\t\t\t\t\t\t\t\tif(entry.genNodeType === 'dir') return true;\n\t\t\t\t\t\t\t\t\tconst idx = entry.codeGenStack.lastIndexOf('_');\n\t\t\t\t\t\t\t\t\tconst cdGen = idx < 0 ? entry.codeGenStack : entry.codeGenStack.substring(idx + 1);\n\t\t\t\t\t\t\t\t\treturn gensCodeList_item.has(cdGen);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcustomDestPath: WSP.buildWspUri(this.reg.env.wsp.code, this.reg.env.longDesc.srcUri + '/' + WSP.buildWspUri(this.testWsp.code, this.testItem.srcUri)),\n\t\t\t\t\t\t\t} as OGeneratorsInit}/> as Generators;\n\t\t\t\t\t\t\tgensBox.setSrc(testItemSd);\n\t\t\t\t\t\t\treturn gensBox;\n\t\t\t\t\t\t}), {select: gensCodeList_dyn.size === 0});\n\t\t\t\t}\n\t\t\t\tif (tabs.hasTabs()) {\n\t\t\t\t\tif (!silent) this.setMsg(null, null, false);\n\t\t\t\t} else if (!silent) this.setMsg(gensTitles ? `Veuillez sÃ©lectionner un item porteur d'un gÃ©nÃ©rateur Ã  tester : ${gensTitles}.` : \"Veuillez sÃ©lectionner un item porteur d'un gÃ©nÃ©rateur Ã  tester.\", \"warning\", true);\n\t\t\t} else {\n\t\t\t\tDOM.setAttrBool(this.testItemBtn, \"data-isEmpty\", false);\n\t\t\t\tDOM.setAttrBool(this.testItemBtn, \"data-isError\", true);\n\t\t\t\tif (!silent) this.setMsg(`L'item sÃ©lectionnÃ© est invalide.`, \"warning\", true);\n\t\t\t}\n\t\t} else {\n\t\t\tDOM.setAttrBool(this.testItemBtn, \"data-isEmpty\", true);\n\t\t\tDOM.setAttrBool(this.testItemBtn, \"data-isError\", false);\n\t\t\tthis.testItemBtn.innerText = \"SÃ©lectionner un item...\";\n\t\t\tthis.testItem = null;\n\t\t\tif (!silent) this.setMsg(gensTitles ? `Veuillez sÃ©lectionner un item porteur d'un gÃ©nÃ©rateur Ã  tester : ${gensTitles}.` : \"Veuillez sÃ©lectionner un item porteur d'un gÃ©nÃ©rateur Ã  tester.\", \"info\", true);\n\t\t}\n\t}\n\n\tprivate async findTestItem(this: HTMLButtonElement, ev: Event) {\n\t\ttry {\n\t\t\tif (this.disabled) return;\n\n\t\t\tconst me = DOMSH.findHost<ItemSkinClassStlTest>(this);\n\t\t\tconst wspTypesDefList = await WSPPACK.listWspTypesDef(me.reg.env.universe.packServer, [me.skinClassStl.skinClass(me.reg.env.wsp)?.class], true);\n\n\t\t\tconst rootModelsKeys: Set<string> = new Set();\n\n\t\t\tif (me.testWsp) {\n\t\t\t\twspTypesDefList.forEach((entry) => {\n\t\t\t\t\tconst skinClassGenerators = entry.generators?.filter((gen) => gen.skinClass === me.skinClassStl.class);\n\t\t\t\t\tif (skinClassGenerators && (me.testWsp.infoWsp.wspType.key === entry.key || me.testWsp.infoWsp.wspOptions?.findIndex(wspOption => wspOption.key === entry.key) > -1)) {\n\t\t\t\t\t\tskinClassGenerators?.forEach((gen) => {\n\t\t\t\t\t\t\tgen.rootModels?.forEach(md => rootModelsKeys.add(md))\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst ct = new FastFindItem().initialize({\n\t\t\t\treg: me.testWsp.reg,\n\t\t\t\trestrictions: new SearchAnd(\n\t\t\t\t\tnew SearchItemModel(Array.from(rootModelsKeys))\n\t\t\t\t),\n\t\t\t\temptyBody: () => <span>Aucun item disponible pour ce skin</span>,\n\t\t\t\titemCreator: ItemCreator.setDefaultConfigFromReg(me.reg, {\n\t\t\t\t\titemTypesTree: {\n\t\t\t\t\t\titemTypeReducer: (acc: ItemType[], cur: ItemType) => {\n\t\t\t\t\t\t\tif (rootModelsKeys.has(cur.getModel())) acc.push(cur);\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t} as OFastFindItemsInit);\n\t\t\tconst wspTitle = me.testWsp.wspTitle;\n\t\t\tconst selectedItem = await POPUP.showMenu<JSrcFields>(ct, {initHeight: \"15em\", viewPortY: \"middle\"}, this, {\n\t\t\t\ttitleBar: {barLabel: {label: `SÃ©lection de l'item de test dans l'atelier ${wspTitle}`}}\n\t\t\t}).onNextClose();\n\n\t\t\tif (selectedItem) return me.setTestItem(SRC.srcRef(selectedItem), selectedItem);\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifError(\"Ãchec Ã  la recherche de l'item\", this);\n\t\t\tERROR.log(e);\n\t\t}\n\t}\n\n\t/**\n\t * Recherche et affecte l'atelier de test\n\t * @param ev\n\t * @private\n\t */\n\tprivate async findTestWsp(this: HTMLButtonElement, ev: Event): Promise<void> {\n\t\ttry {\n\t\t\tif (this.disabled) return;\n\n\t\t\tconst me = DOMSH.findHost<ItemSkinClassStlTest>(this);\n\t\t\tconst wspTypesDefList = await WSPPACK.listWspTypesDef(me.reg.env.universe.packServer, [me.skinClassStl.skinClass(me.reg.env.wsp)?.class], true);\n\n\t\t\tconst wspTypeWhiteList: string[] = [];\n\t\t\twspTypesDefList.forEach((entry) => wspTypeWhiteList.push(entry.key));\n\t\t\tconst skin = me.skinClassStl.skinClass(me.reg.env.wsp).name;\n\n\t\t\tconst selectedWsp = await POPUP.showMenuFromEvent<JWspInfoInList | null>(new WspsGrid().initialize({\n\t\t\t\treg: me.reg,\n\t\t\t\twspMatchFilter: (ctx) => {\n\t\t\t\t\tif (ctx.wspType && wspTypeWhiteList.includes(ctx.wspType.key)) return true;\n\t\t\t\t\tif (ctx.wspOptions) for (const wspOption of ctx.wspOptions)\n\t\t\t\t\t\tif (wspTypeWhiteList.includes(wspOption.key)) return true;\n\t\t\t\t},\n\t\t\t\tgridInit: {\n\t\t\t\t\tautoSelOnFocus: 'first',\n\t\t\t\t\temptyBody: (): Node => <c-msg label={`Aucun atelier exploitant le skin '${skin}'`} level=\"info\"/>\n\t\t\t\t},\n\t\t\t\tdefaultAction: new Action<WspsGrid>().setExecute((ctx) => POPUP.findPopupableParent(ctx).close(ctx.getSelectedWsp())),\n\t\t\t\tdefaultActionOnClick: true,\n\t\t\t}), ev || me, me, {}, {initMaxHeight: '50vh', initWidth: '10em'}).onNextClose();\n\t\t\tif (selectedWsp) await me.setTestWsp(selectedWsp.wspCd, selectedWsp.title);\n\t\t} catch (e) {\n\t\t\tPOPUP.showNotifError(\"Ãchec Ã  la recherche de l'atelier\", this);\n\t\t\tawait ERROR.log(e);\n\t\t}\n\t}\n\n\tprivate setMsg(msg: string, level?: 'info' | 'error' | 'warning' | 'valid' | null, isFatal: boolean = false) {\n\t\tthis.msgElt.setCustomMsg(msg, level);\n\t\tif (this.contentElt) DOM.setHidden(this.contentElt, isFatal);\n\t}\n\n\t/**\n\t * Persistance de la config de test dans le privateFolder\n\t * @private\n\t */\n\tprivate async saveItemDatas() {\n\t\t// FIXME : on enregistre et load ces datas dans une structure custom Ã  la racine du privateFolder pour compat ODB (@see eu.scenari.wspodb.wsp.OdbWspDefinition.getPrivateDataFolder)\n\t\t// FIXME : refUri = this.reg.env.longDesc.srcUri\n\t\tconst fields = await this.reg.env.wsp.wspServer.config.privateFolderUrl.fetchJson<JSrcFields>(IO.qs(\"cdaction\", \"PutSrc\", \"format\", \"JSON\", \"fields\", \"srcDt\", \"param\", this.reg.env.wsp.code, \"refUri\", \"\", \"privateUri\", this.privateUri), {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttestWspCode: this.testWsp ? this.testWsp.code : null,\n\t\t\t\ttestSrcRef: this.testItem ? SRC.srcRef(this.testItem) : null,\n\t\t\t} as OItemSkinClassPersisData),\n\t\t\theaders: {\"Content-Type\": \"application/json\"}\n\t\t});\n\t}\n\n\tprivate async loadItemDatas() {\n\t\t// FIXME : on enregistre et load ces datas dans une structure custom Ã  la racine du privateFolder pour compat ODB (@see eu.scenari.wspodb.wsp.OdbWspDefinition.getPrivateDataFolder)\n\t\t// FIXME : refUri = this.reg.env.longDesc.srcUri\n\t\tif (!this._currentLoadRequest) {\n\t\t\tthis._currentLoadRequest = this.reg.env.wsp.wspServer.config.privateFolderUrl.fetch(IO.qs(\"cdaction\", \"GetSrc\", \"format\", \"stream\", \"fields\", \"srcDt\", \"param\", this.reg.env.wsp.code, \"refUri\", \"\", \"privateUri\", this.privateUri), 'json');\n\t\t\tconst resp = await this._currentLoadRequest;\n\t\t\tif (resp.status === 200) {\n\t\t\t\tconst lastSaveDatas = resp.asJson;\n\t\t\t\tawait this.setTestWsp(lastSaveDatas.testWspCode);\n\t\t\t\tif (lastSaveDatas.testWspCode) await this.setTestItem(lastSaveDatas.testSrcRef);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _currentLoadRequest: Promise<IResponse>;\n\n\tprivate initTestWspCtx(wspReg: IReg<IWspUiEnv>): void {\n\t\t/**\n\t\t * Hack des actions de GÃ©nÃ©ration :\n\t\t * \t- fullUri du skin Ã  tester\n\t\t */\n\t\twspReg.registerSvc('gen.action.generate', 1, async (wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef, codeGenStack: string, props: Jsonisable, customFullUriDest?: string) => {\n\t\t\tawait this.reg.env.wsp.wspServer.wspsLive.saveAllHouses();\n\t\t\tlet transform = \"transform=facet&facet=resolveSkin\";\n\t\t\tprops.skin = ITEM.GEN_SKIN_BY_URI_PREFIX + WSP.buildWspUri(this.reg.env.wsp.code, this.reg.env.longDesc.srcUri) + \";\" + transform;\n\t\t\treturn ITEM.generate(wsp, uiContext, srcRef, codeGenStack, props, customFullUriDest);\n\t\t});\n\t\twspReg.registerSvc('gen.action.genInfo', 1, async (wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef, codeGenStack: string, addExtraInfos?: boolean, customFullUriDest?: string): Promise<JGenInfo> => {\n\t\t\tlet genInfo = await ITEM.fetchGenInfo(wsp, uiContext, srcRef, codeGenStack, addExtraInfos, customFullUriDest);\n\t\t\tgenInfo.skins = null;// seul le skin Ã  tester est proposÃ©\n\t\t\treturn genInfo;\n\t\t});\n\n\t}\n\n\t/** MÃ©moire du listener des WspChanges pour delete. */\n\tprotected _onWspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => void;\n\n\tprotected onWspUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') {\n\t\tif (this.reg.env.longDesc) {\n\t\t\tconst msgSrcRef = SRC.srcRef(msg);\n\t\t\tif (msg.type === EWspChangesEvts.r) {\n\t\t\t\t//Traitement du remove\n\t\t\t\tif (SRC.srcRef(this.reg.env.longDesc) === msgSrcRef || ITEM.getSrcUriType(msg.srcUri) === 'space' && SRC.isSubUri(msg.srcUri, this.reg.env.longDesc.srcUri)) {\n\t\t\t\t\tthis.onViewHidden(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*else if (msg.type === EWspChangesEvts.u && SRC.srcRef(this.reg.env.longDesc) === msgSrcRef) {\n\t\t\t\tthis.refreshUi();\n\t\t\t}*/\n\t\t}\n\t}\n\n\tvisitViews(visitor: (view: IView) => any, options?: OViewVisitOptions): any {\n\t\tif (this.view) return visitor(this.view);\n\t}\n\n\tvisitViewsAsync(visitor: (view: IView) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn this.view ? visitor(this.view) : Promise.resolve(undefined);\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tthis.saveItemDatas();\n\t\tif (closed) {\n\t\t\tthis.reg.env.place.eventsMgr.removeListener('wspUriChange', this._onWspUriChange);\n\t\t}\n\t\tVIEWS.onViewHidden(this.view, closed);\n\t}\n\n\tonViewShown() {\n\t\tif (!this.view) this.loadItemDatas();\n\t\telse VIEWS.onViewShown(this.view);\n\t}\n\n}\n\ncustomElements.define(\"styler-item-testskin\", ItemSkinClassStlTest);\n\nREG.reg.registerSkin(\"styler-item-testskin\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\toverflow: auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t:host > c-msg {\n\t\tmax-width: 30rem;\n\t\talign-self: center;\n\t\ttext-align: center;\n\t}\n\n  #headBar {\n\t  display: flex;\n\t  align-items: center;\n\t  /*min-height: 1.5em;*/\n\t  min-width: 0;\n\t  border-bottom: 1px solid var(--border-color);\n\t  padding: .2em;\n\t  background-color: var(--bgcolor);\n\t  color: var(--color);\n\t  flex-wrap: wrap;\n\t  /*\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-size: 1em;\n\t\tbackground-position: left .2em center;\n\t\tpadding-inline-start: 1.5em;\n\t\tbackground-image: url(\"/@skin@/styler/views/testSkin.svg\");\n\t\t*/\n  }\n\n  .headTi {\n\t  padding: 0 .3em;\n\t  white-space: nowrap;\n\t  color: var(--fade-color);\n\t  margin: .8rem 1rem 0 0;\n  }\n\n  .headSubTi {\n\t  font-size: .7rem;\n\t  color: var(--fade-color);\n  }\n\n  #ctxWsp, #ctxItem {\n\t  flex: 1;\n\t  min-width: 10em;\n  }\n\n  #levelSeparator::after {\n\t  content: \">\";\n\t  color: var(--fade-color);\n\t  font-size: 1.5rem;\n\t  display: flex;\n\t  padding-inline: .5em;\n\t  padding-block-start: .8rem;\n  }\n\n  #ctxWsp > c-button, #ctxItem > c-button {\n\t  margin: 0;\n  }\n\n  c-button > wsp-src-drawer-inline {\n\t  overflow: hidden;\n\t  text-overflow: ellipsis;\n  }\n\n  c-button[data-isEmpty] {\n\t  font-style: italic;\n  }\n\n  c-button[data-isError] {\n\t  border-color: var(--error-color);\n  }\n\n  #contentBox {\n\t  background-color: var(--bgcolor);\n\t  flex: 1;\n\t  display: flex;\n  }\n\n  #contentBox[hidden] {\n\t  visibility: collapse;\n  }\n\n\t#tabs {\n\t\tflex: 1;\n\t}\n\n`);\n\nREG.reg.registerSkin(\"styler-testSkin/tabs\", 1, /* language=CSS */ `\n\tc-tab.selected {\n\t\t-webkit-text-stroke: unset !important;\n\t}\n`);\n\nREG.reg.registerSkin(\"styler-testSkin/tab\", 1, /* language=CSS */ `\n\t.label {\n\t\tpadding: 1rem 0;\n\t\twriting-mode: vertical-lr;\n\t\t/* text-orientation: sideways-right; */\n\t\ttransform: rotate(\n\t\t\t\t180deg\n\t\t);\n\t\t/*webkit-text-strok : unset;*/\n\t}\n\n`);\n"]}