{"version":3,"sources":["/@back@/wsp/views/item/itemCodeEd.tsx"],"names":["BaseElement","installSrcViewFileDrop","newSrcView","REG","JSX","DOMSH","EditorView","highlightSpecialChars","keymap","Compartment","EditorState","lineNumbers","foldGutter","foldKeymap","indentOnInput","defaultHighlightStyle","bracketMatching","closeBrackets","autocompletion","completionKeymap","defaultKeymap","defaultTabBinding","commentKeymap","defaultLangTypeProvider","getCmTheme","history","historyKeymap","redo","undo","searchKeymap","Resizer","BarActions","AccelKeyMgr","Action","POPUP","createCmEditor","LANG","EWspWorkingSt","ItemCodeEd","[object Object]","langTypeDef","this","langType","conf","langTypeProvider","Promise","then","ext","cmEditor","editorView","dispatch","effects","langTypeConf","reconfigure","save","init","reg","findReg","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","installSkin","renderView","parentEd","createElement","id","c-resizable","append","c-orient","renderOrient","v","appendChild","place","env","universe","wspServer","wspsLive","newPlace","setLangTypeDef","longDescChange","add","ldNew","ldOld","arrayEquals","srcRoles","refreshReadWriteState","options","initLangType","fallback","tabSize","of","noEdit","push","editable","initReadWriteState","barActions","î","actions","getList","actionContext","shadowRoot","accels","getListAsMap","accelKeyMgr","initFromMapActions","addEventListener","ev","handleKeyboardEvent","getSrcUriToEdit","contentEvents","on","state","e","_a","saveBtn","classList","toggle","_b","refreshContent","bind","dom","setState","wspUri","r","closed","none","close","srcUri","itemType","getMainStreamSrcUri","longDesc","readOnlyConf","hasPerm","writePermToCheck","writable","evalWritable","facet","lockedBy","writePerms","registerSkin","customElements","define","addAction","action","sort","accel","addToList","getId","setLabel","setIcon","setVisible","ctx","setEnabled","contentState","setExecute","override","buttonNode","LockAction","super","setDescription","getLockedBy","lock","account","_hideLabel","tabIndexCustom","showNotifInfo"],"mappings":"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","sourcesContent":["import {BaseElement, OSkinableInit} from \"back/commons/basis\";\nimport {IItemUiEnv, installSrcViewFileDrop, newSrcView} from \"back/wsp/views/itemMain\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {IView} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {EditorView, highlightSpecialChars, keymap} from \"res/codemirror/view\";\nimport {Compartment, EditorState, Extension} from \"res/codemirror/state\";\nimport {lineNumbers} from \"res/codemirror/gutter\";\nimport {foldGutter, foldKeymap} from \"res/codemirror/fold\";\nimport {indentOnInput} from \"res/codemirror/language\";\nimport {defaultHighlightStyle} from \"res/codemirror/highlight\";\nimport {bracketMatching} from \"res/codemirror/matchbrackets\";\nimport {closeBrackets} from \"res/codemirror/closebrackets\";\nimport {autocompletion, completionKeymap} from \"res/codemirror/autocomplete\";\nimport {defaultKeymap, defaultTabBinding} from \"res/codemirror/commands\";\nimport {commentKeymap} from \"res/codemirror/comment\";\nimport {defaultLangTypeProvider, getCmTheme, ILangTypeProvider} from \"back/edit/wed/wedlets/box/boxInputCode\";\nimport {history, historyKeymap, redo, undo} from \"res/codemirror/history\";\nimport {searchKeymap} from \"res/codemirror/search\";\nimport {IDatasSrcView} from \"lib/wsp/wspMetaUi\";\nimport {Resizer} from \"back/commons/widgets/resizer\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {AccelKeyMgr, Action, IAction} from \"lib/commons/actions\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {createCmEditor, ICmEditor} from \"lib/wsp/wspsLiveCm\";\nimport {srcUri} from \"lib/wsp/src\";\nimport {LANG} from \"lib/commons/lang\";\nimport {EWspWorkingSt, IWspsLivePlacePointer, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {ActionBtn} from \"back/commons/widgets/buttons\";\n\n/**\n * View ou éditeur du contenu de type CodeSource via codeMirror.\n */\nexport interface OItemCodeEdInit extends OSkinableInit, IWspsLivePlacePointer {\n\treg?: IReg<IItemUiEnv>\n\n\t/** Pour une res dans un itemType folder. */\n\tsrcUri?: string\n\n\t/** Langue à charger ou fournisseur dynamique de langue */\n\tlangTypeDef?: string\n\tlangTypeProvider?: ILangTypeProvider\n\n\t/** TODO actuellement TOUJOURS à TRUE. Si true, aucune édition possible, pas de barre d'édition. */\n\tnoEdit?: boolean\n\n\twritePerms?: string | string[]\n\n\t/** Split de l'éditeur avec une autre vue de rendu. */\n\trenderView?: IDatasSrcView\n\trenderOrient?: `row` | 'column'\n}\n\nexport interface ItemCodeEd extends BaseElement {\n\tinitialize(init: OItemCodeEdInit): this\n}\n\nexport class ItemCodeEd extends BaseElement implements IView {\n\treg: IReg<IItemUiEnv>;\n\tplace: WspsLivePlace;\n\tconf: OItemCodeEdInit;\n\n\tlangTypeDef: string;\n\tlangType: Extension | Promise<Extension> | null;\n\n\taccelKeyMgr?: AccelKeyMgr<ItemCodeEd>;\n\n\tcmEditor: ICmEditor;\n\tprotected parentEd: HTMLElement;\n\tprotected barActions: BarActions<ItemCodeEd>;\n\tsaveBtn: HTMLElement;\n\n\t/** Affectation dynamique du langage. */\n\tsetLangTypeDef(langTypeDef: string | null) {\n\t\tif (this.langTypeDef === langTypeDef) return;\n\t\tif (!langTypeDef) {\n\t\t\tthis.langTypeDef = null;\n\t\t\tthis.langType = null;\n\t\t} else {\n\t\t\tthis.langTypeDef = langTypeDef;\n\t\t\tthis.langType = this.conf.langTypeProvider ? this.conf.langTypeProvider(langTypeDef) || defaultLangTypeProvider(langTypeDef) : defaultLangTypeProvider(langTypeDef);\n\t\t\tif (this.langType instanceof Promise) this.langType.then((ext) => {this.langType = ext});\n\t\t}\n\t\tif (this.cmEditor) {\n\t\t\tif (this.langType instanceof Promise) {\n\t\t\t\tconst langTypeDef = this.langTypeDef;\n\t\t\t\tthis.langType.then(ext => {\n\t\t\t\t\tif (langTypeDef !== this.langTypeDef) return; //race cond.\n\t\t\t\t\tthis.cmEditor.editorView.dispatch({effects: langTypeConf.reconfigure(ext)});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.cmEditor.editorView.dispatch({effects: langTypeConf.reconfigure(this.langType || [])});\n\t\t\t}\n\t\t}\n\t}\n\n\t/** */\n\tsave() {\n\t\tthis.cmEditor.save();\n\t}\n\n\t_initialize(init: OItemCodeEdInit) {\n\t\tthis.reg = this.findReg(init);\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tthis.reg.installSkin('scroll/large', sr);\n\t\tinstallSrcViewFileDrop(this.reg, this);\n\n\t\tif (init.renderView) {\n\t\t\tthis.parentEd = <div id=\"edParent\" c-resizable=\"\"/>;\n\t\t\tsr.append(\n\t\t\t\tthis.parentEd,\n\t\t\t\t<Resizer c-orient={init.renderOrient || 'row'}/>,\n\t\t\t);\n\t\t\tnewSrcView(init.renderView, this.reg).then((v) => {sr.appendChild(v)});\n\t\t}\n\n\t\tthis.conf = init;\n\t\tthis.place = init.place || this.reg.env.universe.wspServer.wspsLive.newPlace();\n\t\tthis.setLangTypeDef(init.langTypeDef);\n\n\t\t// Listener pour les changements de roles (issus d'affectation de roles dans la hiérarchie ou de chgt de lcSt, resp...).\n\t\tthis.reg.env.longDescChange.add((ldNew, ldOld) => {\n\t\t\tif (!LANG.arrayEquals(ldNew.srcRoles, ldOld.srcRoles)) this.refreshReadWriteState();\n\t\t});\n\n\t\tconst options: Extension[] = [\n\t\t\tthis.initLangType(),\n\t\t\tlineNumbers(),\n\t\t\thighlightSpecialChars(),\n\t\t\tfoldGutter(),\n\t\t\tdefaultHighlightStyle.fallback,\n\t\t\tEditorState.tabSize.of(2),\n\t\t\t//highlightSelectionMatches(), si on l'active, faudrait le recoder ou l'ajouter aussi coté XmlEd.\n\t\t\tgetCmTheme(),\n\t\t\tkeymap.of([\n\t\t\t\t...defaultKeymap,\n\t\t\t\t...foldKeymap,\n\t\t\t])\n\t\t];\n\n\t\tif (this.conf.noEdit) {\n\t\t\toptions.push(EditorView.editable.of(false));\n\t\t} else {\n\t\t\toptions.push(\n\t\t\t\tthis.initReadWriteState(),\n\t\t\t\thistory(),\n\t\t\t\tindentOnInput(),\n\t\t\t\tbracketMatching(),\n\t\t\t\tcloseBrackets(),\n\t\t\t\tautocompletion(),\n\t\t\t\tkeymap.of([\n\t\t\t\t\t...historyKeymap,\n\t\t\t\t\t...searchKeymap, //pas accessible en readonly dans CM...\n\t\t\t\t\t...commentKeymap,\n\t\t\t\t\t...completionKeymap,\n\t\t\t\t\tdefaultTabBinding,\n\t\t\t\t\t// ...lintKeymap\n\t\t\t\t])\n\t\t\t);\n\t\t\t//Barre d'outils\n\t\t\tthis.barActions = <BarActions î={{\n\t\t\t\tactions: this.reg.getList(\"actions:wsp-item-code-ed\"),\n\t\t\t\tactionContext: this,\n\t\t\t} as OBarActionsInit<ItemCodeEd>}/> as BarActions<ItemCodeEd>;\n\t\t\t(this.parentEd || this.shadowRoot).appendChild(this.barActions);\n\t\t\t//Racourcis claviers\n\t\t\tconst accels = this.reg.getListAsMap<IAction<ItemCodeEd>>(\"accelkeys:wsp-item-code-ed\");\n\t\t\tif (accels) {\n\t\t\t\tthis.accelKeyMgr = new AccelKeyMgr<ItemCodeEd>().initFromMapActions(accels);\n\t\t\t\tthis.addEventListener('keydown', function (this: ItemCodeEd, ev: KeyboardEvent) {\n\t\t\t\t\tthis.accelKeyMgr.handleKeyboardEvent(ev, this)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.cmEditor = createCmEditor(this.getSrcUriToEdit(), this.reg, options, this.shadowRoot);\n\t\tthis.cmEditor.contentEvents.on(\"onCtStateChange\", (state, e) => {\n\t\t\tthis.saveBtn?.classList.toggle(\"saving\", state === \"saving\");\n\t\t\tthis.barActions?.refreshContent();\n\t\t});\n\t\tthis.cmEditor.contentEvents.on(\"onLock\", this.refreshReadWriteState.bind(this));\n\n\t\t(this.parentEd || this.shadowRoot).appendChild(this.cmEditor.editorView.dom);\n\t}\n\n\tonViewShown() {\n\t\tthis.place.setState(this.cmEditor.wspUri, EWspWorkingSt.r);\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tthis.place.setState(this.cmEditor.wspUri, EWspWorkingSt.none);\n\t\tif (closed) this.cmEditor.close();\n\t}\n\n\tprotected getSrcUriToEdit(): srcUri {\n\t\treturn this.conf.srcUri || this.reg.env.itemType.getMainStreamSrcUri(this.reg.env.longDesc);\n\t}\n\n\tprotected initLangType(): Extension {\n\t\tif (this.langType instanceof Promise) {\n\t\t\tconst langTypeDef = this.langTypeDef;\n\t\t\tthis.langType.then(ext => {\n\t\t\t\tif (langTypeDef !== this.langTypeDef) return; //race cond.\n\t\t\t\tthis.cmEditor.editorView.dispatch({effects: langTypeConf.reconfigure(ext)});\n\t\t\t});\n\t\t} else if (this.langType != null) {\n\t\t\treturn langTypeConf.of(this.langType);\n\t\t}\n\t\treturn langTypeConf.of([]);\n\t}\n\n\tprotected initReadWriteState(): Extension {\n\t\treturn readOnlyConf.of(EditorView.editable.of(this.reg.hasPerm(this.writePermToCheck())));\n\t}\n\n\trefreshReadWriteState() {\n\t\tconst writable = this.evalWritable();\n\t\tif (this.cmEditor.editorView.state.facet(EditorView.editable) !== writable) {\n\t\t\tthis.cmEditor.editorView.dispatch({\n\t\t\t\teffects: readOnlyConf.reconfigure(EditorView.editable.of(writable))\n\t\t\t});\n\t\t\tthis.barActions.refreshContent();\n\t\t}\n\t}\n\n\tevalWritable(): boolean {\n\t\treturn this.cmEditor.lockedBy == null && this.reg.hasPerm(this.writePermToCheck());\n\t}\n\n\tprotected writePermToCheck() {\n\t\treturn this.conf.writePerms || \"action.itemCodeEd#edit\";\n\t}\n\n}\n\nREG.reg.registerSkin(\"wsp-item-code-ed\", 1, /* language=CSS */ `\n\t:host,\n\t#edParent {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\tc-resizer[c-orient=row] {\n\t\twidth: 1px;\n\t}\n\n\tc-resizer[c-orient=column] {\n\t\theight: 1px;\n\t}\n\n\tc-bar-actions {\n\t\tborder-bottom: 1px solid var(--border-color);\n\t}\n\n\t.saving {\n\t\t--icon-color: red;\n\t}\n\n\t.cm-editor {\n\t\tflex: 1;\n\t\toutline: var(--edit-caret-focus) !important;\n\t\tbackground-color: var(--edit-bgcolor) !important;\n\t\toverflow: auto !important;\n\t}\n\n\t.cm-scroller {\n\t\toverflow: auto;\n\t\tfont-family: var(--font-mono, 'monospace') !important;\n\t}\n\n\t.cm-gutters,\n\t.cm-tooltip,\n\t.cm-foldPlaceholder {\n\t\tbackground-color: var(--bgcolor) !important;\n\t\tcolor: var(--fade-color) !important;\n\t\tborder-color: var(--border-color) !important;\n\t}\n\n\t.cm-gutter {\n\t\tuser-select: none;\n\t}\n\n\t.cm-searchMatch {\n\t\tbackground-color: var(--edit-search-bgcolor) !important;\n\t\toutline: none !important;\n\t}\n\n\t::selection {\n\t\tcolor: currentColor !important;\n\t\tbackground-color: var(--edit-seltext-bgcolor) !important;\n\t}\n`);\n\n\ncustomElements.define(\"wsp-item-code-ed\", ItemCodeEd);\n\n\n/** Compartment de config de la langue courante. */\nconst langTypeConf = new Compartment();\n\n/** Compartment de config de l'état readOnly/writable du widget. */\nconst readOnlyConf = new Compartment();\n\n\nfunction addAction(action: IAction<ItemCodeEd>, sort: number, accel?: string) {\n\tREG.reg.addToList(\"actions:wsp-item-code-ed\", action.getId(), 1, action, sort);\n\tif (accel) REG.reg.addToList(\"accelkeys:wsp-item-code-ed\", accel, 1, action);\n}\n\naddAction(new Action<ItemCodeEd>(\"save\")\n\t.setLabel(\"Enregistrer\")\n\t.setIcon(\"/@skin@/edit/wed/save.svg\")\n\t.setVisible((ctx: ItemCodeEd) => ctx.cmEditor.lockedBy == null)\n\t.setEnabled((ctx: ItemCodeEd) => ctx.cmEditor.contentState === \"dirty\")\n\t.setExecute((ctx: ItemCodeEd) => {ctx.save()})\n\t.override('initButtonNode', (buttonNode: HTMLElement, ctx: ItemCodeEd) => {\n\t\tctx.saveBtn = buttonNode;\n\t}), 10, \"s-accel\");\n\n\n/** A voir à mutualiser avec LockAction de itemXmlEd via une fct custom lockedBy(). */\nclass LockAction extends Action<ItemCodeEd> {\n\n\tconstructor() {\n\t\tsuper('lock');\n\t\tthis.setIcon(\"/@skin@/wsp/widgets/itemEditor/editing.svg\");\n\t\tthis.setDescription(\"Ce contenu n'est pas éditable car il est actuellement en cours d'édition.\");\n\t}\n\n\tisVisible(ctx: ItemCodeEd): boolean {\n\t\treturn this.getLockedBy(ctx) != null;\n\t}\n\n\tgetLabel(ctx: ItemCodeEd) {\n\t\tconst lock = this.getLockedBy(ctx);\n\t\treturn lock ? \"Édité par \" + lock.account : null;\n\t}\n\n\tinitButtonNode(buttonNode: ActionBtn<ItemCodeEd>, ctx: ItemCodeEd) {\n\t\tbuttonNode._hideLabel = false;\n\t\tbuttonNode.tabIndexCustom = -2;\n\t}\n\n\tgetLockedBy(ctx: ItemCodeEd) {\n\t\treturn ctx.cmEditor.lockedBy;\n\t}\n}\n\naddAction(new LockAction(), 11);\n\naddAction(new Action<ItemCodeEd>(\"undo\")\n\t.setLabel(\"Annuler\")\n\t.setIcon(\"/@skin@/edit/wed/undo.svg\")\n\t.setExecute((ctx: ItemCodeEd) => {\n\t\tif (!undo(ctx.cmEditor.editorView)) POPUP.showNotifInfo(\"Aucune action à annuler\", ctx);\n\t}), 20);\n\naddAction(new Action<ItemCodeEd>(\"redo\")\n\t.setLabel(\"Refaire\")\n\t.setIcon(\"/@skin@/edit/wed/redo.svg\")\n\t.setExecute((ctx: ItemCodeEd) => {\n\t\tif (!redo(ctx.cmEditor.editorView)) POPUP.showNotifInfo(\"Aucune action à refaire\", ctx);\n\t}), 21);"]}