{"version":3,"sources":["/@back@/wsp/views/itemViewerSingle.tsx"],"names":["POPUP","InfoBrokerBasic","REG","VIEWS","InfoCurrentItem","InfoFocusItem","InfoFocusNodeInItem","InfoReqCurrentItem","InfoSrcUriMoved","ITEM","SRC","EWspChangesEvts","ItemViewerSingle","[object Object]","conf","this","reg","mainViewParent","lastDatas","select","console","error","infoBroker","env","addConsumer","onWspUriChange","_onWspUriChange","bind","place","eventsMgr","on","openSrcRef","info","disableAutoChangeCurrentItem","handled","focusNodeInItem","focusItem","srcUri","longDesc","shortDesc","onSrcMoved","srcRef","dispatchInfo","xpath","oldSrcUri","newSrcUri","silent","tryCloseMainView","wsp","fetchLongDesc","srcSt","itModel","fallbackOpenSrcRef","showNotifInfo","openSrc","count","mainView","v","warn","itemType","wspMetaUi","getItemType","createSubRegMixed","ctx","mainViewCode","view","getSrcMainArea","buildBody","appendChild","initializedAsync","canHideView","closeMainView","textContent","onViewHidden","firstElementChild","onViewShown","closed","removeListener","removeConsumer","msg","from","msgSrcRef","type","r","getSrcUriType","isSubUri","u","oldItModel","then","ld"],"mappings":"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","sourcesContent":["import {POPUP} from \"back/commons/widgets/popups\";\nimport \"back/wsp/views/itemMain\"; //on force l'import des tags ItemMain.\nimport {IInfo, InfoBrokerBasic} from \"lib/commons/infos\";\nimport {IReg, REG} from 'lib/commons/registry';\nimport {VIEWS} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {InfoCurrentItem, InfoFocusItem, InfoFocusNodeInItem, InfoReqCurrentItem, InfoSrcUriMoved, ITEM} from \"lib/wsp/item\";\nimport {JSrcFields, SRC, srcRef} from \"lib/wsp/src\";\nimport {IWspUiEnv, JWspUriChangeMsg} from \"lib/wsp/wsp\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {IItemViewer, ISrcMainCtx} from \"back/wsp/views/itemMain\";\n\ninterface ItemViewerSingleConf {\n\t/** Désactive les possibilités de chagement automatique de l'item courant. ex :event InfoFocusItem de l'infoBroker, ... */\n\tdisableAutoChangeCurrentItem?: boolean\n\n\tmainViewCode?: string\n}\n\n\n/**\n * Gestionnaire de visualisation des items.\n * Implémentation triviale, un seul item à la fois, pas d'historique.\n */\nexport class ItemViewerSingle implements IItemViewer {\n\tconf: ItemViewerSingleConf;\n\n\treg: IReg<IWspUiEnv>;\n\n\tmainViewParent: HTMLElement;\n\n\t/** Item en cours. */\n\tlongDesc: JSrcFields;\n\n\tfallbackOpenSrcRef?: (srcRef: srcRef, longdesc: JSrcFields, silent?: boolean) => Promise<true | null>;\n\n\tprotected onWspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => void;\n\n\tprotected lastDatas: JLastDatas;\n\n\tconstructor(conf?: ItemViewerSingleConf) {\n\t\tthis.conf = conf || {};\n\t}\n\n\tinitViewer(reg: IReg<IWspUiEnv>, mainViewParent: HTMLElement, lastDatas: JLastDatas, select: srcRef): Promise<any> {\n\t\tif (this.reg) console.error(\"ItemViewerSingle already inited\");\n\t\tthis.reg = reg;\n\t\tthis.mainViewParent = mainViewParent;\n\t\tconst infoBroker = reg.env.infoBroker;\n\t\tif (infoBroker) infoBroker.addConsumer(this);\n\t\tthis.lastDatas = lastDatas;\n\n\t\tthis.onWspUriChange = this._onWspUriChange.bind(this);\n\t\treg.env.place.eventsMgr.on(\"wspUriChange\", this.onWspUriChange);\n\n\t\tif (select) return this.openSrcRef(select);\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (!this.conf.disableAutoChangeCurrentItem && info instanceof InfoFocusItem) {\n\t\t\tif (info.handled) return;\n\t\t\tif (info instanceof InfoFocusNodeInItem) {\n\t\t\t\tthis.focusNodeInItem(info);\n\t\t\t} else {\n\t\t\t\tthis.focusItem(info);\n\t\t\t}\n\t\t\tinfo.handled = true;\n\t\t} else if (info instanceof InfoReqCurrentItem) {\n\t\t\tinfo.srcUri = this.longDesc ? this.longDesc.srcUri : null;\n\t\t\tinfo.shortDesc = this.longDesc;\n\t\t} else if (info instanceof InfoSrcUriMoved) {\n\t\t\tthis.onSrcMoved(info);\n\t\t}\n\t}\n\n\tfocusItem(info: InfoFocusItem) {\n\t\tthis.openSrcRef(info.srcRef);\n\t}\n\n\tasync focusNodeInItem(info: InfoFocusNodeInItem) {\n\t\tif (this.longDesc && info.srcRef === SRC.srcRef(this.longDesc)) return; //item déjà chargé, il va gérer la partie \"inItem\".\n\t\tif (await this.openSrcRef(info.srcRef)) {\n\t\t\t//On redispatch la demande une fois l'item chargé.\n\t\t\tthis.reg.env.infoBroker.dispatchInfo(new InfoFocusNodeInItem(info.xpath, info.srcRef), this);\n\t\t}\n\t}\n\n\t/**\n\t * Si l'ancienne uri est présente et la nouvelle uri est absente,\n\t * on remplace l'onglet avec la nouvelle uri.\n\t */\n\tonSrcMoved(info: InfoSrcUriMoved) {\n\t\tif (this.longDesc.srcUri === info.oldSrcUri) this.openSrcRef(info.newSrcUri);\n\t}\n\n\t/**\n\t * @return true: ouvert, false: abandon user, null: srcRef pas trouvé.\n\t */\n\tasync openSrcRef(srcRef: srcRef, silent?: boolean): Promise<boolean | null> {\n\t\tif (!srcRef) return this.tryCloseMainView(true);\n\t\tif (this.longDesc && srcRef === SRC.srcRef(this.longDesc)) return true;\n\t\tconst wsp = this.reg.env.wsp;\n\t\tconst longDesc = this.longDesc = await wsp.fetchLongDesc(srcRef);\n\t\tif (longDesc.srcSt < 0 || longDesc.itModel == null) {\n\t\t\tif (this.fallbackOpenSrcRef) {\n\t\t\t\treturn this.fallbackOpenSrcRef(srcRef, longDesc, silent);\n\t\t\t} else {\n\t\t\t\tif (!silent) POPUP.showNotifInfo(\"Ce contenu n'est plus disponible.\", this.mainViewParent);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn this.openSrc(longDesc);\n\t}\n\n\tasync openSrc(longDesc: JSrcFields): Promise<boolean | null> {\n\t\tlet count = 0;\n\t\twhile (this.mainView) {//while pour race cond si 2ème openSrc au cours du await this.tryCloseMainView()\n\t\t\tconst v = await this.tryCloseMainView(false);\n\t\t\tif (++count > 1) console.warn(\"ItemViewerSingle.openSrc() called twice\", v);\n\t\t\tif (v === false) return false;\n\t\t}\n\t\tconst wsp = this.reg.env.wsp;\n\t\tconst itemType = wsp.wspMetaUi.getItemType(longDesc.itModel);\n\t\tconst reg = REG.createSubRegMixed(this.reg, itemType.reg);\n\t\tif (!reg.env.infoBroker) reg.env.infoBroker = new InfoBrokerBasic(); //pour communication interne à l'item (tasks...)\n\n\t\tconst ctx: ISrcMainCtx = {\n\t\t\treg: reg,\n\t\t\tshortDesc: longDesc,\n\t\t\tlongDesc: longDesc,\n\t\t\tmainViewCode: this.conf.mainViewCode\n\t\t};\n\t\tconst view = itemType.getSrcMainArea(ctx).buildBody(ctx, this.lastDatas);\n\t\tif (this.lastDatas) this.lastDatas = null; // suppr lastDatas au 2ème appel.\n\n\t\tthis.mainViewParent.appendChild(view);\n\t\tawait view.initializedAsync;\n\n\t\tconst infoBroker = reg.env.infoBroker;\n\t\tif (infoBroker) infoBroker.dispatchInfo(new InfoCurrentItem(longDesc.srcUri, longDesc), this);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @return true: clos, false: annulation par le user, null: pas de mainView.\n\t */\n\tasync tryCloseMainView(dispatchInfo: boolean): Promise<boolean | null> {\n\t\tconst mainView = this.mainView;\n\t\tif (!mainView) return null;\n\t\tif (await VIEWS.canHideView(mainView, true)) {\n\t\t\tthis.closeMainView(dispatchInfo);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate closeMainView(dispatchInfo: boolean) {\n\t\tthis.longDesc = null;\n\t\tconst mainView = this.mainView;\n\t\tif (mainView) {\n\t\t\tthis.mainViewParent.textContent = null;\n\t\t\tVIEWS.onViewHidden(mainView, true);\n\t\t\tif (dispatchInfo && this.reg.env.infoBroker) this.reg.env.infoBroker.dispatchInfo(new InfoCurrentItem(null), this)\n\t\t}\n\t}\n\n\tget mainView(): HTMLElement {return this.mainViewParent.firstElementChild as HTMLElement}\n\n\tonViewShown() {\n\t\t//this.app.reg.env.wsp.\n\t\tVIEWS.onViewShown(this.mainView);\n\t}\n\n\tonViewHidden(closed?: boolean) {\n\t\tif (closed) {\n\t\t\tthis.reg.env.place.eventsMgr.removeListener(\"wspUriChange\", this.onWspUriChange);\n\t\t\tthis.closeMainView(false /* fermeture globale, inutile de multiplier les events ?*/);\n\t\t\tconst infoBroker = this.reg.env.infoBroker;\n\t\t\tif (infoBroker) infoBroker.removeConsumer(this);\n\t\t} else {\n\t\t\tVIEWS.onViewHidden(this.mainView, closed);\n\t\t}\n\t}\n\n\t// buildLastDatas(parentLastDatas: JLastDatas): void {\n\t// \tLASTDATAS.buildLastDatas(parentLastDatas, this.mainView, true);\n\t// }\n\n\tprotected _onWspUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') {\n\t\tif (this.longDesc) {\n\t\t\tconst msgSrcRef = SRC.srcRef(msg);\n\t\t\tif (msg.type === EWspChangesEvts.r) {\n\t\t\t\t//Traitement du remove\n\t\t\t\tif (SRC.srcRef(this.longDesc) === msgSrcRef) {\n\t\t\t\t\t//Suppr de l'item\n\t\t\t\t\tthis.closeMainView(true);\n\t\t\t\t} else if (ITEM.getSrcUriType(msg.srcUri) === 'space' && SRC.isSubUri(msg.srcUri, this.longDesc.srcUri)) {\n\t\t\t\t\t//Suppr d'un espace ancêtre de l'item\n\t\t\t\t\tthis.closeMainView(true);\n\t\t\t\t}\n\t\t\t} else if (msg.type === EWspChangesEvts.u && SRC.srcRef(this.longDesc) === msgSrcRef) {\n\t\t\t\t//Traitement de l'update\n\t\t\t\t//item construit, faut détecter si l'itModel n'a pas été modifié\n\t\t\t\tconst oldItModel = this.longDesc.itModel;\n\t\t\t\tthis.reg.env.wsp.fetchLongDesc(msgSrcRef, this.mainViewParent).then((ld: JSrcFields) => {\n\t\t\t\t\t//cas du changement d'itModel, nécessité de le recharger.\n\t\t\t\t\tif (oldItModel !== ld.itModel) {\n\t\t\t\t\t\tif (oldItModel !== this.longDesc.itModel || SRC.srcRef(this.longDesc) === msgSrcRef) return;//race cond.\n\t\t\t\t\t\tthis.openSrc(ld);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n"]}