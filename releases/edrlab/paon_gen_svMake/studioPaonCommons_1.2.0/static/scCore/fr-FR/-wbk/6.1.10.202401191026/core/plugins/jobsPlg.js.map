{"version":3,"sources":["/@back@/core/plugins/jobsPlg.tsx"],"names":["SimpleTagArea","REG","Action","ActionHackCtx","JobsApp","initApp","reg","WrapReg","[object Object]","sub","super","this","ctx","buttonNode","initButtonNode","wrap","action","d","desk","addAppBuilder","JobsAppBuilder","addToList","setLabel","requireVisiblePerm","setExecute","event","findAndOpenApp","jobsUniverse","setIcon","setVisible","atLeastOneEntry","env","resolver","resolve","data","skin","skinOver","newElt","initialize"],"mappings":"OAEQA,kBAAc;OACKC,QAAI;OAGvBC,OAAQC,kBAAuB;OAC/BC,YAAQ;;OASV,SAAUC,QAAQC,IAA0BL,IAAIK,KACrD,MAAMC,gBAAgBJ,cACrBK,YAAYC,IAAyCH,KACpDI,MAAMD;AAD8CE,KAAAL,IAAAA,IAIrDE,QAAQI,KAAmC,OAAOD,KAAKL,IAEvDE,eAAeK,WAAqBD,KAElCC,WAAyCP,IAAMK,KAAKL;AACrDK,KAAKF,IAAIK,eAAeD,WAAYF,KAAKL,MAI3C,SAASS,KAAKC,QACb,OAAO,IAAIT,QAAQS,OAAQV,KAG5B,MAAMW,EAAIC;AACVD,EAAEE,cAAc,IAAIC,eAAed;AAGnCL,IAAIK,IAAIe,UAAU,uCAAwC,OAAQ,EAAGN,MAAK,IAAIb,QAASoB,SAAS,iBAC9FC,mBAAmB,cACnBC,YAAW,SAAwBZ,IAAKa,OACvCP,KAA0BQ,eAAe,CAACC,aAAc,UAEzDC,QAAQ,6BACRC,WAAYjB,KACLR,QAAQ0B,gBAAgBlB,IAAIN,OAC/B,IAeP,MAAMc,uBAAuBpB,cAM5BQ,YAAmBF,KAClBI,MAAM,WAAYJ,IAAIyB,IAAIC,SAASC,QAAQ;AADzBtB,KAAAL,IAAAA,IAInBE,cAAc0B,MAA4B,MAAO,iBAAkBA,KAEnE1B,OAAOI,KACN,IAAKA,IAAIuB,KAAMvB,IAAIuB,KAAOxB,KAAKwB;AAC/B,IAAKvB,IAAIwB,SAAUxB,IAAIwB,SAAWzB,KAAKyB;AACvCxB,IAAIN,IAAMK,KAAKL;AACf,OAAQI,MAAM2B,OAAOzB,KAAiB0B,WAAW1B","sourcesContent":["import {OSkinableInit} from \"back/commons/basis\";\nimport {AppFrameDeskFeat, IApp, IAppBuilder, IAppCtx, JAppDef} from \"back/core/appFrame\";\nimport {SimpleTagArea} from \"lib/commons/areas\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {IBasicUniversePointer, IUniverseEnv} from \"lib/core/universe\";\nimport {Action, ActionHackCtx, IAction} from \"lib/commons/actions\";\nimport {JobsApp} from \"back/core/apps/jobsApp\";\nimport \"back/core/plugins/plugins_Perms\";\n\n/**\n * Affichage du gestionnaire global des jobs des différents univers référencés\n *\n * @param contexte reg :\n * \t- liste des univers à traiter : \"plg:jobs:universes\"\n */\nexport function initApp(reg: IReg<IUniverseEnv> = REG.reg) {\n\tclass WrapReg extends ActionHackCtx<Element, IReg<IUniverseEnv>> {\n\t\tconstructor(sub: IAction<IReg<IUniverseEnv>>, public reg: IReg<IUniverseEnv>) {\n\t\t\tsuper(sub);\n\t\t}\n\n\t\twrapCtx(ctx: Element): IReg<IUniverseEnv> {return this.reg}\n\n\t\tinitButtonNode(buttonNode: Element, ctx: Element) {\n\t\t\t//Affectation du bon registre dans le contexte graphique.\n\t\t\t(buttonNode as IRegPointer<IUniverseEnv>).reg = this.reg;\n\t\t\tthis.sub.initButtonNode(buttonNode, this.reg);\n\t\t}\n\t}\n\n\tfunction wrap(action: IAction<IReg<IUniverseEnv>>): IAction<Element> {\n\t\treturn new WrapReg(action, reg);\n\t}\n\n\tconst d = desk as AppFrameDeskFeat;\n\td.addAppBuilder(new JobsAppBuilder(reg));\n\n\t//Menu Options > admin\n\tREG.reg.addToList(\"appframe:header:toolbar:params:admin\", \"jobs\", 1, wrap(new Action().setLabel(\"Traitements\")\n\t\t.requireVisiblePerm(\"ui.jobsPlg\")\n\t\t.setExecute(function (this: Action, ctx, event) {\n\t\t\t(desk as AppFrameDeskFeat).findAndOpenApp({jobsUniverse: null} as JJobsAppDef);\n\t\t})\n\t\t.setIcon(\"/@skin@/core/apps/job.svg\")\n\t\t.setVisible((ctx: IReg<IUniverseEnv>) => {\n\t\t\treturn JobsApp.atLeastOneEntry(ctx.reg);\n\t\t})), 10);\n\n}\n\n\n/**\n * Schéma du hash de l'URL pour le JobsApp.\n * exemple : (jobsUniverse'')\n */\nexport interface JJobsAppDef extends JAppDef {\n\t/** Code de l'univers à afficher */\n\tjobsUniverse?: string[] | null\n}\n\n/** Construction async de l'app JobsApp. */\nclass JobsAppBuilder extends SimpleTagArea<IAppCtx<IBasicUniversePointer>, IApp<IBasicUniversePointer>> implements OSkinableInit, IAppBuilder<IBasicUniversePointer, IBasicUniversePointer> {\n\n\tskin?: string;\n\n\tskinOver?: string;\n\n\tconstructor(public reg: IReg<any>) {\n\t\tsuper('jobs-app', reg.env.resolver.resolve(\":back:core/apps/jobsApp.js\"));\n\t}\n\n\tisAppDefMatch(data: JJobsAppDef):boolean {return \"jobsUniverse\" in data}\n\n\tnewElt(ctx: IAppCtx<IBasicUniversePointer> & OSkinableInit): JobsApp {\n\t\tif (!ctx.skin) ctx.skin = this.skin;\n\t\tif (!ctx.skinOver) ctx.skinOver = this.skinOver;\n\t\tctx.reg = this.reg;\n\t\treturn (super.newElt(ctx) as JobsApp).initialize(ctx);\n\t}\n\n}\n\n"]}