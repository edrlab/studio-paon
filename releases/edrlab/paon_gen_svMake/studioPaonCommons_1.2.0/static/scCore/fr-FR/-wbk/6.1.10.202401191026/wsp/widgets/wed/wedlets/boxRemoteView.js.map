{"version":3,"sources":["/@back@/wsp/widgets/wed/wedlets/boxRemoteView.tsx"],"names":["EWedletEditMode","EWedletEditModeLabel","WEDLET","DOMSH","DOM","JSX","RemoteView","BoxContainer","removeAnnots","LANG","REG","Button","POPUP","ERROR","IO","BoxRemoteView","[object Object]","super","this","style","userSelect","tpl","wedlet","wedMgr","reg","sr","attachShadow","SHADOWDOM_INIT","installSkins","localName","remoteViewElt","appendChild","createElement","î","makeRemoteViewInit","wsp","env","fields","longDesc","init","viewers","hasAttribute","tag","getAttribute","Array","from","children","forEach","elt","nodeName","queryStringParams","paramElt","obj","value","JSON","parse","textContent","keySvc","push","type","code","val","url","location","clearAnnots","chars","msg","refreshBindValue","stringInsert","len","stringDelete","window","customElements","define","registerSkin","BoxRemoteViewBtn","openInNewTab","Object","assign","role","skin","skinOver","buildInitFromAtts","initialize","remoteViewInit","onclick","onClick","bind","visiblePerms","split","enablePerms","ev","disabled","error","resolveRemote","then","async","resp","openUrlExternal","showError","e","show","showDialog","uiRoot","titleBar","barLabel","label","fixSize","resizer","initWidth","initHeight","closeOnCtrlEnter","mode","write","setAttr","classList","toggle","isVirtual","setHidden","hasPerm","isWritableWedlet"],"mappings":"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","sourcesContent":["import {EWedletEditMode, EWedletEditModeLabel, IElementWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {IJmlNode} from \"lib/commons/xml/jml\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {ORemoteViewInit, RemoteView} from \"back/wsp/widgets/remoteView\";\nimport {BoxContainer, removeAnnots} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {IXmlMsg} from \"lib/edit/ot/xmlHouse\";\nimport {LANG} from \"lib/commons/lang\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {Button, OButtonInit} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IO} from \"lib/commons/io/io\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\n\n/**\n * BoxRemoteView sans la nouvelle approche JRemoteResDesc à partir sc6.1 -  TODOsc7 à suppr ?\n * Affiche une ressource remote\n *    <box-remote-view tag=\"iframe\">\n *      <locationAsSrc>\n *\t\t\t\t<queryStringParam keySvc?=\"scDepot\">json</queryStringParam>{*}\n *      </locationAsSrc\n *      <scDepotView code=\"maVIew\" />\n *    </box-remote-view>\n */\nexport class BoxRemoteView extends BoxContainer implements IElementWedlet {\n\n\tremoteViewElt: RemoteView;\n\n\turl: string;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.style.userSelect = \"none\";\n\t}\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tconst wedMgr = wedlet.wedMgr;\n\t\tconst reg = wedMgr.reg;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tWEDLET.installSkins(tpl, sr, wedlet, this.localName);\n\t\tthis.remoteViewElt = sr.appendChild(<RemoteView î={BoxRemoteView.makeRemoteViewInit(tpl, wedlet)}/>) as RemoteView;\n\t\tthis.remoteViewElt.wsp = reg.env.wsp;\n\t\tthis.remoteViewElt.fields = reg.env.longDesc;\n\t}\n\n\tstatic makeRemoteViewInit(tpl: Element, wedlet: IWedlet): ORemoteViewInit {\n\t\tconst init: ORemoteViewInit = {viewers: []};\n\t\tif (tpl.hasAttribute(\"tag\")) init.tag = tpl.getAttribute(\"tag\") as \"img\" | \"video\" | \"audio\" | \"iframe\";\n\t\tArray.from(tpl.children).forEach((elt) => {\n\t\t\tswitch (elt.nodeName) {\n\t\t\tcase \"locationAsSrc\" :\n\t\t\t\tconst queryStringParams: { keySvc?: 'scDepot' | string, value: any }[] = [];\n\t\t\t\tArray.from(elt.children).forEach((paramElt) => {\n\t\t\t\t\tif (paramElt.nodeName === 'queryStringParam') {\n\t\t\t\t\t\tlet obj: { keySvc?: 'scDepot' | string, value: any } = {\n\t\t\t\t\t\t\tvalue: JSON.parse(paramElt.textContent)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (paramElt.hasAttribute('keySvc'))\n\t\t\t\t\t\t\tobj.keySvc = paramElt.getAttribute('keySvc');\n\t\t\t\t\t\tqueryStringParams.push(obj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinit.viewers.push({type: 'locationAsSrc', queryStringParams});\n\t\t\t\tbreak;\n\t\t\tcase \"scPortalView\" ://deprecated [5.0]\n\t\t\tcase \"scDepotView\" :\n\t\t\t\tinit.viewers.push({type: 'scDepotView', code: elt.getAttribute(\"code\")});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\treturn init;\n\t}\n\n\trefreshBindValue(val: IJmlNode) {\n\t\tthis.url = val as string;\n\t\tthis.remoteViewElt.location = this.url;\n\t\tWEDLET.clearAnnots(this);\n\t}\n\n\tinsertChars(from: number, chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringInsert(this.url, from, chars));\n\t}\n\n\tdeleteChars(from: number, len: number, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringDelete(this.url, from, len));\n\t}\n\n\treplaceChars(chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(chars);\n\t}\n}\n\nwindow.customElements.define(\"box-remote-view\", BoxRemoteView);\nREG.reg.registerSkin('box-remote-view', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: block;\n\t}\n\n\twsp-remote-view {\n\t\theight: 100%;\n\t}\n\n`);\n\n\n/**\n *  Affiche une ressource remote via un bouton\n *  \tSi @tag vide ou non spécifié, la ressource est ouverte dans un nouvel onglet\n *    <box-remote-view-btn\n *    \t\tvisiblePerms=\"perm1\"\n *        enablePerms=\"perm2\"\n *    \t\ttag?=\"iframe\">\n *     cf box-remote-view\n *    </box-remote-view-btn>\n */\nexport class BoxRemoteViewBtn extends Button implements IElementWedlet {\n\n\twedlet: IWedlet;\n\n\tprotected remoteViewElt?: RemoteView;\n\n\tprotected url: string;\n\n\tprotected reg: IReg<IItemUiEnv>;\n\n\tprotected openInNewTab = false;\n\n\tprivate remoteViewInit: ORemoteViewInit\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedlet) {\n\t\tthis.wedlet = wedlet;\n\t\tconst wedMgr = wedlet.wedMgr;\n\t\tthis.reg = wedMgr.reg;\n\n\t\tconst init: OButtonInit = Object.assign({\n\t\t\treg: this.reg,\n\t\t\trole: 'button',\n\t\t\tskin: tpl.getAttribute('skin'),\n\t\t\tskinOver: tpl.getAttribute('skinOver')\n\t\t}, this.buildInitFromAtts());\n\n\t\tif (!tpl.getAttribute(\"tag\"))\n\t\t\tthis.openInNewTab = true;\n\n\t\tthis.initialize(init);\n\n\t\tthis.remoteViewInit = BoxRemoteView.makeRemoteViewInit(tpl, wedlet);\n\n\t\tthis.onclick = this.onClick.bind(this);\n\t}\n\n\tget visiblePerms(): string[] {return this.hasAttribute(\"visiblePerms\") ? this.getAttribute(\"visiblePerms\").split(\" \") : null}\n\n\tget enablePerms(): string[] {return this.hasAttribute(\"enablePerms\") ? this.getAttribute(\"enablePerms\").split(\" \") : null}\n\n\tasync onClick(this: BoxRemoteViewBtn, ev: MouseEvent) {\n\t\tif (this.disabled) return;\n\t\tif (this.openInNewTab) {\n\t\t\tconst error: { msg?: string | undefined } = {};\n\t\t\tRemoteView.resolveRemote(this.reg.env.wsp, this.remoteViewInit, this.reg.env.longDesc, this.url, error).then(async (url) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (error.msg) {\n\t\t\t\t\t\tthrow error.msg;\n\t\t\t\t\t} else if (url) {\n\t\t\t\t\t\tlet resp = await IO.openUrlExternal(url);\n\t\t\t\t\t\tif (typeof resp === \"object\")\tERROR.showError(resp);\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow \"Ressource invalide\";\n\t\t\t\t} catch (e) {\n\t\t\t\t\tERROR.show(\"Visualisation impossible\", e);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif (!this.remoteViewElt) {\n\t\t\t\tthis.remoteViewElt = <RemoteView î={this.remoteViewInit}/> as RemoteView;\n\t\t\t\tthis.remoteViewElt.wsp = this.reg.env.wsp;\n\t\t\t\tthis.remoteViewElt.fields = this.reg.env.longDesc;\n\t\t\t}\n\t\t\tthis.remoteViewElt.location = this.url;\n\t\t\tPOPUP.showDialog(this.remoteViewElt, this.reg.env.uiRoot, {\n\t\t\t\ttitleBar: {barLabel: {label: this.label || \"Visualisation\"}},\n\t\t\t\tfixSize: false,\n\t\t\t\tresizer: {},\n\t\t\t\tinitWidth: '60vw',\n\t\t\t\tinitHeight: '60vh',\n\t\t\t\tcloseOnCtrlEnter: true\n\t\t\t});\n\t\t}\n\t}\n\n\tsetEditMode(mode: EWedletEditMode) {\n\t\tthis.disabled = mode !== EWedletEditMode.write;\n\t\tDOM.setAttr(this, \"edit-mode\", EWedletEditModeLabel[mode]);\n\t}\n\n\tasync refreshBindValue(val: IJmlNode) {\n\t\tthis.url = val as string;\n\t\tthis.classList.toggle(\"virtual\", this.wedlet.isVirtual());\n\t\tif (this.wedlet.isVirtual()) removeAnnots(this);\n\t\tif (!this.url) {\n\t\t\tthis.disabled = true;\n\t\t} else {\n\t\t\tDOM.setHidden(this, this.visiblePerms && !this.reg.hasPerm(this.visiblePerms));\n\t\t\tthis.disabled = this.enablePerms && !this.reg.hasPerm(this.enablePerms) || !WEDLET.isWritableWedlet(this.wedlet);\n\t\t}\n\t}\n\n\tinsertChars(from: number, chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringInsert(this.url, from, chars));\n\t}\n\n\tdeleteChars(from: number, len: number, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(LANG.stringDelete(this.url, from, len));\n\t}\n\n\treplaceChars(chars: string, msg: IXmlMsg) {\n\t\tthis.refreshBindValue(chars);\n\t}\n}\n\nwindow.customElements.define(\"box-remote-view-btn\", BoxRemoteViewBtn);\nREG.reg.registerSkin('box-remote-view-btn', 1, /* language=CSS */ `\n\n`);"]}