{"version":3,"sources":["/@back@/store/views/resLayoutView.tsx"],"names":["BaseElement","BASIS","REG","BaseAreaViewAsync","VIEWS","isArea","ResLayoutView","[object Object]","views","ctx","promises","v","needAsync","push","loadLibs","children","lib","reg","env","resolver","importJs","parent","lastDatas","appendChild","document","createTextNode","buildBody","tag","createElement","atts","att","setAttribute","initialize","init","newInit","subV","buildSrcView","super","_initialize","noShadow","this","_attach","localName","scroll","installSkin","shadowRoot","style","overflow","body","_lastDatas","loading","Promise","all","visitor","options","visitDescendants","visitDescendantsAsync","undefined","isClosed","root","refreshTree","registerSkin","customElements","define"],"mappings":"OAAQA,YAAaC,UAAM;OACAC,QAAI;OACvBC,kBAA2FC,UAAM;OAG1FC,WAAO;OAwChB,MAAOC,sBAAsBH,kBAElCI,gBAAgBC,MAAiGC,IAAwDC,UACxK,IAAK,IAAIC,KAAKH,MAAO,CACpB,GAAIG,GAAK,KAAM;AACf,GAAIN,OAAOM,GAAI,CACd,GAAIA,EAAEC,UAAUH,KAAMC,SAASG,KAAKF,EAAEG,SAASL,WACzC,UAAWE,IAAM,SAAU,CACjC,GAAIA,EAAEI,SAAUT,cAAcQ,SAASH,EAAEI,SAAUN,IAAKC;AACxD,GAAIC,EAAEK,IAAKN,SAASG,KAAKJ,IAAIQ,IAAIC,IAAIC,SAASC,SAAST,EAAEK,QAK5DT,oBAAoBI,EAAsFU,OAAcZ,IAAwDa,WAC/K,IAAKX,EAAG;AACR,UAAWA,IAAM,SAAUU,OAAOE,YAAYC,SAASC,eAAed;KACjE,GAAIN,OAAOM,GAAI,CACnBU,OAAOE,YAAYZ,EAAEe,UAAUjB,IAAKa,gBAC9B,CACN,MAAMK,IAAMH,SAASI,cAAcjB,EAAEgB;AACrC,MAAME,KAAOlB,EAAEkB;AACf,GAAIA,KAAM,IAAK,MAAMC,OAAOD,KAAMF,IAAII,aAAaD,IAAKD,KAAKC;AAC7D,GAAIH,eAAe3B,YAAa,CAC/B2B,IAAIK,kBAAkBrB,EAAEsB,OAAS,WAAatB,EAAEsB,KAAKxB,KAAOR,MAAMiC,QAAQvB,EAAEsB,KAAMxB,IAAIQ,MAGvFI,OAAOE,YAAYI;AACnB,GAAIhB,EAAEI,SAAU,IAAK,MAAMoB,QAAQxB,EAAEI,SAAU,CAC9CT,cAAc8B,aAAaD,KAAMR,IAAKlB,IAAKa,aAW9Cf,YAAY0B,MACXI,MAAMC,YAAYL;AAClB,IAAKA,KAAKM,SAAU,CACnBC,KAAKC,QAAQD,KAAKE,UAAWT;AAC7B,GAAIA,KAAKU,OAAQ,CAChBH,KAAKvB,IAAI2B,YAAYX,KAAKU,QAAU,QAAU,eAAiB,eAAgBH,KAAKK;AACpFL,KAAKM,MAAMC,SAAW,QAGxBP,KAAKQ,KAAOf,KAAKe;AACjBR,KAAKS,WAAahB,KAAKX,WAAa;AACpC,MAAM4B,QAA0B;AAChC5C,cAAcQ,SAAS0B,KAAKQ,KAAMR,KAAKvB,IAAKiC;AAC5C,OAAOC,QAAQC,IAAIF,SAGpB3C,WAAW8C,QAAkCC,SAC5C,OAAOlD,MAAMmD,iBAAiBf,KAAKK,YAAcL,KAAMa,SAGxD9C,sBAAsB8C,QAA2CC,SAChE,OAAOlD,MAAMoD,sBAAsBhB,KAAKK,YAAcL,KAAMa,SAGnD9C,WACT,MAAMe,UAAYkB,KAAKS;AACvB,GAAI3B,YAAcmC,UAAW,CAE5BjB,KAAKS,WAAaQ;AAClB,GAAIjB,KAAKvB,IAAIyC,SAAU;AACvB,MAAMC,KAAOnB,KAAKK,YAAcL;AAChC,IAAK,MAAM7B,KAAK6B,KAAKQ,KAAM,CAC1B1C,cAAc8B,aAAazB,EAAGgD,KAAMnB,KAAKvB,IAAKK,gBAEzC,CACN,GAAIkB,KAAKK,WAAY,CACpB5C,MAAM2D,YAAYpB,KAAKK,gBACjB,CACN5C,MAAM2D,YAAYpB,KAAM,SAM5BtC,IAAIe,IAAI4C,aAAa,mBAAoB,EAAsB;AAc/DC,eAAeC,OAAO,mBAAoBzD","sourcesContent":["import {BaseElement, BASIS} from \"back/commons/basis\";\nimport {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {BaseAreaViewAsync, IView, IViewApi, IViewsContainer, OBaseAreaViewInit, OViewVisitOptions, VIEWS} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {IDepotResUiEnv, IDepotShortResUiEnv} from \"lib/store/depot\";\nimport {IArea, isArea} from \"lib/commons/areas\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\n\n/**\n * Mise en page d'une view des ressources imbriquant un arbre de :\n * - IArea<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, IView> de la ressource,\n * - des tags html ou customElements free (avec chargement dynamique d'une lib possible),\n * - des noeuds textes.\n */\nexport interface ResLayoutView extends BaseAreaViewAsync<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>> {\n\tinitialize(init: OResLayoutViewInit): this;\n}\n\nexport interface OResLayoutViewInit extends OBaseAreaViewInit<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>> {\n\treg: IReg<IDepotResUiEnv | IDepotShortResUiEnv>\n\tscroll?: 'small' | 'large'\n\tbody: (IArea<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, IView> | IJsTag | string)[]\n\n\t/** Si true, le body est construit en fils de ce tag, pas dans son shadow tree. */\n\tnoShadow?: boolean\n}\n\n/** Définition d'un tag html en json. */\nexport interface IJsTag {\n\t/** Nom du tag (html standard ou customElement). */\n\ttag: string\n\n\t/** path de la lib à charger pour charger le customElement*/\n\tlib?: string\n\n\t/** Liste des noeuds fils. */\n\tchildren?: (IArea<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, IView> | IJsTag | string)[]\n\n\t/** Attributs du tag. */\n\tatts?: Dict<string>\n\n\t/** Objet d'init du tag cf IEltInitable. */\n\tinit?: object | ((ctx: IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>) => any)\n}\n\nexport class ResLayoutView extends BaseAreaViewAsync<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>> implements IViewsContainer {\n\n\tstatic loadLibs(views: Array<IArea<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, IView> | IJsTag | string>, ctx: IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, promises: Promise<any>[]) {\n\t\tfor (let v of views) {\n\t\t\tif (v == null) continue;\n\t\t\tif (isArea(v)) {\n\t\t\t\tif (v.needAsync(ctx)) promises.push(v.loadLibs(ctx));\n\t\t\t} else if (typeof v === \"object\") {\n\t\t\t\tif (v.children) ResLayoutView.loadLibs(v.children, ctx, promises);\n\t\t\t\tif (v.lib) promises.push(ctx.reg.env.resolver.importJs(v.lib));\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic buildSrcView(v: IArea<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, IView> | IJsTag | string, parent: Node, ctx: IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, lastDatas: JLastDatas) {\n\t\tif (!v) return;\n\t\tif (typeof v === 'string') parent.appendChild(document.createTextNode(v));\n\t\telse if (isArea(v)) {\n\t\t\tparent.appendChild(v.buildBody(ctx, lastDatas));\n\t\t} else {\n\t\t\tconst tag = document.createElement(v.tag);\n\t\t\tconst atts = v.atts;\n\t\t\tif (atts) for (const att in atts) tag.setAttribute(att, atts[att]);\n\t\t\tif (tag instanceof BaseElement) {\n\t\t\t\ttag.initialize(typeof v.init === 'function' ? v.init(ctx) : BASIS.newInit(v.init, ctx.reg));\n\t\t\t\t//if (isEltInitableAsyncPending(tag)) await tag.initializedAsync; utile ?\n\t\t\t}\n\t\t\tparent.appendChild(tag);\n\t\t\tif (v.children) for (const subV of v.children) {\n\t\t\t\tResLayoutView.buildSrcView(subV, tag, ctx, lastDatas);\n\t\t\t}\n\t\t}\n\t}\n\n\treg: IReg<IDepotResUiEnv | IDepotShortResUiEnv>;\n\n\tbody: (IArea<IRegPointer<IDepotResUiEnv | IDepotShortResUiEnv>, IView> | IJsTag | string)[];\n\n\tprotected _lastDatas: JLastDatas | null | undefined;\n\n\t_initialize(init: OResLayoutViewInit) {\n\t\tsuper._initialize(init);\n\t\tif (!init.noShadow) {\n\t\t\tthis._attach(this.localName, init);\n\t\t\tif (init.scroll) {\n\t\t\t\tthis.reg.installSkin(init.scroll == \"large\" ? \"scroll/large\" : \"scroll/small\", this.shadowRoot);\n\t\t\t\tthis.style.overflow = \"auto\";\n\t\t\t}\n\t\t}\n\t\tthis.body = init.body;\n\t\tthis._lastDatas = init.lastDatas || null;\n\t\tconst loading: Promise<any>[] = [];\n\t\tResLayoutView.loadLibs(this.body, this.reg, loading);\n\t\treturn Promise.all(loading) as Promise<any>;\n\t}\n\n\tvisitViews(visitor: (view: IViewApi) => any, options?: OViewVisitOptions): any {\n\t\treturn VIEWS.visitDescendants(this.shadowRoot || this, visitor);\n\t}\n\n\tasync visitViewsAsync(visitor: (view: IViewApi) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\treturn VIEWS.visitDescendantsAsync(this.shadowRoot || this, visitor);\n\t}\n\n\tprotected _refresh() {\n\t\tconst lastDatas = this._lastDatas;\n\t\tif (lastDatas !== undefined) {\n\t\t\t//1ère construction\n\t\t\tthis._lastDatas = undefined;\n\t\t\tif (this.reg.isClosed) return; //racecond issu de l'initialize async\n\t\t\tconst root = this.shadowRoot || this;\n\t\t\tfor (const v of this.body) {\n\t\t\t\tResLayoutView.buildSrcView(v, root, this.reg, lastDatas);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.shadowRoot) {\n\t\t\t\tBASIS.refreshTree(this.shadowRoot);\n\t\t\t} else {\n\t\t\t\tBASIS.refreshTree(this, true);\n\t\t\t}\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin(\"store-res-layout\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none;\n\t}\n`);\n\ncustomElements.define(\"store-res-layout\", ResLayoutView);"]}