{"version":3,"sources":["/@back@/core/dialogs/usersMgr.tsx"],"names":["MsgOver","REG","DOM","JSX","DOMSH","GridColDef","CellBuilderAccounts","UsersGrid","EUserAspects","EUserType","BarActions","AccelKeyMgr","Action","ACTION","ActionWrapper","CreateUserAction","DeleteUsersAction","DisableUsersAction","UsersAction","CellBuilderDate","CellBuilderIconLabel","CellBuilderString","BaseAreaViewAsync","VIEWS","POPUP","AREAS","FORMS","ERROR","USERSELF","ROLES","UsersMgrBase","[object Object]","this","msgs","users","buildControlLabel","forcedUserDataOnSave","_formUpdateEmptyData","_dirtyStatus","_dirtyMdgOver","createElement","class","init","reg","createSubReg","findReg","usersSrv","env","universe","adminUsers","userSelfSrv","userSelf","sr","attachShadow","SHADOWDOM_INIT","installSkin","_initAndInstallSkin","localName","addToList","actionRefreshUi","accelKeyMgr","initFromMapActions","mergeListsAsMap","id","usersGridInit","Object","assign","displayRazFilterBtn","filterGroupsInputVisibility","filterRolesInputVisibility","disableAutoSearchOnInit","filterTxt","preSelectAccount","forceSelectEntry","grid","usersGrid","selType","hideHeaders","columnDefs","mergeLists","skinOver","skinScroll","lineDrawer","autoSelOnFocus","_listBoxElt","appendChild","c-resizable","_detailsBoxElt","hidden","usersGridElt","initialize","initializedAsync","ctxMenuActions","actions","injectSepByGroup","getPref","actionContext","addEventListener","async","ev","handleKeyboardEvent","getSelectedUsers","_showToolbarTop","refreshContent","_showToolbarBottom","showDetailsUser","toolbarsBox","uiContext","disableFullOverlay","setAttribute","_editUserToolbar","formUpdateElt","autocomplete","onFormUpdateRequest","clearTimeout","setTimeout","computeDirtyStatus","key","isAccelPressed","preventDefault","stopImmediatePropagation","UserFormSaveAction","SINGLETON_user","executeIfAvailable","canHideView","findPopupableParent","close","refresh","refreshFreeze","super","_refresh","doSearchUsers","undefined","user","force","length","setHidden","_detailUserCurrentData","dirtyStatus","querySelectorAll","forEach","fieldsetElt","disabled","initFormUi","jsonToForm","formToJson","checkValidity","isReadOnlyForm","datas","dataHolder","getDatas","userEntry","find","entry","account","replaceRowKey","hasAspect","updatable","Array","isArray","isReadOnly","initFormELt","listCodes","applyLayout","Promise","all","hasChildNodes","innerHTML","area-ids","val","showMsgOver","removeMsg","hasAttribute","userData","JSON","stringify","row","line","confirm","uiRoot","okLbl","cancelLbl","registerSkin","UsersMgr","uiContextSgn","userType","mgrInit","firstMaxEntries","fullMaxEntries","filterType","filterHiddenInputVisibility","filterHiddenInputPerms","filterHidden","filterHiddenBtnInit","title","emptyBody","noUsers","ActionWrapperRefresUsersMgr","setOverridenSvc","SINGLETON_user_enable","SINGLETON_user_disable","setLabel","setFlex","setCellBuilder","setIconWidth","override","isHidden","cacheHolder","root","icon","_getIcon","label","_getValue","addClass","innerText","span","_buildContent","style","unicodeBidi","backgroundImage","startsWith","filter","getIconFilter","setAttr","_getDescription","rowDatas","isDisabled","oneNickName","rolable","setDescription","colRoles","CellBuilderUserRoles","groupable","colGroups","setCellClass","UserFormRevertAction","addSvcToList","enabledEndDt","_initialize","stopPropagation","redrawLine","isCurrentUSer","auth","currentUser","propsStr","push","countProps","join","setAttrBool","removeAttribute","hasPerm","customElements","define","GroupsMgr","group","SINGLETON_group","_reg","dataKey","rolesLists","UI_ROLES_LIST","r1","r2","r1_rolesStr","_a","resolveUserRoles","grantedRoles","refusedRoles","inheritedRoles","r2_rolesStr","_b","localeCompare","_rolesUiHandler","cache","roles","roleUiCtx","setTextContent","getRolesUiHandler","then","rolesUi","result","resolveRolesList","specifRolesPending","redrawCellUi","newUiRoles","pos","hasNextEntry","level","name","roleName","setGroup","setIcon","setExecute","ctx","me","findHost","target","usersMgr","isEnabled","execute","selectByJUser","_label","requireVisiblePerm","isVisible","reportValidity","msg","setCustomMsg","waitFor","resolve","refuse","params","resp","updateUser","updateGroup","errorStr","tcheckUserSelfRespError","savedProps","getUser","onUserChange","show","Error","countUsers","errorsArray","Map","ii","posUser","userParams","set","size","errorsCount","usersList","from","keys","values","e","report","getId"],"mappings":"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","sourcesContent":["import {MsgOver, OSkinableInit} from \"back/commons/basis\";\nimport {IReg, IRegPointer, IUiEnv, REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {GridColDef, IGridLineDrawer, IRowSortFn} from \"back/commons/widgets/grid-core\";\nimport {IBasicUniversePointer, ICoreUniverseEnv} from \"lib/core/universe\";\nimport {CellBuilderAccounts, OUsersGridInit, UsersGrid} from \"back/core/widgets/usersGrid\";\nimport {EUserAspects, EUserType, JUser, UsersSrv} from \"lib/core/user\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport {AccelKeyMgr, Action, ACTION, ActionWrapper, IAction} from \"lib/commons/actions\";\nimport {CreateUserAction, DeleteUsersAction, DisableUsersAction, IUsersActionCtx, UsersAction} from \"back/core/actions/usersActions\";\nimport {CellBuilderDate, CellBuilderIconLabel, CellBuilderString, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {BaseAreaViewAsync, VIEWS} from \"lib/commons/views\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {AREAS, IArea, IControlAreaContext} from \"lib/commons/areas\";\nimport {IUserAreaContext} from \"back/core/dialogs/userAreas\";\nimport {FORMS} from \"lib/commons/forms\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport \"back/core/dialogs/dialogs_Perms\";\nimport {USERSELF, UserSelfSrv} from \"lib/core/userSelf\";\nimport {GridDataRowJsonTree} from \"back/commons/widgets/tree\";\nimport {IRoleEditUiHandlerContext, RoleEditUiHandler, ROLES} from \"lib/commons/roles\";\nimport {OGridSmallInit} from \"back/commons/widgets/grid-tags\";\nimport Reg = REG.Reg;\n\nexport interface OUsersMgrInit extends OSkinableInit {\n\treg: IReg<ICoreUniverseEnv>\n\t/** Init de la liste des ateliers. */\n\tusersGrid?: OUsersGridInit<IUsersActionCtx>\n\tuiContext?: \"popup\" | undefined\n\t/* Permet de contextualiser les messages UI */\n\tmsgs?: JUsersMgrL10nMsgs\n\t/* account sélectionné au load  */\n\tpreSelectAccount?: string\n}\n\ninterface JUsersMgrL10nMsgs {\n\tnoUsers?: string\n\tcolRoles?: string\n\tcolGroups?: string\n}\n\n\nabstract class UsersMgrBase<E extends IRegPointer<ICoreUniverseEnv & IUiEnv>> extends BaseAreaViewAsync<E> implements IGridLineDrawer, IUsersActionCtx, IUserAreaContext {\n\treg: IReg<ICoreUniverseEnv & IUiEnv>;\n\n\tusersGridElt: UsersGrid<IUsersActionCtx>;\n\n\tmsgs: JUsersMgrL10nMsgs = {};\n\n\t// IUserAreaContext\n\tuiContextSgn: string;\n\n\tuserSelfSrv: UserSelfSrv\n\tusersSrv: UsersSrv;\n\n\t// IUsersActionCtx\n\tusers?: JUser[] = null;\n\n\t// IControlLabelContext\n\tbuildControlLabel = true;\n\n\tformUpdateElt: HTMLFormElement;\n\tforcedUserDataOnSave: JUser = {};\n\n\tprotected _detailsBoxElt: HTMLDivElement;\n\tprotected _listBoxElt: HTMLDivElement;\n\tprotected _editUserToolbar: BarActions<UsersMgrBase<any>>;\n\tprotected _showToolbarTop: BarActions<IUsersActionCtx>;\n\tprotected _showToolbarBottom: BarActions<IUsersActionCtx>;\n\tprotected _formUpdateEmptyData: Dict<any> = {};\n\tprotected _detailUserCurrentData: Jsonisable;\n\n\tprotected async _initialize(init: OUsersMgrInit): Promise<void> {\n\t\tif (!this.reg) this.reg = REG.createSubReg(this.findReg(init));\n\t\tthis.usersSrv = this.reg.env.universe.adminUsers;\n\t\tthis.userSelfSrv = this.reg.env.universe.userSelf;\n\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"webzone:panel\", sr);\n\t\tthis.reg.installSkin(\"form-control-areas\", sr);\n\t\tthis.reg.installSkin(\"usersmgr-core\", sr);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tif (init.msgs) this.msgs = init.msgs;\n\n\t\t// Actions\n\t\tthis.reg.addToList(\"actions:usersmgr:show:toolbar:top\", \"actionRefreshUi\", 1, actionRefreshUi);\n\n\t\t// Accelkey\n\t\tlet accelKeyMgr = new AccelKeyMgr().initFromMapActions(this.reg.mergeListsAsMap(\"accelkeys:usersmgr\", \"accelkeys:usersmgr:\" + this.id));\n\n\t\t// Toolbar\n\t\taccelKeyMgr.initFromMapActions(this.reg.mergeListsAsMap(\"accelkeys:usersmgr\", \"accelkeys:usersmgr:\" + this.id));\n\n\t\t// Tree\n\t\tlet usersGridInit: OUsersGridInit<IUsersActionCtx> = Object.assign({\n\t\t\treg: this.reg,\n\t\t\tusersSrv: this.usersSrv,\n\t\t\tdisplayRazFilterBtn: true,\n\t\t\tfilterGroupsInputVisibility: true,\n\t\t\tfilterRolesInputVisibility: true,\n\t\t\tdisableAutoSearchOnInit: true,\n\t\t\tfilterTxt: init.preSelectAccount,\n\t\t\tforceSelectEntry: init.preSelectAccount ? true : false,\n\t\t\tgrid: Object.assign(init.usersGrid.grid, {\n\t\t\t\tselType: \"multi\",\n\t\t\t\thideHeaders: false,\n\t\t\t\tcolumnDefs: this.reg.mergeLists(\"columns:usersmgr\", \"columns:usersmgr:\" + this.id),\n\t\t\t\tskinOver: \"usersmgr-core-tree\",\n\t\t\t\tskinScroll: \"scroll/small\",\n\t\t\t\tlineDrawer: this,\n\t\t\t\tautoSelOnFocus: null,\n\t\t\t\t//defaultAction: init.defaultAction,\n\t\t\t\t//defaultActionCtx: this,\n\t\t\t} as OGridSmallInit)\n\t\t} as OUsersGridInit<IUsersActionCtx>, init.usersGrid);\n\t\tthis._listBoxElt = sr.appendChild(<div id=\"list\" c-resizable/>) as HTMLDivElement;\n\t\tsr.appendChild(<c-resizer/>);\n\t\tthis._detailsBoxElt = sr.appendChild(<div id=\"details\" c-resizable hidden/>) as HTMLDivElement;\n\t\tthis.usersGridElt = this._listBoxElt.appendChild(new UsersGrid().initialize(usersGridInit)) as UsersGrid<IUsersActionCtx>;\n\t\tawait this.usersGridElt.initializedAsync;\n\n\t\tthis.usersGridElt.grid.ctxMenuActions = {\n\t\t\tactions: ACTION.injectSepByGroup(this.reg.mergeLists(\"actions:usersmgr\", \"actions:usersmgr:ctxtmenu\", \"actions:usersmgr:ctxtmenu:\" + this.id, \"actions:usersmgr:\" + this.id) as IAction<IUsersActionCtx>[], this.reg.getPref(\"actions.usersmgr.groupOrder\", \"refresh users *\"), this),\n\t\t\tactionContext: this,\n\t\t};\n\n\t\tthis.usersGridElt.grid.addEventListener('keydown', async (ev: KeyboardEvent) => {\n\t\t\treturn accelKeyMgr.handleKeyboardEvent(ev, this);\n\t\t});\n\t\tthis.usersGridElt.grid.addEventListener('grid-select', async (ev: Event) => {\n\t\t\tlet users = this.usersGridElt ? this.usersGridElt.getSelectedUsers() : null;\n\t\t\tthis.users = users;\n\t\t\tthis._showToolbarTop.refreshContent();\n\t\t\tthis._showToolbarBottom.refreshContent();\n\t\t\tawait this.showDetailsUser(users)\n\t\t});\n\n\t\t// Toolbars\n\t\tlet toolbarsBox = this._listBoxElt.appendChild(<div id=\"toolbarsBox\"/>);\n\t\tthis._showToolbarTop = toolbarsBox.appendChild(new BarActions<IUsersActionCtx>().initialize({\n\t\t\treg: this.reg,\n\t\t\tactions: ACTION.injectSepByGroup(\n\t\t\t\tthis.reg.mergeLists(\"actions:usersmgr\", \"actions:usersmgr:show:toolbar:top\", \"actions:usersmgr:show:toolbar:top:\" + this.id, \"actions:usersmgr:\" + this.id),\n\t\t\t\tthis.reg.getPref(\"actions.usersmgr.groupOrder\", \"refresh users *\"), this),\n\t\t\tuiContext: \"bar\",\n\t\t\tactionContext: this,\n\t\t\tdisableFullOverlay: true,\n\t\t} as OBarActionsInit<IUsersActionCtx>));\n\t\tthis._showToolbarTop.setAttribute(\"class\", \"showToolbarTop\");\n\n\t\tthis._showToolbarBottom = toolbarsBox.appendChild(new BarActions<IUsersActionCtx>().initialize({\n\t\t\treg: this.reg,\n\t\t\tactions: ACTION.injectSepByGroup(\n\t\t\t\tthis.reg.mergeLists(\"actions:usersmgr:show:toolbar:bottom\", \"actions:usersmgr:show:toolbar:bottom:\" + this.id),\n\t\t\t\tthis.reg.getPref(\"actions.usersmgr.groupOrder\", \"refresh users *\"), this),\n\t\t\tuiContext: \"bar\",\n\t\t\tactionContext: this,\n\t\t\tdisableFullOverlay: true,\n\t\t} as OBarActionsInit<IUsersActionCtx>));\n\t\tthis._showToolbarBottom.setAttribute(\"class\", \"showToolbarBottom\");\n\n\n\t\t// Form details\n\t\tthis._editUserToolbar = this._detailsBoxElt.appendChild(new BarActions<UsersMgrBase<any>>().initialize({\n\t\t\treg: this.reg,\n\t\t\tactions: ACTION.injectSepByGroup(\n\t\t\t\tthis.reg.mergeLists(\"actions:usersmgr:edit:toolbar\", \"actions:usersmgr:edit:toolbar:\" + this.id),\n\t\t\t\tthis.reg.getPref(\"actions.usersmgr.groupOrder\", \"edit remove *\"), this),\n\t\t\tuiContext: \"bar\",\n\t\t\tactionContext: this,\n\t\t\tdisableFullOverlay: true,\n\t\t} as OBarActionsInit<UsersMgrBase<any>>));\n\t\tthis._editUserToolbar.setAttribute(\"class\", \"detailToolbar\");\n\t\t//this._editUserToolbar.setAttribute(\"hidden\", \"true\");\n\n\t\tthis.formUpdateElt = this._detailsBoxElt.appendChild(<form id=\"form\" autocomplete=\"off\"/>) as HTMLFormElement;\n\t\t//await this.initFormUi();\n\n\t\tlet onFormUpdateRequest = 0;\n\t\tthis.formUpdateElt.addEventListener('input', () => {\n\t\t\tif (onFormUpdateRequest) {\n\t\t\t\tclearTimeout(onFormUpdateRequest);\n\t\t\t\tonFormUpdateRequest = 0;\n\t\t\t}\n\t\t\tonFormUpdateRequest = setTimeout(async () => {\n\t\t\t\tawait this.computeDirtyStatus();\n\t\t\t\tonFormUpdateRequest = 0;\n\t\t\t}, 300) as any;\n\t\t});\n\t\tthis.formUpdateElt.addEventListener('keydown', async (ev: KeyboardEvent) => {\n\t\t\tif (ev.key === 's' && ACTION.isAccelPressed(ev)) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\tUserFormSaveAction.SINGLETON_user.executeIfAvailable(this, ev);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.addEventListener('keydown', async (ev: KeyboardEvent) => {\n\t\t\tif (ev.key === 'Enter' && ACTION.isAccelPressed(ev)) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\tif (init.uiContext === \"popup\" && await VIEWS.canHideView(this)) {\n\t\t\t\t\tPOPUP.findPopupableParent(this).close(false);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\t/*\n\t\tthis.reg.env.universe.auth.listeners.on(\"userUpdated\", async (account: string, props?: JUser) => {\n\t\t\tawait this.refresh();\n\t\t})\n\t\t*/\n\n\n\t\tawait this.refresh();\n\n\t}\n\n\t/** Refresh UI */\n\tasync _refresh() {\n\t\tthis.refreshFreeze(1);\n\t\ttry {\n\t\t\tsuper._refresh();\n\t\t\tawait this.usersGridElt.doSearchUsers(undefined);\n\t\t} finally {\n\t\t\tthis.refreshFreeze(-1);\n\t\t}\n\t}\n\n\t/**\n\t * Formulaire\n\t */\n\t/** Initialisation des fieldset du formulaire\n\t * Retourne true si le user a été affiché\n\t */\n\tasync showDetailsUser(user: JUser[] | null, force?: boolean): Promise<boolean> {\n\t\tif (user === null || user.length == 0) {\n\t\t\tDOM.setHidden(this._detailsBoxElt, true);\n\t\t\tthis._detailUserCurrentData = undefined;\n\t\t\tthis.dirtyStatus = false;\n\t\t\tthis.formUpdateElt.querySelectorAll(\"fieldset\").forEach((fieldsetElt: HTMLFieldSetElement) => {\n\t\t\t\tfieldsetElt.disabled = false;\n\t\t\t});\n\t\t\tthis._editUserToolbar.refreshContent();\n\t\t\treturn false;\n\t\t} else if (user.length == 1) {\n\t\t\tDOM.setHidden(this._detailsBoxElt, false);\n\t\t\tawait this.initFormUi('single');\n\t\t\tFORMS.jsonToForm(user[0], this.formUpdateElt, false, true);\n\t\t\tthis._detailUserCurrentData = FORMS.formToJson(this.formUpdateElt);\n\t\t\tthis.formUpdateElt.checkValidity();\n\t\t\tthis.formUpdateElt.querySelectorAll(\"fieldset\").forEach((fieldsetElt: HTMLFieldSetElement) => {\n\t\t\t\tfieldsetElt.disabled = this.isReadOnlyForm(user);\n\t\t\t});\n\t\t\tthis.dirtyStatus = false;\n\t\t\tthis._editUserToolbar.refreshContent();\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// sélection multiple de users\n\t\t\tDOM.setHidden(this._detailsBoxElt, false);\n\t\t\tawait this.initFormUi('multi');\n\t\t\tFORMS.jsonToForm([], this.formUpdateElt, false, true);\n\t\t\tthis._detailUserCurrentData = FORMS.formToJson(this.formUpdateElt);\n\t\t\tthis.formUpdateElt.checkValidity();\n\t\t\tthis.formUpdateElt.querySelectorAll(\"fieldset\").forEach((fieldsetElt: HTMLFieldSetElement) => {\n\t\t\t\tfieldsetElt.disabled = this.isReadOnlyForm(user);\n\t\t\t});\n\t\t\tthis.dirtyStatus = false;\n\t\t\tthis._editUserToolbar.refreshContent();\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/** Rafraichissements UI suite à modification des propriétés d'un user **/\n\tasync onUserChange(user: JUser | null): Promise<void> {\n\t\tif (user === null) {\n\t\t\t//TODO : maj de tout le tree + déselection user courant\n\t\t\tawait this.showDetailsUser(null);\n\t\t} else {\n\t\t\t// Maj du tree (si le user y est affiché)\n\t\t\tlet datas = this.usersGridElt.dataHolder.getDatas();\n\t\t\tlet userEntry = datas.find((entry) => entry.account === user.account);\n\t\t\tif (userEntry)\n\t\t\t\tthis.usersGridElt.dataHolder.replaceRowKey(userEntry, user, false);\n\t\t\t// Maj du form user si c'est le user actuellement affiché\n\t\t\tif (this.users.length === 1 && this.users[0].account === user.account) {\n\t\t\t\tthis.users = [user];\n\t\t\t\tawait this.showDetailsUser(this.users);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Retourne true si le formulaire est readonly */\n\tprotected isReadOnlyForm(user: JUser | JUser[] | null): boolean {\n\t\tif (!this.usersSrv.hasAspect(EUserAspects.updatable)) return true;\n\t\tif (Array.isArray(user)) {\n\t\t\tif (user.find((user) => user.isReadOnly)) return true;\n\t\t} else if (user !== null) {\n\t\t\treturn user.isReadOnly;\n\t\t}\n\t}\n\n\t/** Reset/Initialisation du formulaire (def du/des fieldset)\n\t * @param onlyIfNecessay : recalcul de la zone qu'en cas de changement de contexte ui\n\t * */\n\tasync initFormUi(uiContext: 'single' | 'multi' = 'single'): Promise<void> {\n\t\t// Recalcul de l'area : nécessaire car certaines areas dépendent du contexte (user courant, ...)\n\t\tthis.initFormELt();\n\t\tlet listCodes = uiContext == 'single' ? [\"userProps:update:single\", \"userProps:update:single:\" + this.id] : [\"userProps:update:multi\", \"userProps:update:multi:\" + this.id];\n\t\tawait AREAS.applyLayout(this.formUpdateElt, await Promise.all(this.reg.mergeLists<IArea<IUserAreaContext & IControlAreaContext> | Promise<IArea<IUserAreaContext & IControlAreaContext>>>(...listCodes)), this, true);\n\t\tthis._formUpdateEmptyData = FORMS.formToJson(this.formUpdateElt);\n\t}\n\n\tprotected initFormELt(force?: boolean): void {\n\t\tif (!this.formUpdateElt.hasChildNodes() || force) {\n\t\t\tthis.formUpdateElt.innerHTML = \"\";\n\t\t\tthis.formUpdateElt.appendChild(\n\t\t\t\t<fieldset id=\"fieldset\">\n\t\t\t\t\t<div id=\"common\">\n\t\t\t\t\t\t<div class=\"fields\" area-ids=\"account isDisabled enabledEndDt isHidden groups\"/>\n\t\t\t\t\t\t<div class=\"fields\" area-ids=\"nickNames firstName lastName groupName email\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"fields\" area-ids=\"*\"/>\n\t\t\t\t</fieldset>);\n\t\t}\n\t}\n\n\t//private _lastFormUiContext: 'single' | 'multi' | undefined;\n\n\t/** Retourne true si au moins une valeur du formulaire a changé */\n\t\t// Etat dirty courant\n\tprivate _dirtyStatus: boolean = false;\n\t_dirtyMdgOver: MsgOver = <c-msg-over class=\"disableMsgOver\"/> as MsgOver;\n\n\tget dirtyStatus(): boolean {return this._dirtyStatus}\n\n\tset dirtyStatus(val: boolean) {\n\t\tif (this._dirtyStatus != val) {\n\t\t\tthis._dirtyStatus = val;\n\t\t\t//DOM.setHidden(this._editUserToolbar, !this._dirtyStatus);\n\t\t\tthis._editUserToolbar.refreshContent();\n\t\t\tif (this.dirtyStatus == true) {\n\t\t\t\tthis._dirtyMdgOver.showMsgOver(this._listBoxElt);\n\t\t\t} else {\n\t\t\t\tthis._dirtyMdgOver.removeMsg();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync computeDirtyStatus(): Promise<boolean> {\n\t\tif (this._detailsBoxElt.hasAttribute(\"hidden\"))\n\t\t\treturn false;\n\t\tconst userData = FORMS.formToJson(this.formUpdateElt);\n\t\t/*console.log(\"DIRTY :: \", JSON.stringify(wspData) !== JSON.stringify(this._lastWspData));\n\t\tconsole.log(\"LAST :: \", JSON.stringify(this._lastWspData));\n\t\tconsole.log(\"NEW  :: \", JSON.stringify(wspData));*/\n\t\tthis.dirtyStatus = JSON.stringify(userData) !== JSON.stringify(this._detailUserCurrentData);\n\t\treturn this.dirtyStatus;\n\t}\n\n\t/**\n\t * Tree\n\t */\n\tredrawLine(row: GridDataRowJson<JUser>, line: HTMLElement): void {}\n\n\t/**\n\t * IViewApi\n\t */\n\tonViewBeforeHide(close?: boolean): boolean {\n\t\treturn false;\n\t}\n\n\tasync onViewWaitForHide(close?: boolean): Promise<boolean> {\n\t\treturn !await this.computeDirtyStatus() || await POPUP.confirm(`Des propriétés n'ont pas été enregistrées. Voulez-vous abandonner ces modifications et quitter ?`, this.reg.env.uiRoot, {\n\t\t\tokLbl: \"Abandonner les modifications et quitter\",\n\t\t\tcancelLbl: \"Reprendre l'édition\"\n\t\t});\n\t}\n\n}\n\nREG.reg.registerSkin('usersmgr-core', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\tflex-direction: column;\n\t\toverflow: hidden;\n\t}\n\n\t#list {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\toverflow: auto;\n\t\tmin-height: 30%;\n\t}\n\n\tserver-users-grid, c-input-ordered-set-panel {\n\t\tflex: 1;\n\t}\n\n\t#toolbarsBox {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\tc-bar-actions.showToolbarTop {\n\t\tflex: 1;\n\t}\n\n\tc-bar-actions.showToolbarTop,\n\tc-bar-actions.showToolbarBottom {\n\t\tflex-direction: column;\n\t\tborder-inline-start: 1px solid var(--border-color);\n\t}\n\n\n\tc-bar-actions.detailToolbar {\n\t\tflex-direction: row;\n\t\tborder-bottom: 1px solid var(--border-color);\n\t}\n\n\tc-bar-actions.detailToolbar[hidden] {\n\t\tdisplay: none;\n\t}\n\n\tc-resizer {\n\t\tpointer-events: auto;\n\t\tcursor: ns-resize;\n\t\theight: 2px;\n\t}\n\n\t.disableMsgOver {\n\t\tbackground-color: rgba(0, 0, 0, .2);\n\t}\n\n\t/* Form */\n\t#details {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\toverflow: auto;\n\t\theight: 60%;\n\t}\n\n\t#details[hidden] {\n\t\tdisplay: none;\n\t}\n\n\tform {\n\t\tflex-direction: column;\n\t\tpadding: 1em;\n\t\toverflow: auto;\n\t}\n\n\tfieldset {\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tmin-width: 0;\n\t}\n\n\t.lbl {\n\t\tmin-width: 4em;\n\t}\n\n\t#common {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-wrap: wrap;\n\t}\n\n\t#common > .fields {\n\t\tflex: 1;\n\t\tdisplay: grid;\n\t\tmin-width: 10em;\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-row-gap: .7rem;\n\t\tgrid-auto-rows: max-content;\n\t}\n\n\t#common > .fields > div {\n\t\tdisplay: contents;\n\t}\n\n\t#common > .fields:first-child {\n\t\tmargin-inline-end: 2em;\n\t}\n\n\t.fields div[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\tdiv[area-id=\"passwordSetMode\"] > .subPanel {\n\t\tborder: 0;\n\t\tmax-width: fit-content;\n\t}\n\n\t.ctrlLbl > .ctrlLbl {\n\t\tmargin: 0;\n\t}\n\n\tselect {\n\t\tmax-width: fit-content;\n\t}\n\n`);\nREG.reg.registerSkin('usersmgr-core-tree', 1, /* language=CSS */ `\n\tdiv[data-user-special] {\n\t\t/*opacity: 60%;*/\n\t\tfont-style: italic;\n\t}\n\n  div[data-user-hidden] {\n\t  /*font-style: italic;*/\n  }\n\n  div[data-user-current] > div.accountCell {\n\t  font-weight: bold;\n  }\n\n  /** Mise en forme de CellBuilderUserRoles */\n\n  c-userref + c-userref::before {\n\t  content: \", \";\n  }\n\n  .role-unknown {\n\t  text-decoration: line-through;\n  }\n\n  .role-inherited {\n\t  font-style: italic;\n  }\n\n  .icon {\n\t  background-size: auto .9rem;\n\t}\n\n\t.accountCell {\n\t\tdisplay: flex;\n\t}\n\n\t.accountLabel {\n\t\tflex: 1;\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t}\n\n\t.statusIcon {\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: center;\n\t\tbackground-size: auto .7rem;\n\t\tpadding-inline-start: 1rem;\n\t}\n\n\t.disabled {\n\t\tbackground-image: url(/@skin@/core/objects/user/disabled.svg);\n\t}\n\n\t.locked {\n\t\tbackground-image: url(/@skin@/core/objects/user/locked.svg);\n\t}\n\n\t.system {\n\t\tbackground-image: url(/@skin@/core/objects/user/system.svg);\n\t}\n\n`);\n\n\nexport class UsersMgr<E extends IRegPointer<ICoreUniverseEnv>> extends UsersMgrBase<E> {\n\tprotected async _initialize(init: OUsersMgrInit): Promise<void> {\n\t\tif (!this.reg) this.reg = REG.createSubReg(this.findReg(init));\n\t\tthis.usersSrv = this.reg.env.universe.adminUsers;\n\t\tthis.userSelfSrv = this.reg.env.universe.userSelf;\n\t\tthis.id = \"users\";\n\t\tthis.uiContextSgn = \"@user#edit\";\n\t\tthis.forcedUserDataOnSave.userType = EUserType.user;\n\t\tlet mgrInit: OUsersMgrInit = Object.assign({\n\t\t\tusersGrid: {\n\t\t\t\tfirstMaxEntries: 500,\n\t\t\t\tfullMaxEntries: 5000,\n\t\t\t\tfilterType: EUserType.user,\n\t\t\t\tfilterHiddenInputVisibility: true,\n\t\t\t\tfilterHiddenInputPerms: \"ui.usersMgr.admin.hiddenUser\",\n\t\t\t\tfilterHidden: false,\n\t\t\t\tfilterHiddenBtnInit: {\n\t\t\t\t\ttitle: \"Afficher/masquer les comptes de service\",\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\temptyBody: () => <span>{this.msgs.noUsers || \"Aucun utilisateur\"}</span>,\n\t\t\t\t}\n\t\t\t}\n\t\t}, init);\n\t\t// Toolbars\n\t\tthis.reg.addToList(\"actions:usersmgr:show:toolbar:top:users\", \"actionCreateUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(CreateUserAction.SINGLETON_user));\n\t\t// ContextMenu\n\t\tthis.reg.addToList(\"actions:usersmgr:ctxtmenu:users\", \"actionDeleteUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DeleteUsersAction.SINGLETON_user));\n\t\tthis.reg.addToList(\"actions:usersmgr:ctxtmenu:users\", \"actionEnableUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DisableUsersAction.SINGLETON_user_enable));\n\t\tthis.reg.addToList(\"actions:usersmgr:ctxtmenu:users\", \"actionDisableUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DisableUsersAction.SINGLETON_user_disable));\n\t\t// Colonnes\n\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"account\", 1, new GridColDef('account')\n\t\t\t.setLabel(\"Compte\").setFlex(\"4rem\", 1, 1)\n\t\t\t.setCellBuilder(new CellBuilderIconLabel(\"account\").setIconWidth(\"1rem\")\n\t\t\t\t//.override(\"_getIcon\", (row: GridDataRowJsonTree<JUser>) =>  row.cacheHolder[\"isDisabled\"] ? \"/@skin@/core/objects/user-disable.svg\" : \"/@skin@/core/objects/user.svg\")\n\t\t\t\t.override(\"_getIcon\", (row: GridDataRowJsonTree<JUser>) => \"/@skin@/core/objects/user.svg\")\n\t\t\t\t.override(\"getIconFilter\", (row: GridDataRowJsonTree<JUser>) => {\n\t\t\t\t\tconst isHidden = row.cacheHolder[\"isHidden\"];\n\t\t\t\t\treturn isHidden ? \"grayscale(100%)\" : \"\";\n\t\t\t\t})\n\t\t\t\t.override(\"redrawCell\", function (this: CellBuilderIconLabel, row: GridDataRowJsonTree<JUser>, root: HTMLElement) {\n\t\t\t\t\tconst icon = this._getIcon(row);\n\t\t\t\t\tconst label = this._getValue(row);\n\t\t\t\t\tDOM.addClass(root, \"accountCell\");\n\t\t\t\t\troot.innerText = \"\";\n\t\t\t\t\t// Icone\n\t\t\t\t\tconst span = this._buildContent(row, root);\n\t\t\t\t\tif (icon) {\n\t\t\t\t\t\tspan.style.unicodeBidi = 'isolate';\n\t\t\t\t\t\tspan.style.backgroundImage = icon.startsWith('--') ? `var(${icon})` : `url(\"${icon}\")`;\n\t\t\t\t\t\tspan.style.filter = this.getIconFilter(row);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tspan.style.backgroundImage = 'none';\n\t\t\t\t\t}\n\t\t\t\t\t// label\n\t\t\t\t\tif (label) root.appendChild(<span class=\"accountLabel\">{label}</span>);\n\t\t\t\t\tDOM.setAttr(root, \"title\", this._getDescription(row) || undefined);\n\t\t\t\t\t// Icones de statut\n\t\t\t\t\tif (row.rowDatas.isReadOnly)\n\t\t\t\t\t\troot.appendChild(<span class=\"statusIcon locked\" title=\"Compte en lecture seule\"/>);\n\t\t\t\t\tif (row.rowDatas.isDisabled)\n\t\t\t\t\t\troot.appendChild(<span class=\"statusIcon disabled\" title=\"Compte désactivé\"/>);\n\t\t\t\t\tif (row.rowDatas.isHidden)\n\t\t\t\t\t\troot.appendChild(<span class=\"statusIcon system\" title=\"Compte de service\"/>);\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tif (this.usersSrv.hasAspect(EUserAspects.oneNickName)) {\n\t\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"nickNames\", 1, new GridColDef('nickNames')\n\t\t\t\t.setLabel(\"Pseudo\").setFlex('2rem', 1, 1)\n\t\t\t\t.setCellBuilder(new CellBuilderString(\"nickNames\")));\n\t\t}\n\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"firstName\", 1, new GridColDef('firstName')\n\t\t\t.setLabel(\"Prénom\").setFlex('2rem', 1, 1)\n\t\t\t.setCellBuilder(new CellBuilderString(\"firstName\")));\n\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"lastName\", 1, new GridColDef('lastName')\n\t\t\t.setLabel(\"Nom\").setFlex('2rem', 1, 1)\n\t\t\t.setCellBuilder(new CellBuilderString(\"lastName\")));\n\t\tif (this.usersSrv.hasAspect(EUserAspects.rolable)) {\n\t\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"roles\", 1, new GridColDef('roles')\n\t\t\t\t.setLabel(\"Rôles\").setDescription(this.msgs.colRoles || \"Rôles résolus de l'utilisateur dans ce contexte\").setFlex('5rem', 1, 1)\n\t\t\t\t.setCellBuilder(new CellBuilderUserRoles(this.reg, \"roles\")));\n\t\t}\n\t\tif (this.usersSrv.hasAspect(EUserAspects.groupable)) {\n\t\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"groups\", 1, new GridColDef('groups')\n\t\t\t\t.setLabel(\"Groupes\").setDescription(this.msgs.colGroups || \"Groupes affectés à cet utilisateur\").setFlex('5rem', 1, 1)\n\t\t\t\t.setCellBuilder(new CellBuilderAccounts(this.reg, \"groups\", true, false)));\n\t\t}\n\t\tthis.reg.addToList(\"columns:usersmgr:users\", \"pwdDt\", 1, new GridColDef('pwdDt')\n\t\t\t.setLabel(\"Chgt Mdp\").setFlex('2rem', 1, 1).setDescription(\"Date du dernier changement de mot de passe\")\n\t\t\t.setCellBuilder(new CellBuilderDate(\"pwdDt\").setCellClass(\"center\")));\n\t\t// Form details\n\t\tthis.reg.addToList(\"actions:usersmgr:edit:toolbar:users\", 'userFormSave', 1, UserFormSaveAction.SINGLETON_user);\n\t\tthis.reg.addToList(\"actions:usersmgr:edit:toolbar:users\", 'userFormRevert', 1, UserFormRevertAction.SINGLETON_user);\n\t\tthis.reg.addToList(\"actions:usersmgr:show:toolbar:top:users\", \"actionDeleteUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DeleteUsersAction.SINGLETON_user));\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'account', 1, 'area.users.props');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'isDisabled', 1, 'area.users.isDisabled.users');\n\t\tif (this.usersSrv.hasAspect(EUserAspects.enabledEndDt)) this.reg.addSvcToList(\"userProps:update:single:users\", 'enabledEndDt', 1, 'area.users.enabledEndDt');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'nickNames.first', 1, 'area.users.nickNames.first');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'isHidden', 1, 'area.users.isHidden.users');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'firstName', 1, 'area.users.firstName');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'lastName', 1, 'area.users.lastName');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'groups', 1, 'area.users.groupsmembers.users');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'grantedRoles', 1, 'area.users.grantedRoles.users');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:users\", 'email', 1, 'area.users.email.user');\n\t\tthis.reg.addSvcToList(\"userProps:update:multi:users\", 'groups', 1, 'area.users.groupsmembers.multi.users');\n\t\tthis.reg.addSvcToList(\"userProps:update:multi:users\", 'grantedRoles', 1, 'area.users.grantedRoles.multi.users');\n\n\n\t\tawait super._initialize(mgrInit);\n\n\t\tthis._dirtyMdgOver.addEventListener(\"dblclick\", (ev) => {UserFormRevertAction.SINGLETON_user.executeIfAvailable(this, ev)});\n\t\tthis.formUpdateElt.addEventListener(\"keydown\", (ev) => {\n\t\t\tif (ev.key === 'Escape' && this.dirtyStatus) {\n\t\t\t\tUserFormRevertAction.SINGLETON_user.executeIfAvailable(this, ev);\n\t\t\t\tev.stopPropagation()\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Tree\n\t */\n\tredrawLine(row: GridDataRowJson<JUser>, line: HTMLElement): void {\n\t\tconst reg = REG.findReg<IBasicUniversePointer>(line);\n\t\tsuper.redrawLine(row, line);\n\t\tconst isCurrentUSer = row.rowDatas.account === reg.env.universe.auth.currentUser.account\n\t\tlet propsStr = [];\n\t\tif (isCurrentUSer) propsStr.push(\"actuellement connecté\");\n\t\tif (row.rowDatas.isDisabled) propsStr.push(\"désactivé\");\n\t\tif (row.rowDatas.isHidden) propsStr.push(\"de service\");\n\t\tif (row.rowDatas.isReadOnly) propsStr.push(\"en lecture seule\");\n\t\tif (propsStr.length > 0) {\n\t\t\tlet countProps = propsStr.join(\", \");\n\t\t\tline.title = `Compte ${countProps}`;\n\t\t\tDOM.setAttrBool(line, \"data-user-special\", true);\n\t\t} else {\n\t\t\tdelete line.title;\n\t\t\tline.removeAttribute(\"data-user-special\");\n\t\t}\n\t\tDOM.setAttrBool(line, \"data-user-current\", isCurrentUSer);\n\t}\n\n\tisReadOnlyForm(user: JUser | JUser[] | null): boolean {\n\t\tif (!this.reg.hasPerm(\"action.users#update.user\")) return true;\n\t\treturn super.isReadOnlyForm(user);\n\t}\n}\n\ncustomElements.define(\"usersmgr-users\", UsersMgr);\nREG.reg.registerSkin('usersmgr-users', 1, /* language=CSS */ `\n\t.ctrlLbl[area-id=isHidden] > .lbl::before,\n\t.ctrlLbl[area-id=isDisabled] > .lbl::before {\n\t\tcontent: \"\";\n\t\tpadding-inline-start: 1.2rem;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: left;\n\t\tbackground-size: auto .9rem;\n\t\tfilter: grayscale(100%) opacity(.8);\n\t}\n\n\t.ctrlLbl[area-id=enabledEndDt] > .lbl {\n\t  text-align: end;\n  }\n\n  .ctrlLbl[area-id=isHidden] > .lbl::before {\n\t  background-image: url(/@skin@/core/objects/user/system.svg);\n  }\n\n  .ctrlLbl[area-id=isDisabled] > .lbl::before {\n\t  background-image: url(/@skin@/core/objects/user/disabled.svg);\n  }\n\n`);\n\nexport class GroupsMgr<E extends IRegPointer<ICoreUniverseEnv>> extends UsersMgrBase<E> {\n\tprotected async _initialize(init: OUsersMgrInit): Promise<void> {\n\t\tif (!this.reg) this.reg = REG.createSubReg(this.findReg(init));\n\t\tthis.usersSrv = this.reg.env.universe.adminUsers;\n\t\tthis.userSelfSrv = this.reg.env.universe.userSelf;\n\t\tthis.forcedUserDataOnSave.userType = EUserType.group;\n\t\tthis.id = \"groups\";\n\t\tthis.uiContextSgn = \"@group#edit\";\n\t\tlet mgrInit: OUsersMgrInit = Object.assign({\n\t\t\tusersGrid: {\n\t\t\t\tfirstMaxEntries: 500,\n\t\t\t\tfullMaxEntries: 5000,\n\t\t\t\tfilterType: EUserType.group,\n\t\t\t\tfilterGroupsInputVisibility: false,\n\t\t\t\tfilterHiddenInputVisibility: false,\n\t\t\t\tfilterHidden: null,\n\t\t\t\tgrid: {\n\t\t\t\t\temptyBody: () => <span>Aucun groupe</span>,\n\t\t\t\t}\n\t\t\t}\n\t\t}, init);\n\t\t// Toolbar\n\t\tthis.reg.addToList(\"actions:usersmgr:show:toolbar:top:groups\", \"actionCreateUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(CreateUserAction.SINGLETON_group));\n\t\t// Colonnes\n\t\tthis.reg.addToList(\"columns:usersmgr:groups\", \"account\", 1, new GridColDef('account')\n\t\t\t.setLabel(\"Compte\").setFlex(\"4rem\", 1, 1)\n\t\t\t.setCellBuilder(new CellBuilderIconLabel(\"account\").setIconWidth(\"1.2em\")\n\t\t\t\t.override(\"_getIcon\", (row: GridDataRowJsonTree<JUser>) => {\n\t\t\t\t\treturn \"/@skin@/core/objects/group.svg\";\n\t\t\t\t}).override(\"getIconFilter\", (row: GridDataRowJsonTree<JUser>) => {\n\t\t\t\t\tconst isHidden = row.cacheHolder[\"isHidden\"];\n\t\t\t\t\treturn isHidden ? \"grayscale(100%)\" : \"\";\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tthis.reg.addToList(\"columns:usersmgr:groups\", \"groupName\", 1, new GridColDef('groupName')\n\t\t\t.setLabel(\"Intitulé\").setFlex('4em', 1, 1)\n\t\t\t.setCellBuilder(new CellBuilderString(\"groupName\")));\n\t\tif (this.usersSrv.hasAspect(EUserAspects.rolable)) {\n\t\t\tthis.reg.addToList(\"columns:usersmgr:groups\", \"roles\", 1, new GridColDef('roles')\n\t\t\t\t.setLabel(\"Rôles\").setDescription(\"Rôles résolus du groupe dans ce contexte\").setFlex('5rem', 1, 1)\n\t\t\t\t.setCellBuilder(new CellBuilderUserRoles(this.reg, \"roles\")));\n\t\t}\n\t\t// ContextMenu\n\t\tthis.reg.addToList(\"actions:usersmgr:ctxtmenu:groups\", \"actionDeleteUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DeleteUsersAction.SINGLETON_group));\n\t\t// usage ? this.reg.addToList(\"actions:usersmgr:ctxtmenu:groups\", \"actionEnableUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DisableUsersAction.SINGLETON_group_enable));\n\t\t// usage ? this.reg.addToList(\"actions:usersmgr:ctxtmenu:groups\", \"actionDisableUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DisableUsersAction.SINGLETON_group_disable));\n\t\t// Form details\n\t\tthis.reg.addToList(\"actions:usersmgr:edit:toolbar:groups\", 'userFormSave', 1, UserFormSaveAction.SINGLETON_group);\n\t\tthis.reg.addToList(\"actions:usersmgr:edit:toolbar:groups\", 'userFormRevert', 1, UserFormRevertAction.SINGLETON_group);\n\t\tthis.reg.addToList(\"actions:usersmgr:show:toolbar:top:groups\", \"actionDeleteUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DeleteUsersAction.SINGLETON_group));\n\t\t// usage ? this.reg.addToList(\"actions:usersmgr:edit:toolbar:groups\", \"actionEnableUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DisableUsersAction.SINGLETON_group_enable));\n\t\t// usage ? this.reg.addToList(\"actions:usersmgr:edit:toolbar:groups\", \"actionDisableUser\", 1, new ActionWrapperRefresUsersMgr(this).setOverridenSvc(DisableUsersAction.SINGLETON_group_disable));\n\t\tthis.reg.addSvcToList(\"userProps:update:single:groups\", 'account', 1, 'area.users.props');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:groups\", 'groupName', 1, 'area.users.groupName');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:groups\", 'isHidden', 1, 'area.users.isHidden.groups');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:groups\", 'groups', 1, 'area.users.groupsmembers.groups');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:groups\", 'grantedRoles', 1, 'area.users.grantedRoles.groups');\n\t\tthis.reg.addSvcToList(\"userProps:update:single:groups\", 'email', 1, 'area.users.email.group');\n\t\t// multi\n\t\tthis.reg.addSvcToList(\"userProps:update:multi:groups\", 'grantedRoles', 1, 'area.users.grantedRoles.multi.groups');\n\n\t\tawait super._initialize(mgrInit);\n\n\t\tthis._dirtyMdgOver.addEventListener(\"dblclick\", (ev) => {UserFormRevertAction.SINGLETON_group.executeIfAvailable(this, ev)});\n\t\tthis.formUpdateElt.addEventListener(\"keydown\", (ev) => {\n\t\t\tif (ev.key === 'Escape' && this.dirtyStatus) {\n\t\t\t\tUserFormRevertAction.SINGLETON_group.executeIfAvailable(this, ev);\n\t\t\t\tev.stopPropagation()\n\t\t\t}\n\t\t});\n\t}\n\n\tisReadOnlyForm(user: JUser | JUser[] | null): boolean {\n\t\tif (!this.reg.hasPerm(\"action.users#update.group\")) return true;\n\t\treturn super.isReadOnlyForm(user);\n\t}\n\n\t/**\n\t * Tree\n\t */\n\tredrawLine(row: GridDataRowJson<JUser>, line: HTMLElement): void {\n\t\tsuper.redrawLine(row, line);\n\t\tDOM.setAttrBool(line, \"data-user-hidden\", row.rowDatas.isHidden);\n\t\tline.title = row.rowDatas.isHidden ? \"Visibilité : gestion\" : \"Visibilité : globale\";\n\t}\n}\n\ncustomElements.define(\"usersmgr-groups\", GroupsMgr);\nREG.reg.registerSkin('usersmgr-groups', 1, /* language=CSS */ `\n`);\n\n/** CellBuilder **/\n\n/** Afichage des rôles *résolus* d'un user */\nexport class CellBuilderUserRoles extends CellBuilderString {\n\tprotected _rolesUiHandler: RoleEditUiHandler<IRoleEditUiHandlerContext>[];\n\n\tconstructor(protected _reg: IReg<any>, public dataKey: string, protected rolesLists: string = ROLES.UI_ROLES_LIST) {\n\t\tsuper(dataKey);\n\t}\n\n\tgetColSortFn(): IRowSortFn {\n\t\t// Comparaison uniquement sur le code : le titre des roles n'est résolu qu'en async sur l'affichage de la cellule...\n\t\treturn (r1: GridDataRowJson<JUser>, r2: GridDataRowJson<JUser>) => {\n\t\t\tconst r1_rolesStr = ROLES.resolveUserRoles({grantedRoles: r1.rowDatas.grantedRoles, refusedRoles: r1.rowDatas.refusedRoles, inheritedRoles: r1.rowDatas.inheritedRoles})?.join(\",\") || \"\";\n\t\t\tconst r2_rolesStr = ROLES.resolveUserRoles({grantedRoles: r2.rowDatas.grantedRoles, refusedRoles: r2.rowDatas.refusedRoles, inheritedRoles: r2.rowDatas.inheritedRoles})?.join(\",\") || \"\";\n\t\t\treturn r1_rolesStr.localeCompare(r2_rolesStr);\n\n\t\t\t/*\n\t\t\tconst r1_rolesStr = (r1.cacheHolder[\"specifRolesResult\"] instanceof Promise\n\t\t\t\t? ROLES.resolveUserRoles({grantedRoles: r1.rowDatas.grantedRoles, refusedRoles: r1.rowDatas.refusedRoles, inheritedRoles: r1.rowDatas.inheritedRoles})\n\t\t\t\t: r1.cacheHolder[\"specifRolesSort\"])||\"\";\n\t\t\tconst r2_rolesStr = (r2.cacheHolder[\"specifRolesResult\"] instanceof Promise\n\t\t\t\t? ROLES.resolveUserRoles({grantedRoles: r2.rowDatas.grantedRoles, refusedRoles: r2.rowDatas.refusedRoles, inheritedRoles: r2.rowDatas.inheritedRoles})\n\t\t\t\t: r2.cacheHolder[\"specifRolesSort\"])||\"\";\n\t\t\treturn r1_rolesStr.localeCompare(r2_rolesStr);\n\t\t\t */\n\t\t}\n\t}\n\n\tprivate async getRolesUiHandler(): Promise<RoleEditUiHandler<IRoleEditUiHandlerContext>[]> {\n\t\tif (this._rolesUiHandler !== undefined)\n\t\t\treturn this._rolesUiHandler;\n\t\telse if (this.rolesLists)\n\t\t\tthis._rolesUiHandler = await Promise.all(this._reg.mergeLists(this.rolesLists)) as RoleEditUiHandler<IRoleEditUiHandlerContext>[];\n\t\treturn this._rolesUiHandler;\n\t}\n\n\tredrawCell(row: GridDataRowJson<JUser>, root: HTMLElement): void {\n\n\t\tlet reg: Reg<ICoreUniverseEnv & IUiEnv> = REG.findReg(root) as Reg<ICoreUniverseEnv & IUiEnv>;\n\t\t// FIXME : contournement du fait que la row peut évoluer.\n\t\tconst cacheHolder = row.cacheHolder;\n\t\tlet cache: { sort: number, name: string, level: \"set\" | \"inherited\" | \"unknown\" }[] | Promise<{ sortUi: number, name: string, level: \"set\" | \"inherited\" | \"unknown\" }[]> = cacheHolder[\"specifRolesResult\"];\n\t\tif (cache == null) {\n\t\t\t//1èr redraw pour cette row.\n\t\t\tlet roles = ROLES.resolveUserRoles({grantedRoles: row.rowDatas.grantedRoles, refusedRoles: row.rowDatas.refusedRoles, inheritedRoles: row.rowDatas.inheritedRoles});\n\t\t\tlet roleUiCtx: IRoleEditUiHandlerContext = {\n\t\t\t\treg,\n\t\t\t\tgrantedRoles: row.rowDatas.grantedRoles,\n\t\t\t\trefusedRoles: row.rowDatas.refusedRoles,\n\t\t\t\tinheritedRoles: row.rowDatas.inheritedRoles,\n\t\t\t}\n\t\t\tif (roles.length > 0) {\n\t\t\t\t// Affichage des roles en sync\n\t\t\t\tDOM.setTextContent(root, roles.join(\", \"));\n\t\t\t\tcacheHolder[\"specifRolesResult\"] = cache = this.getRolesUiHandler().then(async (rolesUi: RoleEditUiHandler<IRoleEditUiHandlerContext>[]) => {\n\t\t\t\t\tif (cacheHolder[\"specifRolesResult\"] !== cache) return; //raceCond : les données de cette row ont évoluées.\n\t\t\t\t\tconst result = await ROLES.resolveRolesList(roles, roleUiCtx, rolesUi);\n\t\t\t\t\tif (cacheHolder[\"specifRolesResult\"] !== cache) return; //raceCond : les données de cette row ont évoluées.\n\t\t\t\t\treturn cacheHolder[\"specifRolesResult\"] = result;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcache = cacheHolder[\"specifRolesResult\"] = null;\n\t\t\t}\n\t\t}\n\n\t\tif (cache instanceof Promise) {\n\t\t\tlet roles = ROLES.resolveUserRoles({grantedRoles: row.rowDatas.grantedRoles, refusedRoles: row.rowDatas.refusedRoles, inheritedRoles: row.rowDatas.inheritedRoles});\n\n\t\t\t//cache non reseté mais calcul en cours, on attend, on réaffiche le nombre en attendant.\n\t\t\tDOM.setTextContent(root, roles.join(\", \"));\n\t\t\t(root as any).specifRolesPending = cache; //raceCond pour refresh async de la line HTML.\n\t\t\tcache.then(() => {\n\t\t\t\tif ((root as any).specifRolesPending !== cache) return; //raceCond : cette line HTML a été redessinée\n\t\t\t\t(root as any).specifRolesPending = null; //cleanup\n\t\t\t\tredrawCellUi(root, cacheHolder[\"specifRolesResult\"]);\n\t\t\t});\n\t\t} else {\n\t\t\t(root as any).specifRolesPending = null; //raceCond pour refresh async de la line HTML.\n\t\t\tredrawCellUi(root, null);\n\t\t}\n\n\t\tfunction redrawCellUi(root: HTMLElement, newUiRoles?: { role: string, sortUi: number, name: string, level: \"set\" | \"inherited\" | \"unknown\" }[]) {\n\t\t\tif (newUiRoles && newUiRoles.length > 0) {\n\t\t\t\t//cacheHolder[\"specifRolesSort\"] = \"\";\n\t\t\t\tcacheHolder[\"specifRolesContent\"] = <div/>;\n\t\t\t\tcacheHolder[\"specifRolesTitle\"] = newUiRoles.length > 1 ? \"Rôles : \" : \"Rôle : \";\n\t\t\t\tnewUiRoles.forEach((entry, pos) => {\n\t\t\t\t\t//cacheHolder[\"specifRolesSort\"] += `,${entry.name}`;\n\t\t\t\t\t// - Content\n\t\t\t\t\tlet hasNextEntry = pos < newUiRoles.length - 1;\n\t\t\t\t\tif (hasNextEntry)\n\t\t\t\t\t\tcacheHolder[\"specifRolesContent\"].appendChild(<span class={\"role-\" + entry.level}>{entry.name}, </span>)\n\t\t\t\t\telse\n\t\t\t\t\t\tcacheHolder[\"specifRolesContent\"].appendChild(<span class={\"role-\" + entry.level}>{entry.name}</span>)\n\t\t\t\t\t// - Title\n\t\t\t\t\tlet roleName = entry.name;\n\t\t\t\t\tswitch (entry.level) {\n\t\t\t\t\tcase \"inherited\":\n\t\t\t\t\t\tcacheHolder[\"specifRolesTitle\"] += (newUiRoles.length > 1 ? \"\\n- \" : \"\") + `${roleName} (issu d'un autre niveau)`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"unknown\":\n\t\t\t\t\t\tcacheHolder[\"specifRolesTitle\"] += (newUiRoles.length > 1 ? \"\\n- \" : \"\") + `${roleName} (inconnu)`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcacheHolder[\"specifRolesTitle\"] += (newUiRoles.length > 1 ? \"\\n- \" : \"\") + roleName;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\troot.innerHTML = cacheHolder[\"specifRolesContent\"] ? cacheHolder[\"specifRolesContent\"].innerHTML : \"\";\n\t\t\tDOM.setAttr(root, \"title\", cacheHolder[\"specifRolesTitle\"]);\n\t\t}\n\t}\n\n}\n\n\n/** Actions **/\n\n/** action refresh UI */\nconst actionRefreshUi = new Action<any>(\"refreshUi\")\n\t.setLabel(\"Rafraichir\")\n\t.setGroup(\"refresh\")\n\t.setIcon(\"/@skin@/commons/icons/refresh.svg\")\n\t.setExecute(async function (this: Action<any>, ctx: any, ev: Event) {\n\t\t\tconst me = DOMSH.findHost<UsersMgrBase<any>>(ev.target as Node);\n\t\t\tawait me.refresh();\n\t\t}\n\t);\n\n/** Wrapper d'une action qui déclenche un refresh du tree */\nclass ActionWrapperRefresUsersMgr<C extends UsersMgrBase<any>> extends ActionWrapper<C> {\n\tconstructor(public usersMgr: UsersMgrBase<any>) {\n\t\tsuper();\n\t}\n\n\tisEnabled(ctx: C): boolean {\n\t\tif (ctx.dirtyStatus !== false) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: C, ev?: Event): Promise<any> {\n\t\tlet result = await super.execute(ctx, ev);\n\t\tif (result) await this.usersMgr._refresh();\n\t\tif (typeof result === \"object\") {\n\t\t\tlet user = result as JUser;\n\t\t\tthis.usersMgr.usersGridElt.selectByJUser([user]);\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/** Formulaire : enregistrement des propriétés d'un utilisateur */\nclass UserFormSaveAction<E extends UsersMgrBase<any>> extends UsersAction<E> {\n\tstatic SINGLETON_user = new UserFormSaveAction(EUserType.user);\n\tstatic SINGLETON_group = new UserFormSaveAction(EUserType.group);\n\n\tconstructor(public userType: EUserType, id?: string) {\n\t\tsuper(id || \"userFormSave\");\n\t\tthis._label = \"Enregistrer\";\n\t\tthis.setGroup(\"edit\");\n\t\t//this.setMode(\"mono\");\n\t\tthis.setIcon(\"/@skin@/core/dialogs/save.svg\");\n\t\tthis.requireVisiblePerm(this.userType === EUserType.user ? \"action.users#update.user\" : \"action.users#update.group\");\n\t}\n\n\tisEnabled(ctx: E): boolean {\n\t\tif (!ctx.formUpdateElt || ctx.formUpdateElt.hasAttribute(\"disabled\"))\n\t\t\treturn false;\n\t\tif (!ctx.dirtyStatus)\n\t\t\treturn false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tisVisible(ctx: E): boolean {\n\t\t/*if (!ctx.dirtyStatus)\n\t\t\treturn false;*/\n\t\tif (!ctx.usersSrv.hasAspect(EUserAspects.updatable)) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tasync execute(ctx: E, ev?: Event): Promise<void> {\n\t\tif (ctx.formUpdateElt.reportValidity()) {\n\t\t\tlet msg = new MsgOver();\n\t\t\tawait msg.setCustomMsg(\"Veuillez patienter...\", \"info\").showMsgOver(ctx).waitFor(\n\t\t\t\tnew Promise(async (resolve, refuse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst params = Object.assign(FORMS.formToJson(ctx.formUpdateElt), ctx.forcedUserDataOnSave);\n\t\t\t\t\t\tif (ctx.users && ctx.users.length == 1) {\n\t\t\t\t\t\t\tconst resp = this.userType === EUserType.user ?\n\t\t\t\t\t\t\t\tawait ctx.userSelfSrv.updateUser(params) :\n\t\t\t\t\t\t\t\tawait ctx.userSelfSrv.updateGroup(params);\n\t\t\t\t\t\t\tlet errorStr = USERSELF.tcheckUserSelfRespError(resp, \"\");\n\t\t\t\t\t\t\tif (errorStr === null) {\n\t\t\t\t\t\t\t\tawait ctx.initFormUi();\n\t\t\t\t\t\t\t\t// clean des props au juste enregistré (expurgé des props de drive du save, avec les props éventuellement normalisées, ...)\n\t\t\t\t\t\t\t\tlet savedProps = await ctx.usersSrv.getUser(params.account);\n\t\t\t\t\t\t\t\tresolve(ctx.onUserChange(savedProps));\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\trefuse(ERROR.show(errorStr ? `L'enregistrement a échoué. ${errorStr}` : \"L'enregistrement a échoué.\", new Error(JSON.stringify(resp))));\n\t\t\t\t\t\t} else if (ctx.users && ctx.users.length > 1) {\n\t\t\t\t\t\t\tlet countUsers = ctx.users.length;\n\t\t\t\t\t\t\tlet errorsArray: Map<String, String> = new Map();\n\t\t\t\t\t\t\tfor (let ii = 0; ii < countUsers; ii++) {\n\t\t\t\t\t\t\t\tlet user = ctx.users[ii];\n\t\t\t\t\t\t\t\tlet posUser = ii + 1;\n\t\t\t\t\t\t\t\tmsg.setCustomMsg(`Enregistrements en cours (${posUser} sur ${countUsers})...`);\n\t\t\t\t\t\t\t\tlet userParams: JUser = Object.assign({}, params);\n\t\t\t\t\t\t\t\tuserParams.account = user.account;\n\t\t\t\t\t\t\t\tconst resp = this.userType === EUserType.user ?\n\t\t\t\t\t\t\t\t\tawait ctx.userSelfSrv.updateUser(userParams) :\n\t\t\t\t\t\t\t\t\tawait ctx.userSelfSrv.updateGroup(userParams);\n\t\t\t\t\t\t\t\tlet errorStr = USERSELF.tcheckUserSelfRespError(resp, \"\");\n\t\t\t\t\t\t\t\tif (errorStr === null) {\n\t\t\t\t\t\t\t\t\tlet savedProps = await ctx.usersSrv.getUser(user.account);\n\t\t\t\t\t\t\t\t\tawait ctx.onUserChange(savedProps);\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\terrorsArray.set(user.account, errorStr);\n\t\t\t\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));//FIXME : supprimer si besoin cette tempo justifiée uniquement par le suivi UI\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tawait ctx.showDetailsUser(null, true);\n\t\t\t\t\t\t\tif (errorsArray.size == 0) {\n\t\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet errorsCount = errorsArray.size;\n\t\t\t\t\t\t\t\tlet usersList = Array.from(errorsArray.keys()).join(\", \");\n\t\t\t\t\t\t\t\trefuse(ERROR.show(errorsCount == 1 ? `Une actualisation n'a pu avoir lieu : ${usersList}.` : `${errorsCount} actualisations n'ont pu avoir lieu : ${usersList}.`, new Error(Array.from(errorsArray.values()).join(\"\\n\\n\"))));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\trefuse(ERROR.report(`L'enregistrement a échoué. Veuillez réessayer ultérieurement.`, e));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t//else POPUP.showNotifWarning(\"Veuillez corriger le formulaire.\", ctx);\n\t}\n}\n\n/** Formulaire : reset du formulaire */\nclass UserFormRevertAction<E extends UsersMgrBase<any>> extends UsersAction<E> {\n\tstatic SINGLETON_user = new UserFormRevertAction(EUserType.user);\n\tstatic SINGLETON_group = new UserFormRevertAction(EUserType.group);\n\n\tconstructor(public userType: EUserType, id?: string) {\n\t\tsuper(id || \"userFormRevert\");\n\t\tthis._label = \"Annuler\";\n\t\tthis.setGroup(\"edit\");\n\t\tthis.setIcon(\"/@skin@/core/dialogs/cancel.svg\");\n\t\tthis.requireVisiblePerm(this.userType === EUserType.user ? \"action.users#update.user\" : \"action.users#update.group\");\n\t}\n\n\tisEnabled(ctx: E): boolean {\n\t\tif (!ctx.formUpdateElt || ctx.formUpdateElt.hasAttribute(\"disabled\"))\n\t\t\treturn false;\n\t\tif (!ctx.dirtyStatus)\n\t\t\treturn false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\t/*isVisible(ctx: E): boolean {\n\t\tif (!ctx.dirtyStatus)\n\t\t\treturn false;\n\t\treturn super.isVisible(ctx);\n\t}*/\n\n\tasync execute(ctx: UsersMgrBase<any>, ev?: Event): Promise<boolean> {\n\t\t// si pas execute issu de \"this\", confirmation\n\t\tif ((ev.target as Element).id === this.getId() || await POPUP.confirm(`Voulez-vous abandonner les modifications en cours ?`, ctx.reg.env.uiRoot, {\n\t\t\tokLbl: \"Abandonner les modifications\",\n\t\t\tcancelLbl: \"Reprendre l'édition\"\n\t\t})) {\n\t\t\tawait ctx.initFormUi(ctx.users.length ? \"multi\" : \"single\");\n\t\t\treturn ctx.showDetailsUser(ctx.users, true);\n\t\t}\n\t}\n}"]}