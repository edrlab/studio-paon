{"version":3,"sources":["/@back@/edit/wed/wedlets/box/boxInputCode.tsx"],"names":["EWedletEditMode","EWedletEditModeLabel","WEDLET","AgEltBoxSelection","insertAnnot","removeAnnot","DOMSH","REG","Compartment","EditorState","StateEffect","StateField","Decoration","EditorView","highlightSpecialChars","keymap","indentOnInput","LanguageDescription","LanguageSupport","StreamLanguage","RangeSet","RangeSetBuilder","foldGutter","foldKeymap","Text","lineNumbers","defaultKeymap","defaultTabBinding","bracketMatching","closeBrackets","closeBracketsKeymap","autocompletion","completionKeymap","commentKeymap","defaultHighlightStyle","oneDark","AgEltBoxInsertDrawerBox","isXmlMsg","XmlBatch","XmlInsertMsg","XA","ACTION","isSkTextAnnot","SkSearchTextAnnot","UiThemeDeskFeat","DOM","WED","BoxModel","BoxModelCm","[object Object]","wedlet","findFlatNext","element","n","BoxInputCode","registerWedletModel","InputCode","HTMLElement","this","batching","redrawAnnotRequest","selMode","tpl","wedMgr","listeners","on","getCurrentSel","hookMsgForNextSel","_a","setDelegatedHost","sr","attachShadow","SHADOWDOM_INIT","installSkins","localName","addEventListener","onKeyDown","onDbClick","langTypeProvSvc","getAttribute","langTypeProvider","reg","getSvc","setLangTypeDef","currentLangSvc","currentLang","console","warn","langTypeDef","langType","defaultLangTypeProvider","Promise","then","ext","cmView","dispatch","effects","langTypeConf","reconfigure","diffLangTypeDef","diffLangType","themeConf","_b","getDiffEditor","mode","setAttr","readOnlyConf","editable","of","write","val","children","state","create","doc","empty","extensions","addTheme","addLangType","fallback","tabSize","annotsField","extension","isWritableWedlet","setState","parent","shadowRoot","root","cmDispatch","bind","focusableElement","contentDOM","tr","docChanged","freezeFocus","isVirtual","insertDatasFromDisplay","newDoc","sliceString","batch","docHolder","newBatch","changes","iterChanges","fromA","toA","fromB","toB","inserted","length","spliceSequence","append","wedAnchor","deleteSequence","needAdjustForNextAdds","doBatch","update","from","chars","msg","insert","len","to","annot","planRedrawAnnots","window","requestIdleCallback","_redrawAnnotExecutor","redrawAnnotExecutor","isConnected","newAnnots","getAnnots","annotValues","a","start","offsetStart","push","type","searchMark","annotsEffect","focus","selection","head","anchor","scrollIntoView","otherValue","addDiffLangType","dom","ev","key","isAnyControlPressed","shiftKey","stopImmediatePropagation","isAccelPressed","exts","ed","findFirstChild","firstElementChild","view","getCmTheme","registerSkin","customElements","define","lastFocus","boxCodeEdit","findHost","rg","main","xa","freeze","end","setAtDepth","startInText","endInText","undefined","transac","docHolderAsync","isMsgFromUs","selAfter","findWedlet","rootWedlet","addr","lastAncestorIfNone","model","input","findBoxInputCode","last","darkTheme","ligthTheme","themeIsDark","desk","isIn","currentTheme","isDark","matchMedia","matches","onThemeChange","add","theme","newState","newExt","document","body","setCmTheme","mark","class","marks","e","is","rgBd","value","finish","map","provide","f","decorations","langTypeMap","Map","fetchLang","def","lib","fun","params","promise","l","set","fetchLangDyn","build","fetchLegacyLang","streamParser","idx","indexOf","substring","JSON","parse","get","import","jsx","typescript","buildDefaultLangDesc","Object","assign","codeLanguages","LANG_DESCS","sql","dialect","MySQL","MariaSQL","MSSQL","PostgreSQL","PLSQL","name","mime","load","async"],"mappings":"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","sourcesContent":["import {EWedletEditMode, EWedletEditModeLabel, IElementWedlet, IVirtualisableWedlet, IWedlet, WEDLET} from \"back/edit/wed/wedlets/wedlet\";\nimport {AgEltBoxSelection, IEltBoxSelection} from \"back/edit/wed/features/boxSel\";\nimport {IBoxInputDiffMaker, insertAnnot, removeAnnot} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {IJmlSubSet} from \"lib/commons/xml/jml\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {REG} from \"lib/commons/registry\";\nimport {Compartment, EditorState, Extension, StateEffect, StateField, Transaction} from 'res/codemirror/state';\nimport {Decoration, DecorationSet, EditorView, highlightSpecialChars, keymap} from 'res/codemirror/view';\nimport {indentOnInput, Language, LanguageDescription, LanguageSupport} from 'res/codemirror/language';\nimport {StreamLanguage, StreamParser} from \"res/codemirror/stream-parser\";\nimport {RangeSet, RangeSetBuilder, RangeValue} from 'res/codemirror/rangeset';\nimport {foldGutter, foldKeymap} from 'res/codemirror/fold';\nimport {Text} from 'res/codemirror/text';\nimport {lineNumbers} from 'res/codemirror/gutter';\nimport {defaultKeymap, defaultTabBinding} from 'res/codemirror/commands';\nimport {bracketMatching} from 'res/codemirror/matchbrackets';\nimport {closeBrackets, closeBracketsKeymap} from 'res/codemirror/closebrackets';\nimport {autocompletion, completionKeymap} from 'res/codemirror/autocomplete';\nimport {commentKeymap} from 'res/codemirror/comment';\nimport {defaultHighlightStyle} from 'res/codemirror/highlight';\nimport {oneDark} from 'res/codemirror/theme-one-dark';\nimport {AgEltBoxInsertDrawerBox} from \"back/edit/wed/features/insMgr\";\nimport {isXmlMsg, IXmlMsg, XmlBatch, XmlInsertMsg} from \"lib/edit/ot/xmlHouse\";\nimport {IXAddrRangeSel, XA} from \"lib/commons/xml/xAddr\";\nimport {ACTION} from \"lib/commons/actions\";\n//import { highlightSelectionMatches, searchKeymap } from 'res/codemirror/search';\n//import { rectangularSelection } from 'res/codemirror/rectangular-selection';\nimport {javascript} from \"res/codemirror/lang-javascript\";\nimport {ISkAnnot, ISkAnnotDrawer, ISkAnnotFocuser, isSkTextAnnot} from \"lib/edit/schema/schemaAnnots\";\nimport {SkSearchTextAnnot} from \"lib/edit/schema/schemaSearch\";\nimport {ThemeAction, UiThemeDeskFeat} from \"back/core/plugins/optionsPlg\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {DOM} from \"lib/commons/xml/dom\";\nimport {IDiffAnnotValue} from \"lib/edit/schema/diff\";\nimport {WedDiffValue} from \"back/edit/wed/wedlets/diff/diffTags\";\nimport {Msg} from \"lib/edit/ot/urban\";\nimport {WED} from \"back/edit/wed/wedCore\";\nimport {BoxModel, BoxWedlet} from \"back/edit/wed/wedlets/box/box\";\nimport {IWedletSingleElt} from \"back/edit/wed/wedlets/wedletSingleElt\";\n\n/** Wedlet pour le bind texte encapsulant codeMirror. */\nclass BoxModelCm extends BoxModel {\n\tfindBoxInputCode(wedlet: BoxWedlet): BoxInputCode | null {\n\t\treturn DOMSH.findFlatNext(wedlet.element, wedlet.element, (n): n is BoxInputCode => n instanceof BoxInputCode)\n\t}\n}\n\nWED.registerWedletModel(\"BoxCm\", BoxModelCm);\n\nexport class InputCode extends HTMLElement {\n}\n\nexport class BoxInputCode extends InputCode implements IElementWedlet, IEltBoxSelection, ISkAnnotDrawer, ISkAnnotFocuser, IBoxInputDiffMaker {\n\twedlet: IWedlet;\n\n\tfocusableElement: HTMLElement;\n\n\tcmView: EditorView;\n\n\tlangTypeProvider: ILangTypeProvider;\n\tlangTypeDef: string;\n\tlangType: Extension | Promise<Extension> | null;\n\n\tdiffLangTypeDef: string;\n\tdiffLangType: Extension | Promise<Extension> | null;\n\n\tbatching = false;\n\n\tget selMode(): 'box' | 'input' | 'caret' {return 'caret'}\n\n\tconfigWedletElt(tpl: Element, wedlet: IWedletSingleElt): void {\n\t\tthis.wedlet = wedlet;\n\t\tconst wedMgr = wedlet.wedMgr;\n\t\twedMgr.listeners.on(\"getCurrentSel\", getCurrentSel, -10);\n\t\twedMgr.listeners.on(\"hookMsgForNextSel\", hookMsgForNextSel);\n\t\twedlet.element?.setDelegatedHost(this);//Pour affecter correctement WedMgr.lastFocus sur les events 'focus' même si le box-ctn-input a déjà le focus.\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tWEDLET.installSkins(tpl, sr, this.wedlet, this.localName);\n\t\tthis.addEventListener(\"keydown\", this.onKeyDown);\n\t\tthis.addEventListener(\"dblclick\", this.onDbClick);\n\t\tconst langTypeProvSvc = tpl.getAttribute(\"langTypeProvSvc\");\n\t\tif (langTypeProvSvc) this.langTypeProvider = wedMgr.reg.getSvc<ILangTypeProvider>(langTypeProvSvc);\n\t\tthis.setLangTypeDef(tpl.getAttribute(\"langType\"));\n\t\tconst currentLangSvc = tpl.getAttribute(\"currentLangSvc\");\n\t\tif (currentLangSvc) {\n\t\t\tconst currentLang = wedMgr.reg.getSvc<ICurrentLang>(currentLangSvc);\n\t\t\tif (currentLang) currentLang(this, tpl);\n\t\t\telse console.warn(`loading wed: currentLangSvc '${currentLangSvc}' not found`);\n\t\t}\n\t}\n\n\tsetLangTypeDef(langTypeDef: string | null) {\n\t\tif (this.langTypeDef === langTypeDef) return;\n\t\tif (!langTypeDef) {\n\t\t\tthis.langTypeDef = null;\n\t\t\tthis.langType = null;\n\t\t} else {\n\t\t\tthis.langTypeDef = langTypeDef;\n\t\t\tthis.langType = this.langTypeProvider ? this.langTypeProvider(langTypeDef) || defaultLangTypeProvider(langTypeDef) : defaultLangTypeProvider(langTypeDef);\n\t\t\tif (this.langType instanceof Promise) this.langType.then((ext) => {this.langType = ext});\n\t\t}\n\t\tif (this.cmView) {\n\t\t\tif (this.langType instanceof Promise) {\n\t\t\t\tconst langTypeDef = this.langTypeDef;\n\t\t\t\tthis.langType.then(ext => {\n\t\t\t\t\tif (langTypeDef !== this.langTypeDef) return; //race cond.\n\t\t\t\t\tthis.cmView.dispatch({effects: langTypeConf.reconfigure(ext)});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.cmView.dispatch({effects: langTypeConf.reconfigure(this.langType || [])});\n\t\t\t}\n\t\t}\n\t}\n\n\tsetDiffLangTypeDef(langTypeDef: string | null) {\n\t\tif (this.diffLangTypeDef === langTypeDef) return;\n\t\tif (!langTypeDef) {\n\t\t\tthis.diffLangTypeDef = null;\n\t\t\tthis.diffLangType = null;\n\t\t} else {\n\t\t\tthis.diffLangTypeDef = langTypeDef;\n\t\t\tthis.diffLangType = this.langTypeProvider ? this.langTypeProvider(langTypeDef) || defaultLangTypeProvider(langTypeDef) : defaultLangTypeProvider(langTypeDef);\n\t\t\tif (this.diffLangType instanceof Promise) this.diffLangType.then((ext) => {this.diffLangType = ext});\n\t\t}\n\t}\n\n\tsetCmTheme(ext: Extension) {\n\t\tthis.cmView?.dispatch({effects: themeConf.reconfigure(ext)});\n\t\tthis.getDiffEditor()?.dispatch({effects: themeConf.reconfigure(ext)});\n\t}\n\n\tsetEditMode(mode: EWedletEditMode): void {\n\t\t//console.log(\"setEditMode:::\",mode, EWedletEditModeLabel[mode]);\n\t\tDOM.setAttr(this, \"edit-mode\", EWedletEditModeLabel[mode]);\n\t\tthis.cmView?.dispatch({effects: readOnlyConf.reconfigure(EditorView.editable.of(mode === EWedletEditMode.write))});\n\t}\n\n\trefreshBindValue(val: string | null, children?: IJmlSubSet): void {\n\t\tif (this.batching) return;\n\t\tconst state = EditorState.create({\n\t\t\tdoc: val || Text.empty,\n\t\t\textensions: this.addTheme(this.addLangType([\n\t\t\t\tlineNumbers(),\n\t\t\t\t//EditorView.lineWrapping,\n\t\t\t\thighlightSpecialChars(),\n\t\t\t\t//history(),\n\t\t\t\tfoldGutter(),\n\t\t\t\t//drawSelection(),\n\t\t\t\t//EditorState.allowMultipleSelections.of(true),\n\t\t\t\tindentOnInput(),\n\t\t\t\tdefaultHighlightStyle.fallback,\n\t\t\t\tbracketMatching(),\n\t\t\t\tcloseBrackets(),\n\t\t\t\tautocompletion(),\n\t\t\t\tEditorState.tabSize.of(2),\n\t\t\t\t//highlightActiveLine(),\n\t\t\t\t//highlightSelectionMatches(),\n\t\t\t\tannotsField.extension,\n\t\t\t\treadOnlyConf.of(EditorView.editable.of(WEDLET.isWritableWedlet(this.wedlet))),\n\t\t\t\tkeymap.of([\n\t\t\t\t\t...closeBracketsKeymap,\n\t\t\t\t\t...defaultKeymap,\n\t\t\t\t\t// ...searchKeymap,\n\t\t\t\t\t// ...historyKeymap,\n\t\t\t\t\t...foldKeymap,\n\t\t\t\t\t...commentKeymap,\n\t\t\t\t\t...completionKeymap,\n\t\t\t\t\tdefaultTabBinding,\n\t\t\t\t\t// ...lintKeymap\n\t\t\t\t])\n\t\t\t\t//listenChanges\n\t\t\t]))\n\t\t});\n\n\t\tif (this.cmView) {\n\t\t\tthis.cmView.setState(state);\n\t\t} else {\n\t\t\tthis.cmView = new EditorView({\n\t\t\t\tstate,\n\t\t\t\tparent: this.shadowRoot,\n\t\t\t\troot: this.shadowRoot,\n\t\t\t\tdispatch: this.cmDispatch.bind(this)\n\t\t\t});\n\t\t\tthis.focusableElement = this.cmView.contentDOM;\n\t\t}\n\t}\n\n\tprotected cmDispatch(tr: Transaction) {\n\t\tif (tr.docChanged) {\n\t\t\tthis.batching = true;\n\t\t\tthis.wedlet.wedMgr.freezeFocus = true;\n\t\t\ttry {\n\t\t\t\tif (this.wedlet.isVirtual()) {\n\t\t\t\t\tWEDLET.insertDatasFromDisplay(this.wedlet as IVirtualisableWedlet, null, tr.newDoc.sliceString(0));\n\t\t\t\t} else {\n\t\t\t\t\tconst batch = this.wedlet.wedMgr.docHolder.newBatch();\n\t\t\t\t\t//console.group(\"startBatch\");\n\t\t\t\t\ttr.changes.iterChanges((fromA: number, toA: number, fromB: number, toB: number, inserted: Text) => {\n\t\t\t\t\t\t//console.log(\"Tr -> batch\", fromA, toA, fromB, toB, inserted);\n\t\t\t\t\t\tif (inserted.length > 0) {\n\t\t\t\t\t\t\tbatch.spliceSequence(XA.append(this.wedlet.wedAnchor, fromA), toA - fromA, inserted.sliceString(0))\n\t\t\t\t\t\t} else if (toA > fromA) {\n\t\t\t\t\t\t\tbatch.deleteSequence(XA.append(this.wedlet.wedAnchor, fromA), toA - fromA);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbatch.needAdjustForNextAdds();\n\t\t\t\t\t});\n\t\t\t\t\t//console.groupEnd();\n\t\t\t\t\tbatch.doBatch();\n\t\t\t\t}\n\t\t\t\tthis.cmView.update([tr]);\n\t\t\t} finally {\n\t\t\t\tthis.batching = false;\n\t\t\t\tthis.wedlet.wedMgr.freezeFocus = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.cmView.update([tr]);\n\t\t}\n\t}\n\n\tinsertChars(from: number, chars: string, msg: IXmlMsg) {\n\t\tif (this.batching) return;\n\t\t//console.log(\"Batch ->tr : insert \", from, chars);\n\t\tthis.cmView.update([this.cmView.state.update({\n\t\t\tchanges: {from: from, insert: chars}\n\t\t})]);\n\t}\n\n\tdeleteChars(from: number, len: number, msg: IXmlMsg) {\n\t\tif (this.batching) return;\n\t\t//console.log(\"Batch ->tr : deleteChars \", from, len);\n\t\tthis.cmView.update([this.cmView.state.update({\n\t\t\tchanges: {from: from, to: from + len}\n\t\t})]);\n\t}\n\n\treplaceChars(chars: string, msg: IXmlMsg) {\n\t\tif (this.batching) return;\n\t\t//console.log(\"Batch ->tr : replaceChars \", chars);\n\t\tthis.cmView.update([this.cmView.state.update({\n\t\t\tchanges: {from: 0, to: this.cmView.state.doc.length, insert: chars}\n\t\t})]);\n\t}\n\n\tisEmpty(): boolean {return this.cmView.state.doc.length === 0}\n\n\tprotected redrawAnnotRequest = 0;\n\n\tdrawAnnot(annot: ISkAnnot): boolean {\n\t\tif (annot instanceof SkSearchTextAnnot) { //  || (WEDLET.diffLib?.isDiffAnnot(annot) && annot.diffSession === this.wedlet.wedMgr.docHolder.getDiffSession())\n\t\t\tthis.planRedrawAnnots();\n\t\t} else { // A suppr quand diff intégré.\n\t\t\tinsertAnnot(this, annot);\n\t\t}\n\t\treturn true;\n\t}\n\n\teraseAnnot(annot: ISkAnnot): boolean {\n\t\tif (annot instanceof SkSearchTextAnnot) { // || WEDLET.diffLib?.isDiffAnnot(annot)\n\t\t\tthis.planRedrawAnnots();\n\t\t\treturn true;\n\t\t} else { // A suppr quand diff intégré.\n\t\t\treturn removeAnnot(this, annot);\n\t\t}\n\t}\n\n\tplanRedrawAnnots() {\n\t\tif (!this.redrawAnnotRequest) this.redrawAnnotRequest = window.requestIdleCallback(this._redrawAnnotExecutor || (this._redrawAnnotExecutor = this.redrawAnnotExecutor.bind(this)))\n\t}\n\n\tprotected _redrawAnnotExecutor: (this: BoxInputCode) => void;\n\n\tredrawAnnotExecutor() {\n\t\tthis.redrawAnnotRequest = 0;\n\t\tif (!this.isConnected) return;\n\t\tconst wedMgr = this.wedlet.wedMgr;\n\t\tconst newAnnots = wedMgr.docHolder.getAnnots(this.wedlet.wedAnchor);\n\t\t//const diffSess = wedMgr.docHolder.getDiffSession();\n\t\tconst annotValues = [];\n\t\tfor (let a of newAnnots) {\n\t\t\tif (isSkTextAnnot(a)) {\n\t\t\t\tconst start = a.offsetStart;\n\t\t\t\tannotValues.push({from: start, to: start + a.len, type: searchMark});\n\t\t\t}\n\t\t\t// else if (WEDLET.diffLib?.isDiffAnnot(a) && a.diffSession === diffSess) {\n\t\t\t// \tconsole.log(\"annot:::\",a);\n\t\t\t// }\n\t\t}\n\t\tthis.cmView.dispatch({effects: annotsEffect.of(annotValues)});\n\t}\n\n\tfocusSkAnnot(annot: ISkAnnot): boolean {\n\t\tif (isSkTextAnnot(annot)) {\n\t\t\tconst start = annot.offsetStart;\n\t\t\tthis.focusableElement.focus();\n\t\t\tthis.cmView.dispatch({selection: {head: start, anchor: start + annot.len}, scrollIntoView: true});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tmakeInputForDiff(annot: IDiffAnnotValue): HTMLElement {\n\t\tconst state = EditorState.create({\n\t\t\tdoc: annot.otherValue,\n\t\t\textensions: this.addTheme(this.addDiffLangType([\n\t\t\t\tlineNumbers(),\n\t\t\t\thighlightSpecialChars(),\n\t\t\t\tfoldGutter(),\n\t\t\t\tdefaultHighlightStyle.fallback,\n\t\t\t\tEditorState.tabSize.of(2),\n\t\t\t\tEditorView.editable.of(false),\n\t\t\t\tkeymap.of([\n\t\t\t\t\t...defaultKeymap,\n\t\t\t\t\t...foldKeymap,\n\t\t\t\t])\n\t\t\t]))\n\t\t});\n\n\t\tconst cmView = new EditorView({\n\t\t\tstate,\n\t\t\troot: this.shadowRoot\n\t\t});\n\t\treturn cmView.dom;\n\t}\n\n\tonKeyDown(ev: KeyboardEvent) {\n\t\tif (ev.key === 'Tab' && (!ACTION.isAnyControlPressed(ev) || ev.shiftKey)) {\n\t\t\t//Insertion d'une tabulation\n\t\t\tev.stopImmediatePropagation();\n\t\t} else if (ACTION.isAccelPressed(ev)) {\n\t\t\tif (ev.key === ' ') {\n\t\t\t\tev.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tonDbClick(ev: MouseEvent) {ev.stopImmediatePropagation()}\n\n\tprotected addLangType(exts: Extension[]): Extension[] {\n\t\tif (this.langType instanceof Promise) {\n\t\t\tconst langTypeDef = this.langTypeDef;\n\t\t\tthis.langType.then(ext => {\n\t\t\t\tif (langTypeDef !== this.langTypeDef) return; //race cond.\n\t\t\t\tthis.cmView.dispatch({effects: langTypeConf.reconfigure(ext)});\n\t\t\t});\n\t\t\texts.push(langTypeConf.of([]));\n\t\t} else if (this.langType != null) {\n\t\t\texts.push(langTypeConf.of(this.langType));\n\t\t} else {\n\t\t\texts.push(langTypeConf.of([]));\n\t\t}\n\t\treturn exts;\n\t}\n\n\tprotected addDiffLangType(exts: Extension[]): Extension[] {\n\t\tif (this.diffLangType instanceof Promise) {\n\t\t\tconst langTypeDef = this.diffLangType;\n\t\t\tthis.diffLangType.then(ext => {\n\t\t\t\tif (langTypeDef !== this.diffLangType) return; //race cond.\n\t\t\t\tthis.getDiffEditor()?.dispatch({effects: langTypeConf.reconfigure(ext)});\n\t\t\t});\n\t\t\texts.push(langTypeConf.of([]));\n\t\t} else if (this.diffLangType != null) {\n\t\t\texts.push(langTypeConf.of(this.diffLangType));\n\t\t} else if (this.langType instanceof Promise) {\n\t\t\tconst langTypeDef = this.diffLangType;\n\t\t\tthis.langType.then(ext => {\n\t\t\t\tif (langTypeDef !== this.diffLangType) return; //race cond.\n\t\t\t\tthis.getDiffEditor()?.dispatch({effects: langTypeConf.reconfigure(ext)});\n\t\t\t});\n\t\t\texts.push(langTypeConf.of([]));\n\t\t} else {\n\t\t\texts.push(langTypeConf.of(this.langType || []));\n\t\t}\n\t\treturn exts;\n\t}\n\n\tgetDiffEditor(): EditorView {\n\t\tconst ed: ICmEditorTag | null = DOM.findFirstChild(this.shadowRoot, (n): n is WedDiffValue => n.localName === \"wed-diff-value\")?.firstElementChild as HTMLElement;\n\t\treturn ed?.cmView.view;\n\t}\n\n\tprotected addTheme(exts: Extension[]): Extension[] {\n\t\texts.push(getCmTheme());\n\t\treturn exts;\n\t}\n}\n\nAgEltBoxInsertDrawerBox(AgEltBoxSelection(BoxInputCode, {}));\n\nREG.reg.registerSkin('box-input-code', 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t  border-bottom: 1px solid var(--border-color);\n  }\n\n  :host([aria-multiline='true']) {\n\t  border: 1px solid var(--border-color);\n  }\n\n  .cm-scroller {\n\t  overflow: auto;\n\t  font-family: var(--font-mono, 'monospace') !important;\n\t  font-size: .9em;\n  }\n\n  .cm-editor:not(.cm-focused) {\n\t  background-color: unset !important;\n  }\n\n  .cm-editor.cm-focused {\n\t  outline: var(--edit-caret-focus) !important;\n\t  background-color: var(--edit-bgcolor) !important;\n  }\n\n  .cm-gutters,\n  .cm-foldPlaceholder {\n\t  background-color: unset !important;\n\t  color: var(--fade-color) !important;\n\t  border-color: var(--border-color) !important;\n  }\n\n  .cm-gutter {\n\t  user-select: none;\n  }\n\n  .cm-searchMatch {\n\t  background-color: var(--edit-search-bgcolor) !important;\n\t\toutline: none !important;\n\t}\n\n\t::selection {\n\t\tcolor: currentColor !important;\n\t\tbackground-color: var(--edit-seltext-bgcolor) !important;\n\t}\n\n\t::-webkit-scrollbar {\n\t\twidth: .6em;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\tbackground-color: var(--scroll-color);\n\t\tfilter: opacity(.1);\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: .2em;\n\t\tbox-shadow: inset 0 0 .3em var(--scroll-thumb-color);\n\t}\n`);\n/* pour extension drawSelection() : couteuse et intérêt douteux.\n\t.cm-cursor {\n\t\tborder-color: var(--color) !important;\n\t}\n\n\t.cm-selectionBackground {\n\t\tbackground-color: var(--edit-seltext-bgcolor) !important;\n\t}\n\n\t:not(.cm-focused) > * > * > .cm-selectionBackground {\n\t\tbackground-color: transparent !important;\n\t}\n */\nwindow.customElements.define(\"box-input-code\", BoxInputCode);\n\ninterface ICmEditorTag extends HTMLElement {\n\tcmView?: { view: EditorView }\n}\n\nfunction getCurrentSel(wedMgr: WedMgr): IXAddrRangeSel | undefined {\n\tconst focus = wedMgr.lastFocus;\n\tif ((focus as ICmEditorTag)?.cmView) {\n\t\tconst boxCodeEdit = DOMSH.findHost<BoxInputCode>(focus);\n\t\tif (boxCodeEdit) {\n\t\t\tconst rg = (focus as ICmEditorTag).cmView.view.state.selection.main;\n\t\t\tconst xa = boxCodeEdit.wedlet.wedAnchor;\n\t\t\treturn {start: XA.freeze(XA.append(xa, rg.from)), end: XA.freeze(XA.setAtDepth(xa, -1, rg.to)), startInText: true, endInText: true}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction hookMsgForNextSel(wedMgr: WedMgr, transac: Msg, msg: Msg): void | true {\n\tif (!msg) return;\n\t//console.log(\"hookMsgForNextSel:::\", transac, msg);\n\tif (wedMgr.docHolderAsync.isMsgFromUs(transac)) {\n\t\t//On est à l'origine de ce msg, on prend le Focus.\n\t\tif (msg instanceof XmlBatch && msg.selAfter) {\n\t\t\t//batch avec selAfter renseigné.\n\t\t\tconst wedlet = WEDLET.findWedlet(wedMgr.rootWedlet, msg.selAfter.addr, {lastAncestorIfNone: true});\n\t\t\tif (wedlet?.model instanceof BoxModelCm) {\n\t\t\t\tconst input = wedlet.model.findBoxInputCode(wedlet as BoxWedlet);\n\t\t\t\tif (input?.cmView) {\n\t\t\t\t\tinput.focusableElement.focus();\n\t\t\t\t\t//console.log(\"input.focusableElement:::\",input.focusableElement);\n\t\t\t\t\tconst anchor = XA.last(msg.selAfter.end || msg.selAfter.addr) as number || 0;\n\t\t\t\t\tconst head = msg.selAfter.end ? XA.last(msg.selAfter.addr) as number || 0 : undefined;\n\t\t\t\t\tinput.cmView.dispatch({selection: {anchor, head}})\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isXmlMsg(msg)) {\n\t\t\tconst wedlet = WEDLET.findWedlet(wedMgr.rootWedlet, msg.xa, {lastAncestorIfNone: true});\n\t\t\tif (wedlet?.model instanceof BoxModelCm) {\n\t\t\t\tconst input = wedlet.model.findBoxInputCode(wedlet as BoxWedlet);\n\t\t\t\tif (input?.cmView) {\n\t\t\t\t\tinput.focusableElement.focus();\n\t\t\t\t\t//console.log(\"input.focusableElement:::\", input.focusableElement);\n\t\t\t\t\tconst start = XA.last(msg.xa) as number;\n\t\t\t\t\tif (msg instanceof XmlInsertMsg) {\n\t\t\t\t\t\tinput.cmView.dispatch({selection: {anchor: start + msg.len, head: start}});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinput.cmView.dispatch({selection: {anchor: start}});\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst themeConf = new Compartment();\nconst darkTheme: Extension = oneDark;\nconst ligthTheme: Extension = [];\n\nlet themeIsDark: boolean;\n\nexport function getCmTheme(): Extension {\n\tif (themeIsDark === undefined) {\n\t\t//1er init\n\t\tif (desk && UiThemeDeskFeat.isIn(desk)) {\n\t\t\tthemeIsDark = desk.currentTheme ? desk.currentTheme.isDark : window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\t\t\tdesk.onThemeChange.add((theme: ThemeAction) => {\n\t\t\t\t\tconst newState = theme?.isDark || false;\n\t\t\t\t\tif (newState !== themeIsDark) {\n\t\t\t\t\t\tthemeIsDark = newState;\n\t\t\t\t\t\tconst newExt = themeIsDark ? darkTheme : ligthTheme;\n\t\t\t\t\t\tDOMSH.findFlatNext(document.body, document.body, (n): n is Node => {\n\t\t\t\t\t\t\tif (n instanceof BoxInputCode) n.setCmTheme(newExt);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t} else {\n\t\t\tthemeIsDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\t\t}\n\t}\n\treturn themeConf.of(themeIsDark ? darkTheme : ligthTheme);\n}\n\n\nconst searchMark = Decoration.mark({class: \"cm-searchMatch\"}) as Decoration & RangeValue;\nconst annotsEffect = StateEffect.define<{ from: number, to: number, type: Decoration & RangeValue }[]>()\nconst annotsField = StateField.define<DecorationSet>({\n\tcreate() {\n\t\t//return Decoration.none\n\t\treturn RangeSet.empty;\n\t},\n\tupdate(marks, tr) {\n\t\tfor (let e of tr.effects) if (e.is(annotsEffect)) {\n\t\t\t//return RangeSet.of(e.value.map(annot => annot.type.range(annot.from, annot.to)));\n\t\t\tconst rgBd = new RangeSetBuilder<Decoration & RangeValue>();\n\t\t\tfor (let annot of e.value) {\n\t\t\t\trgBd.add(annot.from, annot.to, annot.type);\n\t\t\t}\n\t\t\treturn rgBd.finish();\n\t\t}\n\t\treturn marks.map(tr.changes);\n\t},\n\tprovide: f => EditorView.decorations.from(f)\n})\n\n/** Compartment de config de l'état readOnly/writable du widget. */\nconst readOnlyConf = new Compartment();\n\n/**\n * Fonction pour définir la langue courrante dynamiquement.\n * Cette fonction est appelée à l'initialisation du widget.\n * Elle doit appeler widget.setLangTypeDef(...) pour affecter la langue courante.\n */\nexport type ICurrentLang = (widget: BoxInputCode, tpl: Element) => void\n\n\n/** Founisseur de langages. */\nexport type ILangTypeProvider = (def: string) => LanguageSupport | Promise<LanguageSupport> | null\n\n/** Compartment de config de la langue courante. */\nconst langTypeConf = new Compartment();\n\n/** Map des langages par défaut chargés ou en chargement. */\nconst langTypeMap = new Map<string, LanguageSupport | Promise<LanguageSupport> | null>();\n\nfunction fetchLang<LIB>(def: string, lib: Promise<LIB>, fun: keyof LIB, params?: any): Promise<LanguageSupport> {\n\tconst promise = lib.then((l) => {\n\t\tconst ext = (l[fun] as any as Function)(params);\n\t\tlangTypeMap.set(def, ext);\n\t\treturn ext;\n\t})\n\tlangTypeMap.set(def, promise);\n\treturn promise;\n}\n\nfunction fetchLangDyn<LIB>(def: string, lib: Promise<LIB>, build: (lib: LIB) => LanguageSupport): Promise<LanguageSupport> {\n\tconst promise = lib.then((l) => {\n\t\tconst ext = build(l);\n\t\tlangTypeMap.set(def, ext);\n\t\treturn ext;\n\t})\n\tlangTypeMap.set(def, promise);\n\treturn promise;\n}\n\nfunction fetchLegacyLang<LIB>(def: string, lib: Promise<LIB>, key: keyof LIB): Promise<LanguageSupport> {\n\tconst promise = lib.then((l) => {\n\t\tconst streamParser = l[key] as any as StreamParser<any>;\n\t\tconst ext = new LanguageSupport(StreamLanguage.define(streamParser) as any as Language);\n\t\tlangTypeMap.set(def, ext);\n\t\treturn ext;\n\t})\n\tlangTypeMap.set(def, promise);\n\treturn promise;\n}\n\n\n/** Fournisseur par défaut des langages. */\nexport function defaultLangTypeProvider(def: string): LanguageSupport | Promise<LanguageSupport> | null {\n\tconst idx = def?.indexOf(':');\n\tlet params: any;\n\tif (idx > 0) {\n\t\tdef = def.substring(0, idx);\n\t\tparams = JSON.parse(def.substring(idx + 1));\n\t}\n\tlet langType = langTypeMap.get(def);\n\tif (langType !== undefined) return langType;\n\tswitch (def) {\n\tcase \"text/css\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-css.js\"), \"css\");\n\tcase \"text/x-csrc\":\n\tcase \"text/x-c++src\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-cpp.js\"), \"cpp\");\n\tcase \"text/html\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-html.js\"), \"html\");\n\tcase \"text/x-java\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-java.js\"), \"java\");\n\tcase \"text/javascript\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-javascript.js\"), \"javascript\", {jsx: false, typescript: false});\n\tcase \"text/typescript\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-javascript.js\"), \"javascript\", {jsx: false, typescript: true});\n\tcase \"text/jsx\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-javascript.js\"), \"javascript\", {jsx: true, typescript: false});\n\tcase \"text/tsx\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-javascript.js\"), \"javascript\", {jsx: true, typescript: true});\n\tcase \"application/json\":\n\tcase \"application/ld+json\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-json.js\"), \"json\");\n\tcase \"text/x-markdown\":\n\t\tbuildDefaultLangDesc();\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-markdown.js\"), \"markdown\", Object.assign({codeLanguages: LANG_DESCS}, params));\n\tcase \"text/x-python\":\n\tcase \"text/x-cython\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-python.js\"), \"python\", params);\n\tcase \"text/x-rustsrc\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-rust.js\"), \"rust\", params);\n\tcase \"text/x-sql\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-sql.js\"), \"sql\", params);\n\tcase \"text/x-mysql\":\n\t\treturn fetchLangDyn(def, import(\"res/codemirror/lang-sql.js\"), lib => lib.sql(Object.assign({dialect: lib.MySQL}, params)));\n\tcase \"text/x-mariadb\":\n\t\treturn fetchLangDyn(def, import(\"res/codemirror/lang-sql.js\"), lib => lib.sql(Object.assign({dialect: lib.MariaSQL}, params)));\n\tcase \"text/x-mssql\":\n\t\treturn fetchLangDyn(def, import(\"res/codemirror/lang-sql.js\"), lib => lib.sql(Object.assign({dialect: lib.MSSQL}, params)));\n\tcase \"text/x-pgsql\":\n\t\treturn fetchLangDyn(def, import(\"res/codemirror/lang-sql.js\"), lib => lib.sql(Object.assign({dialect: lib.PostgreSQL}, params)));\n\tcase \"text/x-plsql\":\n\t\treturn fetchLangDyn(def, import(\"res/codemirror/lang-sql.js\"), lib => lib.sql(Object.assign({dialect: lib.PLSQL}, params)));\n\tcase \"application/xml\":\n\t\treturn fetchLang(def, import(\"res/codemirror/lang-xml.js\"), \"xml\", params);\n\n\t\t//********** legacy *****\n\tcase \"text/x-diff\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/diff.js\"), \"diff\");\n\tcase \"text/x-dockerfile\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/dockerfile.js\"), \"dockerFile\");\n\tcase \"application/xml-dtd\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/dtd.js\"), \"dtd\");\n\tcase \"text/x-mathematica\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/mathematica.js\"), \"mathematica\");\n\tcase \"text/x-nginx-conf\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/nginx.js\"), \"nginx\");\n\tcase \"text/x-octave\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/octave.js\"), \"octave\");\n\tcase \"text/x-perl\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/perl.js\"), \"perl\");\n\t\t// case \"text/x-php\":\n\t\t// case \"application/x-httpd-php\":\n\t\t// \treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/php.js\"), \"php\");\n\tcase \"application/x-powershell\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/powershell.js\"), \"powerShell\");\n\tcase \"text/x-properties\":\n\tcase \"text/x-ini\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/properties.js\"), \"properties\");\n\tcase \"text/x-rsrc\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/r.js\"), \"r\");\n\tcase \"text/x-ruby\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/ruby.js\"), \"ruby\");\n\tcase \"text/x-sh\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/shell.js\"), \"shell\");\n\tcase \"text/x-stex\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/stex.js\"), \"stex\");\n\tcase \"text/x-swift\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/swift.js\"), \"swift\");\n\tcase \"text/x-vb\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/vb.js\"), \"vb\");\n\tcase \"text/x-yaml\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/yaml.js\"), \"yaml\");\n\tcase \"text/x-csharp\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"csharp\");\n\tcase \"text/x-objectivec\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"objectiveC\");\n\tcase \"text/x-scala\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"scala\");\n\tcase \"x-shader/x-vertex\":\n\tcase \"x-shader/x-fragment\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"shader\");\n\tcase \"text/x-squirrel\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"squirrel\");\n\tcase \"text/x-ceylon\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"ceylon\");\n\tcase \"text/x-kotlin\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"kotlin\");\n\tcase \"text/x-nesc\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/clike.js\"), \"nesC\");\n\tcase \"text/x-cmake\":\n\t\treturn fetchLegacyLang(def, import(\"res/codemirror/legacy-modes/cmake.js\"), \"cmake\");\n\tdefault: //text/plain ou inconnu\n\t\treturn null;\n\t}\n}\n\n/**\n * Listes des langages connus pour injection auto (markdown...)\n * Attention, si ce tableau est complété par des appels externes, appeler avant buildDefaultLangDesc()\n * pour bénéficier des langages par défaut.\n */\nexport const LANG_DESCS: LanguageDescription[] = [];\n\nexport function buildDefaultLangDesc() {\n\tif (LANG_DESCS.length > 0) return;\n\n\tfunction def(name: string, mime: string) {\n\t\treturn {name, load: async () => defaultLangTypeProvider(mime)}\n\t}\n\n\tLANG_DESCS.push(\n\t\tLanguageDescription.of(def(\"css\", \"text/css\")),\n\t\tLanguageDescription.of(def(\"html\", \"text/html\")),\n\t\tLanguageDescription.of(def(\"java\", \"text/x-java\")),\n\t\tLanguageDescription.of(def(\"xml\", \"application/xml\"))\n\t\t//TODO add...\n\t);\n}"]}