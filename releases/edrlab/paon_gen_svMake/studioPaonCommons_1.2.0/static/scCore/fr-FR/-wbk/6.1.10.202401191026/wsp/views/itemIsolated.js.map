{"version":3,"sources":["/@back@/wsp/views/itemIsolated.tsx"],"names":["BaseElementAsync","REG","SEC","VIEWS","DOMSH","SRC","WSP","ITEM","EventMgr","EWspChangesEvts","newSrcView","ItemIsolated","[object Object]","this","shortDescs","init","wsp","reg","env","infoBroker","addConsumer","longDesc","fetchLongDesc","srcRef","itemType","wspMetaUi","getItemType","itModel","createSubRegMixed","place","newPlaceWsp","srcView","longDescChange","securityCtx","createSub","srcRoles","srcRi","eventsMgr","on","onWspUriChange","bind","isExtItem","srcUri","getWsp","extractWspCdFromWspRef","itFullUriInOwnerWsp","_buildContent","attachShadow","SHADOWDOM_INIT","installSkin","shadowRoot","_initAndInstallSkin","localName","view","getIsolatedView","appendChild","viewShown","onViewShown","closed","closePlace","close","removeConsumer","onViewHidden","visitor","options","r","undefined","info","msg","from","wspCd","code","type","perm","isSubUriOrEqual","ldNew","isConnected","isAvailable","waitForAvailable","emit","emitter","registerSkin","customElements","define"],"mappings":"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","sourcesContent":["import {BaseElementAsync, OSkinableInit} from \"back/commons/basis\";\nimport {IInfo, IInfoBroker, IInfoConsumer} from \"lib/commons/infos\";\nimport {IReg, REG} from 'lib/commons/registry';\nimport {SEC} from 'lib/commons/security';\nimport {IView, IViewContainer, OViewVisitOptions, VIEWS} from \"lib/commons/views\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JSrcFields, SRC, srcRef} from \"lib/wsp/src\";\nimport {IWspUiEnv, JWspUriChangeMsg, WSP, Wsp} from \"lib/wsp/wsp\";\nimport {IShortDescCtx, ITEM} from \"lib/wsp/item\";\n//Force le chargement des ribons.\nimport \"back/wsp/widgets/ribbon/ribbon\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {IItemUiEnv, newSrcView} from \"back/wsp/views/itemMain\";\nimport \"back/core/zones/webZones\";\n\n/**\n * Composant de base pour les mainViews des items.\n */\nexport interface ItemIsolated {\n\tinitialize(init: OSrcIsolatedInit): this;\n}\n\nexport interface OSrcIsolatedInit extends OSkinableInit {\n\t/** Registre de l'atelier. */\n\treg: IReg<IWspUiEnv>;\n\t/** Sourec à afficher */\n\tsrcRef: srcRef;\n}\n\nexport class ItemIsolated extends BaseElementAsync implements IInfoConsumer, IView, IViewContainer, IShortDescCtx {\n\n\treg: IReg<IItemUiEnv>;\n\twsp: Wsp;\n\tinfoBroker: IInfoBroker;\n\tplace: WspsLivePlace;\n\tview: IView;\n\n\tasync _initialize(init: OSrcIsolatedInit) {\n\t\tthis.wsp = init.reg.env.wsp;\n\t\tthis.infoBroker = init.reg.env.infoBroker;\n\t\tif (this.infoBroker) this.infoBroker.addConsumer(this); //on s'abonne de suite pour ne pas louper des demandes de type serchText/searchItemRef, etc.\n\t\tconst longDesc = await this.wsp.fetchLongDesc(init.srcRef);\n\t\tconst itemType = this.wsp.wspMetaUi.getItemType(longDesc.itModel);\n\t\tthis.reg = REG.createSubRegMixed(init.reg, itemType.reg);\n\t\tthis.reg.env.place = this.wsp.newPlaceWsp();\n\t\t//console.log(\"longDesc:::\", longDesc);\n\t\tthis.reg.env.longDesc = longDesc;\n\t\tthis.shortDescs[0] = longDesc;\n\t\tthis.reg.env.srcView = this;\n\t\tthis.reg.env.longDescChange = new EventMgr();\n\t\tthis.reg.env.securityCtx = SEC.createSub(init.reg.env.securityCtx, longDesc.srcRoles, longDesc.srcRi, longDesc);\n\n\t\tthis.reg.env.place.eventsMgr.on(\"wspUriChange\", this.onWspUriChange.bind(this));\n\n\t\tif (ITEM.isExtItem(longDesc.srcUri)) {\n\t\t\t//On écoute les modifs de cet atelier étranger public.\n\t\t\tthis.reg.env.place.getWsp(WSP.extractWspCdFromWspRef(longDesc.itFullUriInOwnerWsp));\n\t\t}\n\n\t\treturn this._buildContent(init);\n\t}\n\n\tprotected async _buildContent(init: OSrcIsolatedInit): Promise<void> {\n\t\tthis.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis.reg.installSkin(\"webzone:page\", this.shadowRoot);\n\t\tthis.reg.installSkin(\"wsp-itemisolated\", this.shadowRoot);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\t\tconst view = await newSrcView(this.reg.env.itemType.getIsolatedView(this.reg.env.longDesc), this.reg);\n\t\tif (view) this.shadowRoot.appendChild(view);\n\t}\n\n\tviewShown: boolean;\n\n\tonViewShown() {\n\t\tthis.viewShown = true;\n\t\tif (this.view) VIEWS.onViewShown(this.view);\n\t}\n\n\tonViewHidden(closed: boolean) {\n\t\tthis.viewShown = false;\n\t\tif (closed) {\n\t\t\tif (this.reg) {\n\t\t\t\tthis.reg.env.place.closePlace();\n\t\t\t\tthis.reg.close();\n\t\t\t}\n\t\t\tif (this.infoBroker) this.infoBroker.removeConsumer(this);\n\t\t}\n\t\tif (this.view) VIEWS.onViewHidden(this.view, closed);\n\t}\n\n\tvisitViews(visitor: (view: IView) => any, options?: OViewVisitOptions): any {\n\t\tif (this.view) {\n\t\t\tconst r = visitor(this.view);\n\t\t\tif (r !== undefined) return r;\n\t\t}\n\t}\n\n\tasync visitViewsAsync(visitor: (view: IView) => Promise<any>, options?: OViewVisitOptions): Promise<any> {\n\t\tif (this.view) {\n\t\t\tconst r = await visitor(this.view);\n\t\t\tif (r !== undefined) return r;\n\t\t}\n\t}\n\n\tonInfo(info: IInfo): void {}\n\n\tasync onWspUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') {\n\t\tif (msg.wspCd !== this.reg.env.wsp.code) return;\n\t\tconst longDesc = this.reg.env.longDesc;\n\t\tif (SRC.srcRef(longDesc) === SRC.srcRef(msg) || (msg.type === EWspChangesEvts.perm && SRC.isSubUriOrEqual(msg.srcUri, longDesc.srcUri))) {\n\t\t\tconst ldNew = await this.reg.env.wsp.fetchLongDesc(SRC.srcRef(longDesc), this);\n\t\t\tif (!this.isConnected) return;\n\t\t\tif (!this.wsp.isAvailable) await this.wsp.waitForAvailable(this);\n\t\t\tthis.reg.env.longDesc = ldNew;\n\t\t\tthis.shortDescs[0] = ldNew;\n\t\t\t//console.log(\"longDesc new:::\", longDesc);\n\t\t\tthis.reg.env.securityCtx = SEC.createSub(this.reg.env.securityCtx, ldNew.srcRoles, ldNew.srcRi, ldNew);\n\t\t\tthis.reg.env.longDescChange.emit(ldNew, longDesc);\n\t\t}\n\t}\n\n\t//*** Apis IShortDescCtx ***\n\tshortDescs: JSrcFields[] = [];\n\n\tget emitter() {return this}\n}\n\nREG.reg.registerSkin('wsp-itemisolated', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t\tbackground-color: var(--bgcolor);\n\t\tcolor: var(--color);\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n`);\n\ncustomElements.define('wsp-itemisolated', ItemIsolated);"]}