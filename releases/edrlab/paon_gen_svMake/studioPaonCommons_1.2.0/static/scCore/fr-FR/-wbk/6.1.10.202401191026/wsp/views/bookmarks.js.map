{"version":3,"sources":["/@back@/wsp/views/bookmarks.tsx"],"names":["Grid","EFolderState","GridColTreeDef","GridDataHolderJsonTree","REG","BaseAreaView","JSX","ShadowJsx","DOMSH","SRC","WSP","EGridDropPos","InfoCurrentItem","InfoHighlighItemSgn","InfoReqCurrentItem","ITEM","IO","Action","ACTION","ActionWrapper","BASIS","ActionBtn","ShortDescCopy","SrcAction","POPUP","CellBuilderSrcIconCodeTitle","ERROR","EWspChangesEvts","Bookmarks","[object Object]","this","shortDescs","tree","BkGridDataTree","srcDt","ctxMenuActions","actions","actionContext","rect","grid","getSelRect","emitter","me","parent","index","nodes","filter","n","isBkEntry","isNewSrcUri","refUri","length","tmpSet","Set","countRows","buildMap","node","add","isBkFolder","ch","forEach","size","refs","fetchShortDescs","wsp","keys","i","srcRef","srcMap","set","offset","getOffsetInChildren","getRowKeyChildren","getDatas","updateDatasInTree","defaultOpened","map","cloneBkNode","_saveBookmarks","setSelectedRows","getActiveRow","entry","deleteRowKey","_gcSrcMaps","Math","min","srcUri","rowKey","findFirstRowKeyBySrcUri","ensureRowVisible","getOffset","init","super","_initialize","reg","env","infoBroker","itemHandlingReact","sr","attachShadow","SHADOWDOM_INIT","_initAndInstallSkin","localName","colDefs","primaryCol","setSortable","setFlex","setMinWidth","setRowDropMgr","rowDropMgr","setCellBuilder","CellBuilderBk","secondaryCols","push","appendChild","initialize","selType","columnDefs","dataHolder","hideHeaders","autoSelOnFocus","lineDrawer","skinOver","skinScroll","emptyBody","lastError","undefined","createElement","label","level","defaultAction","defaultActionCtx","addEventListener","ev","bk","findHost","sel","getSelectedDatas","src","get","Array","from","matches","dispatchEvent","CustomEvent","detail","bubbles","composed","linesNode","setAttribute","s","ref","k","isRowKeyAncestor","showNotifInfo","preventDefault","_dragging","setShortDescTransferToDragSession","resetShortDescTransferToDragSession","accelKeyMgr","handleKeyboardEvent","hasAttribute","mergeLists","extractAttr","split","overrideActions","focusActionables","buildButtons","idx","findIndex","a","getId","setOverridenSvc","setLabel","injectSepByGroup","getPref","isAvailable","waitForAvailable","resp","wspServer","config","privateFolderUrl","fetch","qs","code","status","JSON","parse","headers","bkRoot","asJson","srcRefMap","Map","normalizeRef","srcRefIdent","setDatas","req","dispatchInfo","_setCurrentItem","e","log","fields","fetchJson","method","body","stringify","bookmarkVersion","exportBkNode","Content-Type","universe","wsFrames","ws","postMsg","svc","type","report","_fetchBookmarks","clearSet","delete","_currentSrcUri","invalidateRows","row","line","rowDatas","shortDesc","classList","toggle","_highlightSgn","_assigned","srcId","sgn","itSgn","test","parentLastDatas","info","hidden","sgnPattern","assigned","closed","removeConsumer","msgListeners","removeListener","_onLiaiseMsg","place","eventsMgr","_onConnRenewed","_onWspUriChange","onLiaiseMsg","bind","on","onConnRenewed","onWspUriChange","addConsumer","msg","u","r","has","fetchShortDesc","then","sd","Object","assign","itSt","m","onSyncLost","registerSkin","customElements","define","d","setOpenAll","result","match","data","find","wspMetaUi","srcUriItemsSortFn","root","redrawCell","_srcFields","cacheHolder","_buildCache","icon","itTi","cache","srcRdr","getMainName","getIcon","getFolderState","opened","onKeypressPrompt","key","findPopupableParent","target","close","currentTarget","shadowRoot","querySelector","value","stopImmediatePropagation","onClickPromptDone","findDocumentOrShadowRoot","onClickPromptCancel","BkCreateFolder","_id","_label","_group","ctx","showDialog","skin","onkeypress","class","ui-context","onclick","titleBar","barLabel","resizer","onNextClose","newNodes","getDataByOffset","addBkNodes","getRowKeyParent","getRowKeyIndex","BkRenameFolder","countSelectedRows","isEnabled","isVisible","BkDel","isNotRemoved","deleteBkNodes","BkCopy","atLeastOne","setShortDescTransferToClipboard","bookmarks","BkCut","BkPasteBefore","uiContext","buttonNode","pendingBtns","pending","getShortDescsTransferFromClipboard","srcs","showNotifWarning","btn","action","updateButton","transfer","isArray","srcRefs","disabled","BkPasteInOrBefore","count","isVisibleSuper","BkPasteAfter","dataTransfer","dropEffect","pos","after","before","shiftKey","isRowSelected","none","getRowKey","last","over","getShortDescsTransferFromDragSession","targetSrcType","wspCd","addBookmarkAction","accel","addToList"],"mappings":"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","sourcesContent":["import {GridDataHolderJsonArray, GridDataRowJson} from \"back/commons/widgets/grid-libs\";\nimport {Grid} from \"back/commons/widgets/grid-tags\";\nimport {EFolderState, GridColTreeDef, GridDataHolderJsonTree, GridDataRowJsonTree} from \"back/commons/widgets/tree\";\nimport {IInfo, IInfoBroker, IInfoConsumer} from \"lib/commons/infos\";\nimport {ILastDatasBuilder, JLastDatas} from \"lib/commons/lastDatas\";\nimport {IReg, IRegPointer, REG} from 'lib/commons/registry';\nimport {BaseAreaView, OBaseAreaViewInit} from \"lib/commons/views\";\nimport {JSX, ShadowJsx} from \"lib/commons/xml/dom\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JSrcFields, JSrcFieldsTree, SRC, srcRef, srcUri} from \"lib/wsp/src\";\nimport {IWspUiEnv, JWspUriChangeMsg, WSP, Wsp} from \"lib/wsp/wsp\";\nimport {EGridDropPos, IGrid, IGridLineDrawer, IGridRowDropMgr} from \"back/commons/widgets/grid-core\";\nimport {InfoCurrentItem, InfoHighlighItemSgn, InfoReqCurrentItem, IShortDescCtx, IShortDescsTransfer, ITEM} from \"lib/wsp/item\";\nimport {IO} from \"lib/commons/io/io\";\nimport {IActionable, IContextMenuActionsPointer, IFocusActionables} from \"back/commons/actionables\";\nimport {AccelKeyMgr, Action, ACTION, ActionWrapper, EButtonUiContext, IAccelKeyMgrPointer, IAction} from \"lib/commons/actions\";\nimport {BASIS} from \"back/commons/basis\";\nimport {ActionBtn, Button} from \"back/commons/widgets/buttons\";\nimport {ShortDescCopy, SrcAction} from \"back/wsp/actions/srcActions\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {CellBuilderSrcIconCodeTitle, JSrcFieldsPointer} from \"back/wsp/widgets/srcGridColumns\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {EWspChangesEvts, WspsLivePlace} from \"lib/wsp/wspsLive\";\n\n\n/**\n */\nexport interface Bookmarks extends BaseAreaView<IRegPointer<IWspUiEnv>> {\n\tinitialize(init: OBookmarksInit): this\n}\n\nexport interface OBookmarksInit extends OBaseAreaViewInit<IRegPointer<IWspUiEnv>> {\n\n\tdefaultAction?: IAction<IBkCtx>;\n\n\t/** Actions pour le menuContextuel. */\n\tactions?: IAction<IBkCtx>[];\n\n\taccelKeyMgr?: AccelKeyMgr<IBkCtx>;\n\n\t/** Redéfinition de la colonne primaire. */\n\tprimaryCol?: GridColTreeDef\n\n\t/** Colonnes secondaires à ajouter du grid. */\n\tsecondaryCols?: GridColTreeDef[]\n\n\t/** Réagira aux infos issues de ce broker (item courant, highlight d'items selon signature) */\n\titemHandlingReact?: IInfoBroker\n\n\t//lastDatas?: JLDBookmarks\n}\n\nexport class Bookmarks extends BaseAreaView<IRegPointer<IWspUiEnv>> implements IInfoConsumer, ILastDatasBuilder, IGridLineDrawer, IBkCtx, IFocusActionables<IBkCtx>, IContextMenuActionsPointer<IBkCtx>, IAccelKeyMgrPointer<IBkCtx> {\n\treg: IReg<IWspUiEnv>;\n\twsp: Wsp;\n\tinfoBroker: IInfoBroker;\n\n\tactions?: IAction<IBkCtx>[];\n\taccelKeyMgr?: AccelKeyMgr<IBkCtx>;\n\n\t/** boutons à afficher dans la focusToolbar. */\n\tfocusActionables: IActionable<IBkCtx>[];\n\n\tget ctxMenuActions() {return {actions: this.actions, actionContext: this, rect: this.grid.getSelRect()}}\n\n\t/** Sélection en cours de src nodes dédoublonnés, sans les dossiers du bookmark. */\n\tshortDescs: JSrcFieldsTree[] = [];\n\n\tget emitter() {return this.grid} //on pointe le noeud focusable.\n\tget me() {return this} // IBkCtx\n\n\tlastError: undefined /* initing*/ | null /* pas d'erreur */ | 1;\n\n\t/** Arbre des données du bookmark. */\n\ttree = new BkGridDataTree();\n\n\t/** Date de dernière modif de l'arbre. */\n\tsrcDt = -1;\n\n\t/* ShortDescs chargés correpondant aux entrées du boolmark. */\n\tsrcMap: Map<srcRef, JSrcFields>;\n\n\tgrid: Grid;\n\n\tprotected _currentSrcUri: srcUri;\n\tprotected _highlightSgn: RegExp;\n\tprotected _assigned: srcRef;\n\n\t_dragging: boolean;\n\n\t/** Retourne le nb de lignes insérées*/\n\tasync addBkNodes(parent: JBkNode | null, index: number, nodes: JBkNode[]) {\n\t\tnodes = nodes?.filter((n) => !isBkEntry(n) || !SRC.isNewSrcUri(n.refUri));\n\t\tif (!nodes || nodes.length === 0) return;\n\t\tconst tmpSet = new Set<srcRef>();\n\t\tlet countRows = 0;\n\t\tconst buildMap = function (node: JBkNode) {\n\t\t\tif (isBkEntry(node)) {\n\t\t\t\tcountRows++;\n\t\t\t\ttmpSet.add(node.refUri);\n\t\t\t} else if (isBkFolder(node)) {\n\t\t\t\tcountRows++;\n\t\t\t\tnode.ch.forEach(buildMap);\n\t\t\t}\n\t\t};\n\t\tnodes.forEach(buildMap);\n\t\tif (tmpSet.size > 0) {\n\t\t\t//Chargement de nouvelles srcs.\n\t\t\tconst refs = await WSP.fetchShortDescs(this.wsp, this, ...tmpSet.keys());\n\t\t\tlet i = 0;\n\t\t\tfor (const srcRef of tmpSet) this.srcMap.set(srcRef, refs[i++]);\n\t\t}\n\t\tconst offset = this.tree.getOffsetInChildren(parent, parent ? this.tree.getRowKeyChildren(parent) : this.tree.getDatas(), index);\n\t\tthis.tree.updateDatasInTree(parent, index, 0, GridDataHolderJsonTree.defaultOpened, ...nodes.map(cloneBkNode));\n\t\tawait this._saveBookmarks();\n\t\tthis.grid.setSelectedRows([offset, -countRows - offset + 1]);\n\t}\n\n\tasync deleteBkNodes(nodes: JBkNode[]): Promise<void> {\n\t\tconst offset = this.grid.getActiveRow();\n\t\tfor (const entry of nodes) this.tree.deleteRowKey(entry);\n\t\tthis._gcSrcMaps();\n\t\tawait this._saveBookmarks();\n\t\tif (offset >= 0) this.grid.setSelectedRows(Math.min(offset, this.tree.countRows() - 1));\n\t}\n\n\tasync ensureRowVisible(srcUri: srcUri): Promise<boolean> {\n\t\tconst rowKey = this.tree.findFirstRowKeyBySrcUri(srcUri);\n\t\tif (rowKey) this.grid.ensureRowVisible(this.tree.getOffset(rowKey));\n\t\treturn rowKey != null;\n\t}\n\n\n\tprotected _initialize(init: OBookmarksInit) {\n\t\tsuper._initialize(init); //init this.reg, this.area, this.areaContext\n\t\tthis.wsp = this.reg.env.wsp;\n\t\tthis.infoBroker = init.itemHandlingReact;\n\t\tconst sr = this.attachShadow(DOMSH.SHADOWDOM_INIT);\n\t\tthis._initAndInstallSkin(this.localName, init);\n\n\t\tconst colDefs = [init.primaryCol || new GridColTreeDef('srcTree')\n\t\t\t.setSortable(false)\n\t\t\t.setFlex('1rem', 1, 1).setMinWidth('55px').setSortable(true)\n\t\t\t.setRowDropMgr(rowDropMgr)\n\t\t\t.setCellBuilder(new CellBuilderBk(this))];\n\t\tif (init.secondaryCols) colDefs.push(...init.secondaryCols);\n\n\t\tthis.grid = sr.appendChild(new Grid().initialize({\n\t\t\tselType: 'multi',\n\t\t\tcolumnDefs: colDefs,\n\t\t\tdataHolder: this.tree,\n\t\t\thideHeaders: true,\n\t\t\tautoSelOnFocus: 'first',\n\t\t\tlineDrawer: this.infoBroker ? this : null,\n\t\t\tskinOver: 'wsp-bookmarks/grid',\n\t\t\tskinScroll: 'scroll/small',\n\t\t\temptyBody: (): Node => {\n\t\t\t\tif (this.lastError === undefined) {\n\t\t\t\t\treturn <c-msg label=\"Chargement...\" level=\"info\"/>\n\t\t\t\t} else if (this.lastError === null) {\n\t\t\t\t\treturn <c-msg label=\"Aucun favori\" level=\"info\"/>\n\t\t\t\t} else {\n\t\t\t\t\treturn <c-msg label=\"Accès au serveur impossible\" level=\"error\"/>\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultAction: init.defaultAction,\n\t\t\tdefaultActionCtx: this\n\t\t}));\n\n\t\tthis.grid.addEventListener('grid-select', function (this: IGrid, ev: Event) {\n\t\t\tconst bk = DOMSH.findHost(this) as Bookmarks;\n\t\t\tconst sel = (this.dataHolder as GridDataHolderJsonArray<JBkNode>).getSelectedDatas();\n\t\t\tconst set = new Set();\n\t\t\tfor (const node of sel) {\n\t\t\t\tif (isBkEntry(node)) {\n\t\t\t\t\tconst src = bk.srcMap.get(node.refUri);\n\t\t\t\t\tif (src) set.add(src);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbk.shortDescs = Array.from(set);\n\t\t\t//console.log(\"bookmarks.shortDescs::::\", bk.shortDescs);\n\t\t\tif (this.matches(':focus')) this.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: bk, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis.grid.addEventListener('focus', function (this: IGrid, ev: Event) {\n\t\t\tthis.dispatchEvent(new CustomEvent<IFocusActionables<IShortDescCtx>>('c-focus-actions', {detail: DOMSH.findHost(this) as Bookmarks, bubbles: true, composed: true}));\n\t\t});\n\n\t\tthis.grid.linesNode.setAttribute(\"draggable\", \"true\");\n\t\tthis.grid.linesNode.addEventListener('dragstart', function (ev: DragEvent) {\n\t\t\t//console.log(ev);\n\t\t\tconst bk = DOMSH.findHost<Bookmarks>(DOMSH.findHost<IGrid>(this));\n\t\t\tconst sel = bk.tree.getSelectedDatas();\n\t\t\tfor (let i = 0, s = sel.length - 1; i < s; i++) {\n\t\t\t\tconst ref = sel[i];\n\t\t\t\tfor (let k = i + 1; k < sel.length; k++) {\n\t\t\t\t\tif (bk.tree.isRowKeyAncestor(ref, sel[k]) || bk.tree.isRowKeyAncestor(sel[k], ref)) {\n\t\t\t\t\t\tPOPUP.showNotifInfo(\"Il est impossible de dupliquer ou déplacer une sélection contenant des éléments imbriqués.\", this);\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbk._dragging = true;\n\t\t\tITEM.setShortDescTransferToDragSession(bk, ev, 'build');\n\t\t});\n\t\tthis.grid.linesNode.addEventListener('dragend', function (ev: DragEvent) {\n\t\t\tconst bk = DOMSH.findHost<Bookmarks>(DOMSH.findHost<IGrid>(this));\n\t\t\tbk._dragging = false;\n\t\t\tITEM.resetShortDescTransferToDragSession();\n\t\t});\n\n\t\tif (init.accelKeyMgr) {\n\t\t\tthis.accelKeyMgr = init.accelKeyMgr;\n\t\t\tthis.grid.addEventListener('keydown', (ev: KeyboardEvent) => {\n\t\t\t\tthis.accelKeyMgr.handleKeyboardEvent(ev, this);\n\t\t\t});\n\t\t}\n\n\t\tlet actions = init.actions;\n\t\tif (!actions && this.hasAttribute(\"actions\")) actions = this.reg.mergeLists(...BASIS.extractAttr(this, 'actions').split(' '));\n\t\tif (actions) {\n\t\t\tactions = this.overrideActions(actions);\n\t\t\tthis.actions = actions;\n\t\t\tthis.focusActionables = ActionBtn.buildButtons(actions, this, 'bar');\n\t\t}\n\t}\n\n\tprotected overrideActions(actions: IAction<IBkCtx>[]) {\n\t\t//On force des libellés plus précis des actions d'édition sur les items pour éviter une confusion avec des actions sur les favoris.\n\t\tlet idx = actions.findIndex((a) => a.getId() === \"delSrc\");\n\t\tif (idx >= 0) actions[idx] = new ActionWrapper().setOverridenSvc(actions[idx]).setLabel(\"Supprimer de l'atelier\");\n\t\tidx = actions.findIndex((a) => a.getId() === \"renameSrc\");\n\t\tif (idx >= 0) actions[idx] = new ActionWrapper().setOverridenSvc(actions[idx]).setLabel(\"Renommer dans l'atelier\");\n\t\treturn ACTION.injectSepByGroup(actions, this.reg.getPref(\"groupOrder.wsp.shortDesc\", \"\"), this);\n\t}\n\n\tasync _fetchBookmarks() {\n\t\ttry {\n\t\t\tif (!this.wsp.isAvailable) await this.wsp.waitForAvailable(this);\n\t\t\tconst resp = await this.wsp.wspServer.config.privateFolderUrl.fetch(IO.qs(\"cdaction\", \"GetSrc\", \"format\", \"stream\", \"fields\", \"srcDt\", \"param\", this.wsp.code, \"refUri\", \"\", \"privateUri\", \"/~bookmark.js\"), 'json');\n\t\t\tif (resp.status === 200) {\n\t\t\t\tthis.srcDt = (JSON.parse(resp.headers.get(\"X-SCFIELDS\")) as JSrcFields).srcDt;\n\t\t\t\tconst bkRoot = resp.asJson;\n\t\t\t\t//console.log(\"boolmarks::::::::\", this.srcDt, bkRoot);\n\t\t\t\tconst srcRefMap = new Map<srcRef, JSrcFields>();\n\t\t\t\tconst buildMap = function (node: JBkNode) {\n\t\t\t\t\tif (isBkEntry(node)) {\n\t\t\t\t\t\tsrcRefMap.set(node.refUri, null);\n\t\t\t\t\t} else if (isBkFolder(node)) {\n\t\t\t\t\t\tnode.ch.forEach(buildMap);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbkRoot.ch.forEach(buildMap);\n\t\t\t\tif (srcRefMap.size > 0) {\n\t\t\t\t\tconst refs = await WSP.fetchShortDescs(this.wsp, this, ...srcRefMap.keys());\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (const srcRef of srcRefMap.keys()) srcRefMap.set(srcRef, refs[i++]);\n\t\t\t\t}\n\t\t\t\tconst normalizeRef = function (node: JBkNode) {\n\t\t\t\t\tif (isBkEntry(node)) {\n\t\t\t\t\t\tconst srcRefIdent = srcRefMap.get(node.refUri);\n\t\t\t\t\t\tif (srcRefIdent) {\n\t\t\t\t\t\t\tconst srcRef = SRC.srcRef(srcRefIdent);\n\t\t\t\t\t\t\tif (node.refUri !== srcRef) {\n\t\t\t\t\t\t\t\t//La ref a changée (alias d'id).\n\t\t\t\t\t\t\t\tsrcRefMap.set(srcRef, srcRefMap.get(node.refUri));\n\t\t\t\t\t\t\t\t// srcRefMap.delete(node.refUri); NON : tjs utile si la ref est encore présente ailleurs dans les bookmarks\n\t\t\t\t\t\t\t\tnode.refUri = srcRef;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isBkFolder(node)) {\n\t\t\t\t\t\tnode.ch.forEach(normalizeRef);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbkRoot.ch.forEach(normalizeRef);\n\n\t\t\t\tthis.srcMap = srcRefMap;\n\t\t\t\tthis.lastError = null;\n\t\t\t\tthis.tree.setDatas(bkRoot.ch);\n\t\t\t\tif (this.infoBroker) {\n\t\t\t\t\tconst req = new InfoReqCurrentItem();\n\t\t\t\t\tthis.infoBroker.dispatchInfo(req, this);\n\t\t\t\t\tif (req.srcUri) this._setCurrentItem(req.srcUri);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.srcMap = new Map();\n\t\t\t\tthis.srcDt = -1;\n\t\t\t\tthis.lastError = resp.status === 404 ? null : 1;\n\t\t\t\tthis.tree.setDatas([]);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tERROR.log(e);\n\t\t\tthis.srcDt = -1;\n\t\t\tthis.lastError = 1;\n\t\t\tthis.tree.setDatas([]);\n\t\t}\n\t}\n\n\tasync _saveBookmarks(): Promise<void> {\n\t\ttry {\n\t\t\tconst fields = await this.wsp.wspServer.config.privateFolderUrl.fetchJson<JSrcFields>(IO.qs(\"cdaction\", \"PutSrc\", \"format\", \"JSON\", \"fields\", \"srcDt\", \"param\", this.wsp.code, \"refUri\", \"\", \"privateUri\", \"/~bookmark.js\"), {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify({bookmarkVersion: \"1.0\", ch: this.tree.getDatas().map(exportBkNode)}),\n\t\t\t\theaders: {\"Content-Type\": \"application/json\"}\n\t\t\t});\n\t\t\tthis.srcDt = fields.srcDt;\n\t\t\tthis.reg.env.universe.wsFrames.ws.postMsg({svc: 'liaise', type: \"bookmarks.saved\"})\n\t\t} catch (e) {\n\t\t\tERROR.report(\"Les modifications de vos favoris n'ont pas pu être enregistrées.\", e);\n\t\t\tthis._fetchBookmarks();\n\t\t}\n\t}\n\n\t_gcSrcMaps() {\n\t\tif (!this.srcMap) return;\n\t\tconst set = new Set<srcRef>(this.srcMap.keys());\n\t\tconst clearSet = function (node: JBkNode) {\n\t\t\tif (isBkEntry(node)) {\n\t\t\t\tset.delete(node.refUri);\n\t\t\t} else if (isBkFolder(node)) {\n\t\t\t\tnode.ch.forEach(clearSet);\n\t\t\t}\n\t\t};\n\t\tthis.tree.getDatas().forEach(clearSet);\n\t\tfor (const srcRef of set) this.srcMap.delete(srcRef);\n\t}\n\n\t/** Identifie l'item courant dans l'app. */\n\t_setCurrentItem(srcUri: srcUri | null) {\n\t\tthis._currentSrcUri = srcUri;\n\t\tthis.grid.invalidateRows();\n\t\tif (this._currentSrcUri) this.ensureRowVisible(this._currentSrcUri);\n\t}\n\n\tredrawLine(row: GridDataRowJsonTree<JBkNode>, line: HTMLElement) {\n\t\tif (!isBkEntry(row.rowDatas)) return;\n\t\tconst shortDesc: JSrcFields | null = this.srcMap.get(row.rowDatas.refUri);\n\t\tline.classList.toggle('current', shortDesc?.srcUri === this._currentSrcUri);\n\t\tif (this._highlightSgn) {\n\t\t\tif (this._assigned && (this._assigned === shortDesc?.srcId || this._assigned === shortDesc?.srcUri)) {\n\t\t\t\tline.classList.toggle('assigned', true);\n\t\t\t\tline.classList.toggle('highlight', false);\n\t\t\t} else {\n\t\t\t\tconst sgn = shortDesc?.itSgn;\n\t\t\t\tline.classList.toggle('highlight', sgn ? this._highlightSgn.test(sgn) : false);\n\t\t\t\tline.classList.toggle('assigned', false);\n\t\t\t}\n\t\t} else {\n\t\t\tline.classList.toggle('highlight', false);\n\t\t\tline.classList.toggle('assigned', false);\n\t\t}\n\t}\n\n\tbuildLastDatas?(parentLastDatas: JLastDatas): void {\n\t\t// let lastDatasKey = this.getAttribute('last-datas');\n\t\t// if (lastDatasKey) {\n\t\t//\n\t\t// }\n\t}\n\n\tonInfo(info: IInfo): void {\n\t\tif (info instanceof InfoCurrentItem) {\n\t\t\tif (this.hidden) return;\n\t\t\tthis._setCurrentItem(info.srcUri);\n\t\t} else if (info instanceof InfoHighlighItemSgn) {\n\t\t\tthis._highlightSgn = info.sgnPattern;\n\t\t\tthis._assigned = info.assigned;\n\t\t\tif (this.hidden) return;\n\t\t\tthis.grid.invalidateRows();\n\t\t}\n\t}\n\n\tonViewHidden(closed?: boolean): void {\n\t\tif (this.infoBroker) this.infoBroker.removeConsumer(this);\n\t\tif (closed) {\n\t\t\tthis.reg.env.universe.wsFrames.ws.msgListeners.removeListener('liaise', this._onLiaiseMsg);\n\t\t\tthis.reg.env.place.eventsMgr.removeListener(\"onConnectionRenewed\", this._onConnRenewed);\n\t\t\tthis.reg.env.place.eventsMgr.removeListener('wspUriChange', this._onWspUriChange);\n\t\t}\n\t}\n\n\tonViewShown() {\n\t\tif (!this._onLiaiseMsg) {\n\t\t\tthis._onLiaiseMsg = this.onLiaiseMsg.bind(this);\n\t\t\tthis.reg.env.universe.wsFrames.ws.msgListeners.on('liaise', this._onLiaiseMsg);\n\t\t\tthis._onConnRenewed = this.onConnRenewed.bind(this);\n\t\t\tthis.reg.env.place.eventsMgr.on(\"onConnectionRenewed\", this._onConnRenewed);\n\t\t\tthis._onWspUriChange = this.onWspUriChange.bind(this);\n\t\t\tthis.reg.env.place.eventsMgr.on('wspUriChange', this._onWspUriChange);\n\t\t}\n\t\tif (this.infoBroker) this.infoBroker.addConsumer(this);\n\t\tif (this.srcMap == null) this._fetchBookmarks();\n\t\telse if (this.infoBroker) {\n\t\t\tconst req = new InfoReqCurrentItem();\n\t\t\tthis.infoBroker.dispatchInfo(req, this);\n\t\t\tthis._setCurrentItem(req.srcUri); //permet aussi le refresh de _currentHighlightSgn\n\t\t}\n\t}\n\n\t/** Doit être appelé dès qu'on détecte qu'on a perdu la sync avec le server. */\n\tprotected onSyncLost() {\n\t\tif (this.hidden) {\n\t\t\tif (this.srcMap) {\n\t\t\t\tthis.tree.setDatas([]);\n\t\t\t\tthis.srcMap = null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._fetchBookmarks();\n\t\t}\n\t}\n\n\t/** Mémoire du listener des WspChanges pour delete. */\n\tprotected _onWspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | 'local' | 'server') => void;\n\n\tonWspUriChange(msg: JWspUriChangeMsg, from: WspsLivePlace | 'house' | 'server') {\n\t\tif (!this.srcMap) return;\n\t\tif (msg.type === EWspChangesEvts.u || msg.type === EWspChangesEvts.r) {\n\t\t\tif (this.srcMap.has(SRC.srcRef(msg))) {\n\t\t\t\tthis.wsp.fetchShortDesc(SRC.srcRef(msg)).then((sd) => {\n\t\t\t\t\tconst shortDesc = this.srcMap.get(SRC.srcRef(sd));\n\t\t\t\t\tif (shortDesc) {\n\t\t\t\t\t\tfor (const k in shortDesc) (shortDesc as any)[k] = undefined;\n\t\t\t\t\t\tObject.assign(shortDesc, sd);\n\t\t\t\t\t\tthis.grid.invalidateRows();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} else if (msg.type === EWspChangesEvts.s) {\n\t\t\tconst shortDesc = this.srcMap.get(SRC.srcRef(msg));\n\t\t\tif (shortDesc) {\n\t\t\t\tshortDesc['itSt'] = msg.itSt;\n\t\t\t\tthis.grid.invalidateRows();\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Détection d'une écriture concurente via le service de liaise. */\n\tprotected _onLiaiseMsg: (m: Jsonisable) => void;\n\n\tprotected onLiaiseMsg(m: Jsonisable) {\n\t\tif (m.type === 'bookmarks.saved') this.onSyncLost();\n\t}\n\n\tprotected _onConnRenewed: () => void;\n\n\tprotected async onConnRenewed() {\n\t\tconst resp = await this.wsp.wspServer.config.privateFolderUrl.fetch(IO.qs(\"cdaction\", \"GetSrc\", \"format\", \"JSON\", \"fields\", \"srcDt\", \"param\", this.wsp.code, \"refUri\", \"\", \"privateUri\", \"/~bookmark.js\"), 'json');\n\t\tif (resp.status === 200 ? this.srcDt !== resp.asJson.srcDt : resp.status === 404 && this.srcDt !== -1) this.onSyncLost();\n\t}\n}\n\nfunction exportBkNode(node: JBkNode): JBkNode {\n\tif (isBkEntry(node)) {\n\t\treturn {refUri: node.refUri};\n\t} else {\n\t\tconst r = {label: node.label} as JBkFolder;\n\t\tif (node.ch) r.ch = node.ch.map(exportBkNode)\n\t\treturn r;\n\t}\n}\n\nREG.reg.registerSkin(\"wsp-bookmarks\", 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-direction: column;\n\t}\n\n\t[hidden] {\n\t\tdisplay: none !important;\n\t}\n\n\tc-grid {\n\t\tflex: 1;\n\t\tborder: none;\n\t}\n`);\n\nREG.reg.registerSkin('wsp-bookmarks/grid', 1, /* language=CSS */ `\n\t.highlight {\n\t\tbackground-color: var(--row-highlight-bgcolor);\n\t}\n\n\t.assigned {\n\t\tbackground-color: var(--row-assigned-bgcolor);\n\t}\n\n\t.current {\n\t\tbackground-position: right;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-image: var(--row-current-img-end);\n\t\tbackground-color: var(--row-current-bgcolor);\n\t}\n`);\n\ncustomElements.define(\"wsp-bookmarks\", Bookmarks);\n\n\n/** Contexte pour les actions du bookmark. */\nexport interface IBkCtx extends IShortDescCtx {\n\tme?: Bookmarks\n}\n\n/** Schéma Json du bookmark : Objet racine. */\ninterface JBkRoot {\n\tbookmarkVersion: string\n\tch: JBkNode[]\n}\n\n/** Schéma Json du bookmark : Dossier. */\ninterface JBkFolder {\n\tlabel?: string\n\tch?: JBkNode[]\n}\n\nfunction isBkFolder(d: JBkNode): d is JBkFolder {return d && ('label' in d)}\n\n/** Schéma Json du bookmark : noeud source de l'atelier. */\ninterface JBkEntry {\n\t/** ref dans le fichier des bookmarks. */\n\trefUri?: srcRef\n}\n\nfunction isBkEntry(d: JBkNode): d is JBkEntry {return d && ('refUri' in d)}\n\n\ntype JBkNode = JBkFolder | JBkEntry;\n\n\nfunction cloneBkNode(node: JBkNode): JBkNode {\n\tif (isBkEntry(node)) return {refUri: node.refUri};\n\telse if (isBkFolder(node)) return {label: node.label, ch: node.ch.map(cloneBkNode)};\n\treturn null;\n}\n\n/** Extension de IShortDescsTransfer qui ajoute les données propres au bookmark dans le presse-papoer. */\ninterface IBookmarksTransfer extends IShortDescsTransfer {\n\tbookmarks?: JBkNode[]\n}\n\n\nclass BkGridDataTree extends GridDataHolderJsonTree<JBkNode> {\n\n\tconstructor() {\n\t\tsuper('ch');\n\t\tthis.setOpenAll(true);\n\t}\n\n\tfindFirstRowKeyBySrcUri(srcUri: srcUri): JBkEntry {\n\t\tlet result: JBkEntry;\n\t\tconst match = function (data: JBkNode) {\n\t\t\tif ((data as JBkEntry).refUri === srcUri) {\n\t\t\t\tresult = data as JBkEntry;\n\t\t\t} else if ((data as JBkFolder).ch) {\n\t\t\t\t(data as JBkFolder).ch.find(match);\n\t\t\t}\n\t\t\treturn result != null;\n\t\t};\n\t\tthis.getDatas().find(match);\n\t\treturn result;\n\t}\n}\n\nexport class CellBuilderBk extends CellBuilderSrcIconCodeTitle {\n\n\tconstructor(public bk: Bookmarks) {\n\t\tsuper(bk.reg, bk.wsp.wspMetaUi, false, bk.wsp.srcUriItemsSortFn);\n\t}\n\n\tredrawCell(row: GridDataRowJson<any>, root: HTMLElement): void {\n\t\tsuper.redrawCell(row, root);\n\t\t(root as JSrcFieldsPointer)._srcFields = row.cacheHolder.shortDesc;\n\t}\n\n\tprotected _getValue(row: GridDataRowJsonTree<any>): string {\n\t\treturn row.cacheHolder.code || this._buildCache(row).code;\n\t}\n\n\tprotected _getIcon(row: GridDataRowJsonTree<any>): string {\n\t\treturn this._buildCache(row).icon;\n\t}\n\n\tprotected _getTitle(row: GridDataRowJsonTree<any>): string {\n\t\tconst sd = row.cacheHolder.shortDesc;\n\t\treturn sd ? sd.itTi || \"\" : \"\";\n\t}\n\n\tprotected _buildCache(row: GridDataRowJsonTree<JBkNode>): any {\n\t\tconst cache = row.cacheHolder;\n\t\tif (isBkEntry(row.rowDatas)) {\n\t\t\tconst shortDesc = this.bk.srcMap.get(row.rowDatas.refUri);\n\t\t\tif (shortDesc) {\n\t\t\t\tcache.code = this.srcRdr.getMainName(shortDesc, this.wspMetaUi);\n\t\t\t\tcache.icon = this.srcRdr.getIcon(shortDesc, this.wspMetaUi);\n\t\t\t\tcache.shortDesc = shortDesc;\n\t\t\t\treturn cache;\n\t\t\t}\n\t\t} else if (isBkFolder(row.rowDatas)) {\n\t\t\tcache.code = row.rowDatas.label;\n\t\t\tcache.icon = row.getFolderState() === EFolderState.opened ? \"/@skin@/wsp/views/bookmarks/folder-open.svg\" : \"/@skin@/wsp/views/bookmarks/folder.svg\";\n\t\t\tcache.shortDesc = null;\n\t\t\treturn cache;\n\t\t}\n\t\tcache.code = \" \";\n\t\tcache.icon = \"/@skin@/wsp/itemType/icons/itemNotFound/icovalid.png\";\n\t\tcache.shortDesc = null;\n\t\treturn cache;\n\t}\n\n}\n\nfunction onKeypressPrompt(ev: KeyboardEvent) {\n\tif (ev.key === 'Enter') {\n\t\tPOPUP.findPopupableParent(ev.target as Element).close((ev.currentTarget as HTMLElement).shadowRoot.querySelector('input').value);\n\t\tev.preventDefault();\n\t\tev.stopImmediatePropagation();\n\t}\n}\n\nfunction onClickPromptDone(this: Button) {\n\tPOPUP.findPopupableParent(this).close(DOMSH.findDocumentOrShadowRoot(this).querySelector('input').value);\n\tPOPUP.findPopupableParent(this).close(DOMSH.findDocumentOrShadowRoot(this).querySelector('input').value);\n}\n\nfunction onClickPromptCancel(this: Button) {POPUP.findPopupableParent(this).close(null)}\n\nexport class BkCreateFolder extends Action<IBkCtx> {\n\t_id = \"createFolder\";\n\t_label = \"Nouveau dossier...\";\n\t_group = \"localEdit\";\n\n\tasync execute(ctx: IBkCtx, ev?: Event) {\n\t\tconst r = await POPUP.showDialog<string | null>(<c-box skin=\"wsp-bookmarks/promptFolder\" skinOver=\"webzone:panel form-control-areas\" onkeypress={onKeypressPrompt}>\n\t\t\t<ShadowJsx>\n\t\t\t\t<label>\n\t\t\t\t\t<div>Nom du dossier</div>\n\t\t\t\t\t<input/>\n\t\t\t\t</label>\n\t\t\t\t<footer>\n\t\t\t\t\t<c-button label=\"Créer\" class=\"default\" ui-context=\"dialog\" onclick={onClickPromptDone}/>\n\t\t\t\t\t<c-button label=\"Annuler\" ui-context=\"dialog\" onclick={onClickPromptCancel}/>\n\t\t\t\t</footer>\n\t\t\t</ShadowJsx>\n\t\t</c-box>, ctx.me, {titleBar: {barLabel: {label: \"Nouveau dossier des favoris\"}}, resizer: {}}).onNextClose();\n\t\tif (r) {\n\t\t\tconst tree = ctx.me.tree;\n\t\t\tconst newNodes = [{label: r, ch: ([] as JBkNode[])} as JBkFolder];\n\t\t\tconst d = tree.getDataByOffset(ctx.me.grid.getActiveRow());\n\t\t\tif (!d) {\n\t\t\t\tctx.me.addBkNodes(null, tree.getDatas().length, newNodes);\n\t\t\t} else {\n\t\t\t\tctx.me.addBkNodes(tree.getRowKeyParent(d), tree.getRowKeyIndex(d), newNodes);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class BkRenameFolder extends Action<IBkCtx> {\n\t_id = \"renameFolder\";\n\t_label = \"Renommer...\";\n\t_group = \"localEdit\";\n\n\tisEnabled(ctx: IBkCtx): boolean {\n\t\tif (ctx.me.grid.countSelectedRows() != 1) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tisVisible(ctx: IBkCtx): boolean {\n\t\tif (!super.isVisible(ctx)) return false;\n\t\treturn isBkFolder(ctx.me.tree.getDataByOffset(ctx.me.grid.getActiveRow()));\n\t}\n\n\tasync execute(ctx: IBkCtx, ev?: Event) {\n\t\tconst d = ctx.me.tree.getDataByOffset(ctx.me.grid.getActiveRow());\n\t\tif (!isBkFolder(d)) return;\n\t\tconst r = await POPUP.showDialog<string | null>(<c-box skin=\"wsp-bookmarks/promptFolder\" skinOver=\"webzone:panel form-control-areas\" onkeypress={onKeypressPrompt}>\n\t\t\t<ShadowJsx>\n\t\t\t\t<label>\n\t\t\t\t\t<div>Nom du dossier</div>\n\t\t\t\t\t<input value={d.label}/></label>\n\t\t\t\t<footer>\n\t\t\t\t\t<c-button label=\"Renommer\" class=\"default\" ui-context=\"dialog\" onclick={onClickPromptDone}/>\n\t\t\t\t\t<c-button label=\"Annuler\" ui-context=\"dialog\" onclick={onClickPromptCancel}/>\n\t\t\t\t</footer>\n\t\t\t</ShadowJsx>\n\t\t</c-box>, ctx.me, {titleBar: {barLabel: {label: \"Renommer le dossier des favoris\"}}, resizer: {}}).onNextClose();\n\t\tif (r) {\n\t\t\td.label = r;\n\t\t\tctx.me.grid.invalidateRows();\n\t\t\treturn ctx.me._saveBookmarks();\n\t\t}\n\t}\n}\n\nREG.reg.registerSkin('wsp-bookmarks/promptFolder', 1, /* language=CSS */ `\n\t:host {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t:focus-visible {\n\t\toutline: var(--focus-outline);\n\t}\n\n\tlabel {\n\t\tflex: 1;\n\t\tmargin: 1em;\n\t\tpadding: .5em;\n\t}\n\n\tinput {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmargin: .5em;\n\t\twidth: 100%;\n\t\tfont-size: inherit;\n\t}\n\n\tfooter {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tborder-top: 1px solid var(--border-color);\n\t}\n`);\n\n\nexport class BkDel extends SrcAction<IBkCtx> {\n\t_id = \"del\";\n\t_label = \"Éliminer des favoris\";\n\t_group = \"localEdit\";\n\tisNotRemoved = false;\n\n\tisEnabled(ctx: IBkCtx): boolean {\n\t\tif (ctx.me.grid.countSelectedRows() === 0) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\texecute(ctx: IBkCtx, ev?: Event): any | \"noPreventDefault\" {\n\t\tctx.me.deleteBkNodes(ctx.me.tree.getSelectedDatas());\n\t}\n}\n\n/** Copie dans le presse-papier avec ajout des données brutes du bookmark. */\nexport class BkCopy extends ShortDescCopy {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.atLeastOne = false;\n\t\tthis.isNotRemoved = false;\n\t}\n\n\tisEnabled(ctx: IBkCtx): boolean {\n\t\tif (ctx.me.grid.countSelectedRows() === 0) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\texecute(ctx: IBkCtx, ev?: Event): Promise<void> {\n\t\treturn ITEM.setShortDescTransferToClipboard(ctx, {bookmarks: ctx.me.tree.getSelectedDatas().map(cloneBkNode)} as IBookmarksTransfer);\n\t}\n}\n\nexport class BkCut extends SrcAction<IBkCtx> {\n\t_id = \"cut\";\n\t_label = \"Couper\";\n\t_group = \"clipboard\";\n\tisNotRemoved = false;\n\n\tisEnabled(ctx: IBkCtx): boolean {\n\t\tif (ctx.me.grid.countSelectedRows() === 0) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\texecute(ctx: IBkCtx, ev?: Event): any | \"noPreventDefault\" {\n\t\tconst sel = ctx.me.tree.getSelectedDatas();\n\t\tctx.me.deleteBkNodes(sel);\n\t\tITEM.setShortDescTransferToClipboard(ctx, {bookmarks: sel.map(cloneBkNode)} as IBookmarksTransfer);\n\t}\n}\n\nexport class BkPasteBefore extends SrcAction<IBkCtx> {\n\t_id = \"pasteBefore\";\n\t_label = \"Coller avant\";\n\t_group = \"clipboard\";\n\tisNotRemoved = false;\n\n\tisVisible(ctx: IBkCtx): boolean {\n\t\tif (ctx.me.grid.countSelectedRows() !== 1) return false;\n\t\t//Action active que si l'entrée sel est folder\n\t\tif (!isBkFolder(ctx.me.tree.getDataByOffset(ctx.me.grid.getActiveRow()))) return false;\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tprotected isVisibleSuper(ctx: IBkCtx): boolean {\n\t\treturn super.isVisible(ctx);\n\t}\n\n\tisEnabled(ctx: IBkCtx): boolean {\n\t\t//Eval async, true par défaut.\n\t\treturn true;\n\t}\n\n\t/** On bloque dans les barres d'outils (pb clipboard asynchrone). */\n\tbuildCustomButton(ctx: IBkCtx, uiContext: EButtonUiContext, parent?: Element): Element | null | undefined {return uiContext === 'bar' ? null : undefined}\n\n\tasync initButtonNode(buttonNode: Element, ctx: IBkCtx) {\n\t\tif (buttonNode instanceof ActionBtn) {\n\t\t\tif (!BkPasteBefore.pendingBtns) BkPasteBefore.pendingBtns = [buttonNode];\n\t\t\telse BkPasteBefore.pendingBtns.push(buttonNode);\n\t\t\tif (!BkPasteBefore.pending) {\n\t\t\t\tBkPasteBefore.pending = ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter);\n\t\t\t\ttry {\n\t\t\t\t\tconst srcs = await BkPasteBefore.pending;\n\t\t\t\t\t//console.log(\"getShortDescTransferFromClipboard::::::\", srcs);\n\t\t\t\t\tif (srcs === false) {\n\t\t\t\t\t\tPOPUP.showNotifWarning(\"L'accès au presse-papier n'est pas autorisé par votre navigateur. Modifiez les paramètres du site pour rendre opérationnelles les fonctions de copier/coller.\", buttonNode);\n\t\t\t\t\t} else if (BkPasteBefore.pendingBtns) for (const btn of BkPasteBefore.pendingBtns) {\n\t\t\t\t\t\t(btn.action as BkPasteBefore).updateButton(btn, srcs);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tBkPasteBefore.pendingBtns = null;\n\t\t\t\t\tBkPasteBefore.pending = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateButton(btn: ActionBtn<IBkCtx>, transfer: IBookmarksTransfer | ClipboardItem[]) {\n\t\tif (transfer && !Array.isArray(transfer)) {\n\t\t\tif (transfer.bookmarks && transfer.bookmarks.length > 0) return;\n\t\t\tif (transfer.srcRefs && transfer.srcRefs.length > 0) return;\n\t\t}\n\t\tbtn.disabled = true;\n\t}\n\n\tasync execute(ctx: IBkCtx, ev?: Event) {\n\t\tconst transfer = await ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter) as IBookmarksTransfer;\n\t\tif (!transfer || Array.isArray(transfer)) return;\n\t\tconst tree = ctx.me.tree;\n\t\tconst from = tree.getDataByOffset(ctx.me.grid.getActiveRow());\n\t\tconst parent = tree.getRowKeyParent(from);\n\t\tconst index = tree.getRowKeyIndex(from);\n\t\tif (transfer.bookmarks) {\n\t\t\treturn ctx.me.addBkNodes(parent, index, transfer.bookmarks);\n\t\t} else if (transfer.srcRefs) {\n\t\t\treturn ctx.me.addBkNodes(parent, index, transfer.srcRefs.map(srcRef => {return {refUri: srcRef}}));\n\t\t}\n\t}\n\n\tstatic pending: Promise<IShortDescsTransfer | false | null | ClipboardItem[]>;\n\tstatic pendingBtns: ActionBtn<IBkCtx>[];\n}\n\nexport class BkPasteInOrBefore extends BkPasteBefore {\n\t_id = \"pasteIn\";\n\t_label = \"Coller dans\";\n\n\tgetLabel(ctx: IBkCtx): string {\n\t\tconst offset = ctx.me.grid.getActiveRow();\n\t\tif (offset === -1) return \"Coller\"; //racine du bookmark.\n\t\treturn isBkFolder(ctx.me.tree.getDataByOffset(offset)) ? \"Coller dans\" : \"Coller avant\";\n\t}\n\n\tisVisible(ctx: IBkCtx): boolean {\n\t\tconst count = ctx.me.grid.countSelectedRows();\n\t\tif (count === 0) return true; //racine du bookmark.\n\t\tif (count !== 1) return false;\n\t\treturn super.isVisibleSuper(ctx);\n\t}\n\n\tasync execute(ctx: IBkCtx, ev?: Event) {\n\t\tconst transfer = await ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter) as IBookmarksTransfer;\n\t\tif (!transfer || Array.isArray(transfer)) return;\n\t\tconst tree = ctx.me.tree;\n\t\tconst from = tree.getDataByOffset(ctx.me.grid.getActiveRow());\n\t\tlet parent = from;\n\t\tlet index: number;\n\t\tif (!from || isBkFolder(from)) {\n\t\t\tindex = (from ? tree.getRowKeyChildren(from) : tree.getDatas()).length;\n\t\t} else {\n\t\t\tparent = tree.getRowKeyParent(from);\n\t\t\tindex = tree.getRowKeyIndex(from);\n\t\t}\n\t\tif (transfer.bookmarks) {\n\t\t\treturn ctx.me.addBkNodes(parent, index, transfer.bookmarks);\n\t\t} else if (transfer.srcRefs) {\n\t\t\treturn ctx.me.addBkNodes(parent, index, transfer.srcRefs.map(srcRef => {return {refUri: srcRef}}));\n\t\t}\n\t}\n}\n\nexport class BkPasteAfter extends BkPasteBefore {\n\t_id = \"pasteAfter\";\n\t_label = \"Coller après\";\n\n\n\tisVisible(ctx: IBkCtx): boolean {\n\t\tif (ctx.me.grid.countSelectedRows() !== 1) return false;\n\t\treturn super.isVisibleSuper(ctx);\n\t}\n\n\tasync execute(ctx: IBkCtx, ev?: Event) {\n\t\tconst transfer = await ITEM.getShortDescsTransferFromClipboard(ctx.reg.env.wsp, ctx.emitter) as IBookmarksTransfer;\n\t\tif (!transfer || Array.isArray(transfer)) return;\n\t\tconst tree = ctx.me.tree;\n\t\tconst from = tree.getDataByOffset(ctx.me.grid.getActiveRow());\n\t\tconst parent = tree.getRowKeyParent(from);\n\t\tconst index = tree.getRowKeyIndex(from) + 1;\n\t\tif (transfer.bookmarks) {\n\t\t\treturn ctx.me.addBkNodes(parent, index, transfer.bookmarks);\n\t\t} else if (transfer.srcRefs) {\n\t\t\treturn ctx.me.addBkNodes(parent, index, transfer.srcRefs.map(srcRef => {return {refUri: srcRef}}));\n\t\t}\n\t}\n}\n\n\n/** Gestion du drop dans l'arbre. */\nconst rowDropMgr = {\n\tonDragOverRow(ev: DragEvent, grid: IGrid, row: GridDataRowJsonTree<JBkNode>, line: HTMLElement): EGridDropPos | EGridDropPos {\n\t\tev.dataTransfer.dropEffect = 'none';\n\t\tconst bk = DOMSH.findHost<Bookmarks>(grid);\n\t\tconst tree = bk.tree;\n\t\tif (bk._dragging) {\n\t\t\t//Drag interne au bookmark\n\t\t\tlet pos = !row ? EGridDropPos.after : EGridDropPos.before | EGridDropPos.after;\n\t\t\tif (!ev.shiftKey) {\n\t\t\t\t//Déplacement, on élimine les possibilités qui ne constitueraient pas un déplacement effectif ou sui sont impossibles.\n\t\t\t\tif (row) {\n\t\t\t\t\tconst offset = tree.getOffset(row.rowKey);\n\t\t\t\t\tif (grid.isRowSelected(offset)) return EGridDropPos.none;\n\t\t\t\t\tconst sel = bk.tree.getSelectedDatas();\n\t\t\t\t\t//Déplacement impossible si la cible est dans descendance d'un source.\n\t\t\t\t\tif (sel.find((node) => bk.tree.isRowKeyAncestor(node, row.rowKey))) return EGridDropPos.none;\n\t\t\t\t\t//pas de déplacement si la cible du drop est le dossier parent d'au moins une source à déplacer\n\t\t\t\t\tif (isBkFolder(row.rowDatas) && sel.find(d => tree.getRowKeyParent(d) === row.rowKey)) return EGridDropPos.none;\n\t\t\t\t\t//pas de déplacement si la cible est voisine d'un source sélectionnée à déplacer\n\t\t\t\t\tconst parent = tree.getRowKeyParent(row.rowKey);\n\t\t\t\t\tif (offset > 0 && grid.isRowSelected(offset - 1)) {\n\t\t\t\t\t\tif (tree.getRowKeyParent(tree.getRowKey(offset - 1)) === parent) pos &= ~EGridDropPos.before;\n\t\t\t\t\t}\n\t\t\t\t\tif (grid.isRowSelected(offset + 1)) {\n\t\t\t\t\t\tif (tree.getRowKeyParent(tree.getRowKey(offset + 1)) === parent) pos &= ~EGridDropPos.after;\n\t\t\t\t\t}\n\t\t\t\t\tif (pos === EGridDropPos.none) return pos;\n\t\t\t\t} else {\n\t\t\t\t\t//dragOver en zone blanche, pas de déplacement si la dernière ligne est sel et de depth 0.\n\t\t\t\t\tconst last = tree.countRows() - 1;\n\t\t\t\t\tif (tree.getRowKeyParent(tree.getRowKey(last)) == null && grid.isRowSelected(last)) return EGridDropPos.none;\n\t\t\t\t}\n\t\t\t}\n\t\t\tev.dataTransfer.dropEffect = ev.shiftKey ? 'copy' : 'move';\n\t\t\treturn row && isBkFolder(row.rowDatas) ? pos | EGridDropPos.over : pos;\n\t\t} else {\n\t\t\t//Drag externe au bookmark\n\t\t\tconst transfer = ITEM.getShortDescsTransferFromDragSession(bk.reg, ev.dataTransfer, {targetSrcType: \"itemOrSpace\"}, grid);\n\t\t\tif (transfer && transfer.wspCd === bk.wsp.code && transfer.srcRefs && transfer.srcRefs.length > 0) {\n\t\t\t\tev.dataTransfer.dropEffect = 'copy';\n\t\t\t\tif (!row) return EGridDropPos.after;\n\t\t\t\tif (isBkFolder(row.rowDatas)) return EGridDropPos.before | EGridDropPos.after | EGridDropPos.over;\n\t\t\t\treturn EGridDropPos.before | EGridDropPos.after;\n\t\t\t}\n\t\t}\n\t\treturn EGridDropPos.none;\n\t},\n\n\tdropOnRow(ev: DragEvent, grid: IGrid, row: GridDataRowJson<JBkNode>, line: HTMLElement, pos: EGridDropPos): void {\n\t\tconst bk = DOMSH.findHost<Bookmarks>(grid);\n\t\tif (bk._dragging) {\n\t\t\tconst sel = bk.tree.getSelectedDatas();\n\t\t\tif (!ev.shiftKey) {\n\t\t\t\t//On supprime les sources\n\t\t\t\tfor (const entry of sel) bk.tree.deleteRowKey(entry);\n\t\t\t}\n\t\t\t//On insère à l'emplacement\n\t\t\t//const offset = bk.tree.getOffset(row.rowKey);\n\t\t\t//bk.grid.setActiveRow(offset);\n\t\t\tconst nodes = sel.map(cloneBkNode);\n\t\t\tif (!row) {\n\t\t\t\tbk.addBkNodes(null, bk.tree.getDatas().length, nodes);\n\t\t\t} else if (pos === EGridDropPos.over) {\n\t\t\t\tbk.addBkNodes(row.rowDatas, bk.tree.getRowKeyChildren(row.rowKey).length, nodes);\n\t\t\t} else if (pos === EGridDropPos.before) {\n\t\t\t\tbk.addBkNodes(bk.tree.getRowKeyParent(row.rowKey), bk.tree.getRowKeyIndex(row.rowKey), nodes);\n\t\t\t} else {\n\t\t\t\tbk.addBkNodes(bk.tree.getRowKeyParent(row.rowKey), bk.tree.getRowKeyIndex(row.rowKey) + 1, nodes);\n\t\t\t}\n\t\t} else {\n\t\t\tconst transfer = ITEM.getShortDescsTransferFromDragSession(bk.reg, ev.dataTransfer, {targetSrcType: \"itemOrSpace\"}, grid);\n\t\t\tif (transfer && transfer.wspCd === bk.wsp.code && transfer.srcRefs && transfer.srcRefs.length > 0) {\n\t\t\t\tconst nodes = transfer.srcRefs.map(srcRef => {return {refUri: srcRef}});\n\t\t\t\tif (!row) {\n\t\t\t\t\tbk.addBkNodes(null, bk.tree.getDatas().length, nodes);\n\t\t\t\t} else if (pos === EGridDropPos.over) {\n\t\t\t\t\tbk.addBkNodes(row.rowDatas, bk.tree.getRowKeyChildren(row.rowKey).length, nodes);\n\t\t\t\t} else if (pos === EGridDropPos.before) {\n\t\t\t\t\tbk.addBkNodes(bk.tree.getRowKeyParent(row.rowKey), bk.tree.getRowKeyIndex(row.rowKey), nodes);\n\t\t\t\t} else {\n\t\t\t\t\tbk.addBkNodes(bk.tree.getRowKeyParent(row.rowKey), bk.tree.getRowKeyIndex(row.rowKey) + 1, nodes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} as IGridRowDropMgr;\n\n\n//#### Actions du Bookmark\nfunction addBookmarkAction(action: Action<IShortDescCtx>, accel?: string) {\n\tREG.reg.addToList(\"actions:wspApp:bookmarks\", action.getId(), 1, action);\n\tif (accel) REG.reg.addToList(\"accelkeys:wspApp:bookmarks\", accel, 1, action);\n}\n\naddBookmarkAction(new BkCreateFolder(), \"n-accel\");\naddBookmarkAction(new BkRenameFolder(), \"F2\");\n\naddBookmarkAction(new BkCopy(), \"c-accel\");\naddBookmarkAction(new BkCut(), \"x-accel\");\naddBookmarkAction(new BkPasteBefore());\naddBookmarkAction(new BkPasteInOrBefore(), \"v-accel\");\naddBookmarkAction(new BkPasteAfter());\n\naddBookmarkAction(new BkDel(), \"Delete\");\n"]}