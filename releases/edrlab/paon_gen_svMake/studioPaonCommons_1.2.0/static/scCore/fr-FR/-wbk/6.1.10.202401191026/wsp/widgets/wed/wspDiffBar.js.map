{"version":3,"sources":["/@back@/wsp/widgets/wed/wspDiffBar.tsx"],"names":["DiffPanelBase","SrcPointer","SrcPointerErase","SrcPointerFastSelect","SrcPointerPaste","WSP","REG","ACTION","Action","ITEM","SRC","DOMSH","EXmlDiffMode","XmlDiffSession","ButtonActions","ButtonToggle","DOM","JSX","ShadowJsx","GFX","ArrowScrollBox","LOCALE","POPUP","UserRef","BarActions","ERROR","DrfRefDiffPanel","[object Object]","action","bar","this","_initPanel","shadowRoot","appendChild","result","execDiff","params","erased","diffId","getId","fullRefresh","callDiff","diff","reg","registerSkin","customElements","define","DrvDiffPanel","specialRef","HistoItemDiffPanel","userColors","Map","colorOffset","topLine","createElement","id","middleLine","bottomLine","diffSelView","scrollLine","append","fields","env","wsp","getShortDescFields","concat","join","addEventListener","onKeyDownInLine","onDblclickInLine","getColor","securityCtx","account","super","connectDoc","updateHisto","unconnectDoc","resetHisto","_onItemChange","longDescChange","add","onItemChange","bind","closed","delete","closeTooltip","docConnected","hadFocus","matches","editedSrc","wedMgr","docHolder","house","srcFields","hist","fetchHistory","srcLiveUri","srcUri","count","histNodes","length","srcDiff","rect","parentElement","getBoundingClientRect","h","Math","floor","height","hHalf","w","round","bound","width","wHalf","linePath","rate","toString","nextOnTop","nextWidthTop","nextWidthBottom","currentOffset","findIndex","src","currentDate","Date","srcDt","now","asSvg","fill","stroke-width","stroke","d","srcDiffFound","previousTime","i","srcTime","lastElementChild","style","transform","formatMinDuration","class","color","srcUser","shape","isHistoryUri","liveNode","metaFlag","cx","cy","r","x","y","point","metaComment","undefined","classList","shortDesc","srcRef","_setDiffPoint","currentPoint","focusable","scrollToChild","focus","e","log","textContent","ev","isAnyControlPressed","histoPoint","target","key","nextElementSibling","HistoPoint","previousElementSibling","click","preventDefault","stopPropagation","findParent","n","ShowHistoDiff","SINGLETON","executeIfAvailable","tt","_a","_tt","close","setSrcDiff","hasChildNodes","ch","children","diffPoint","remove","dt","date","toLocaleDateString","time","toLocaleTimeString","a","get","COLORS","set","HTMLElement","onclick","promiseTooltip","onBuildTooltipPoint","hoverAllowed","onblur","popupTooltip","isAncestor","relatedTarget","histoPanel","findHost","tabIndex","f","hasAttribute","removeAttribute","options","scroll","tooltip","panel","actionsBar","Ã®","actions","getList","actionContext","disableFullOverlay","toggle","setCurrentTooltip","Promise","resolve","then","focusbale","findFlatNext","IS_focusable","startBtn","title","toggleOn","commentInput","value","placeholder","hasPerm","updateMetaFlag","disabled","updateMetaComment","skin","skinOver","nickOrAccount","srcUpdateFields","report","v","metas","_label","_icon","ctx","isEnabled","setDiffPoint","addToList","DeleteHistoEntry","_group","longDesc","perms","confirm","okLbl","srcDeletePermanently","OpenHistoEntry","getItemUriLabel","_ItemIsolated","import","ItemIsolated","showDialog","initialize","initWidth","initHeight","titleBar","barLabel","label","resizer","OtherItemDiffPanel","diffMode","defaultAction","actionsLists","accelKeysLists","draggable","dropable","onSrcRefChange","onSrcDiffChange","diffModeBtn","diffModeActions","getLabel","setSrcRef","mode","execute","sd","itemType","wspMetaUi","getItemType","itModel","getMainXmlSrcUri","drawer","patch","fetchPending","setLabel","setExecute","addAction","accel","async","updateDiffResult","dom","fetchDiff","code","session","getSubRoot","setDiffSession","diffFound","candidateWspCd","candidateRef","tries","isHistoryOrTrashUri","wspRef","buildWspRef","place","isHouseDirty","wspsLive","saveHouse","doc","uiRoot","getHouseIfFetched","srcStamp","documentElement","getAttribute","Number","parseInt","reloadHouse"],"mappings":"OACQA,kBAAc;OAGdC,WAAYC,gBAAiBC,qBAAsBC,oBAAgB;OACxDC,QAAW;OAChBC,QAAI;OACVC,OAAQC,WAAO;OACAC,SAAK;OACRC,QAAY;OAExBC,UAAM;OACNC,aAAcC,mBAAe;OAC7BC,cAAeC,iBAAgC;OAC/CC,IAAKC,IAAKC,cAAU;OACpBC,QAAI;OAEJC,mBAAe;OACfC,WAAO;OACUC,UAAoB;OAEvBC,YAAQ;OACtBC,eAA4B;;OAE5BC,UAAM;OAUR,MAAOC,wBAAwB1B,cAMpC2B,UAAUC,OAA6BC,KACtCC,KAAKC,WAAWH,OAAQC;AACxBC,KAAKE,WAAWC,YAAYH,KAAKI;AACjCJ,KAAKK;AACL,OAAOL,KAGRH,QAAQS,QACPN,KAAKO,OAASD,SAAW;AACzBN,KAAKK,WAGNR,kBACC,MAAO,CAACW,OAAQR,KAAKF,OAAOW,SAG7BZ,SAASa,aACR,GAAIA,YAAaV,KAAKO,OAAS;AAC/B,OAAOI,SAASX,KAAKO,OAAS,GAAK,kBAAmBP,KAAMlB,aAAa8B,OAI3EpC,IAAIqC,IAAIC,aAAa,kBAAmB,EAAsB;AAO9DC,eAAeC,OAAO,kBAAmBpB;OAKnC,MAAOqB,qBAAqB/C,cAMjC2B,UAAUC,OAA6BC,KACtCC,KAAKC,WAAWH,OAAQC;AACxBC,KAAKE,WAAWC,YAAYH,KAAKI;AACjCJ,KAAKK;AACL,OAAOL,KAGRH,QAAQS,QACPN,KAAKO,OAASD,SAAW;AACzBN,KAAKK,WAGNR,kBACC,MAAO,CAACW,OAAQR,KAAKF,OAAOW,SAG7BZ,SAASa,aACR,GAAIA,YAAaV,KAAKO,OAAS;AAC/B,OAAOI,SAASX,KAAKO,OAAS,GAAKP,KAAKF,OAAOoB,WAAYlB,KAAMlB,aAAa8B,OAIhFpC,IAAIqC,IAAIC,aAAa,eAAgB,EAAsB;AAO3DC,eAAeC,OAAO,eAAgBC;OAKhC,MAAOE,2BAA2BjD,cAAxC2B;AAsBWG,KAAAoB,WAAmC,IAAIC;AACvCrB,KAAAsB,YAAc,EAIxBzB,UAAUC,OAA6BC,KACtCC,KAAKC,WAAWH,OAAQC;AACxBC,KAAKuB,QAAUpC,IAAAqC,cAAA,MAAA,CAAKC,GAAG;AACvBzB,KAAK0B,WAAavC,IAAAqC,cAAA,MAAA,CAAKC,GAAG;AAC1BzB,KAAK2B,WAAaxC,IAAAqC,cAAA,MAAA,CAAKC,GAAG;AAC1BzB,KAAK4B,YAAczC,IAAAqC,cAAA,MAAA,CAAKC,GAAG;AAC3BzB,KAAK6B,WAAa1C,IAAAqC,cAAClC,eAAc,KAChCH,IAAAqC,cAAA,MAAA,CAAKC,GAAG,SACNzB,KAAKuB,QACLvB,KAAK0B,WACL1B,KAAK2B;AAIR3B,KAAKE,WAAW4B,OACf9B,KAAK6B,WACL1C,IAAAqC,cAAA,MAAA,CAAKC,GAAG,UACNzB,KAAK4B,YACL5B,KAAKI;AAGRJ,KAAK+B,OAAS/B,KAAKa,IAAImB,IAAIC,IAAIC,qBAAqBC,OAAO,WAAY,eAAeC,KAAK;AAE3FpC,KAAK0B,WAAWW,iBAAiB,UAAWrC,KAAKsC;AACjDtC,KAAK0B,WAAWW,iBAAiB,WAAYrC,KAAKuC;AAElDvC,KAAKwC,SAASxC,KAAKa,IAAImB,IAAIS,YAAYC;AACvC,OAAO1C,KAGRH,aACC8C,MAAMC;AACN5C,KAAK6C,cAGNhD,eACC8C,MAAMG;AACN9C,KAAK+C,aAGNlD,cAEC,IAAKG,KAAKgD,eAAiBhD,KAAKa,IAAImB,IAAIiB,eAAgBjD,KAAKa,IAAImB,IAAIiB,eAAeC,IAAKlD,KAAKgD,cAAgBhD,KAAKmD,aAAaC,KAAKpD,OAGtIH,aAAawD,QACZ,GAAIA,QAAUrD,KAAKa,IAAImB,IAAIiB,eAAgBjD,KAAKa,IAAImB,IAAIiB,eAAeK,OAAOtD,KAAKgD;AACnFhD,KAAKuD,eAGN1D,eACC,GAAIG,KAAKwD,aAAcxD,KAAK6C,cAK7BhD,oBACC,MAAM4D,SAAWzD,KAAK0D,QAAQ;AAC9B1D,KAAK+C;AACL,IAEC,MAAMY,UAAa3D,KAAK4D,OAAOC,UAAUC,MAAuBC;AAChE,MAAMC,WAAazF,IAAI0F,aAAajE,KAAKa,IAAImB,IAAIC,IAAKjC,KAAM2D,UAAUO,YAAcP,UAAUQ,OAAQnE,KAAK+B;AAG3G,MAAMqC,MAAQJ,KAAKK,UAAUC;AAE7B,GAAIF,OAAS,EAAG,CACfpE,KAAK0B,WAAWI,OAAO;AAEvB9B,KAAKuE,QAAU;AACfvE,KAAKK;AACL,OAGD,MAAMmE,KAAOxE,KAAKuB,QAAQkD,cAAcC;AACxC,MAAMC,EAAIC,KAAKC,MAAML,KAAKM,OAAS;AACnC,MAAMC,MAAQJ,EAAI;AAClB,MAAMK,EAAIJ,KAAKK,MAAM5F,IAAI6F,MAAMP,EAAI,GAAIH,KAAKW,MAAQf,QAAUA,MAAQ,GAAIO,EAAI;AAC9E,MAAMS,MAAQJ,EAAI;AAClB,MAAMK,SAAW,OAAON,WAAWC;AACnC,MAAMM,OAASX,EAAI,GAAK,IAAIY;AAE5B,IAAIC,UAAY;AAChB,IAAIC,aAAe;AACnB,IAAIC,gBAAkB;AAGtB,MAAMC,cAAgB3B,KAAKK,UAAUuB,UAAWC,KAAQA,IAAI1B,SAAWR,UAAUQ;AACjF,MAAM2B,YAAc,IAAIC,KAAKJ,eAAiB,EAAI3B,KAAKK,UAAUsB,eAAeK,MAAQD,KAAKE;AAG7FjG,KAAKuB,QAAQpB,YAAYhB,IAAAqC,cAAA,MAAA;AACzBiE,cAAgBT;AAChBhF,KAAK0B,WAAWvB,YAAYhB,IAAI+G,MAAM,IAAM/G,IAAAqC,cAAA,MAAA,CAAKC,GAAG,gBAAgB0D,MAAOH,EAAGF,OAAQH,EAAGwB,KAAK,OAAMC,eAAc,IAAIC,OAAO,qBAC5HlH,IAAAqC,cAAA,OAAA,CAAM8E,EAAG,OAAOvB,WAAWA,UAC3B5F,IAAAqC,cAAA,OAAA,CAAM8E,EAAG,SAASvB,SAASA,WAAWJ,EAAI;AAE3C3E,KAAK2B,WAAWxB,YAAYhB,IAAAqC,cAAA,MAAA;AAC5BkE,iBAAmBV;AAEnB,IAAIuB,aAAe;AACnB,IAAIC,aAAuB;AAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,KAAKK,UAAUC,OAAQmC,IAAK,CAC/C,MAAMZ,IAAM7B,KAAKK,UAAUoC;AAE3B,IAAIC;AACJ,GAAID,IAAMd,cAAe,CACxB,GAAIF,aAAe,EAAIzF,KAAKuB,QAAQoF,iBAAiCC,MAAMzB,MAAQM,aAAe;AAClGzF,KAAKuB,QAAQO,OAAO3C,IAAI+G,MAAM,IAAM/G,IAAAqC,cAAA,MAAA,CAAK2D,MAAOH,EAAGF,OAAQH,GACzDxF,IAAAqC,cAAA,OAAA,CAAMqF,UAAW,aAAazB,MAAQL,SAAUuB,EAAG,WAAW3B,OAAOI,SAASJ,IAAKwB,KAAK,wBAEzFhH,IAAAqC,cAAA,MAAA;AACDiE,aAAe;AACf,GAAIC,gBAAkB,EAAI1F,KAAK2B,WAAWgF,iBAAiCC,MAAMzB,MAAQO,gBAAkB;AAC3G1F,KAAK2B,WAAWG,OAAO3C,IAAI+G,MAAM,IAAM/G,IAAAqC,cAAA,MAAA,CAAK2D,MAAOH,EAAGF,OAAQH,GAC5DxF,IAAAqC,cAAA,OAAA,CAAMqF,UAAW,aAAazB,MAAQL,SAAUuB,EAAG,OAAO3B,EAAI,OAAOA,OAAOI,UAAWoB,KAAK,wBAE7FhH,IAAAqC,cAAA,MAAA;AACDkE,gBAAkB;AAClBF,WAAaA,cACP,CAENkB,QAAUnH,OAAOuH,kBAAkBhB,YAAa,IAAIC,KAAKF,IAAIG,OAAQ,KAAM;AAC3E,GAAIU,UAAYF,aAAc,CAE7BE,QAAU;AACVjB,cAAgBT;AAChBU,iBAAmBV,MACb,CAEN,GAAIQ,UAAW,CACd,GAAIC,aAAe,EAAIzF,KAAKuB,QAAQoF,iBAAiCC,MAAMzB,MAAQM,aAAe;AAClGzF,KAAKuB,QAAQpB,YAAYhB,IAAAqC,cAAA,iBAAA,CAAgBuF,MAAON,EAAId,cAAgB,YAAc,cAAee;AACjGjB,aAAeT;AACfU,iBAAmBV,MACb,CACN,GAAIU,gBAAkB,EAAI1F,KAAK2B,WAAWgF,iBAAiCC,MAAMzB,MAAQO,gBAAkB;AAC3G1F,KAAK2B,WAAWxB,YAAYhB,IAAAqC,cAAA,iBAAA,CAAgBuF,MAAON,EAAId,cAAgB,YAAc,cAAee;AACpGhB,gBAAkBV;AAClBS,cAAgBT,EAEjBwB,aAAeE;AACflB,WAAaA,WAKf,MAAMwB,MAAQhH,KAAKwC,SAASqD,IAAIoB;AAChC,MAAMC,MAAQ/H,IAAI+G,MAAM,KACvB,GAAIvH,KAAKwI,aAAatB,IAAI1B,QAAS,CAClC0B,IAAI3B,WAAaF,KAAKoD,SAASjD;AAC/B,GAAI0B,IAAIwB,SAAW,EAAG,CACrB,OAAOlI,IAAAqC,cAAA,OAAA,CAAMqF,UAAW,UAAUvB,YAAYA,QAAQF,MAAQL,WAAYuB,EAAE,sHAAqHF,eAAc,IAAID,KAAMa,MAClNX,OAAO,0BACR,CACN,OAAOlH,IAAAqC,cAAA,SAAA,CAAQ8F,GAAIlC,MAAOmC,GAAIxC,MAAOyC,EAAGzC,MAAQ,EAACqB,eAAe,IAAID,KAAMa,MAAOX,OAAO,4BAEnF,GAAIR,IAAIwB,SAAW,EAAG,CAC5B,OAAOlI,IAAAqC,cAAA,IAAA,KACNrC,IAAAqC,cAAA,OAAA,CAAMiG,EAAGrC,MAAQL,MAAQ,EAAG2C,EAAE,IAAIvC,MAAOR,EAAGG,OAAQH,EAAGwB,KAAK,sBAC5DhH,IAAAqC,cAAA,OAAA,CAAMqF,UAAW,UAAUvB,YAAYA,QAAQF,MAAQL,WAAYuB,EAAE,sHAAsHH,KAAMa,aAE5L,CACN,OAAO7H,IAAAqC,cAAA,OAAA,CAAMiG,EAAGrC,MAAQL,MAAQ,EAAG2C,EAAE,IAAIvC,MAAOR,EAAI,EAAGG,OAAQH,EAAI,EAACyB,eAAe,IAAID,KAAMa,MAAOX,OAAO;AAG7G,MAAMsB,MAAQxI,IAAAqC,cAAA,kBAAA,KAAkBrC,IAAI+G,MAAM,IAAM/G,IAAAqC,cAAA,MAAA,CAAK2D,MAAOuB,QAAU1B,EAAI,EAAIA,EAAGF,OAAQH,GACxFxF,IAAAqC,cAAA,OAAA,CAAM8E,EAAGjB,SAAQe,eAAe,IAAIC,OAAO,sBAC1Ca,MACArB,IAAI+B,YAAczI,IAAAqC,cAAA,OAAA,CAAMqF,UAAW,UAAUvB,YAAYA,QAAQF,WAAYkB,EAAE,gCAAgCH,KAAK,sBAAwB0B;AAE9I,GAAInB,QAASiB,MAAMG,UAAU5E,IAAIuD,EAAId,cAAgB,YAAc;AACnEgC,MAAMI,UAAYlC;AAElB7F,KAAK0B,WAAWvB,YAAYwH;AAE5B,GAAI3H,KAAKuE,UAAYgC,cAAgB3H,IAAIoJ,OAAOnC,OAAS7F,KAAKuE,QAAS,CACtEvE,KAAKiI,cAAcN;AACnBpB,aAAe,KAEhB,GAAIE,IAAMd,cAAe3F,KAAKkI,aAAeP,MAE9C,IAAKpB,cAAgBvG,KAAKuE,QAAS,CAElCvE,KAAKuE,QAAU;AACfvE,KAAKK,WAGN,GAAIoF,aAAe,EAAIzF,KAAKuB,QAAQoF,iBAAiCC,MAAMzB,MAAQM,aAAe;AAClG,GAAIC,gBAAkB,EAAI1F,KAAK2B,WAAWgF,iBAAiCC,MAAMzB,MAAQO,gBAAkB;AAE3G,GAAI1F,KAAKkI,aAAc,CACtBlI,KAAKkI,aAAaC,UAAY;AAC9BnI,KAAK6B,WAAWuG,cAAcpI,KAAKkI;AACnC,GAAIzE,SAAUzD,KAAKkI,aAAaG,SAEhC,MAAOC,GACR3I,MAAM4I,IAAID,IAIZzI,aACCG,KAAKuB,QAAQiH,YAAc;AAC3BxI,KAAK0B,WAAW8G,YAAc;AAC9BxI,KAAK2B,WAAW6G,YAAc,KAG/B3I,gBAAmC4I,IAClC,GAAIhK,OAAOiK,oBAAoBD,IAAK;AACpC,MAAME,WAAaF,GAAGG;AACtB,OAAQH,GAAGI,KACX,IAAK,YACJ,GAAIF,WAAWG,8BAA8BC,WAAYJ,WAAWG,mBAAmBT;AACvF;AACD,IAAK,aACJ,GAAIM,WAAWK,kCAAkCD,WAAYJ,WAAWK,uBAAuBX;AAC/F;AACD,IAAK,QACJM,WAAWM;AACX;AACD,QACC,OAEDR,GAAGS;AACHT,GAAGU,kBAGJtJ,iBAAoC4I,IACnC,MAAME,WAAazJ,IAAIkK,WAAWX,GAAGG,OAAgB5I,KAAOqJ,GAAuBA,aAAaN;AAChG,GAAIJ,WAAYW,cAAcC,UAAUC,mBAAmBb,WAAYF,IAGxE5I,kBAAkB4J,YACjBC,GAAA1J,KAAK2J,OAAG,MAAAD,UAAA,OAAA,EAAAA,GAAEE;AACV5J,KAAK2J,IAAMF,GAGZ5J,eACC,GAAIG,KAAK2J,IAAK,CACb3J,KAAK2J,IAAIC;AACT5J,KAAK2J,IAAM,MAIb9J,eAAea,aACd,GAAIA,kBAAmBV,KAAK6C;AAC5B,OAAOlC,SAASX,KAAKuE,QAASvE,KAAMlB,aAAa8B,MAGlDf,QAAQS,QACPN,KAAK6J,WAAWvJ,SAAM,MAANA,cAAM,OAAA,EAANA,OAAQiE,SAGzB1E,WAAW0E,SACVvE,KAAKuE,QAAUA;AACfvE,KAAKK;AACL,IAAIsH;AACJ,GAAI3H,KAAK0B,WAAWoI,gBAAiB,CAEpC,IAAK,IAAIC,MAAM/J,KAAK0B,WAAWsI,SAAU,CACxC,GAAID,cAAchB,YAAcnK,IAAIoJ,OAAO+B,GAAGhC,aAAexD,QAAS,CACrEoD,MAAQoC;AACR,QAIH/J,KAAKiI,cAAcN,OAGpB9H,aAAa8I,YACZ3I,KAAKiI,cAAcU;AACnB3I,KAAKuE,QAAUoE,WAAa/J,IAAIoJ,OAAOW,WAAWZ,WAAa;AAC/D/H,KAAKK,WAGIR,cAAc8I,oBACvBe,GAAA1J,KAAKiK,aAAS,MAAAP,UAAA,OAAA,EAAAA,GAAE5B,UAAUoC,OAAO;AACjC,GAAIvB,WAAY,CACfA,WAAWb,UAAU5E,IAAI;AACzBlD,KAAKiK,UAAYtB;AACjB,MAAMwB,GAAK,IAAIpE,KAAK4C,WAAWZ,UAAU/B;AACzC,MAAMoE,KAAOD,GAAGE,mBAAmB;AACnC,MAAMC,KAAOH,GAAGI,mBAAmB;AACnCvK,KAAK4B,YAAY4G,YAAc7J,KAAKwI,aAAawB,WAAWZ,UAAU5D,QACrE,cAAciG,UAAUE,QACxB,yCACK,CACNtK,KAAK4B,YAAY4G,YAAc,MAIjC3I,kBACC,MAAO,CAACW,OAAQR,KAAKF,OAAOW,QAAS8D,QAASvE,KAAKuE,SAG1C1E,SAAS2K,GAClB,IAAKA,EAAG,MAAO;AACf,IAAIxD,MAAQhH,KAAKoB,WAAWqJ,IAAID;AAChC,GAAIxD,MAAO,OAAOA;AAClBA,MAAQ0D,OAAO1K,KAAKsB;AACpBtB,KAAKoB,WAAWuJ,IAAIH,EAAGxD;AACvB,GAAIhH,KAAKsB,aAAeoJ,OAAOpG,OAAQtE,KAAKsB,YAAc;AAC1D,OAAO0F,OAIT,MAAM0D,OAAS,CAAC,OAAQ,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW;AAExMlM,IAAIqC,IAAIC,aAAa,qBAAsB,EAAsB;AA+FjEC,eAAeC,OAAO,qBAAsBG;OAGtC,MAAO4H,mBAAmB6B,YAM/B/K,cACC8C;AACA3C,KAAK6K,QAAUrL,MAAMsL,eAAe9K,KAAMA,KAAK+K,oBAAqB,CAACC,aAAc;AACnFhL,KAAKiL,OAAUxC,KACd,GAAIzI,KAAKkL,eAAiBhM,IAAIiM,WAAWnL,KAAKkL,aAAczC,GAAG2C,eAA+BpL,KAAKkL,aAAatB,SAIlHyB,iBAAsC,OAAOxM,MAAMyM,SAA6BtL,MAEhFmI,gBAAiB,OAAOnI,KAAKuL,WAAa,EAE1CpD,cAAcqD,GACb,GAAIA,EAAG,CACN,IAAK,IAAIzB,MAAM/J,KAAKyE,cAAcuF,SAAU,CAC3C,GAAID,KAAO/J,MAAQ+J,GAAG0B,aAAa,YAAa1B,GAAG2B,gBAAgB,YAEpE1L,KAAKuL,SAAW,OACV,GAAIvL,KAAKyL,aAAa,YAAa,CACzCzL,KAAK0L,gBAAgB,aAIvB7L,MAAM8L,SACL3L,KAAKmI,UAAY;AACjBxF,MAAM0F,MAAMsD;AACZ,MAAMC,OAAS1M,IAAIkK,WAAWpJ,KAAM,KAAOqJ,GAA2BA,aAAa/J;AACnFsM,SAAM,MAANA,cAAM,OAAA,EAANA,OAAQxD,cAAcpI,MAGvBH,oBAAgC8H,MAAmBkE,SAGlD,MAAMC,MAAQnE,MAAM0D;AAEpB,MAAMlB,GAAK,IAAIpE,KAAK4B,MAAMI,UAAU/B;AACpC,MAAMoE,KAAOD,GAAGE,mBAAmB;AACnC,MAAMC,KAAOH,GAAGI,mBAAmB;AACnC,MAAM1J,IAAMiL,MAAMjL;AAClB,MAAMkL,WAAa5M,IAAAqC,cAAC9B,WAAU,CAAAsM,IAAI,CAACnL,IAAAA,IAAKoL,QAASpL,IAAIqL,QAAQ,2BAA4BC,cAAexE,MAAOyE,mBAAoB;AACnIP,QAAQxJ,iBAAiB,SAAU,KAClCsF,MAAMG,UAAUuE,OAAO,QAAS;AAChCP,MAAMQ,kBAAkBT;AACxBU,QAAQC,UAAUC,KAAK,KACtB,MAAMC,UAAY7N,MAAM8N,aAAaZ,WAAYA,WAAY7M,IAAI0N;AACjE,GAAIF,UAAWA,UAAUrE;AAG3BwD,QAAQxJ,iBAAiB,gBAAiB,KACzCsF,MAAMG,UAAUuE,OAAO,QAAS;AAChCP,MAAMQ,kBAAkB;AAEzB3E,MAAMkF,SAAW1N,IAAAqC,cAACvC,aAAY,CAACwC,GAAG,WAAUuK,IAAI,CAACnL,IAAAA,KAA2BiM,MAAM,2FAChF3N,IAAI+G,MAAM,IAAM/G,IAAAqC,cAAA,MAAA,CAAK2D,MAAM,KAAKL,OAAO,MACvC3F,IAAAqC,cAAA,OAAA,CAAMC,GAAG,OAAM2E,eAAc,IAAIE,EAAE;AAGrCqB,MAAMkF,SAASE,SAAWpF,MAAMI,UAAUV,SAAW;AACrDM,MAAMqF,aAAe7N,IAAAqC,cAAA,QAAA,CAAOC,GAAG,cAAcwL,MAAOtF,MAAMI,UAAUH,aAAe,GAAIsF,YAAY,YAAYJ,MAAM;AACrH,GAAIjM,IAAIsM,QAAQ,gCAAiC,CAChDxF,MAAMkF,SAAShC,QAAUlD,MAAMyF,eAAehK,KAAKuE,WAC7C,CACNA,MAAMkF,SAASQ,SAAW,KAE3B,GAAIxM,IAAIsM,QAAQ,mCAAoC,CACnDxF,MAAMqF,aAAa/B,OAAStD,MAAM2F,kBAAkBlK,KAAKuE,WACnD,CACNA,MAAMqF,aAAaK,SAAW,KAE/B,OAAOlO,IAAAqC,cAAA,MAAA,KACNrC,IAAAqC,cAACpC,UAAS,CAACmO,KAAK,0BAA0BC,SAAS,sBACjDzB,WACD5M,IAAAqC,cAAA,MAAA,CAAKC,GAAG,SACNkG,MAAMkF,SACNlF,MAAMqF,cAER7N,IAAAqC,cAAA,MAAA,CAAKC,GAAG,UACPtC,IAAAqC,cAAA,MAAA,CAAKuF,MAAM,SAAQ5H,IAAAqC,cAAA,OAAA,CAAMuF,MAAM,SAAO,iBAAqB5H,IAAAqC,cAAA,OAAA,CAAMuF,MAAM,SAAS,IAAIqD,UAAUE,UAC9FnL,IAAAqC,cAAA,MAAA,CAAKuF,MAAM,SAAQ5H,IAAAqC,cAAA,OAAA,CAAMuF,MAAM,SAAO,mBAAuB5H,IAAAqC,cAAA,OAAA,CAAMuF,MAAM,SAAQ5H,IAAAqC,cAAC/B,QAAO,CAAAuM,IAAI,CAACyB,cAAe9F,MAAMI,UAAUd,QAASpG,IAAAA,YAQ1IhB,uBACC,UACOtB,IAAImP,gBAAgB1N,KAAKqL,WAAWxK,IAAImB,IAAIC,IAAKjC,KAAMpB,IAAIoJ,OAAOhI,KAAK+H,WAAY,CAACV,UAAWrH,KAAK+H,UAAUV,SAAW,EAAI,IAClI,MAAOiB,SACF3I,MAAMgO,OAAO,2DAA4DrF,GAEhF,OAAOtI,KAAKqL,WAAWxI,cAGxBhD,0BACC,MAAM+N,EAAI5N,KAAKgN,aAAaC;AAC5B,MAAMY,MAAoB,CAACjG,YAAagG;AACxC,IAAK5N,KAAK+H,UAAUV,UAAYuG,IAAM5N,KAAK+H,UAAUH,YAAaiG,MAAMxG,SAAW;AACnF,UACO9I,IAAImP,gBAAgB1N,KAAKqL,WAAWxK,IAAImB,IAAIC,IAAKjC,KAAMpB,IAAIoJ,OAAOhI,KAAK+H,WAAY8F,OACxF,MAAOvF,SACF3I,MAAMgO,OAAO,4DAA6DrF,GAEjF,OAAOtI,KAAKqL,WAAWxI,eAIzBrE,IAAIqC,IAAIC,aAAa,0BAA2B,EAAsB;AAkEtEC,eAAeC,OAAO,kBAAmB+H;AAEzC,MAAMO,sBAAsB5K,OAI3BmB,cACC8C,MAAM;AACN3C,KAAK8N,OAAS;AACd9N,KAAK+N,MAAQ,iCAGdlO,UAAUmO,KACT,MAAMlK,MAAQkK,IAAI3C,WAAWzH,OAAOC,UAAUC;AAC9C,IAAKA,MAAO,OAAO;AACnB,GAAIlF,IAAIoJ,OAAOgG,IAAIjG,aAAenJ,IAAIoJ,OAAOlE,MAAMC,WAAY,OAAO;AACtE,OAAOpB,MAAMsL,UAAUD,KAGxBnO,QAAQmO,IAAiBvF,IACxB,MAAMqD,MAAQkC,IAAI3C;AAClBS,MAAMoC,aAAaF;AACnBlC,MAAMvI,gBAlBA+F,cAAAC,UAAY,IAAID;AAsBxB9K,IAAIqC,IAAIsN,UAAU,0BAA2B,YAAa,EAAG7E,cAAcC;AAG3E,MAAM6E,yBAAyB1P,OAI9BmB,cACC8C,MAAM;AACN3C,KAAK8N,OAAS;AACd9N,KAAK+N,MAAQ;AACb/N,KAAKqO,OAAS,SAGfxO,UAAUmO,KACT,IAAKrP,KAAKwI,aAAa6G,IAAIjG,UAAU5D,QAAS,OAAO;AACrD,GAAI6J,IAAI3C,WAAWxK,IAAImB,IAAIsM,SAASnK,SAAW6J,IAAIjG,UAAU5D,OAAQ,OAAO;AAC5E,OAAOxB,MAAMsL,UAAUD,KAGxBnO,oBAAoBmO,IAAiBO,OACpC,MAAMlD,WAAa2C,IAAI3C;AACvB,OAAOA,WAAWxK,IAAIsM,QAAQa,IAAIjG,UAAUd,UAAYoE,WAAWxK,IAAImB,IAAIS,YAAYC,QAAU,0CAA4C,sCAG9I7C,cAAcmO,IAAiBvF,IAC9B,MAAMqD,MAAQkC,IAAI3C;AAClBS,MAAMvI;AACN,MAAM4G,GAAK,IAAIpE,KAAKiI,IAAIjG,UAAU/B;AAClC,MAAMoE,KAAOD,GAAGE,mBAAmB;AACnC,MAAMC,KAAOH,GAAGI,mBAAmB;AACnC,SAAU/K,MAAMgP,QAAQ,kFAAkFpE,UAAUE,UAAW0D,IAAK,CAACS,MAAO,+BAAgC,OACrKlQ,IAAImQ,qBAAqB5C,MAAMjL,IAAImB,IAAIC,IAAK+L,IAAK,CAACA,IAAIjG,UAAU5D;AACtE,OAAO2H,MAAMjJ,gBA5BRuL,iBAAA7E,UAAY,IAAI6E;AAkCxB5P,IAAIqC,IAAIsN,UAAU,0BAA2B,WAAY,EAAGC,iBAAiB7E;AAG7E,MAAMoF,uBAAuBjQ,OAI5BmB,cACC8C,MAAM;AACN3C,KAAK8N,OAAS;AACd9N,KAAK+N,MAAQ;AACb/N,KAAKqO,OAAS,OAGfxO,UAAUmO,KACT,IAAKrP,KAAKwI,aAAa6G,IAAIjG,UAAU5D,QAAS,OAAO;AACrD,GAAI6J,IAAI3C,WAAWxK,IAAImB,IAAIsM,SAASnK,SAAW6J,IAAIjG,UAAU5D,OAAQ,OAAO;AAC5E,OAAOxB,MAAMsL,UAAUD,KAGxBnO,cAAcmO,IAAiBvF,IAC9B,MAAMqD,MAAQkC,IAAI3C;AAClBS,MAAMvI;AAEN,MAAMuJ,MAAQnO,KAAKiQ,gBAAgBZ,IAAIjG,UAAU5D,OAAQ6J,IAAIjG;AAC7D,MAAMoC,GAAK,IAAIpE,KAAKiI,IAAIjG,UAAU/B;AAClC,MAAMoE,KAAOD,GAAGE,mBAAmB;AACnC,MAAMC,KAAOH,GAAGI,mBAAmB;AAEnC,IAAKsE,cAAeA,qBAAuBC,OAAM,sCAAoCC;AAErFvP,MAAMwP,YAAW,IAAIH,eAAgBI,WAAW,CAC9CpO,IAAKmN,IAAI3C,WAAWxK,IAAImB,IAAIC,IAAIpB,IAChCmH,OAAQpJ,IAAIoJ,OAAOgG,IAAIjG,aAExBiG,IACA,CACCkB,UAAW,MACXC,WAAY,MACZC,SAAU,CAACC,SAAU,CAACC,MAAO,GAAGxC,YAAY1C,UAAUE,SACtDiF,QAAS,MAnCLZ,eAAApF,UAAY,IAAIoF;AAwCxB,IAAIE;AAGJrQ,IAAIqC,IAAIsN,UAAU,0BAA2B,YAAa,EAAGQ,eAAepF;OAMtE,MAAOiG,2BAA2BtR,cAQvC2B,UAAUC,OAA6BC,KACtCC,KAAKC,WAAWH,OAAQC;AACxBC,KAAKyP,SAAW3Q,aAAa8B;AAC7BZ,KAAKuE,SAAU,IAAIpG,YAAa8Q,WAAW,CAC1CpO,IAAKb,KAAKa,IACV6O,cAAerR,qBAAqBkL,UACpCoG,aAAc,CAAC,gCAAiC,yBAChDC,eAAgB,CAAC,kCAAmC,2BACpDC,UAAW,KACXC,SAAU;AAEX9P,KAAKuE,QAAQwL,eAAe7M,IAAIlD,KAAKgQ;AACrChQ,KAAKiQ,aAAc,IAAIjR,eAAoCiQ,WAAW,CACrEpO,IAAKb,KAAKa,IACVyO,MAAOY,gBAAgB,GAAGC,SAASnQ,MACnCiM,QAASiE,gBACT/D,cAAenM;AAEhBA,KAAKE,WAAW4B,OACf9B,KAAKuE,QACLvE,KAAKI,OACLJ,KAAKiQ;AAEN,OAAOjQ,KAGRH,QAAQS,QACPN,KAAKuE,QAAQ6L,UAAU9P,SAAM,MAANA,cAAM,OAAA,EAANA,OAAQiE;AAC/B,GAAIjE,OAAQN,KAAKyP,SAAWnP,OAAO+P,MAAQvR,aAAa8B;AACxDsP,gBAAgBlQ,KAAKyP,WAAa3Q,aAAa8B,KAAO,EAAI,GAAG0P,QAAQtQ,MAGtEH,kBACC,MAAO,CAACW,OAAQR,KAAKF,OAAOW,QAAS8D,QAASvE,KAAKuE,QAAQyD,OAAQqI,KAAMrQ,KAAKyP,UAG/E5P;AACC,MAAM0Q,GAAKvQ,KAAKuE,QAAQwD;AACxB,GAAIwI,GAAI,CACP,MAAMC,UAAW9G,GAAA1J,KAAKa,IAAImB,IAAIC,IAAIwO,aAAS,MAAA/G,UAAA,OAAA,EAAAA,GAAEgH,YAAYH,GAAGI;AAC5D,GAAIH,SAAU,OAAO7P,SAAS6P,SAASI,iBAAiBL,IAAKvQ,KAAMA,KAAKyP,UAEzE,OAAO9O,SAAS,KAAMX,KAAMA,KAAKyP,UAGxB5P,gBAA4BgR,QACrChS,MAAMyM,SAA6BuF,QAAQxQ,YAI7C,SAASA,SAA2C2N,KACnDA,IAAIyB,SAAWzP,KAAKS,UAAY,OAAS3B,aAAa8B,KAAO9B,aAAagS;AAC1E9C,IAAIiC,YAAYX,MAAQtP,KAAKmQ,SAASnC;AACtC,IAAKA,IAAIzJ,QAAQwM,aAAc/C,IAAI3N,WAGpC,MAAM6P,gBAAkB,CACvB,IAAIxR,OAA2B,QAAQsS,SAAS,iBAAiBC,WAAW5Q,UAC5E,IAAI3B,OAA2B,SAASsS,SAAS,wBAAwBC,WAAW5Q;AAIrF7B,IAAIqC,IAAIC,aAAa,qBAAsB,EAAsB;AAiBjE,SAASoQ,UAAUpR,OAA+BqR,OACjD3S,IAAIqC,IAAIsN,UAAU,gCAAiCrO,OAAOW,QAAS,EAAGX;AACtE,GAAIqR,MAAO3S,IAAIqC,IAAIsN,UAAU,kCAAmCgD,MAAO,EAAGrR,QAG3EoR,UAAU7S,qBAAqBkL,UAAW;AAC1C2H,UAAU5S,gBAAgBiL,UAAW;AACrC2H,UAAU,IAAI9S,gBAAmB;AAEjC2C,eAAeC,OAAO,qBAAsBwO;OAQrC4B,eAAezQ,SAASqH,OAA4B8D,MAAkCuE,MAC5F,IACC,GAAIrI,OAAQ,CACX8D,MAAMuF,iBAAiB;AACvB,MAAMC,UAAYC,UAAUzF,MAAMlI,OAAQkI,MAAMjL,IAAImB,IAAIC,IAAIuP,KAAMxJ;AAElE,GAAIsJ,IAAK,CACR,MAAMG,QAAU,IAAI1S,eAAeuS,IAAKjB,KAAMvE,MAAMlI,OAAOC,UAAU6N;AACrE5F,MAAMlI,OAAOC,UAAU8N,eAAeF;AACtC3F,MAAMuF,iBAAiBI,QAAQG,eACzB,CACN9F,MAAMlI,OAAOC,UAAU8N,eAAe;AACtC7F,MAAMuF,iBAAiB,cAElB,CACNvF,MAAMlI,OAAOC,UAAU8N,eAAe;AACtC7F,MAAMuF,iBAAiBrJ,SAAW,GAAK,aAAe,OAEtD,MAAOM,GACR3I,MAAM4I,IAAI,cAAeD;AACzBwD,MAAMlI,OAAOC,UAAU8N,eAAe;AACtC7F,MAAMuF,iBAAiB,UAIzBD,eAAeG,UAAU3N,OAAgBiO,eAAuBC,aAA6CC;AAC5G,MAAMlR,IAAM+C,OAAO/C;AACnB,MAAMoB,IAAMpB,IAAImB,IAAIC;AACpB,MAAM8B,UAAaH,OAAOC,UAAUC,MAAuBC;AAC3D,MAAMiE,OAASrJ,KAAKqT,oBAAoBjO,UAAUI,QAAUJ,UAAUI,OAASvF,IAAIoJ,OAAOjE;AAC1F,MAAMkO,OAAS1T,IAAI2T,YAAYjQ,IAAIuP,KAAMxJ;AACzC,GAAInH,IAAImB,IAAImQ,MAAMC,aAAaH,cAAepR,IAAImB,IAAImQ,MAAME,SAASC,UAAUL;AAC/E,MAAMM,UAAYhU,IAAIgT,UAAU1Q,IAAImB,IAAIC,IAAKpB,IAAImB,IAAIwQ,OAAQxK,OAAQ6J,eAAgBC;AACrF,MAAMvB,IAAK7G,GAAA7I,IAAImB,IAAImQ,MAAME,SAASI,kBAAkBR,WAAO,MAAAvI,UAAA,OAAA,EAAAA,GAAE3F;AAC7D,GAAIwM,KAAOA,GAAGmC,SAAWnC,GAAGmC,WAAaH,IAAII,gBAAgBC,aAAa,YAAcrC,GAAGvK,QAAU6M,OAAOC,SAASP,IAAII,gBAAgBC,aAAa,WAAY,CAEjK,GAAIb,QAAU,EAAG,CAEhBlR,IAAImB,IAAImQ,MAAME,SAASU,YAAYd;AACnC,OAAO,KAOR,OAAOV,UAAU3N,OAAQiO,eAAgBC,cAAeC,OAAS,GAAK,GAEvE,OAAOQ","sourcesContent":["/** */\nimport {DiffPanelBase} from \"back/edit/wed/features/diffBar_\";\nimport {DrfRefDiffAction, DrvDiffAction, HistoItemDiffAction, JDrfRefWedDiffBarParams, JDrvWedDiffBarParams, JHistoItemWedDiffBarParams, JOtherItemWedDiffBarParams, OtherItemDiffAction} from \"back/wsp/widgets/wed/itemEditorExt\";\nimport {IWedDiffBar} from \"back/edit/wed/features/diffBar\";\nimport {SrcPointer, SrcPointerErase, SrcPointerFastSelect, SrcPointerPaste} from \"back/wsp/widgets/srcDrawer\";\nimport {IWspUiEnv, WSP, wspCd} from \"lib/wsp/wsp\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {ACTION, Action} from \"lib/commons/actions\";\nimport {IShortDescCtx, ITEM} from \"lib/wsp/item\";\nimport {JSrcFields, SRC, srcRef} from \"lib/wsp/src\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {EXmlDiffMode, XmlDiffSession} from \"lib/edit/schema/diff\";\nimport {ButtonActions, ButtonToggle, OButtonToggleInit} from \"back/commons/widgets/buttons\";\nimport {DOM, JSX, ShadowJsx} from \"lib/commons/xml/dom\";\nimport {GFX} from \"lib/commons/utils/gfx\";\nimport {account} from \"lib/core/user\";\nimport {ArrowScrollBox} from \"back/commons/widgets/scroll\";\nimport {LOCALE} from \"lib/commons/lang\";\nimport {ITooltipPointer, POPUP, PopupTooltip} from \"back/commons/widgets/popups\";\nimport {IView} from \"lib/commons/views\";\nimport {OUserRefInit, UserRef} from \"back/core/widgets/userRef\";\nimport {BarActions, OBarActionsInit} from \"back/commons/widgets/bars\";\nimport \"back/wsp/widgets/widgets_Perms\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {IWspXmlHouse} from \"lib/wsp/wspsLive\";\nimport {ItemIsolated} from \"back/wsp/views/itemIsolated\";\nimport ESpecialCandidateUri = WSP.ESpecialCandidateUri;\n\n\n/**\n *\n */\nexport class DrfRefDiffPanel extends DiffPanelBase<IItemUiEnv> {\n\n\taction: DrfRefDiffAction;\n\n\terased?: boolean\n\n\tinitPanel(action: OtherItemDiffAction, bar: IWedDiffBar): this {\n\t\tthis._initPanel(action, bar);\n\t\tthis.shadowRoot.appendChild(this.result);\n\t\tthis.execDiff();\n\t\treturn this;\n\t}\n\n\tsetDiff(params: JDrfRefWedDiffBarParams | undefined | null): void {\n\t\tthis.erased = params === null;\n\t\tthis.execDiff();\n\t}\n\n\tbuildDiffParams(): JDrfRefWedDiffBarParams {\n\t\treturn {diffId: this.action.getId()}\n\t}\n\n\texecDiff(fullRefresh?: boolean): Promise<void> {\n\t\tif (fullRefresh) this.erased = false;\n\t\treturn callDiff(this.erased ? \"\" : \"special:drf:ref\", this, EXmlDiffMode.diff);\n\t}\n}\n\nREG.reg.registerSkin(\"wed-diff-drfref\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n`);\n\ncustomElements.define(\"wed-diff-drfref\", DrfRefDiffPanel);\n\n/**\n *\n */\nexport class DrvDiffPanel extends DiffPanelBase<IItemUiEnv> {\n\n\taction: DrvDiffAction;\n\n\terased?: boolean\n\n\tinitPanel(action: OtherItemDiffAction, bar: IWedDiffBar): this {\n\t\tthis._initPanel(action, bar);\n\t\tthis.shadowRoot.appendChild(this.result);\n\t\tthis.execDiff();\n\t\treturn this;\n\t}\n\n\tsetDiff(params: JDrvWedDiffBarParams | undefined | null): void {\n\t\tthis.erased = params === null;\n\t\tthis.execDiff();\n\t}\n\n\tbuildDiffParams(): JDrvWedDiffBarParams {\n\t\treturn {diffId: this.action.getId()}\n\t}\n\n\texecDiff(fullRefresh?: boolean): Promise<void> {\n\t\tif (fullRefresh) this.erased = false;\n\t\treturn callDiff(this.erased ? \"\" : this.action.specialRef, this, EXmlDiffMode.diff);\n\t}\n}\n\nREG.reg.registerSkin(\"wed-diff-drv\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n`);\n\ncustomElements.define(\"wed-diff-drv\", DrvDiffPanel);\n\n/**\n *\n */\nexport class HistoItemDiffPanel extends DiffPanelBase<IItemUiEnv> {\n\n\treg: IReg<IItemUiEnv>;\n\taction: HistoItemDiffAction;\n\tprotected fields: string;\n\n\t/** Source de diff Ã  afficher.*/\n\tsrcDiff?: srcRef;\n\n\t/** Point de la ligne d'histo correspondant Ã  l'item courant. */\n\tcurrentPoint: HistoPoint;\n\n\t/** Point de la ligne d'histo actuellement comparÃ©e */\n\tdiffPoint: HistoPoint | null;\n\n\n\tscrollLine: ArrowScrollBox;\n\ttopLine: HTMLElement;\n\tmiddleLine: HTMLElement;\n\tbottomLine: HTMLElement;\n\tdiffSelView: HTMLElement;\n\n\tprotected userColors: Map<account, string> = new Map();\n\tprotected colorOffset = 0;\n\n\tprotected _tt: PopupTooltip;\n\n\tinitPanel(action: HistoItemDiffAction, bar: IWedDiffBar): this {\n\t\tthis._initPanel(action, bar);\n\t\tthis.topLine = <div id=\"top\"/>;\n\t\tthis.middleLine = <div id=\"middle\"/>;\n\t\tthis.bottomLine = <div id=\"bottom\"/>;\n\t\tthis.diffSelView = <div id=\"sel\"/>;\n\t\tthis.scrollLine = <ArrowScrollBox>\n\t\t\t<div id=\"lines\">\n\t\t\t\t{this.topLine}\n\t\t\t\t{this.middleLine}\n\t\t\t\t{this.bottomLine}\n\t\t\t</div>\n\t\t</ArrowScrollBox> as ArrowScrollBox;\n\n\t\tthis.shadowRoot.append(\n\t\t\tthis.scrollLine,\n\t\t\t<div id=\"states\">\n\t\t\t\t{this.diffSelView}\n\t\t\t\t{this.result}\n\t\t\t</div>\n\t\t);\n\t\tthis.fields = this.reg.env.wsp.getShortDescFields().concat(\"metaFlag\", \"metaComment\").join('*');\n\n\t\tthis.middleLine.addEventListener(\"keydown\", this.onKeyDownInLine);\n\t\tthis.middleLine.addEventListener(\"dblclick\", this.onDblclickInLine);\n\n\t\tthis.getColor(this.reg.env.securityCtx.account);//rÃ©serve la 1Ã¨re couleur pour le user courant.\n\t\treturn this;\n\t}\n\n\tconnectDoc(): void {\n\t\tsuper.connectDoc();\n\t\tthis.updateHisto();\n\t}\n\n\tunconnectDoc(): void {\n\t\tsuper.unconnectDoc();\n\t\tthis.resetHisto();\n\t}\n\n\tonViewShown() {\n\t\t//sur onViewShown / onViewHidden pour dÃ©sabonnment des diff affichÃ©e dans les dialogs d'Ã©dition des metas du txt\n\t\tif (!this._onItemChange && this.reg.env.longDescChange) this.reg.env.longDescChange.add((this._onItemChange = this.onItemChange.bind(this)));\n\t}\n\n\tonViewHidden(closed?: boolean): void {\n\t\tif (closed && this.reg.env.longDescChange) this.reg.env.longDescChange.delete(this._onItemChange);\n\t\tthis.closeTooltip();\n\t}\n\n\tonItemChange() {\n\t\tif (this.docConnected) this.updateHisto();\n\t}\n\n\tprotected _onItemChange: () => void;\n\n\tasync updateHisto(): Promise<void> {\n\t\tconst hadFocus = this.matches(\":focus-within\");\n\t\tthis.resetHisto();\n\t\ttry {\n\t\t\t//const ld = this.reg.env.longDesc;\n\t\t\tconst editedSrc = (this.wedMgr.docHolder.house as IWspXmlHouse).srcFields;\n\t\t\tconst hist = await WSP.fetchHistory(this.reg.env.wsp, this, editedSrc.srcLiveUri || editedSrc.srcUri, this.fields);\n\t\t\t//console.log(\"::hist:::::\", hist);\n\n\t\t\tconst count = hist.histNodes.length;\n\n\t\t\tif (count <= 1) {\n\t\t\t\tthis.middleLine.append(\"Aucune entrÃ©e d'historique disponible\");\n\t\t\t\t//EntrÃ©e d'historique disparue, on efface\n\t\t\t\tthis.srcDiff = null;\n\t\t\t\tthis.execDiff();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rect = this.topLine.parentElement.getBoundingClientRect();\n\t\t\tconst h = Math.floor(rect.height / 3);\n\t\t\tconst hHalf = h / 2;\n\t\t\tconst w = Math.round(GFX.bound(h + 4, (rect.width - count) / (count + 1), h * 3));\n\t\t\tconst wHalf = w / 2;\n\t\t\tconst linePath = `M 0,${hHalf} H ${w}`;\n\t\t\tconst rate = ((h - 2) / 14).toString();\n\n\t\t\tlet nextOnTop = false;\n\t\t\tlet nextWidthTop = 0;\n\t\t\tlet nextWidthBottom = 0;\n\n\t\t\t//Recherche du current, 1er si pas trouvÃ©\n\t\t\tconst currentOffset = hist.histNodes.findIndex((src) => src.srcUri === editedSrc.srcUri);\n\t\t\tconst currentDate = new Date(currentOffset >= 0 ? hist.histNodes[currentOffset].srcDt : Date.now());\n\n\t\t\t//Ajout flÃ¨che\n\t\t\tthis.topLine.appendChild(<div/>);\n\t\t\tnextWidthTop += w;\n\t\t\tthis.middleLine.appendChild(JSX.asSvg(() => <svg id=\"frontArrowEnd\" width={w} height={h} fill=\"none\" stroke-width=\"2\" stroke=\"var(--alt2-color)\">\n\t\t\t\t<path d={`M 0,${hHalf} H ${hHalf}`}/>\n\t\t\t\t<path d={`M 1,2 ${hHalf},${hHalf} 1,${h - 2}`}/>\n\t\t\t</svg>));\n\t\t\tthis.bottomLine.appendChild(<div/>);\n\t\t\tnextWidthBottom += w;\n\n\t\t\tlet srcDiffFound = false;\n\t\t\tlet previousTime: string = \"\";\n\t\t\tfor (let i = 0; i < hist.histNodes.length; i++) {\n\t\t\t\tconst src = hist.histNodes[i];\n\t\t\t\t//Ajout de chaque noeud\n\t\t\t\tlet srcTime: string;\n\t\t\t\tif (i === currentOffset) {\n\t\t\t\t\tif (nextWidthTop > 0) (this.topLine.lastElementChild as HTMLElement).style.width = nextWidthTop + \"px\";\n\t\t\t\t\tthis.topLine.append(JSX.asSvg(() => <svg width={w} height={h}>\n\t\t\t\t\t\t\t<path transform={`translate(${wHalf - hHalf})`} d={`M 0,3 H ${h} L ${hHalf},${h}`} fill=\"var(--alt2-color)\"/>\n\t\t\t\t\t\t</svg>),\n\t\t\t\t\t\t<div/>);\n\t\t\t\t\tnextWidthTop = 0;\n\t\t\t\t\tif (nextWidthBottom > 0) (this.bottomLine.lastElementChild as HTMLElement).style.width = nextWidthBottom + \"px\";\n\t\t\t\t\tthis.bottomLine.append(JSX.asSvg(() => <svg width={w} height={h}>\n\t\t\t\t\t\t\t<path transform={`translate(${wHalf - hHalf})`} d={`M 0,${h - 3} H ${h} L ${hHalf},0`} fill=\"var(--alt2-color)\"/>\n\t\t\t\t\t\t</svg>),\n\t\t\t\t\t\t<div/>);\n\t\t\t\t\tnextWidthBottom = 0;\n\t\t\t\t\tnextOnTop = !nextOnTop;\n\t\t\t\t} else {\n\t\t\t\t\t//Time\n\t\t\t\t\tsrcTime = LOCALE.formatMinDuration(currentDate, new Date(src.srcDt), true, '+-');\n\t\t\t\t\tif (srcTime === previousTime) {\n\t\t\t\t\t\t//Pas de marque de temps\n\t\t\t\t\t\tsrcTime = \"\";\n\t\t\t\t\t\tnextWidthTop += w;\n\t\t\t\t\t\tnextWidthBottom += w;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Nouvelle marque de temps\n\t\t\t\t\t\tif (nextOnTop) {\n\t\t\t\t\t\t\tif (nextWidthTop > 0) (this.topLine.lastElementChild as HTMLElement).style.width = nextWidthTop + \"px\";\n\t\t\t\t\t\t\tthis.topLine.appendChild(<wed-histo-time class={i > currentOffset ? \"timeAfter\" : \"timeBefore\"}>{srcTime}</wed-histo-time>);\n\t\t\t\t\t\t\tnextWidthTop = w;\n\t\t\t\t\t\t\tnextWidthBottom += w;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (nextWidthBottom > 0) (this.bottomLine.lastElementChild as HTMLElement).style.width = nextWidthBottom + \"px\";\n\t\t\t\t\t\t\tthis.bottomLine.appendChild(<wed-histo-time class={i > currentOffset ? \"timeAfter\" : \"timeBefore\"}>{srcTime}</wed-histo-time>);\n\t\t\t\t\t\t\tnextWidthBottom = w;\n\t\t\t\t\t\t\tnextWidthTop += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpreviousTime = srcTime;\n\t\t\t\t\t\tnextOnTop = !nextOnTop;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Middle\n\t\t\t\tconst color = this.getColor(src.srcUser);\n\t\t\t\tconst shape = JSX.asSvg(() => {\n\t\t\t\t\tif (ITEM.isHistoryUri(src.srcUri)) {\n\t\t\t\t\t\tsrc.srcLiveUri = hist.liveNode.srcUri; //enrichissement des entrÃ©es d'historique\n\t\t\t\t\t\tif (src.metaFlag > 0) {\n\t\t\t\t\t\t\treturn <path transform={`matrix(${rate},0,0,${rate},${wHalf - hHalf},0)`} d=\"m 18.1,8.2 -5.25,2.25 0.7,5.3 L 9,12.35 4.76,15.6 5.43,9.93 0.5,7.9 5.74,5.65 5,0.35 9.6,3.77 13.83,0.5 13.2,6.18 Z\" stroke-width=\"2\" fill={color}\n\t\t\t\t\t\t\t\t\t\t\t\t\t stroke=\"var(--alt2-color)\"/>;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn <circle cx={wHalf} cy={hHalf} r={hHalf - 2} stroke-width=\"2\" fill={color} stroke=\"var(--alt2-color)\"/>;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (src.metaFlag > 0) {\n\t\t\t\t\t\treturn <g>\n\t\t\t\t\t\t\t<rect x={wHalf - hHalf + 1} y=\"0\" width={h} height={h} fill=\"var(--alt2-color)\"/>\n\t\t\t\t\t\t\t<path transform={`matrix(${rate},0,0,${rate},${wHalf - hHalf},0)`} d=\"m 18.1,8.2 -5.25,2.25 0.7,5.3 L 9,12.35 4.76,15.6 5.43,9.93 0.5,7.9 5.74,5.65 5,0.35 9.6,3.77 13.83,0.5 13.2,6.18 Z\" fill={color}/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn <rect x={wHalf - hHalf + 1} y=\"1\" width={h - 2} height={h - 2} stroke-width=\"2\" fill={color} stroke=\"var(--alt2-color)\"/>\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst point = <wed-histo-point>{JSX.asSvg(() => <svg width={srcTime ? w - 1 : w} height={h}>\n\t\t\t\t\t<path d={linePath} stroke-width=\"2\" stroke=\"var(--alt2-color)\"/>\n\t\t\t\t\t{shape}\n\t\t\t\t\t{src.metaComment ? <path transform={`matrix(${rate},0,0,${rate},${wHalf},0)`} d=\"M 1,5.7 5.8,0 8,1.9 3,7.4 0,9\" fill=\"var(--alt1-color)\"/> : undefined}\n\t\t\t\t</svg>)}</wed-histo-point> as HistoPoint;\n\t\t\t\tif (srcTime) point.classList.add(i > currentOffset ? \"timeAfter\" : \"timeBefore\");\n\t\t\t\tpoint.shortDesc = src;\n\n\t\t\t\tthis.middleLine.appendChild(point);\n\n\t\t\t\tif (this.srcDiff && !srcDiffFound && SRC.srcRef(src) === this.srcDiff) {\n\t\t\t\t\tthis._setDiffPoint(point);\n\t\t\t\t\tsrcDiffFound = true;\n\t\t\t\t}\n\t\t\t\tif (i === currentOffset) this.currentPoint = point;\n\t\t\t}\n\t\t\tif (!srcDiffFound && this.srcDiff) {\n\t\t\t\t//EntrÃ©e d'historique disparue, on efface\n\t\t\t\tthis.srcDiff = null;\n\t\t\t\tthis.execDiff();\n\t\t\t}\n\n\t\t\tif (nextWidthTop > 0) (this.topLine.lastElementChild as HTMLElement).style.width = nextWidthTop + \"px\";\n\t\t\tif (nextWidthBottom > 0) (this.bottomLine.lastElementChild as HTMLElement).style.width = nextWidthBottom + \"px\";\n\n\t\t\tif (this.currentPoint) {\n\t\t\t\tthis.currentPoint.focusable = true;\n\t\t\t\tthis.scrollLine.scrollToChild(this.currentPoint);\n\t\t\t\tif (hadFocus) this.currentPoint.focus();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tERROR.log(e);\n\t\t}\n\t}\n\n\tresetHisto() {\n\t\tthis.topLine.textContent = null;\n\t\tthis.middleLine.textContent = null;\n\t\tthis.bottomLine.textContent = null;\n\t}\n\n\tonKeyDownInLine(this: HTMLElement, ev: KeyboardEvent) {\n\t\tif (ACTION.isAnyControlPressed(ev)) return;\n\t\tconst histoPoint = ev.target as HistoPoint;\n\t\tswitch (ev.key) {\n\t\tcase \"ArrowLeft\":\n\t\t\tif (histoPoint.nextElementSibling instanceof HistoPoint) histoPoint.nextElementSibling.focus();\n\t\t\tbreak;\n\t\tcase \"ArrowRight\":\n\t\t\tif (histoPoint.previousElementSibling instanceof HistoPoint) histoPoint.previousElementSibling.focus();\n\t\t\tbreak;\n\t\tcase \"Enter\":\n\t\t\thistoPoint.click();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn;\n\t\t}\n\t\tev.preventDefault();\n\t\tev.stopPropagation();\n\t}\n\n\tonDblclickInLine(this: HTMLElement, ev: MouseEvent) {\n\t\tconst histoPoint = DOM.findParent(ev.target as Node, this, (n): n is HistoPoint => n instanceof HistoPoint);\n\t\tif (histoPoint) ShowHistoDiff.SINGLETON.executeIfAvailable(histoPoint, ev);\n\t}\n\n\tsetCurrentTooltip(tt: PopupTooltip) {\n\t\tthis._tt?.close();\n\t\tthis._tt = tt;\n\t}\n\n\tcloseTooltip(): void {\n\t\tif (this._tt) {\n\t\t\tthis._tt.close();\n\t\t\tthis._tt = null;\n\t\t}\n\t}\n\n\tasync execDiff(fullRefresh?: boolean): Promise<void> {\n\t\tif (fullRefresh) await this.updateHisto();\n\t\treturn callDiff(this.srcDiff, this, EXmlDiffMode.diff);\n\t}\n\n\tsetDiff(params: JHistoItemWedDiffBarParams | null): void {\n\t\tthis.setSrcDiff(params?.srcDiff);\n\t}\n\n\tsetSrcDiff(srcDiff: srcRef): void {\n\t\tthis.srcDiff = srcDiff;\n\t\tthis.execDiff();\n\t\tlet point: HistoPoint;\n\t\tif (this.middleLine.hasChildNodes()) {\n\t\t\t//line calculÃ©e\n\t\t\tfor (let ch of this.middleLine.children) {\n\t\t\t\tif (ch instanceof HistoPoint && SRC.srcRef(ch.shortDesc) === srcDiff) {\n\t\t\t\t\tpoint = ch;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._setDiffPoint(point);\n\t}\n\n\tsetDiffPoint(histoPoint: HistoPoint): void {\n\t\tthis._setDiffPoint(histoPoint);\n\t\tthis.srcDiff = histoPoint ? SRC.srcRef(histoPoint.shortDesc) : null;\n\t\tthis.execDiff();\n\t}\n\n\tprotected _setDiffPoint(histoPoint: HistoPoint): void {\n\t\tthis.diffPoint?.classList.remove(\"diff\");\n\t\tif (histoPoint) {\n\t\t\thistoPoint.classList.add(\"diff\");\n\t\t\tthis.diffPoint = histoPoint;\n\t\t\tconst dt = new Date(histoPoint.shortDesc.srcDt);\n\t\t\tconst date = dt.toLocaleDateString(\"fr\");\n\t\t\tconst time = dt.toLocaleTimeString(\"fr\");\n\t\t\tthis.diffSelView.textContent = ITEM.isHistoryUri(histoPoint.shortDesc.srcUri) ?\n\t\t\t\t`EntrÃ©e du ${date} Ã  ${time}` :\n\t\t\t\t\"Item courant (${date} Ã  ${time})\";\n\t\t} else {\n\t\t\tthis.diffSelView.textContent = null;\n\t\t}\n\t}\n\n\tbuildDiffParams(): JHistoItemWedDiffBarParams {\n\t\treturn {diffId: this.action.getId(), srcDiff: this.srcDiff}\n\t}\n\n\tprotected getColor(a: account) {\n\t\tif (!a) return \"white\";\n\t\tlet color = this.userColors.get(a);\n\t\tif (color) return color;\n\t\tcolor = COLORS[this.colorOffset++];\n\t\tthis.userColors.set(a, color);\n\t\tif (this.colorOffset >= COLORS.length) this.colorOffset = 1; // pas 0, on saute la couleur du user courant.\n\t\treturn color;\n\t}\n}\n\nconst COLORS = [\"#AAA\", \"#9370db\", \"#b22222\", \"#2e8b57\", \"#ff4500\", \"#3c64e6\", \"#ffe100\", \"#c99b61\", \"#b0e0e6\", \"#ff6293\", \"#9acd32\", \"#ffb6c1\", \"#20b2aa\", \"#0000c8\", \"#ffa500\", \"#789bf2\", \"#eedfb8\", \"#4d453a\"];\n\nREG.reg.registerSkin(\"wed-diff-histoitem\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\tc-arrow-scroll-box {\n\t\tjustify-content: end;\n\t}\n\n\t#lines {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin: 0 1em;\n\t}\n\n\t#top,\n\t#middle,\n\t#bottom {\n\t\theight: 1em;\n\t\tdisplay: flex;\n\t\tflex-direction: row-reverse;\n\t}\n\n\twed-histo-point {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tbox-sizing: border-box;\n\t}\n\n\twed-histo-point:hover,\n\twed-histo-point.hover {\n\t\toutline: 2px dotted var(--border-color);\n\t\tcursor: pointer;\n\t}\n\n\twed-histo-point:focus {\n\t\toutline: var(--focus-outline);\n\t}\n\n\twed-histo-point.diff {\n\t\tbackground-color: var(--alt2-color);\n\t}\n\n\twed-histo-point.timeAfter {\n\t\tborder-inline-end: 1px solid var(--color);\n\t}\n\n\twed-histo-point.timeBefore {\n\t\tborder-inline-start: 1px solid var(--color);\n\t}\n\n\twed-histo-time {\n\t\tbox-sizing: border-box;\n\t\tfont-size: 80%;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\tpadding: 0 1px;\n\t\tuser-select: none;\n\t}\n\n\twed-histo-time.timeAfter {\n\t\ttext-align: end;\n\t\tborder-inline-end: 1px solid var(--color);\n\t}\n\n\twed-histo-time.timeBefore {\n\t\tborder-inline-start: 1px solid var(--color);\n\t}\n\n\t#states {\n\t\tdisplay: flex;\n\t\theight: 1.5em;\n\t}\n\n\t#sel {\n\t\tflex: 1 1 auto;\n\t\tmargin: 0 1em;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t}\n\n\t#result {\n\t\tflex: 1 2 auto;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\tmargin: 0 1em;\n\t}\n`);\n\ncustomElements.define(\"wed-diff-histoitem\", HistoItemDiffPanel);\n\n\nexport class HistoPoint extends HTMLElement implements ITooltipPointer {\n\tshortDesc: JSrcFields;\n\tpopupTooltip?: PopupTooltip;\n\tstartBtn: ButtonToggle;\n\tcommentInput: HTMLInputElement;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.onclick = POPUP.promiseTooltip(this, this.onBuildTooltipPoint, {hoverAllowed: true});\n\t\tthis.onblur = (ev: FocusEvent) => {\n\t\t\tif (this.popupTooltip && !DOM.isAncestor(this.popupTooltip, ev.relatedTarget as HTMLElement)) this.popupTooltip.close();\n\t\t}\n\t}\n\n\tget histoPanel(): HistoItemDiffPanel {return DOMSH.findHost<HistoItemDiffPanel>(this)}\n\n\tget focusable() {return this.tabIndex === 0}\n\n\tset focusable(f: boolean) {\n\t\tif (f) {\n\t\t\tfor (let ch of this.parentElement.children) {\n\t\t\t\tif (ch !== this && ch.hasAttribute(\"tabindex\")) ch.removeAttribute(\"tabindex\");\n\t\t\t}\n\t\t\tthis.tabIndex = 0;\n\t\t} else if (this.hasAttribute(\"tabindex\")) {\n\t\t\tthis.removeAttribute(\"tabindex\");\n\t\t}\n\t}\n\n\tfocus(options?: FocusOptions): void {\n\t\tthis.focusable = true;\n\t\tsuper.focus(options);\n\t\tconst scroll = DOM.findParent(this, null, (n): n is ArrowScrollBox => n instanceof ArrowScrollBox);\n\t\tscroll?.scrollToChild(this);\n\t}\n\n\tonBuildTooltipPoint(this: void, point: HistoPoint, tooltip: PopupTooltip): IView | null {\n\t\t//if (ITEM.isHistoryUri(point.shortDesc.srcUri)) {\n\t\t//point.focus();\n\t\tconst panel = point.histoPanel;\n\t\t//console.log(\":::onBuildTooltipPoint\");\n\t\tconst dt = new Date(point.shortDesc.srcDt);\n\t\tconst date = dt.toLocaleDateString(\"fr\");\n\t\tconst time = dt.toLocaleTimeString(\"fr\");\n\t\tconst reg = panel.reg;\n\t\tconst actionsBar = <BarActions Ã®={{reg, actions: reg.getList(\"actions:item:histoEntry\"), actionContext: point, disableFullOverlay: true} as OBarActionsInit<HistoPoint>}/>;\n\t\ttooltip.addEventListener(\"c-show\", () => {\n\t\t\tpoint.classList.toggle(\"hover\", true);\n\t\t\tpanel.setCurrentTooltip(tooltip);\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tconst focusbale = DOMSH.findFlatNext(actionsBar, actionsBar, DOM.IS_focusable);\n\t\t\t\tif (focusbale) focusbale.focus();\n\t\t\t});\n\t\t});\n\t\ttooltip.addEventListener(\"c-beforeclose\", () => {\n\t\t\tpoint.classList.toggle(\"hover\", false);\n\t\t\tpanel.setCurrentTooltip(null);\n\t\t});\n\t\tpoint.startBtn = <ButtonToggle id=\"metaStar\" Ã®={{reg} as OButtonToggleInit} title=\"Lorsque l'entrÃ©e est marquÃ©e, elle est prÃ©servÃ©e des purges progressives automatiques\">\n\t\t\t{JSX.asSvg(() => <svg width=\"16\" height=\"16\">\n\t\t\t\t<path id=\"star\" stroke-width=\"1\" d=\"M 11.35,13.56 8,11.1 4.6,13.56 5,9.4 1.2,7.73 5,6 4.56,1.84 7.95,4.33 11.35,1.84 10.9,6 14.75,7.73 10.9,9.43 Z\"/>\n\t\t\t</svg>)}\n\t\t</ButtonToggle> as ButtonToggle;\n\t\tpoint.startBtn.toggleOn = point.shortDesc.metaFlag > 0;\n\t\tpoint.commentInput = <input id=\"metaComment\" value={point.shortDesc.metaComment || \"\"} placeholder=\"Note...\" title=\"Note associÃ©e Ã  cette entrÃ©e dans l'historique\"/> as HTMLInputElement;\n\t\tif (reg.hasPerm(\"action.wsp.histo#change.flag\")) {\n\t\t\tpoint.startBtn.onclick = point.updateMetaFlag.bind(point);\n\t\t} else {\n\t\t\tpoint.startBtn.disabled = true;\n\t\t}\n\t\tif (reg.hasPerm(\"action.wsp.histo#change.comment\")) {\n\t\t\tpoint.commentInput.onblur = point.updateMetaComment.bind(point);\n\t\t} else {\n\t\t\tpoint.commentInput.disabled = true;\n\t\t}\n\t\treturn <div>\n\t\t\t<ShadowJsx skin=\"wed-histo-point/tooltip\" skinOver=\"form-control-areas\">\n\t\t\t\t{actionsBar}\n\t\t\t\t<div id=\"metas\">\n\t\t\t\t\t{point.startBtn}\n\t\t\t\t\t{point.commentInput}\n\t\t\t\t</div>\n\t\t\t\t<div id=\"fields\">\n\t\t\t\t\t<div class=\"field\"><span class=\"label\">EntrÃ©e du :</span><span class=\"value\">{`${date} Ã  ${time}`}</span></div>\n\t\t\t\t\t<div class=\"field\"><span class=\"label\">ModifiÃ© par :</span><span class=\"value\"><UserRef Ã®={{nickOrAccount: point.shortDesc.srcUser, reg} as OUserRefInit}/></span></div>\n\t\t\t\t</div>\n\t\t\t</ShadowJsx>\n\t\t</div>;\n\t\t// }\n\t\t// return null;\n\t}\n\n\tasync updateMetaFlag() {\n\t\ttry {\n\t\t\tawait WSP.srcUpdateFields(this.histoPanel.reg.env.wsp, this, SRC.srcRef(this.shortDesc), {metaFlag: !this.shortDesc.metaFlag ? 1 : 0});\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"La modification de la marque de cette entrÃ©e a Ã©chouÃ©.\", e)\n\t\t}\n\t\treturn this.histoPanel.updateHisto();\n\t}\n\n\tasync updateMetaComment() {\n\t\tconst v = this.commentInput.value;\n\t\tconst metas: JSrcFields = {metaComment: v};\n\t\tif (!this.shortDesc.metaFlag && v && !this.shortDesc.metaComment) metas.metaFlag = 1; //Si meta nouvellement renseignÃ©, on flag aussi\n\t\ttry {\n\t\t\tawait WSP.srcUpdateFields(this.histoPanel.reg.env.wsp, this, SRC.srcRef(this.shortDesc), metas);\n\t\t} catch (e) {\n\t\t\tawait ERROR.report(\"L'enregistrement de la note pour cette entrÃ©e a Ã©chouÃ©.\", e)\n\t\t}\n\t\treturn this.histoPanel.updateHisto();\n\t}\n}\n\nREG.reg.registerSkin(\"wed-histo-point/tooltip\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\tc-bar-actions {\n\t\tborder-bottom: 1px solid var(--border-color\n\t\t);\n\t}\n\n\t#metas {\n\t\tdisplay: flex;\n\t\tmargin: .5em 0;\n\t}\n\n\t#metaStar {\n\t\tmargin: 1px;\n\t\tborder: none;\n\t}\n\n\t#star {\n\t\tstroke: var(--fade-color);\n\t\tfill: var(--fade-color);\n\t\topacity: .6;\n\t}\n\n\t#metaStar[aria-pressed=true] #star {\n\t\tstroke: var(--alt2-color);\n\t\tfill: var(--wsp-item-histo-star-bgcolor, #ffea00);\n\t\topacity: unset;\n\t}\n\n\t#metaComment {\n\t\tflex: 1;\n\t\tmin-width: 8em;\n\t\tmax-width: 70vw;\n\t\tmargin: 1px;\n\t}\n\n\t::placeholder {\n\t\tcolor: var(--fade-color);\n\t\tletter-spacing: 2px;\n\t\tfont-size: var(--label-size);\n\t\tfont-style: italic;\n\t}\n\n\t#fields {\n\t\tdisplay: grid;\n\t\tmin-width: 0;\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-row-gap: .5em;\n\t\tgrid-column-gap: 1em;\n\t\tpadding: .5em;\n\t}\n\n\t.field {\n\t\tdisplay: contents;\n\t}\n\n\t.value {\n\t\tcolor: var(--alt2-color);\n\t\tuser-select: text;\n\t}\n`);\n\ncustomElements.define(\"wed-histo-point\", HistoPoint);\n\nclass ShowHistoDiff extends Action<HistoPoint> {\n\n\tstatic SINGLETON = new ShowHistoDiff();\n\n\tconstructor() {\n\t\tsuper(\"histoDiff\");\n\t\tthis._label = \"Afficher les diffÃ©rences\";\n\t\tthis._icon = \"/@skin@/edit/wed/diff/diff.svg\";\n\t}\n\n\tisEnabled(ctx: HistoPoint): boolean {\n\t\tconst house = ctx.histoPanel.wedMgr.docHolder.house as IWspXmlHouse;\n\t\tif (!house) return false;\n\t\tif (SRC.srcRef(ctx.shortDesc) === SRC.srcRef(house.srcFields)) return false; //c'est l'item courant, pas de diff avec lui-mÃªme !\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\texecute(ctx: HistoPoint, ev?: Event): any | \"noPreventDefault\" | \"noStopPropag\" | \"noStopPropag-noPreventDefault\" {\n\t\tconst panel = ctx.histoPanel;\n\t\tpanel.setDiffPoint(ctx);\n\t\tpanel.closeTooltip();\n\t}\n}\n\nREG.reg.addToList(\"actions:item:histoEntry\", \"histoDiff\", 1, ShowHistoDiff.SINGLETON);\n\n\nclass DeleteHistoEntry extends Action<HistoPoint> {\n\n\tstatic SINGLETON = new DeleteHistoEntry();\n\n\tconstructor() {\n\t\tsuper(\"delEntry\");\n\t\tthis._label = \"Supprimer dÃ©finitivement cette entrÃ©e\";\n\t\tthis._icon = \"/@skin@/commons/icons/delete.svg\";\n\t\tthis._group = \"delete\";\n\t}\n\n\tisEnabled(ctx: HistoPoint): boolean {\n\t\tif (!ITEM.isHistoryUri(ctx.shortDesc.srcUri)) return false; //c'est l'item live.\n\t\tif (ctx.histoPanel.reg.env.longDesc.srcUri === ctx.shortDesc.srcUri) return false; //c'est l'item courant.\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tcheckObjectRootPerm(ctx: HistoPoint, perms?: string | string[]): boolean {\n\t\tconst histoPanel = ctx.histoPanel;\n\t\treturn histoPanel.reg.hasPerm(ctx.shortDesc.srcUser === histoPanel.reg.env.securityCtx.account ? \"action.wsp.histo#deletePermanently.mine\" : \"action.wsp.histo#deletePermanently\");\n\t}\n\n\tasync execute(ctx: HistoPoint, ev?: Event) {\n\t\tconst panel = ctx.histoPanel;\n\t\tpanel.closeTooltip();\n\t\tconst dt = new Date(ctx.shortDesc.srcDt);\n\t\tconst date = dt.toLocaleDateString(\"fr\");\n\t\tconst time = dt.toLocaleTimeString(\"fr\");\n\t\tif (await POPUP.confirm(`Souhaitez-vous vraiment supprimer dÃ©finitivement cette entrÃ©e d'historique du ${date} Ã  ${time} ?`, ctx, {okLbl: \"Supprimer dÃ©finitivement\"})) {\n\t\t\tawait WSP.srcDeletePermanently(panel.reg.env.wsp, ctx, [ctx.shortDesc.srcUri]);\n\t\t\treturn panel.updateHisto();\n\t\t}\n\t}\n}\n\n\nREG.reg.addToList(\"actions:item:histoEntry\", \"delEntry\", 1, DeleteHistoEntry.SINGLETON);\n\n\nclass OpenHistoEntry extends Action<HistoPoint> {\n\n\tstatic SINGLETON = new OpenHistoEntry();\n\n\tconstructor() {\n\t\tsuper(\"openEntry\");\n\t\tthis._label = \"Visualiser cette entrÃ©e\";\n\t\tthis._icon = \"/@skin@/wsp/actions/openItem.svg\";\n\t\tthis._group = \"open\";\n\t}\n\n\tisEnabled(ctx: HistoPoint): boolean {\n\t\tif (!ITEM.isHistoryUri(ctx.shortDesc.srcUri)) return false; //c'est l'item live.\n\t\tif (ctx.histoPanel.reg.env.longDesc.srcUri === ctx.shortDesc.srcUri) return false; //c'est l'item courant.\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tasync execute(ctx: HistoPoint, ev?: Event) {\n\t\tconst panel = ctx.histoPanel;\n\t\tpanel.closeTooltip();\n\n\t\tconst title = ITEM.getItemUriLabel(ctx.shortDesc.srcUri, ctx.shortDesc);\n\t\tconst dt = new Date(ctx.shortDesc.srcDt);\n\t\tconst date = dt.toLocaleDateString(\"fr\");\n\t\tconst time = dt.toLocaleTimeString(\"fr\");\n\n\t\tif (!_ItemIsolated) _ItemIsolated = (await import(\"back/wsp/views/itemIsolated.js\")).ItemIsolated;\n\n\t\tPOPUP.showDialog(new _ItemIsolated().initialize({\n\t\t\t\treg: ctx.histoPanel.reg.env.wsp.reg,\n\t\t\t\tsrcRef: SRC.srcRef(ctx.shortDesc)\n\t\t\t}),\n\t\t\tctx,\n\t\t\t{\n\t\t\t\tinitWidth: \"80%\",\n\t\t\t\tinitHeight: \"80%\",\n\t\t\t\ttitleBar: {barLabel: {label: `${title} du ${date} Ã  ${time}`}},\n\t\t\t\tresizer: {}\n\t\t\t})\n\t}\n}\n\nlet _ItemIsolated: typeof ItemIsolated;\n\n\nREG.reg.addToList(\"actions:item:histoEntry\", \"openEntry\", 1, OpenHistoEntry.SINGLETON);\n\n\n/**\n *\n */\nexport class OtherItemDiffPanel extends DiffPanelBase<IItemUiEnv> {\n\n\taction: OtherItemDiffAction;\n\n\tdiffMode: EXmlDiffMode;\n\tdiffModeBtn: ButtonActions<OtherItemDiffPanel>;\n\tsrcDiff: SrcPointer;\n\n\tinitPanel(action: OtherItemDiffAction, bar: IWedDiffBar): this {\n\t\tthis._initPanel(action, bar);\n\t\tthis.diffMode = EXmlDiffMode.diff;\n\t\tthis.srcDiff = new SrcPointer().initialize({\n\t\t\treg: this.reg as IReg<IWspUiEnv>,\n\t\t\tdefaultAction: SrcPointerFastSelect.SINGLETON,\n\t\t\tactionsLists: [\"actions:wsp:wed:otherItemDiff\", \"actions:wsp:shortDesc\"],\n\t\t\taccelKeysLists: [\"accelkeys:wsp:wed:otherItemDiff\", \"accelkeys:wsp:shortDesc\"],\n\t\t\tdraggable: true,\n\t\t\tdropable: true\n\t\t});\n\t\tthis.srcDiff.onSrcRefChange.add(this.onSrcDiffChange);\n\t\tthis.diffModeBtn = new ButtonActions<OtherItemDiffPanel>().initialize({\n\t\t\treg: this.reg,\n\t\t\tlabel: diffModeActions[0].getLabel(this),\n\t\t\tactions: diffModeActions,\n\t\t\tactionContext: this\n\t\t});\n\t\tthis.shadowRoot.append(\n\t\t\tthis.srcDiff,\n\t\t\tthis.result,\n\t\t\tthis.diffModeBtn\n\t\t);\n\t\treturn this;\n\t}\n\n\tsetDiff(params: JOtherItemWedDiffBarParams | null): void {\n\t\tthis.srcDiff.setSrcRef(params?.srcDiff);\n\t\tif (params) this.diffMode = params.mode || EXmlDiffMode.diff;\n\t\tdiffModeActions[this.diffMode === EXmlDiffMode.diff ? 0 : 1].execute(this);\n\t}\n\n\tbuildDiffParams(): JOtherItemWedDiffBarParams {\n\t\treturn {diffId: this.action.getId(), srcDiff: this.srcDiff.srcRef, mode: this.diffMode}\n\t}\n\n\tasync execDiff(): Promise<void> {\n\t\tconst sd = this.srcDiff.shortDesc;\n\t\tif (sd) {\n\t\t\tconst itemType = this.reg.env.wsp.wspMetaUi?.getItemType(sd.itModel);\n\t\t\tif (itemType) return callDiff(itemType.getMainXmlSrcUri(sd), this, this.diffMode);\n\t\t}\n\t\treturn callDiff(null, this, this.diffMode);\n\t}\n\n\tprotected onSrcDiffChange(this: void, drawer: SrcPointer) {\n\t\tDOMSH.findHost<OtherItemDiffPanel>(drawer).execDiff();\n\t}\n}\n\nfunction execDiff(this: Action<OtherItemDiffPanel>, ctx: OtherItemDiffPanel) {\n\tctx.diffMode = this.getId() === \"diff\" ? EXmlDiffMode.diff : EXmlDiffMode.patch;\n\tctx.diffModeBtn.label = this.getLabel(ctx);\n\tif (!ctx.srcDiff.fetchPending) ctx.execDiff();\n}\n\nconst diffModeActions = [\n\tnew Action<OtherItemDiffPanel>(\"diff\").setLabel(\"Mode Ã©carts\").setExecute(execDiff),\n\tnew Action<OtherItemDiffPanel>(\"patch\").setLabel(\"Mode contributions\").setExecute(execDiff)\n];\n\n\nREG.reg.registerSkin(\"wed-diff-otheritem\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\talign-items: center;\n\t}\n\n\twsp-src-pointer {\n\t\tflex: 1 1 auto;\n\t\talign-items: center;\n\t}\n\n\t#result {\n\t\tflex: 1 1 auto;\n\t}\n`);\n\nfunction addAction(action: Action<IShortDescCtx>, accel?: string) {\n\tREG.reg.addToList(\"actions:wsp:wed:otherItemDiff\", action.getId(), 1, action);\n\tif (accel) REG.reg.addToList(\"accelkeys:wsp:wed:otherItemDiff\", accel, 1, action);\n}\n\naddAction(SrcPointerFastSelect.SINGLETON, \"Enter\");\naddAction(SrcPointerPaste.SINGLETON, \"v-accel\");\naddAction(new SrcPointerErase(), \"Delete\");\n\ncustomElements.define(\"wed-diff-otheritem\", OtherItemDiffPanel);\n\n/**\n *\n * @param srcRef\n *  si \"\" pas de source de diff, mais un simple refresh pourait en proposer un\n *  si null pas de source de diff et aucune actuellement disponible (action user de sÃ©lection nÃ©cessaire).\n */\nexport async function callDiff(srcRef: srcRef | \"\" | null, panel: DiffPanelBase<IItemUiEnv>, mode: EXmlDiffMode) {\n\ttry {\n\t\tif (srcRef) {\n\t\t\tpanel.updateDiffResult(\"computing\");\n\t\t\tconst dom = await fetchDiff(panel.wedMgr, panel.reg.env.wsp.code, srcRef);\n\t\t\t//console.log(\":::execDiff:::\", dom);\n\t\t\tif (dom) {\n\t\t\t\tconst session = new XmlDiffSession(dom, mode, panel.wedMgr.docHolder.getSubRoot());\n\t\t\t\tpanel.wedMgr.docHolder.setDiffSession(session);\n\t\t\t\tpanel.updateDiffResult(session.diffFound);\n\t\t\t} else {\n\t\t\t\tpanel.wedMgr.docHolder.setDiffSession(null);\n\t\t\t\tpanel.updateDiffResult(\"error\");\n\t\t\t}\n\t\t} else {\n\t\t\tpanel.wedMgr.docHolder.setDiffSession(null);\n\t\t\tpanel.updateDiffResult(srcRef === \"\" ? \"computable\" : null);\n\t\t}\n\t} catch (e) {\n\t\tERROR.log(\"Diff failed\", e);\n\t\tpanel.wedMgr.docHolder.setDiffSession(null);\n\t\tpanel.updateDiffResult(\"error\");\n\t}\n}\n\nasync function fetchDiff(wedMgr: WedMgr, candidateWspCd: wspCd, candidateRef: srcRef | ESpecialCandidateUri, tries?: number): Promise<Document> {\n\tconst reg = wedMgr.reg;\n\tconst wsp = reg.env.wsp;\n\tconst srcFields = (wedMgr.docHolder.house as IWspXmlHouse).srcFields;\n\tconst srcRef = ITEM.isHistoryOrTrashUri(srcFields.srcUri) ? srcFields.srcUri : SRC.srcRef(srcFields);\n\tconst wspRef = WSP.buildWspRef(wsp.code, srcRef);\n\tif (reg.env.place.isHouseDirty(wspRef)) await reg.env.place.wspsLive.saveHouse(wspRef);\n\tconst doc = await WSP.fetchDiff(reg.env.wsp, reg.env.uiRoot, srcRef, candidateWspCd, candidateRef);\n\tconst sd = reg.env.place.wspsLive.getHouseIfFetched(wspRef)?.srcFields;\n\tif (sd && (sd.srcStamp ? sd.srcStamp !== doc.documentElement.getAttribute(\"srcStamp\") : sd.srcDt !== Number.parseInt(doc.documentElement.getAttribute(\"srcDt\")))) {\n\t\t//La base comparÃ©e n'est pas en phase avec notre item actuel.\n\t\tif (tries === 2) {\n\t\t\t//toujours pas bon aprÃ¨s un 1er refetch, on tente un reload complet de la house.\n\t\t\treg.env.place.wspsLive.reloadHouse(wspRef);\n\t\t\treturn null; //l'ihm est reconstruit le diff sera rÃ©appelÃ© aprÃ¨s redraw.\n\t\t}\n\t\t// if (tries > 3) { JAMAIS appelÃ© car quand tries === 2, car refresh ui complet.\n\t\t// \tERROR.log(\"fetchDiff: item out of sync after 3 tries\");\n\t\t// \tPOPUP.showNotifError(\"Impossible d'effectuer la comparaison\", reg.env.uiRoot);\n\t\t// \treturn null;\n\t\t// }\n\t\treturn fetchDiff(wedMgr, candidateWspCd, candidateRef, (tries || 0) + 1);\n\t}\n\treturn doc;\n}\n"]}