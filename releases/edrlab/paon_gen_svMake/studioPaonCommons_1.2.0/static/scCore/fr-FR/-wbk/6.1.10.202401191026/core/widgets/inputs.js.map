{"version":3,"sources":["/@back@/core/widgets/inputs.tsx"],"names":["BaseElementAsync","MsgLabel","MxFormElement","REG","DOM","JSX","POPUP","UsersGrid","EUserType","USER","UserRef","DOMSH","UserSelector","Action","InputUserPanel","[object Object]","this","_setAccounts","value","vals","_setUsers","undefined","initializedAsync","then","_refreshUi","forcedIniUsers","_forcedIniUsers","length","reg","env","universe","useUsers","getUserSet","sort","sortUsers","newAccounts","forEach","account","findIndex","entry","push","concat","disabled","setAttrBool","_preview","init","findReg","_params","Object","assign","userCard","_msg","createElement","hidden","editBox","class","appendChild","actsBox","onclick","onAddUsers","title","onSelectUser","_attach","localName","addEventListener","async","ev","key","findDocumentOrShadowRoot","activeElement","indeterminate","stopPropagation","dispathChangeEvent","tabIndex","_initializeForm","_pendingRefresh","_mustRefresh","currentRefresh","Date","now","forcedMsg","innerHTML","users","_a","getUsersValues","u","Ã®","user","withTitle","hideRemButton","onRemUser","label","emptySelectionMsg","_refreshValidity","call","_lastSelector","selectWithConfirm","initialize","buttonLabel","userGrid","usersSrv","grid","selType","filterType","filterTypeInputVisibility","preserveSelectionOnFilter","usersGridInit","selectAndCloseOnDblClick","usersSelectorInit","_lastSelectorGrid","defaultAction","setLabel","setExecute","ctx","_openPopup","opened","close","getSelectedUsers","disableAutoSearchOnInit","razFilters","stopImmediatePropagation","me","findHost","prevVal","userSelector","makeSelector","doSearchUsers","selectByJUser","showMenuFromEvent","initWidth","onNextClose","isAccountsListEquals","focus","setContextualUserFilter","indexOf","remIdx","splice","userRef","previousElementSibling","classList","contains","nickOrAccount","remAccIdx","remUsersIdx","_b","required","setValidity","valueMissing","errorMsgs","empty","tooMany","dispatchEvent","CustomEvent","bubbles","cancelable","u1","u2","getPrimaryName","localeCompare","l1","l2","registerSkin","customElements","define"],"mappings":"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","sourcesContent":["import {BaseElementAsync, MsgLabel, OMsgLabelInit} from \"back/commons/basis\";\nimport {MxFormElement, OFormElementInit} from \"lib/commons/forms\";\nimport {IReg, REG} from \"lib/commons/registry\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {Button} from \"back/commons/widgets/buttons\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {OUsersGridInit, UsersGrid} from \"back/core/widgets/usersGrid\";\nimport {EUserType, JUser, USER} from \"lib/core/user\";\nimport {ICoreUniverseEnv} from \"lib/core/universe\";\nimport {IPopupable} from \"back/commons/widgets/popupable\";\nimport {OUserRefInit, UserRef} from \"back/core/widgets/userRef\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {OUserSelectorInit, UserSelector} from \"back/core/dialogs/userSelector\";\nimport {Action} from \"lib/commons/actions\";\n\n\nexport interface OInputUserInit<GRIDACTCTX> extends OFormElementInit {\n\treg: IReg<ICoreUniverseEnv>;\n\t/** Valeur initiale du champ */\n\tvalue?: string;\n\t/** SÃ©lection des utilisateurs avec confirmation. false par dÃ©faut */\n\tselectWithConfirm?: boolean;\n\t/** le btn de suppression est masquÃ©. La capacitÃ© de suppression est donc gÃ©rÃ©e en amont */\n\thideRemButton?: boolean;\n\t/** CardinalitÃ©. single par dÃ©faut */\n\tuserCard?: 'single' | 'multi';\n\t/** Message affichÃ© lorsqu'aucune valeur n'est sÃ©lectionnÃ© */\n\temptySelectionMsg?: string;\n\terrorMsgs?: {\n\t\t/** Message d'erreur affichÃ© lorsqu'aucune valeur n'est sÃ©lectionnÃ© si l'input est requis */\n\t\t'empty'?: string,\n\t\t/** Message d'erreur affichÃ© en useCard single, avec plusieurs entrÃ©es dÃ©finies */\n\t\t'tooMany'?: string,\n\t}\n\t/** Init du usersGrid permettant de sÃ©lectionner l'utilisateur/groupe */\n\tusersGridInit?: OUsersGridInit<GRIDACTCTX>,\n\n\t/** Init du usersSelector (dans le mode selectWithConfirm=true) */\n\tusersSelectorInit?: OUserSelectorInit,\n}\n\n\n/**\n * Input de sÃ©lection d'un/des utilisateurs\n */\nexport class InputUserPanel<GRIDACTCTX> extends MxFormElement(BaseElementAsync) {\n\n\treg: IReg<ICoreUniverseEnv>;\n\n\tprotected _preview: HTMLDivElement;\n\n\tprotected _msg: MsgLabel;\n\n\tprotected _editBtn: Button;\n\n\tprotected _setAccounts: string[] = [];\n\n\tprotected _setUsers: JUser[] | null;\n\n\tprotected _forcedIniUsers: JUser[] | null;\n\n\tprotected _params: OInputUserInit<GRIDACTCTX>;\n\n\tprotected _usersGrid: UsersGrid<GRIDACTCTX>;\n\n\t/** Popup actuellement ouvert */\n\tprotected _openPopup: IPopupable<JUser[]> | null;\n\n\tname: string;\n\n\tget value(): string[] {\n\t\treturn this._setAccounts;\n\t}\n\n\tset value(vals: string[]) {\n\t\tthis._setAccounts = vals || [];\n\t\tthis._setUsers = undefined;\n\t\tthis.initializedAsync.then(() => {\n\t\t\tthis._refreshUi();\n\t\t});\n\t}\n\n\t/**\n\t * Cette liste d'utilisateurs correspond Ã  l'Ã©tat initial utilisÃ© pour les affectations hÃ©tÃ©rogÃ¨nes.\n\t * Cet Ã©tat initial peut Ã©volue en cas de suppression, ou d'ajout d'un utilisateur prÃ©sent dans cette liste\n\t * ... mais reste inchangÃ© dans les autres cas (ajout d'un nouvel utlisteur)\n\t */\n\tget forcedIniUsers(): JUser[] {\n\t\treturn this._forcedIniUsers;\n\t}\n\n\tset forcedIniUsers(vals: JUser[]) {\n\t\tthis._forcedIniUsers = vals || [];\n\t\tthis.initializedAsync.then(() => {\n\t\t\tthis._refreshUi();\n\t\t});\n\t}\n\n\t/** RÃ©sout la liste courante des objets user */\n\tprivate async getUsersValues(): Promise<JUser[] | null> {\n\t\tif (!this._setAccounts || this._setAccounts.length == 0) return;\n\t\tif (!this._setUsers) {\n\t\t\tthis._setUsers = await this.reg.env.universe.useUsers.getUserSet(this._setAccounts, true);\n\t\t\tthis._setUsers.sort(this.sortUsers);\n\t\t} else if (this._setUsers.length != this._setAccounts.length) {\n\t\t\tconst newAccounts: string[] = [];\n\t\t\tthis._setAccounts.forEach((account) => {\n\t\t\t\tif (!this._setUsers.findIndex((entry) => entry.account === account))\n\t\t\t\t\tnewAccounts.push(account)\n\t\t\t});\n\t\t\tthis._setUsers = this._setUsers.concat(await this.reg.env.universe.useUsers.getUserSet(newAccounts, true));\n\t\t\tthis._setUsers.sort(this.sortUsers);\n\t\t}\n\t\treturn this._setUsers;\n\t}\n\n\tformDisabledCallback(disabled: boolean) {\n\t\tDOM.setAttrBool(this._preview, \"disabled\", disabled);\n\t}\n\n\tprotected async _initialize(init: OInputUserInit<GRIDACTCTX>): Promise<void> {\n\t\tthis.reg = this.findReg(init);\n\t\tthis._params = Object.assign({\n\t\t\tuserCard: \"single\",\n\t\t} as OInputUserInit<GRIDACTCTX>, init);\n\n\t\tDOM.setAttrBool(this, \"data-card-isSingle\", this._params.userCard === 'single');\n\t\tDOM.setAttrBool(this, \"data-card-isMulti\", this._params.userCard === 'multi');\n\n\t\tthis._msg = <c-msg hidden/> as MsgLabel;\n\t\tconst editBox = <div class=\"inputBox\"/> as HTMLDivElement;\n\t\tthis._preview = editBox.appendChild(<div class=\"preview\"/>) as HTMLDivElement;\n\n\t\tconst actsBox = editBox.appendChild(<div class=\"acts\"/>) as HTMLDivElement;\n\t\tif (this._params.userCard == 'multi') {\n\t\t\tactsBox.appendChild(<button class=\"addUsers\" onclick={this.onAddUsers} title=\"Ajouter des utilisateurs\"/>)\n\t\t\tthis._preview.onclick = this.onAddUsers;\n\t\t} else {\n\t\t\tactsBox.appendChild(<button class=\"selectUser\" onclick={this.onSelectUser} title=\"SÃ©lectionner l'utilisateur\"/>);\n\t\t\tthis._preview.onclick = this.onSelectUser;\n\t\t}\n\n\t\tthis._attach(this.localName, init, editBox, this._msg);\n\n\t\tthis.addEventListener('keydown', async function (this: InputUserPanel<GRIDACTCTX>, ev: KeyboardEvent) {\n\t\t\tif (!this.disabled && (ev.key === 'Delete' || ev.key === 'Backspace') && this === DOMSH.findDocumentOrShadowRoot(this).activeElement) {\n\t\t\t\tthis.indeterminate = true;\n\t\t\t\tthis.value = null;\n\t\t\t\tev.stopPropagation();\n\t\t\t\tthis.dispathChangeEvent();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.tabIndex = 0;\n\t\tthis._initializeForm(init);\n\t\tawait this._refreshUi();\n\t}\n\n\t/** Recalcul complet UI */\n\tprivate _pendingRefresh: number | undefined;\n\tprivate _mustRefresh: boolean;\n\n\tprotected async _refreshUi() {\n\t\tif (this._pendingRefresh) {\n\t\t\tthis._mustRefresh = true;\n\t\t\treturn;\n\t\t} else\n\t\t\tthis._mustRefresh = false;\n\n\t\tconst currentRefresh = this._pendingRefresh = Date.now();\n\n\t\ttry {\n\t\t\tconst forcedMsg = \"Compte imposÃ© par le contexte. Sans directive explicite, il ne sera ni ajoutÃ©, ni supprimÃ©\";\n\t\t\tthis._preview.innerHTML = '';\n\t\t\tconst users = this.value?.length ? await this.getUsersValues() : null;\n\t\t\tif (currentRefresh !== this._pendingRefresh) return;//raceCond\n\t\t\tif (!this.disabled) {\n\t\t\t\tif ((users && users.length > 0) || (this.forcedIniUsers && this.forcedIniUsers.length) > 0) {\n\t\t\t\t\tif (this.forcedIniUsers) {\n\t\t\t\t\t\tfor (const u of this.forcedIniUsers) {\n\t\t\t\t\t\t\tconst entry = this._preview.appendChild(<div class=\"user\">\n\t\t\t\t\t\t\t\t<UserRef class=\"forced\" title={forcedMsg} Ã®={{reg: this.reg, user: u, withTitle: false} as OUserRefInit}/>\n\t\t\t\t\t\t\t</div>);\n\t\t\t\t\t\t\tif (!this._params.hideRemButton) entry.appendChild(<button class=\"remUser\" onclick={this.onRemUser} title=\"Supprimer\"/>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (users) {\n\t\t\t\t\t\tfor (const u of users) {\n\t\t\t\t\t\t\t//Si pb config card=single mais >1 users, on garde le bouton suppr dans tous les cas.\n\t\t\t\t\t\t\tconst entry = this._preview.appendChild(<div class=\"user\">\n\t\t\t\t\t\t\t\t<UserRef Ã®={{reg: this.reg, user: u} as OUserRefInit}/>\n\t\t\t\t\t\t\t</div>);\n\t\t\t\t\t\t\tif (!this._params.hideRemButton) entry.appendChild(<button class=\"remUser\" onclick={this.onRemUser} title=\"Supprimer\"/>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tthis._preview.appendChild(<MsgLabel Ã®={{label: (\"emptySelectionMsg\" in this._params) ? this._params.emptySelectionMsg : \"non dÃ©fini\"} as OMsgLabelInit}/>);\n\t\t\t} else {\n\t\t\t\t//Pas Ã©ditable\n\t\t\t\tif ((users && users.length > 0) || (this.forcedIniUsers && this.forcedIniUsers.length > 0)) {\n\t\t\t\t\tif (this.forcedIniUsers)\n\t\t\t\t\t\tfor (const u of this.forcedIniUsers) {\n\t\t\t\t\t\t\tthis._preview.appendChild(<UserRef class=\"forced\" title={forcedMsg} Ã®={{reg: this.reg, user: u, withTitle: false} as OUserRefInit}/>);\n\t\t\t\t\t\t}\n\t\t\t\t\tif (users)\n\t\t\t\t\t\tfor (const u of users) {\n\t\t\t\t\t\t\tthis._preview.appendChild(<UserRef Ã®={{reg: this.reg, user: u} as OUserRefInit}/>);\n\t\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tthis._preview.appendChild(<MsgLabel Ã®={{label: (\"emptySelectionMsg\" in this._params) ? this._params.emptySelectionMsg : \"non dÃ©fini\"} as OMsgLabelInit}/>);\n\t\t\t}\n\t\t} finally {\n\t\t\tif (currentRefresh === this._pendingRefresh)\n\t\t\t\tthis._pendingRefresh = null;\n\t\t}\n\n\t\t// Une demande de refresh est arrivÃ©e le temps de ce refresh => on relance un refresh\n\t\tif (this._mustRefresh) {\n\t\t\tthis._mustRefresh = false;\n\t\t\tthis._pendingRefresh = null;\n\t\t\tawait this._refreshUi();\n\t\t} else\n\t\t\tthis._refreshValidity();\n\t}\n\n\t/**\n\t * Affiche le widget d'ajout de user\n\t */\n\tpublic addUser() {\n\t\tif (this._params.userCard == 'multi')\n\t\t\tthis.onAddUsers.call(this);\n\t\telse\n\t\t\tthis.onSelectUser.call(this);\n\t}\n\n\t/**\n\t * Selecteur de user\n\t * La mÃ©thode \"doSearchUsers()\" DOIT Ãªtre appelÃ©e explicitement pour rafraichir la liste des users proposÃ©s par ce selector\n\t * @private\n\t */\n\tprivate async makeSelector(): Promise<UsersGrid<any>> {\n\t\t//{selType: this._params.userCard === \"single\" ? \"mono\" : \"multi\"}\n\t\tif (!this._lastSelector) {\n\t\t\tif (this._params.selectWithConfirm) {\n\t\t\t\tthis._lastSelector = new UserSelector().initialize(Object.assign({\n\t\t\t\t\treg: this.reg,\n\t\t\t\t\tbuttonLabel: this._params.userCard === \"single\" ? \"SÃ©lectionner\" : \"Ajouter\",\n\t\t\t\t\tuserGrid: Object.assign({\n\t\t\t\t\t\tusersSrv: this.reg.env.universe.useUsers,\n\t\t\t\t\t\tgrid: {selType: this._params.userCard === \"single\" ? \"mono\" : \"multi\"},\n\t\t\t\t\t\tfilterType: EUserType.user,\n\t\t\t\t\t\tfilterTypeInputVisibility: false,\n\t\t\t\t\t\tpreserveSelectionOnFilter: true,\n\t\t\t\t\t} as OUsersGridInit<GRIDACTCTX>, this._params.usersGridInit),\n\t\t\t\t\tselectAndCloseOnDblClick: true\n\t\t\t\t} as OUserSelectorInit, this._params.usersSelectorInit));\n\t\t\t\tthis._lastSelectorGrid = (this._lastSelector as UserSelector).userGrid;\n\n\n\t\t\t} else {\n\t\t\t\tthis._lastSelectorGrid = this._lastSelector = new UsersGrid().initialize(Object.assign({\n\t\t\t\t\tusersSrv: this.reg.env.universe.useUsers,\n\t\t\t\t\tgrid: \"mono\",\n\t\t\t\t\tdefaultAction: new Action().setLabel(\"SÃ©lectionner\")\n\t\t\t\t\t\t.setExecute((ctx)=> {\n\t\t\t\t\t\t\tif (this._openPopup && this._openPopup.opened) this._openPopup.close(this._lastSelectorGrid.getSelectedUsers())\n\t\t\t\t\t\t}),\n\t\t\t\t\tfilterType: EUserType.user,\n\t\t\t\t\tfilterTypeInputVisibility: false,\n\t\t\t\t\tdisableAutoSearchOnInit: true,\n\t\t\t\t} as OUsersGridInit<GRIDACTCTX>, this._params.usersGridInit)) as UsersGrid<GRIDACTCTX>;\n\t\t\t\t//await this._lastSelector.initializedAsync;\n\t\t\t}\n\t\t} else\n\t\t\tawait this._lastSelectorGrid.razFilters();\n\t\treturn this._lastSelectorGrid;\n\t}\n\n\tprivate _lastSelector: HTMLElement;\n\tprivate _lastSelectorGrid: UsersGrid<any>;\n\n\t/**\n\t * SÃ©lection d'un *unique* utilisateur\n\t * @param ev\n\t * @protected\n\t */\n\n\tprivate async onSelectUser(this: HTMLButtonElement | InputUserPanel<any>, ev?: Event) {\n\t\tev?.stopImmediatePropagation();\n\t\tconst me = this instanceof InputUserPanel ? this : DOMSH.findHost<InputUserPanel<any>>(this);\n\t\tif (me.disabled) return;\n\t\tconst prevVal = me._setAccounts;\n\n\t\tconst userSelector = await me.makeSelector();\n\t\tawait userSelector.doSearchUsers();\n\t\tuserSelector.selectByJUser(me._setUsers || [], true);\n\n\t\tme._openPopup = POPUP.showMenuFromEvent(me._lastSelector, ev || me, me, null, {initWidth: '20em'});\n\t\tconst users = await me._openPopup.onNextClose() as JUser[];\n\t\tme._openPopup = null;\n\n\t\tif (users && users.length > 0) {\n\t\t\tme._setAccounts = [];\n\t\t\tme._forcedIniUsers = [];\n\t\t\tusers.forEach(value => me._setAccounts.push(value.account));\n\t\t\t/* VÃ©rification de l'Ã©tat dirty par comparaison du JSON */\n\t\t\tif (!InputUserPanel.isAccountsListEquals(prevVal, me._setAccounts)) {\n\t\t\t\tme._setUsers = users;\n\t\t\t\tme.focus();\n\t\t\t\tawait me._refreshUi();\n\t\t\t\tme.dispathChangeEvent();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ajout d'un utilisateur\n\t * @param ev\n\t * @private\n\t */\n\tprivate async onAddUsers(this: HTMLButtonElement | InputUserPanel<any>, ev?: Event) {\n\t\tev?.stopImmediatePropagation();\n\t\tconst me = this instanceof InputUserPanel ? this : DOMSH.findHost<InputUserPanel<any>>(this);\n\t\tif (me.disabled) return;\n\n\t\tconst userSelector = await me.makeSelector();\n\t\tif (me._setAccounts.length > 0) userSelector.setContextualUserFilter((user) => me._setAccounts.indexOf(user.account) == -1);\n\t\tawait userSelector.doSearchUsers();\n\n\t\tme._openPopup = POPUP.showMenuFromEvent<JUser[]>(me._lastSelector, ev || me, me, null, {initWidth: '20em'});\n\t\tconst users = await me._openPopup.onNextClose();\n\t\tme._openPopup = null;\n\n\t\tif (users && users.length > 0) {\n\t\t\tif (!me._setUsers)\n\t\t\t\tme._setUsers = [];\n\t\t\tusers.forEach(value => {\n\t\t\t\tif (me._forcedIniUsers) {\n\t\t\t\t\tconst remIdx = me._forcedIniUsers.findIndex((entry) => entry.account === value.account);\n\t\t\t\t\tif (remIdx > -1) me._forcedIniUsers.splice(remIdx, 1);\n\t\t\t\t}\n\t\t\t\tme._setAccounts.push(value.account);\n\t\t\t\tme._setUsers.push(value);\n\t\t\t});\n\t\t\tme._setUsers.sort(me.sortUsers);\n\t\t\tme.focus();\n\t\t\tawait me._refreshUi();\n\t\t\tme.dispathChangeEvent();\n\t\t}\n\t}\n\n\t/**\n\t * Suppression d'un utilisateur\n\t * @param ev\n\t */\n\tprivate async onRemUser(this: HTMLButtonElement, ev?: Event) {\n\t\tev?.stopImmediatePropagation();\n\t\tconst me = DOMSH.findHost<InputUserPanel<any>>(this);\n\t\tif (me.disabled) return;\n\t\tconst userRef = this.previousElementSibling as UserRef;\n\t\tif (userRef.classList?.contains('forced')) {\n\t\t\tconst remIdx = me._forcedIniUsers.findIndex((entry) => entry.account === userRef.nickOrAccount);\n\t\t\tif (remIdx > -1) me._forcedIniUsers.splice(remIdx, 1);\n\t\t} else {\n\t\t\tconst remAccIdx = me._setAccounts.findIndex((account) => account === userRef.nickOrAccount);\n\t\t\tme._setAccounts.splice(remAccIdx, 1);\n\t\t\tconst remUsersIdx = me._setUsers?.findIndex((user) => user.account === userRef.nickOrAccount);\n\t\t\tif (remUsersIdx > -1) me._setUsers.splice(remUsersIdx, 1);\n\t\t}\n\t\tme.focus();\n\t\tawait me._refreshUi();\n\t\tme.dispathChangeEvent();\n\t}\n\n\tprotected _refreshValidity() {\n\t\tif (this.required && (!this._setUsers || this._setUsers.length == 0))\n\t\t\tthis.setValidity({valueMissing: true}, this._params.errorMsgs?.empty || \"Veuillez renseigner ce champ.\");\n\t\telse if (this._params.userCard == 'single' && this._setUsers && this._setUsers.length > 1)\n\t\t\tthis.setValidity({valueMissing: true}, this._params.errorMsgs?.tooMany || \"Veuillez saisir une unique valeur.\");\n\t\telse this.setValidity({});\n\t}\n\n\t/** */\n\tprivate dispathChangeEvent(): void {\n\t\tthis.dispatchEvent(new CustomEvent(\"input\", {bubbles: true, cancelable: false}));\n\t\tthis.dispatchEvent(new CustomEvent(\"change\", {bubbles: true, cancelable: false}));\n\t}\n\n\t/** Trie d'une liste d'objets users */\n\tprivate sortUsers(u1: JUser, u2: JUser): number {\n\t\treturn USER.getPrimaryName(u1).localeCompare(USER.getPrimaryName(u2));\n\t}\n\n\t/** Compare deux listes non ordonnÃ©es de users */\n\tstatic isAccountsListEquals(l1: string[], l2: string[]): boolean {\n\t\tif (!l1 || !l2) return false;\n\t\tif (l1.length !== l2.length) return false;\n\t\tfor (const u of l1) if (l2.indexOf(u) == -1) return false;\n\t\treturn true;\n\t}\n\n}\n\nREG.reg.registerSkin(\"c-input-users-panel\", 1, /* language=CSS */ `\n\t:host {\n\t\tdisplay: flex;\n\t\tmin-width: 0;\n\t\tmin-height: 0;\n\t\tflex-direction: column;\n\t}\n\n\t:host(:focus) {\n\t\toutline: var(--focus-outline);\n\t}\n\n\t:host(:not([disabled])) {\n\t\tcursor: pointer;\n\t}\n\n\t.inputBox {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.inputBox {\n\t\tbackground-color: var(--form-bgcolor);\n\t\tborder: 1px solid var(--border-color);\n\t}\n\n\t:host([disabled]) .inputBox {\n\t\tbackground-color: unset;\n\t\tborder: unset;\n\t}\n\n\t.preview {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.acts {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t}\n\n\t:host([data-card-isMulti]) .acts {\n\t\tborder-inline-start: 1px solid var(--border-color);\n\t\tmargin-block-start: 2px;\n\t\tmargin-block-end: 2px;\n\t\tmargin-inline-start: 2px;\n\t}\n\n\t.user {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tpadding: .1em;\n\t}\n\n\t:host([data-card-isSingle]) .user {\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\tflex: 1;\n\t}\n\n\t:host(:not([data-card-isSingle])) .user {\n\t\tcursor: default;\n\t\tmargin: .2em;\n\t\tborder: 1px solid var(--border-color);\n\t\tborder-radius: .4em;\n\t\tbackground-color: var(--alt2-bgcolor);\n\t}\n\n\t/*\n\t:host([data-card-isSingle]) > :only-of-type > .remUser{\n\t\tdisplay: none;\n\t}\n\t*/\n\n\tc-userref {\n\t\tcolor: var(--edit-color);\n\t}\n\n\tc-userref.forced {\n\t\topacity: .6;\n\t}\n\n\t:host([data-card-isSingle]) c-userref {\n\t\tflex: 1;\n\t}\n\n\tbutton {\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\twidth: var(--icon-size);\n\t\theight: var(--icon-size);\n\t\talign-self: center;\n\t\tfont-size: inherit;\n\t}\n\n\t:host([disabled]) button {\n\t\tdisplay: none;\n\t}\n\n\t:host(:not([readonly])) button:hover {\n\t\tfilter: var(--hover-filter);\n\t}\n\n\t:host([readonly]) button {\n\t\tdisplay: none;\n\t}\n\n\t.remUser {\n\t\talign-self: flex-start;\n\t\tbackground: transparent no-repeat url(\"/@skin@/commons/icons/delete.svg\") top;\n\t\tbackground-size: 65%;\n\t}\n\n  :host([data-card-isSingle]) .remUser {\n\t  background-position: center;\n  }\n\n  .addUsers {\n\t  background: transparent no-repeat url(\"/@skin@/commons/icons/add.svg\") center;\n\t  background-size: 1em 1em;\n  }\n\n  .selectUser {\n\t  background: transparent no-repeat var(--dropdown-url) center;\n\t  background-size: 1em 1em;\n  }\n\n  c-msg {\n\t  justify-content: flex-start;\n\t  font-style: italic;\n  }\n\n`);\n\ncustomElements.define('c-input-users-panel', InputUserPanel);"]}