{"version":3,"sources":["/@back@/wsp/widgets/wed/enums/enumPrvFromXPathRefItem.tsx"],"names":["DOM","WSP","BoxEnumEntry","WedEnumProvider","EWspChangesEvts","EventMgr","SRC","XA","async","jslibAsyncInit","jsEndPoint","elt","reg","registerSvc","tpl","widget","wedMgr","wedlet","cache","getDatasForModel","enumPrv","EnumPrvFromXPathRefItem","[object Object]","super","this","onEnumChange","fetchCounter","initing","init","doc","docHolder","getDocument","xpathExp","createExpression","getAttribute","prefix","lookupNamespaceURI","msgItemUndef","hasAttribute","xslUrl","env","itemType","datas","wspResUrl","resolve","xsl","fetchDom","xslt","XSLTProcessor","importStylesheet","e","console","error","transform","place","_wspUriChange","msg","from","wspCd","wsp","code","type","r","isSubUriOrEqual","srcUri","itemSrcUri","u","resetActions","emit","eventsMgr","on","_needReset","listeners","removeListener","fetching","_actions","_fetchEnum","setEnabled","setLabel","Promise","counter","dom","fetchStreamDom","uiRoot","transformToDocument","buildActions","documentElement","findDomContainer","wedAnchor","newItemUri","evaluate","XPathResult","STRING_TYPE","stringValue","filter","refreshItemSrcUri","fetchEnum","then","getActions","key","getAction"],"mappings":"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","sourcesContent":["import {IReg} from 'lib/commons/registry';\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {IWspUiEnv, JWspUriChangeMsg, WSP} from \"lib/wsp/wsp\";\nimport {IAction} from \"lib/commons/actions\";\nimport {IEndPoint} from \"lib/commons/io/io\";\nimport {BoxEnumEntry, IBoxEnumEltWedlet, IBoxEnumProvider, WedEnumProvider} from \"back/edit/wed/wedlets/box/boxTags\";\nimport {IItemUiEnv} from \"back/wsp/views/itemMain\";\nimport {EWspChangesEvts, IWspXmlHouse, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {WedMgr} from \"back/edit/wed/wedEditor\";\nimport {SRC} from \"lib/wsp/src\";\nimport {XA} from \"lib/commons/xml/xAddr\";\n\n/**\n * Appelé au chargement dans le WED :\n * <jslib src=\":back:wsp/widgets/wed/enums/enumPrvFromXPathRefItem.js\"/>\n * Déclare un svc 'wsp-wed-enumprv-xpath-refItem'\n * qui doit être déclaré dans le widget Wed. Exemple :\n * <box-input-enum enumSvc=\"wsp-wed-enumprv-xpath-refItem\" xpathRefItem=\"\" transform?=\"\" xslUrl?=\"\" msgItemUndef?=\"\"/>\n */\nexport async function jslibAsyncInit(jsEndPoint: IEndPoint, elt: Element, reg: IReg<any>) {\n\treg.registerSvc('wsp-wed-enumprv-xpath-refItem', 1, (tpl: Element, widget: IBoxEnumEltWedlet) => {\n\t\tconst wedMgr = widget.wedlet.wedMgr;\n\t\t//Cache au niveau de chaque wedMgr (ie item)\n\t\t//XXX à voir: cache de 2ème niveau au niveau du reg de l'atelier après eval de l'xpath et obtention du refUri (key à combiner avec transform et xslUrl...).\n\t\tconst cache = wedMgr.getDatasForModel(tpl);\n\t\tlet enumPrv: EnumPrvFromXPathRefItem = cache['wsp-wed-enumprv-xpath-refItem'];\n\t\tif (!enumPrv) {\n\t\t\tenumPrv = new EnumPrvFromXPathRefItem(tpl, wedMgr);\n\t\t\tcache['wsp-wed-enumprv-xpath-refItem'] = enumPrv;\n\t\t}\n\t\treturn enumPrv;\n\t});\n}\n\n/**\n * Fournisseur d'enum issu d'un item\n * <xxx xpathRefItem=\"\" transform?=\"\" xslUrl?=\"\"  msgItemUndef=\"\"/>\n */\nclass EnumPrvFromXPathRefItem extends WedEnumProvider implements IBoxEnumProvider {\n\tonEnumChange = new EventMgr<() => void>();\n\n\tprotected initing: Promise<void>\n\tprotected fetching: Promise<void>\n\tprotected fetchCounter = 0;\n\tprotected reg: IReg<IWspUiEnv & IItemUiEnv>\n\tprotected xpathExp: XPathExpression;\n\tprotected msgItemUndef: string;\n\tprotected itemSrcUri: string;\n\tprotected transform?: string;\n\tprotected xslUrl?: IEndPoint;\n\t/** Si null chargement de la xsl en erreur*/\n\tprotected xslt?: XSLTProcessor | null;\n\n\tconstructor(tpl: Element, wedMgr: WedMgr) {\n\t\tsuper(null);\n\t\tthis.reg = wedMgr.reg;\n\t\tthis.initing = this.init(tpl, wedMgr);\n\t}\n\n\tasync init(tpl: Element, wedMgr: WedMgr) {\n\t\ttry {\n\n\t\t\t//XPath\n\t\t\tconst doc = wedMgr.docHolder.getDocument();\n\t\t\tthis.xpathExp = doc.createExpression(tpl.getAttribute(\"xpathRefItem\"), (prefix) => DOM.lookupNamespaceURI(doc, prefix));\n\t\t\tthis.msgItemUndef = tpl.getAttribute(\"msgItemUndef\") || \"L'item spécifiant les valeurs n'est pas défini\";\n\n\t\t\t// Xsl\n\t\t\tif (tpl.hasAttribute(\"xslUrl\")) {\n\t\t\t\tthis.xslUrl = this.reg.env.itemType.datas.wspResUrl.resolve(tpl.getAttribute(\"xslUrl\"));\n\t\t\t\ttry {\n\t\t\t\t\tconst xsl = await this.xslUrl.fetchDom();\n\t\t\t\t\tthis.xslt = new XSLTProcessor();\n\t\t\t\t\tthis.xslt.importStylesheet(xsl);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthis.xslt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.transform = tpl.getAttribute('transform');\n\n\t\t\t// Listener sur les changements de l'item pointé\n\t\t\tconst place = this.reg.env.place;\n\t\t\tthis._wspUriChange = (msg: JWspUriChangeMsg, from) => {\n\t\t\t\tif (msg.wspCd !== this.reg.env.wsp.code) return;\n\t\t\t\tif ((msg.type === EWspChangesEvts.r && SRC.isSubUriOrEqual(msg.srcUri, this.itemSrcUri))\n\t\t\t\t\t|| (msg.type === EWspChangesEvts.u && this.itemSrcUri === msg.srcUri)) {\n\t\t\t\t\tif (this.resetActions()) this.onEnumChange.emit();\n\t\t\t\t}\n\t\t\t}\n\t\t\tplace.eventsMgr.on(\"wspUriChange\", this._wspUriChange);\n\n\t\t\tthis._needReset = () => {if (this.resetActions()) this.onEnumChange.emit()}\n\t\t\tplace.eventsMgr.on(\"wspLiveStateChange\", this._needReset);\n\t\t\tplace.eventsMgr.on(\"onConnectionRenewed\", this._needReset);\n\n\t\t\t//Cleanup sur fermeture éditeur.\n\t\t\twedMgr.listeners.on(\"killEditor\", () => {\n\t\t\t\tconst place = this.reg.env.place;\n\t\t\t\tplace.eventsMgr.removeListener(\"wspUriChange\", this._wspUriChange);\n\t\t\t\tplace.eventsMgr.removeListener(\"wspLiveStateChange\", this._needReset);\n\t\t\t\tplace.eventsMgr.removeListener(\"onConnectionRenewed\", this._needReset);\n\t\t\t})\n\t\t} finally {\n\t\t\tthis.initing = null; //fin de l'init\n\t\t}\n\t}\n\n\tprotected _wspUriChange: (msg: JWspUriChangeMsg, from: WspsLivePlace | IWspXmlHouse | 'local' | 'server') => void;\n\tprotected _needReset: () => void;\n\n\tasync fetchEnum() {\n\t\tif (this.initing) await this.initing;\n\t\tif (!this.fetching && !this._actions) this.fetching = this._fetchEnum();\n\t\twhile (this.fetching) await this.fetching;\n\t}\n\n\tasync _fetchEnum() {\n\t\tif (this.xslt === null) {\n\t\t\t// xsl configurée mais echec à sa construction.\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Chargement du composant en erreur\")];\n\t\t\tawait Promise.resolve();\n\t\t\tthis.fetching = null;\n\t\t\treturn;\n\t\t}\n\t\tconst counter = this.fetchCounter;\n\t\ttry {\n\t\t\tlet dom = await WSP.fetchStreamDom(this.reg.env.wsp, this.reg.env.uiRoot, this.itemSrcUri, this.transform);\n\t\t\tif (counter !== this.fetchCounter) return; //raceCond\n\t\t\tif (dom) {\n\t\t\t\tif (this.xslt) dom = this.xslt.transformToDocument(dom);\n\t\t\t\tthis._actions = dom ? WedEnumProvider.buildActions(dom.documentElement, this) : [];\n\t\t\t} else {\n\t\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(this.msgItemUndef)];\n\t\t\t}\n\t\t\tthis.fetching = null;\n\t\t} catch (e) {\n\t\t\tthis.fetching = null;\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(\"Construction de l'énumération en erreur\")];\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/** Retourne true si un reset a eu lieu */\n\tprotected resetActions(): boolean {\n\t\tthis.fetchCounter++;\n\t\tif (this.fetching) this.fetching = this._fetchEnum(); //chargement en cours annulé, on recommence.\n\t\tif (this._actions) {\n\t\t\tthis._actions = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected refreshItemSrcUri(widget: IBoxEnumEltWedlet) {\n\t\tconst wedMgr = widget.wedlet.wedMgr;\n\t\tconst from = XA.findDomContainer(widget.wedlet.wedAnchor, wedMgr.docHolder.getDocument());\n\t\tconst newItemUri = this.xpathExp.evaluate(from, XPathResult.STRING_TYPE).stringValue;\n\t\tif (newItemUri) {\n\t\t\tif (this.itemSrcUri != newItemUri) {\n\t\t\t\tthis.resetActions();\n\t\t\t\tthis.itemSrcUri = newItemUri;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.itemSrcUri) this.resetActions();\n\t\t\tthis.itemSrcUri = null;\n\t\t\tthis._actions = [new BoxEnumEntry(null).setEnabled(false).setLabel(this.msgItemUndef)];\n\t\t}\n\t}\n\n\tgetActions(widget: IBoxEnumEltWedlet, filter?: string): IAction<IBoxEnumEltWedlet>[] | Promise<IAction<IBoxEnumEltWedlet>[]> {\n\t\tthis.refreshItemSrcUri(widget);\n\t\tif (!this._actions) return this.fetchEnum().then(() => super.getActions(widget, filter));\n\t\treturn super.getActions(widget, filter);\n\t}\n\n\tgetAction(key: string, widget: IBoxEnumEltWedlet): IAction<IBoxEnumEltWedlet> | null | Promise<IAction<IBoxEnumEltWedlet> | null> {\n\t\tthis.refreshItemSrcUri(widget);\n\t\tif (!this._actions) return this.fetchEnum().then(() => super.getAction(key, widget));\n\t\treturn super.getAction(key, widget);\n\t}\n}"]}