{"version":3,"sources":["/@lib@/commons/roles.tsx"],"names":["DOM","JSX","Area","AREAS","REG","MxFormElement","BaseElementAsync","render","xhtml","DOMSH","SEC","FALLBACK_ROLE_NAME","RoleEditUiHandler","[object Object]","roleCode","super","this","sgnPattern","_uiLayerSgnPattern","_dependsOfRoles","push","ctx","label","getLabel","reg","getRoleProperty","isForcedVisible","grantedRoles","includes","refusedRoles","desc","getDescription","uiLayerSgn","test","userRoles","ROLES","resolveUserRoles","find","entry","indexOf","isVisible","resolverRoles","forceVisibilityIfSetOrInherited","undefined","setPerm","checkObjectRootPerm","isEnabled","extractGroupFromRole","control","_buildControl","_initControlElement","body","_buildControlLabel","_initControlLabelElement","exclusifGroup","getGroup","input","createElement","name","type","value","setHidden","setAttrBool","canBeIndeterminate","setIndeterminate","setInputChecked","inheritedRoles","Object","assign","extractJson","parent","fillJson","root","elemId","getId","Math","floor","random","toString","id","class","for","currentGroup","role","ctrl","setAttribute","title","addEventListener","ev","readOnly","disabled","currentGoup","isIndeterminate","isInputChecked","stopPropagation","preventDefault","dispatchEvent","CustomEvent","bubbles","composed","checked","filter","startsWith","groupCanBeUnchecked","dispatchChangeEvent","bind","groupIsSet","elt","hasAttribute","RolesSelectorInput","_setValuePending","_disabledForcedByContext","init","_params","rolesLists","UI_ROLES_LIST","autocleanEmptyFieldset","findReg","_form","onFormUpdateRequest","clearTimeout","setTimeout","async","onCtxChange","_attach","localName","_refresh","key","findDocumentOrShadowRoot","activeElement","setRolesValues","_initializeForm","vals","val","refreshDisabledUi","isDisabled","fieldsetList","querySelectorAll","forEach","fieldset","indeterminate","params","slice","rolesLayout","getSvc","areasList","Promise","all","mergeLists","groupsSet","Set","result","area","add","groupCode","area-groups","data-bypass","area-ids","refreshFreeze","applyLayout","querySelector","cancelable","then","setInheritedRoles","roles","sort","registerSkin","customElements","define","addToList","setLabel","setVisible","GROUP_ROLES_MAIN","code","substring","findGroupDef","color","disabledFallback","r","concat","sep","categ","r2","injectFallbackRole","Array","from","resolveRolesList","rolesUiHandlers","currentRoleUiIndex","findIndex","roleUi","currentRoleUi","sortUi","Infinity","sortAlgo","level","l1","l2","g1","g2"],"mappings":"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","sourcesContent":["import {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {Area, AREAS} from \"lib/commons/areas\";\nimport {IReg, IRegPointer, REG} from \"lib/commons/registry\";\nimport {IBasicUniversePointer, ICoreUniversePointer} from \"lib/core/universe\";\nimport {IFormJsonisable, MxFormElement, OFormElementInit} from \"lib/commons/forms\";\nimport {BaseElementAsync} from \"back/commons/basis\";\nimport {TemplateResult} from \"res/litHtml/lib/template-result\";\nimport {render} from \"res/litHtml/lib/render\";\nimport {xhtml} from \"lib/commons/utils/htmlLit\";\nimport {DOMSH} from \"lib/commons/xml/domsh\";\nimport {JUserRoles} from \"lib/core/user\";\nimport {SEC} from \"lib/commons/security\";\nimport Reg = REG.Reg;\nimport FALLBACK_ROLE_NAME = SEC.FALLBACK_ROLE_NAME;\n\n\n/**\n * Configuration des roles sur un noeud.\n * Structure de donnée perisistante\n */\nexport interface JUserSpecifiedRolesMap {\n\t[account: string]: {\n\t\t/** Configuration des roles ajoutés pour cet account sur ce noeud. */\n\t\tallowedRoles?: string[]\n\t\t/** Configuration des roles refusés pour cet account sur ce noeud. */\n\t\tdeniedRoles?: string[]\n\t}\n}\n\n/**\n * Configuration des roles sur un noeud enrichi d'informations supplémentaires\n * pour fournir un environnement d'édition satisfaisant.\n */\nexport interface JUserRolesMap extends JUserSpecifiedRolesMap {\n\t[account: string]: {\n\t\t/** Configuration des roles ajoutés pour cet account sur ce noeud. */\n\t\tallowedRoles?: string[]\n\t\t/** Configuration des roles refusés pour cet account sur ce noeud. */\n\t\tdeniedRoles?: string[]\n\t\t/** Roles hérités du contexte de ce noeuds pour cet account indépendamment des allowedRoles et deniedRoles spécifiés. */\n\t\tinheritedRoles?: string[]\n\t\t/** Flag indiquant que cet account n'existe pas dans la base.*/\n\t\tuserUnknown?: boolean\n\t}\n}\n\n\n/**\n * Handler graphique associé à un rôle\n */\nexport interface IRoleEditUiHandlerContext<ENV = ICoreUniversePointer | IBasicUniversePointer> extends IRegPointer<ENV>, JUserRoles {\n\treg: IReg<ENV>,\n\t/**\n\t * Chaine de caractère libre caractérisant le contexte courant\n\t * <br/><i>Exemples : user,role,wsp,space</i>\n\t **/\n\tuiLayerSgn?: string,\n\n\t/**   */\n\tgroupCanBeUnchecked?: boolean;\n\n\t/** visibilité forcée *dans le contexte grantedRoles inheritedRoles* (ie pas en fonction de la valeur courante)) */\n\tforceVisibilityIfSetOrInherited?: boolean,\n}\n\n/**\n * Area construisant un élément <input>\n */\nexport class RoleEditUiHandler<C extends IRoleEditUiHandlerContext> extends Area<C, HTMLElement> {\n\n\tprivate _uiLayerSgnPattern: RegExp;\n\tprivate _dependsOfRoles: string[];\n\n\t/**\n\t * @param roleCode : code complet, y compris l'exclusifGroup\n\t * \t</br> ex : main:reader, editProps, ...\n\t * @param exclusifGroup\n\t */\n\tconstructor(public roleCode: string) {\n\t\tsuper(roleCode);\n\t}\n\n\t/**\n\t * Affichage conditionné à la validation de la regExp sur la signature du layer courant\n\t * @param sgnPattern\n\t */\n\tpublic setUiLayerSgnPattern(sgnPattern: RegExp): this {\n\t\tthis._uiLayerSgnPattern = sgnPattern;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Affichage conditionné à la validation de la regExp sur la signature du layer courant\n\t * @param roleCode\n\t */\n\tpublic dependsOnRole(roleCode: string) {\n\t\tif (!this._dependsOfRoles) this._dependsOfRoles = [];\n\t\tthis._dependsOfRoles.push(roleCode);\n\t\treturn this;\n\t}\n\n\tgetLabel(ctx: C): string {\n\t\tlet label = super.getLabel(ctx)\n\t\t\t|| (ctx.reg as Reg<any>).getRoleProperty(this.roleCode, \"title\") as string\n\t\t\t|| this.roleCode;\n\t\t// Rôle explicitement affecté sur ce niveau : on le montre comme invalide\n\t\tif (this.isForcedVisible(ctx) === true && (ctx.grantedRoles && ctx.grantedRoles.includes(this.roleCode) || ctx.refusedRoles && ctx.refusedRoles.includes(this.roleCode)))\n\t\t\tlabel = `${label} [rôle invalide]`;\n\t\treturn label;\n\t}\n\n\tgetDescription(ctx: C): string {\n\t\tlet desc = super.getDescription(ctx) || (ctx.reg as Reg<any>).getRoleProperty(this.roleCode, \"description\") as string;\n\t\t// Rôle explicitement affecté sur ce niveau : on le montre comme invalide\n\t\tif (this.isForcedVisible(ctx) === true && (ctx.grantedRoles && ctx.grantedRoles.includes(this.roleCode) || ctx.refusedRoles && ctx.refusedRoles.includes(this.roleCode)))\n\t\t\tdesc = desc ? `Ce rôle est invalide ou inconnu dans ce contexte.\\n${desc}` : \"Ce rôle est invalide ou inconnu dans ce contexte.\";\n\t\treturn desc;\n\t}\n\n\t/**\n\t * isVisibleBase avec prise en compte de la propriété \"forceVisibilityIfSetOrInherited\"\n\t * @param ctx\n\t */\n\tisVisible(ctx: C): boolean {\n\t\tif (this.isForcedVisible(ctx) === true)\n\t\t\treturn true;\n\t\t// - uiLayerSgnPattern\n\t\tif (this._uiLayerSgnPattern) {\n\t\t\tif (!ctx.uiLayerSgn || !this._uiLayerSgnPattern.test(ctx.uiLayerSgn))\n\t\t\t\treturn false;\n\t\t}\n\t\t// - dependsOrRoles\n\t\tif (this._dependsOfRoles) {\n\t\t\tlet userRoles = ROLES.resolveUserRoles(ctx, true);\n\t\t\tif (!userRoles || !this._dependsOfRoles.find((entry) => userRoles.indexOf(entry) > -1 ? true : false))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn super.isVisible(ctx);\n\t}\n\n\t/**\n\t * Retourne true SSi la visibilité a été forcée.\n\t * Remarque : le composant peut néanmoins être invisible pour une autre raison\n\t * @param ctx\n\t */\n\tisForcedVisible(ctx: C): true | undefined {\n\t\tlet resolverRoles = ROLES.resolveUserRoles(ctx, true);\n\t\tif (ctx.forceVisibilityIfSetOrInherited && (resolverRoles.includes(this.roleCode) || (ctx.refusedRoles && ctx.refusedRoles.includes(this.roleCode)) || (ctx.grantedRoles && ctx.grantedRoles.includes(this.roleCode)))) {\n\t\t\t// - uiLayerSgnPattern\n\t\t\tif (this._uiLayerSgnPattern) {\n\t\t\t\tif (!ctx.uiLayerSgn || !this._uiLayerSgnPattern.test(ctx.uiLayerSgn))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// - dependsOrRoles\n\t\t\tif (this._dependsOfRoles) {\n\t\t\t\tlet userRoles = ROLES.resolveUserRoles(ctx, true);\n\t\t\t\tif (!userRoles || !this._dependsOfRoles.find((entry) => userRoles.indexOf(entry) > -1 ? true : false))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tisEnabled(ctx: C): boolean {\n\t\t// Rôle forcé visible, mais non affecté sur ce niveau : disabled\n\t\tif (this.isForcedVisible(ctx) === true && !(ctx.grantedRoles && ctx.grantedRoles.includes(this.roleCode) || ctx.refusedRoles && ctx.refusedRoles.includes(this.roleCode)))\n\t\t\treturn false;\n\t\tlet setPerm = (ctx.reg as Reg<any>).getRoleProperty(this.roleCode, \"setPerm\") as string;\n\t\tif (setPerm && !this.checkObjectRootPerm(ctx, setPerm)) return false;\n\t\treturn super.isEnabled(ctx);\n\t}\n\n\tgetGroup(ctx: C): string | null {\n\t\treturn ROLES.extractGroupFromRole(this.roleCode);\n\t}\n\n\t/** Tag root : label + control */\n\tbuildBody(ctx: C): HTMLElement {\n\t\tconst control = this._buildControl(ctx);\n\t\tthis._initControlElement(control, ctx);\n\t\tconst body = this._buildControlLabel(control, ctx);\n\t\tthis._initControlLabelElement(body, control, ctx);\n\t\treturn body;\n\t}\n\n\t/** Control (input) */\n\t_buildControl(ctx: C): HTMLInputElement & IFormJsonisable {\n\t\tlet exclusifGroup = this.getGroup(ctx) ? this.getGroup(ctx) + \":\" : null;\n\t\tlet input = <input name={exclusifGroup || this.roleCode} type={exclusifGroup ? \"radio\" : \"checkbox\"} value={this.roleCode}/> as HTMLInputElement;\n\t\treturn input as (HTMLInputElement & IFormJsonisable);\n\t}\n\n\tprotected _initControlElement(input: HTMLInputElement & IFormJsonisable, ctx: C) {\n\t\tDOM.setHidden(input, !this.isVisible(ctx));\n\t\tDOM.setAttrBool(input, \"disabled\", !this.isEnabled(ctx));\n\n\t\t// - affectation de l'état initial\n\t\tif (this.canBeIndeterminate(ctx)) {\n\t\t\tif (ctx.refusedRoles && ctx.refusedRoles.indexOf(this.roleCode) > -1) {\n\t\t\t\tRoleEditUiHandler.setIndeterminate(input, false);\n\t\t\t\tRoleEditUiHandler.setInputChecked(input, false);\n\t\t\t} else if (ctx.grantedRoles && ctx.grantedRoles.indexOf(this.roleCode) > -1) {\n\t\t\t\tRoleEditUiHandler.setIndeterminate(input, false);\n\t\t\t\tRoleEditUiHandler.setInputChecked(input, true);\n\t\t\t} else {\n\t\t\t\tlet userRoles = ROLES.resolveUserRoles(ctx, true);\n\t\t\t\tif (ctx.inheritedRoles && ctx.inheritedRoles.indexOf(this.roleCode) > -1 && userRoles.indexOf(this.roleCode) > -1) {\n\t\t\t\t\tRoleEditUiHandler.setIndeterminate(input, true);\n\t\t\t\t\tRoleEditUiHandler.setInputChecked(input, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*else if (ctx.inheritedRoles && ctx.inheritedRoles.indexOf(this.roleCode) > -1) {\n\t\t\t\tRoleEditUiHandler.setIndeterminate(input, true);\n\t\t\t\tRoleEditUiHandler.setInputChecked(true);\n\t\t\t}*/\n\t\t} else {\n\t\t\tif (ctx.grantedRoles && ctx.grantedRoles.indexOf(this.roleCode) > -1)\n\t\t\t\tRoleEditUiHandler.setInputChecked(input, true);\n\t\t}\n\t\t// - set \"fillJson\"\n\t\tObject.assign(input, {\n\t\t\textractJson: function (this: HTMLInputElement, parent: Jsonisable) {\n\t\t\t\tthrow \"No extractJson. Used global init object\";\n\t\t\t},\n\t\t\tfillJson: function (this: HTMLInputElement, parent: { grantedRoles: string[], refusedRoles: string[] }, root: Jsonisable) {\n\t\t\t\tthrow \"No fillJson. Used global init object\";\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/** Label */\n\tprotected _buildControlLabel(control: HTMLElement, ctx: C, label = this.getLabel(ctx)): HTMLSpanElement {\n\t\tconst elemId = this.getId() + '~' + Math.floor(Math.random() * 100000).toString(36);\n\t\tcontrol.id = elemId;\n\t\treturn <span class=\"ctrlLbl\">\n\t\t\t{control}\n\t\t\t<label class=\"lbl\" for={elemId}>{label}</label>\n\t\t</span> as HTMLSpanElement;\n\t}\n\n\t/** Retourne true si l'état 'indeterminate' doit être géré par cet input */\n\tprivate canBeIndeterminate(ctx: C): boolean {\n\t\tif (!ctx.inheritedRoles)\n\t\t\treturn false;\n\t\tlet currentGroup = this.getGroup(ctx);\n\t\tif (currentGroup)\n\t\t\treturn ctx.inheritedRoles.find((role) => ROLES.extractGroupFromRole(role) === currentGroup) ? true : false;\n\t\telse\n\t\t\treturn ctx.inheritedRoles.indexOf(this.roleCode) > -1\n\t}\n\n\tprotected _initControlLabelElement(ctrl: HTMLSpanElement, input: HTMLInputElement, ctx: C) {\n\t\tctrl.setAttribute('area-id', this.getId());\n\t\tif (this.getDescription(ctx))\n\t\t\tctrl.title = this.getDescription(ctx);\n\t\tDOM.setHidden(ctrl, !this.isVisible(ctx));\n\t\tDOM.setAttrBool(ctrl, \"disabled\", !this.isEnabled(ctx));\n\t\t// Rôle explicitement affecté sur ce niveau\n\t\tDOM.setAttrBool(ctrl, \"data-forced-vivibility-currentlevel\", this.isForcedVisible(ctx) === true && (ctx.grantedRoles && ctx.grantedRoles.includes(this.roleCode) || ctx.refusedRoles && ctx.refusedRoles.includes(this.roleCode)));\n\t\tDOM.setAttrBool(ctrl, \"data-forced-vivibility\", this.isForcedVisible(ctx));\n\t\t// Role explicitement désactivé à ce niveau\n\t\tDOM.setAttrBool(ctrl, \"data-forced-refused\", ctx.refusedRoles && ctx.refusedRoles.includes(this.roleCode) && !this.getGroup(ctx));\n\n\t\tconst canBeIndeterminate = this.canBeIndeterminate(ctx);\n\n\t\tctrl.addEventListener(\"click\", function (ev: Event) {\n\t\t\tif (!input.readOnly && !input.disabled) {\n\t\t\t\tlet currentGoup = ROLES.extractGroupFromRole(input.value);\n\t\t\t\t// Gestion du troisème état \"indeterminate\" (non géré nativement sur les radio)\n\t\t\t\tif (canBeIndeterminate) {\n\t\t\t\t\tif (RoleEditUiHandler.isIndeterminate(input)) {\n\t\t\t\t\t\tRoleEditUiHandler.setInputChecked(input, false);\n\t\t\t\t\t\tRoleEditUiHandler.setIndeterminate(input, false);\n\t\t\t\t\t} else if (RoleEditUiHandler.isInputChecked(input)) {\n\t\t\t\t\t\tRoleEditUiHandler.setInputChecked(input, false);\n\t\t\t\t\t\tRoleEditUiHandler.setIndeterminate(input, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tRoleEditUiHandler.setInputChecked(input, true);\n\t\t\t\t\t\tRoleEditUiHandler.setIndeterminate(input, false);\n\t\t\t\t\t}\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t\tinput.dispatchEvent(new CustomEvent('change', {bubbles: true, composed: true}));\n\t\t\t\t} else {\n\t\t\t\t\tRoleEditUiHandler.setInputChecked(input, input.checked);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tctrl.addEventListener(\"input\", function (ev) {\n\t\t\tev.stopPropagation();\n\t\t\tev.preventDefault();\n\t\t});\n\t\tctrl.addEventListener(\"change\", function (this: HTMLInputElement, ev: Event) {\n\t\t\tif (!ctx.grantedRoles) ctx.grantedRoles = [];\n\t\t\tif (!ctx.refusedRoles) ctx.refusedRoles = [];\n\t\t\t//console.log(\"BEFORE:::\", ctx.grantedRoles, ctx.refusedRoles);\n\t\t\tlet currentGoup = ROLES.extractGroupFromRole(this.value);\n\t\t\tif (currentGoup) {\n\t\t\t\tctx.grantedRoles = ctx.grantedRoles.filter((value) => !value.startsWith(currentGoup + \":\"));\n\t\t\t\tctx.refusedRoles = ctx.refusedRoles.filter((value) => !value.startsWith(currentGoup + \":\"));\n\t\t\t}\n\t\t\tif (RoleEditUiHandler.isIndeterminate(this) && !RoleEditUiHandler.isInputChecked(this)) {\n\t\t\t\t// indeterminé => clean du role courant\n\t\t\t\tctx.grantedRoles = ctx.grantedRoles.filter((value) => value !== this.value);\n\t\t\t\tctx.refusedRoles = ctx.refusedRoles.filter((value) => value !== this.value);\n\t\t\t} else {\n\t\t\t\tRoleEditUiHandler.setIndeterminate(this, false);\n\t\t\t\tif (ctx.inheritedRoles && ctx.inheritedRoles.indexOf(this.value) > -1 && !RoleEditUiHandler.isInputChecked(this)) {\n\t\t\t\t\tctx.grantedRoles = ctx.grantedRoles.filter((value) => value !== this.value);\n\t\t\t\t\tif (!currentGoup || ctx.groupCanBeUnchecked) ctx.refusedRoles.push(this.value);\n\t\t\t\t} else if (RoleEditUiHandler.isInputChecked(this)) {\n\t\t\t\t\tctx.refusedRoles = ctx.refusedRoles.filter((value) => value !== this.value);\n\t\t\t\t\tctx.grantedRoles.push(this.value);\n\t\t\t\t} else if (!RoleEditUiHandler.isInputChecked(this)) {\n\t\t\t\t\tctx.grantedRoles = ctx.grantedRoles.filter((value) => value !== this.value);\n\t\t\t\t\tctx.refusedRoles = ctx.refusedRoles.filter((value) => value !== this.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(\"AFTER:::\", ctx.grantedRoles, ctx.refusedRoles);\n\t\t\tRoleEditUiHandler.dispatchChangeEvent(this);\n\t\t\tev.stopPropagation();\n\t\t}.bind(input));\n\n\t\tif (this.canBeIndeterminate(ctx)) {\n\t\t\t// Pas de valeur saisie pour le groupe\n\t\t\tlet currentGoup = ROLES.extractGroupFromRole(this.roleCode);\n\t\t\tif (currentGoup) {\n\t\t\t\tlet groupIsSet = false;\n\t\t\t\tif (ctx.grantedRoles && ctx.grantedRoles.find((entry) => entry.startsWith(currentGoup + \":\")))\n\t\t\t\t\tgroupIsSet = true;\n\t\t\t\telse if (ctx.refusedRoles && ctx.refusedRoles.find((entry) => entry.startsWith(currentGoup + \":\")))\n\t\t\t\t\tgroupIsSet = true;\n\t\t\t\tif (!groupIsSet) {\n\t\t\t\t\tDOM.setAttrBool(ctrl, \"data-group-indeterminate-state\", true);\n\t\t\t\t\tRoleEditUiHandler.setIndeterminate(ctrl, RoleEditUiHandler.isIndeterminate(input));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (RoleEditUiHandler.isIndeterminate(input)) {\n\t\t\t\t\tDOM.setAttrBool(ctrl, \"data-group-indeterminate-state\", true);\n\t\t\t\t\tRoleEditUiHandler.setIndeterminate(ctrl, RoleEditUiHandler.isIndeterminate(input));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic dispatchChangeEvent(elt: HTMLElement) {\n\t\tlet ev = new CustomEvent('roles-select-change', {bubbles: true, composed: true});\n\t\telt.dispatchEvent(ev);\n\t}\n\n\n\tstatic isIndeterminate(ctrl: HTMLElement): boolean {\n\t\treturn ctrl.hasAttribute(\"data-is-indeterminate-checked\");\n\t}\n\n\tstatic setIndeterminate(ctrl: HTMLElement, value: boolean): void {\n\t\tDOM.setAttrBool(ctrl, \"data-is-indeterminate-checked\", value);\n\t\tif (value)\n\t\t\tctrl.title = 'Rôle affecté dans un autre niveau (groupes, ...).';\n\t\telse\n\t\t\tctrl.title = \"\";\n\t}\n\n\tstatic isInputChecked(ctrl: HTMLInputElement): boolean {\n\t\treturn ctrl.hasAttribute(\"data-is-checked\");\n\t}\n\n\tstatic setInputChecked(ctrl: HTMLInputElement, value: boolean): void {\n\t\tDOM.setAttrBool(ctrl, \"data-is-checked\", value);\n\t\tctrl.checked = value;\n\t}\n\n\n}\n\n\n/**\n * Input de sélection des rôles\n * FIXME : ajouter un mode permissif permettant d'afficher aussi les rôles inconnus de \"rolesLists\"\n */\ninterface ORolesListSet {\n\t/** Codes des listes d'area fournissant les {@link RoleEditUiHandler} */\n\trolesLists: string[]\n}\n\nexport interface ORolesSelectorInit extends OFormElementInit, ORolesListSet {\n\treg: IReg<IBasicUniversePointer>\n\t/** Surcharge de la zone de build de layout.\n\t * \t\tDOIT posséder les points d'injection des areas des {@link RoleEditUiHandler}  via @area-ids et @area-groups\n\t */\n\trolesLayout?: (ctx: ORolesListSet) => TemplateResult\n\n\t/** Supprime les fieldset sans contenu */\n\tautocleanEmptyFieldset?: boolean,\n\n\t/** */\n\tcanBeIndeterminate?: boolean,\n}\n\nexport class RolesSelectorInput extends MxFormElement(BaseElementAsync) {\n\treg: IReg<IBasicUniversePointer>;\n\n\tprotected _params: ORolesSelectorInit & IRoleEditUiHandlerContext;\n\tprotected _form: HTMLFormElement;\n\n\tprotected async _initialize(init: ORolesSelectorInit & IRoleEditUiHandlerContext): Promise<any> {\n\t\tthis._params = Object.assign({\n\t\t\trolesLists: [ROLES.UI_ROLES_LIST],\n\t\t\tautocleanEmptyFieldset: true,\n\t\t\tforceVisibilityIfSetOrInherited: true,\n\t\t\tgroupCanBeUnchecked: true,\n\t\t}, init);\n\t\tthis.reg = this.findReg(init);\n\t\tthis._form = <form/> as HTMLFormElement;\n\n\t\tlet onFormUpdateRequest = 0;\n\t\tthis._form.addEventListener('roles-select-change', (ev) => {\n\t\t\tif (onFormUpdateRequest) {\n\t\t\t\tclearTimeout(onFormUpdateRequest);\n\t\t\t\tonFormUpdateRequest = 0;\n\t\t\t}\n\t\t\tonFormUpdateRequest = setTimeout(async () => {\n\t\t\t\tonFormUpdateRequest = 0;\n\t\t\t\tawait this.onCtxChange();\n\t\t\t}, 100) as any;\n\t\t});\n\n\t\tthis._attach(this.localName, init, this._form);\n\t\t//await render(await this.rolesLayout(this._params), this._form);\n\t\tawait this._refresh();\n\n\t\tthis.addEventListener('keydown', async (ev: KeyboardEvent) => {\n\t\t\tif (!this.disabled && (ev.key === 'Delete' || ev.key === 'Backspace') && this === DOMSH.findDocumentOrShadowRoot(this).activeElement) {\n\t\t\t\tawait this.setRolesValues(this._params.canBeIndeterminate ? {} : {refusedRoles: [], grantedRoles: []});\n\t\t\t\tev.stopPropagation();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\tthis._initializeForm(init);\n\t}\n\n\t// MxFormElement\n\tget value(): string[] {throw \"ERROR : use extractJson/fillJson instead\"}\n\n\tset value(vals: string[]) {throw \"ERROR : use extractJson/fillJson instead\"}\n\n\tset disabled(val: boolean) {\n\t\tsuper.disabled = val;\n\t\tthis.refreshDisabledUi();\n\t}\n\n\tget disabled(): boolean {\n\t\treturn super.disabled;\n\t}\n\n\t/** Affectation UI de l'état disabled sans modifier la propriété \"disabled\" courante */\n\tprivate refreshDisabledUi(): void {\n\t\tconst isDisabled = this.disabled === true || this._disabledForcedByContext === true;\n\t\tlet fieldsetList = this._form.querySelectorAll(\"fieldset\");\n\t\tfieldsetList.forEach((fieldset) => {\n\t\t\tfieldset.disabled = isDisabled;\n\t\t});\n\t}\n\n\tset indeterminate(val: boolean) {\n\t\tDOM.setAttrBool(this, \"indeterminate\", val);\n\t}\n\n\tget indeterminate(): boolean {\n\t\treturn this.hasAttribute(\"indeterminate\");\n\t}\n\n\t/** Affectation d'une nouvelle valeur refusedRoles/grantedRoles dans le formulaire */\n\tprivate async setRolesValues(vals: { refusedRoles?: string[], grantedRoles?: string[], } | null): Promise<void> {\n\t\tlet params = {refusedRoles: vals.refusedRoles ? vals.refusedRoles.slice() : null, grantedRoles: vals.grantedRoles ? vals.grantedRoles.slice() : null};\n\t\tObject.assign(this._params, params);\n\t\treturn this.onCtxChange();\n\t}\n\n\t/** Affectation d'une nouvelle valeur inheritedRoles */\n\tasync setInheritedRoles(value: string[]): Promise<void> {\n\t\tthis._params.inheritedRoles = value;\n\t\treturn this.onCtxChange();\n\t}\n\n\t/** Gestion du layout d'organisation des rôles */\n\tprotected async rolesLayout(ctx: ORolesListSet): Promise<TemplateResult> {\n\t\tif (this._params.rolesLayout)\n\t\t\treturn this._params.rolesLayout(ctx);\n\t\telse if (this.reg.getSvc(\"roles.sets.tpl\")) {\n\t\t\treturn (this.reg.getSvc(\"roles.sets.tpl\") as (ctx: ORolesListSet) => TemplateResult)(ctx);\n\t\t} else {\n\t\t\tlet areasList = await Promise.all(this.reg.mergeLists(...this._params.rolesLists)) as RoleEditUiHandler<IRoleEditUiHandlerContext>[];\n\t\t\tlet groupsSet: Set<string> = new Set<string>();\n\t\t\tlet result: HTMLElement[] = [];\n\t\t\tareasList.forEach((area) => {\n\t\t\t\tif (area.isVisible(this._params)) {\n\t\t\t\t\tif (area.getGroup(this._params)) groupsSet.add(area.getGroup(this._params));\n\t\t\t\t}\n\t\t\t});\n\t\t\tgroupsSet.forEach((groupCode) => {\n\t\t\t\tresult.push(<fieldset id={groupCode + \":\"} area-groups={groupCode} data-bypass/>);\n\t\t\t});\n\t\t\tresult.push(<fieldset id=\"other\" area-ids=\"*\" class=\"subLevel\" data-bypass/>);\n\t\t\treturn xhtml`${result}`;\n\t\t}\n\t}\n\n\tprotected async _refresh(): Promise<void> {\n\t\ttry {\n\t\t\tthis.refreshFreeze(1);\n\t\t\tsuper._refresh();\n\t\t\tawait this.onCtxChange();\n\t\t} finally {\n\t\t\tthis.refreshFreeze(-1);\n\t\t}\n\t}\n\n\t/**\n\t * Modification d'un élément du contexte des areas => redraw des areas\n\t */\n\tprivate async onCtxChange(): Promise<void> {\n\t\tawait render(await this.rolesLayout(this._params), this._form);\n\t\tawait AREAS.applyLayout(this._form, await Promise.all(this.reg.mergeLists(...this._params.rolesLists)) as RoleEditUiHandler<IRoleEditUiHandlerContext>[], this._params, true);\n\n\t\t// - Clean des fieldset vides\n\t\tif (this._params.autocleanEmptyFieldset) {\n\t\t\tlet fieldsetList = this._form.querySelectorAll(\"fieldset\");\n\t\t\tfieldsetList.forEach((fieldset) => {\n\t\t\t\tDOM.setHidden(fieldset, !fieldset.querySelector(\"input:not([hidden])\"));\n\t\t\t});\n\t\t}\n\n\t\tthis.refreshDisabledUi();\n\n\t\tif (this._params.canBeIndeterminate && !(this._params.grantedRoles || this._params.refusedRoles)) {\n\t\t\tthis.indeterminate = true;\n\t\t} else\n\t\t\tthis.indeterminate = false;\n\n\t\tthis.dispatchEvent(new CustomEvent(\"change\", {bubbles: true, cancelable: false}));\n\t\tthis.dispatchEvent(new CustomEvent(\"input\", {bubbles: true, cancelable: false}));\n\t}\n\n\tprivate _setValuePending: JUserRoles | undefined = undefined;\n\n\textractJson(parent: Dict<any>): boolean {\n\t\tthis._setValuePending = parent;\n\t\tthis.setRolesValues(parent).then(async () => {\n\t\t\tawait this.setInheritedRoles(parent[\"inheritedRoles\"]);\n\t\t\tthis._setValuePending = undefined;\n\t\t});\n\t\treturn true;\n\t}\n\n\tfillJson(parent: any, root: any): void {\n\t\tlet roles: { grantedRoles: string[], refusedRoles: string[] } = this._setValuePending ?\n\t\t\t{grantedRoles: this._setValuePending.grantedRoles ? this._setValuePending.grantedRoles.sort() : undefined, refusedRoles: this._setValuePending.refusedRoles ? this._setValuePending.refusedRoles.sort() : undefined} :\n\t\t\t{grantedRoles: this._params.grantedRoles ? this._params.grantedRoles.sort() : undefined, refusedRoles: this._params.refusedRoles ? this._params.refusedRoles.sort() : undefined};\n\t\tObject.assign(parent, roles);\n\t}\n\n\tprivate _disabledForcedByContext = false;\n\n\tformDisabledCallback(disabled: boolean) {\n\t\tthis._disabledForcedByContext = disabled;\n\t\tthis.refreshDisabledUi();\n\t}\n}\n\nREG.reg.registerSkin('c-input-roles-selector', 1, /* language=CSS */ `\n\t:host {\n\t\tbackground-color: var(--form-bgcolor);\n\t\tborder: 1px solid var(--border-color);\n\t}\n\n\t:host(:disabled) {\n\t\tbackground-color: transparent;\n\t}\n\n\t:host([indeterminate]) {\n\t\topacity: .5;\n\t}\n\n\tfieldset > legend {\n\t\tletter-spacing: .1rem;\n\t}\n\n\tfieldset {\n\t\tborder: 1px solid var(--alt1-border-color);\n\t\tborder-radius: 5px;\n\t\tpadding: .3rem;\n\t\tmargin-block-end: .5rem;\n\t\tmargin-block-start: .1rem;\n\t}\n\n\tfieldset[data-bypass] {\n\t\tborder: none;\n\t}\n\n\tfieldset[disabled] {\n\t\topacity: .5;\n\t}\n\n\tfieldset[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t.subLevel {\n\t\tmargin-inline-start: 2rem;\n\t}\n\n\t.ctrlLbl {\n\t\tdisplay: inline-flex;\n\t\tmargin-inline-end: 1rem;\n\t\tpadding: 1px;\n\t}\n\n\n\t.ctrlLbl[data-is-indeterminate-checked] {\n\t\tbackground-color: var(--row-inSel-unfocus-bgcolor);\n\t\tborder-radius: 5px;\n\n\t}\n\n\t.ctrlLbl[data-group-indeterminate-state] {\n\t\t/*font-style: italic;*/\n\t\topacity: .6;\n\t}\n\n\t.ctrlLbl[data-forced-vivibility-currentlevel] {\n\t\tcolor: var(--warning-color);\n\t}\n\n\t.ctrlLbl[data-forced-refused] {\n\t\ttext-decoration: line-through;\n\t}\n\n\t.ctrlLbl[hidden] {\n\t\tdisplay: none;\n\t}\n\n\t.ctrlLbl[disabled] {\n\t\topacity: .6;\n\t}\n\n\t.lbl {\n\t\tmargin-inline-end: .5rem;\n\t\tuser-select: none;\n\t}\n\n`);\n\ncustomElements.define('c-input-roles-selector', RolesSelectorInput);\n\nREG.reg.addToList(\"user:roles\", FALLBACK_ROLE_NAME, 1, new RoleEditUiHandler(FALLBACK_ROLE_NAME)\n\t.setLabel(\"Rôle non défini\")\n\t.setVisible(false));\n\n\nexport namespace ROLES {\n\n\t/** Groupe de rôles \"main\" */\n\texport const GROUP_ROLES_MAIN = \"main\";\n\n\texport const UI_ROLES_LIST = \"user:roles\";\n\n\t/** Retourne le code du groupe, ou null si le role n'appartient pas à un groupe */\n\texport function extractGroupFromRole(code: string): string | null {\n\t\tif (!code) return null;\n\t\treturn code.indexOf(\":\") > -1 ? code.substring(0, code.indexOf(\":\")) : null;\n\t}\n\n\t/** Retourne le label d'un goupe donné\n\t * FIXME : concept non modélisé. A faire évoluer...\n\t */\n\texport function findGroupDef(code: string): { label: string, color?: string } | null {\n\t\tif (!code) return null;\n\t\tswitch (code) {\n\t\tcase GROUP_ROLES_MAIN :\n\t\t\treturn {label: \"principal\", color: \"var(--inv-bgcolor)\"}\n\t\tdefault:\n\t\t\treturn {label: code, color: \"var(--inv-bgcolor)\"};\n\t\t}\n\t}\n\n\t/**\n\t * Construit les roles d'un user en combinant JUser.inheritedRoles, JUser.refusedRoles et JUser.grantedRoles,\n\t * dans un contexte*avec* gestion de rôles\n\t */\n\texport function resolveUserRoles(userRoles: JUserRoles, disabledFallback: boolean = false): string[] {\n\t\tif (userRoles.inheritedRoles) {\n\t\t\tlet roles: string[];\n\t\t\troles = userRoles.refusedRoles ? userRoles.inheritedRoles.filter((r) => userRoles.refusedRoles.indexOf(r) === -1) : userRoles.inheritedRoles.concat();\n\t\t\tif (!userRoles.grantedRoles) return roles;\n\t\t\tuserRoles.grantedRoles.forEach((r) => {\n\t\t\t\tconst sep = r.indexOf(':');\n\t\t\t\tif (sep > 0) {\n\t\t\t\t\tconst categ = r.substring(0, sep + 1);\n\t\t\t\t\troles = roles.filter((r2) => !r2.startsWith(categ));\n\t\t\t\t\troles.push(r);\n\t\t\t\t} else {\n\t\t\t\t\tif (roles.indexOf(r) === -1) roles.push(r);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn disabledFallback ? roles : SEC.injectFallbackRole(roles);\n\t\t}\n\t\tif (disabledFallback)\n\t\t\treturn userRoles.grantedRoles || [];\n\t\telse\n\t\t\treturn SEC.injectFallbackRole(Array.from(userRoles.grantedRoles || []))\n\t}\n\n\t/**\n\t * Résout une liste de rôles pour un contexte donné en vue de leur affichage\n\t */\n\texport async function resolveRolesList(roles: string[], ctx: IRoleEditUiHandlerContext, rolesUiHandlers?: RoleEditUiHandler<IRoleEditUiHandlerContext>[]): Promise<{ role: string, sortUi: number, sortAlgo: number, name: string, level: \"set\" | \"inherited\" | \"unknown\" }[]> {\n\t\tif (!rolesUiHandlers)\n\t\t\trolesUiHandlers = await Promise.all(ctx.reg.mergeLists(ROLES.UI_ROLES_LIST)) as RoleEditUiHandler<IRoleEditUiHandlerContext>[];\n\t\tlet result: { role: string, sortUi: number, sortAlgo: number, name: string, level: \"set\" | \"inherited\" | \"unknown\" }[] = [];\n\t\troles.forEach((role) => {\n\t\t\tlet currentRoleUiIndex = rolesUiHandlers.findIndex((roleUi) => roleUi.roleCode === role);\n\t\t\tlet currentRoleUi = currentRoleUiIndex > -1 ? rolesUiHandlers[currentRoleUiIndex] : null;\n\t\t\t// On n'affiche que les roles qui ont une existence UI ET ceux inconnus du reg\n\t\t\t// Les rights sont donc masqués\n\t\t\tif (currentRoleUi || (ctx.reg as Reg<any>).getRoleProperty(role, \"priority\") !== undefined) {\n\t\t\t\tresult.push({\n\t\t\t\t\trole,\n\t\t\t\t\tname: (currentRoleUi && currentRoleUi.getLabel(ctx)) || (ctx.reg as Reg<any>).getRoleProperty(role, \"title\") as string || role,\n\t\t\t\t\tsortUi: currentRoleUiIndex || Infinity,\n\t\t\t\t\tsortAlgo: (ctx.reg as Reg<any>).getRoleProperty(role, \"priority\") as number,\n\t\t\t\t\tlevel: currentRoleUi ? ((ctx.grantedRoles && ctx.grantedRoles.includes(role)) ? \"set\" : \"inherited\") : \"unknown\",\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t// Tri UI : roles main en premier, puis tri par ordre croissant du sortKey\n\t\tresult.sort((l1, l2) => {\n\t\t\tconst g1 = extractGroupFromRole(l1.role);\n\t\t\tconst g2 = extractGroupFromRole(l2.role);\n\t\t\tif (g1 === GROUP_ROLES_MAIN && g2 !== GROUP_ROLES_MAIN) return -1;\n\t\t\tif (g1 !== GROUP_ROLES_MAIN && g2 === GROUP_ROLES_MAIN) return 1;\n\t\t\treturn l1.sortUi - l2.sortUi;\n\t\t});\n\n\t\treturn result;\n\t}\n\n}"]}