{"version":3,"sources":["/@lib@/edit/ot/moan.ts"],"names":["House","State","MsgOt","EAnnotLevel","XA","XmlAddrMsg","XmlListMsgOt","MoanState","[object Object]","this","annots","Map","an","m","values","killed","push","xa","length","deep","isInSeq","addr","msg","MoanListAnnotMsg","del","remAnnots","id","get","delete","domRoot","house","getStateById","root","msgs","bindToDom","set","moanId","listeners","emit","isBodyMutator","adjust","json","factoryReg","super","fromJson","MSG_FACTORYREG","newFromJson","attachHouse","clear","type","STATE_FACTORYREG","register","MoanAnnot","label","level","init","anchorNode","findDomLast","start","from","initMoan","copyStableMetasFrom","error","warning","info","len","other","toJson"],"mappings":"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","sourcesContent":["import {FactoryRegistry, House, Msg, State} from \"lib/edit/ot/urban\";\nimport {MsgOt} from \"lib/edit/ot/houseOt\";\nimport {EAnnotLevel, ISkAnnot} from \"lib/edit/schema/schemaAnnots\";\nimport {IXAddr, XA} from \"lib/commons/xml/xAddr\";\nimport {IXmlPrgSensitiveMsg, XmlAddrMsg, XmlBodyState, XmlListMsgOt} from \"lib/edit/ot/xmlHouse\";\nimport {XmlTypedHouse} from \"lib/edit/ot/xmlTypedHouse\";\n\nexport interface IMoanState extends State {\n\n\tfillAllAnnots(an: ISkAnnot[]): void\n\n\tfillAnnots(an: ISkAnnot[], xa: IXAddr, length?: number, deep?: boolean): void\n}\n\n/**\n * Annotations Moan rassemblés dans un State de la house.\n */\nexport class MoanState extends State implements IMoanState {\n\tstatic readonly type = \"moan\";\n\n\tannots: Map<number, MoanAnnot> = new Map();\n\n\tfillAllAnnots(an: ISkAnnot[]) {\n\t\tfor (const m of this.annots.values()) {\n\t\t\tif (!m.killed) an.push(m);\n\t\t}\n\t}\n\n\tfillAnnots(an: ISkAnnot[], xa: IXAddr, length: number = 1, deep: boolean = true) {\n\t\tfor (const m of this.annots.values()) {\n\t\t\tif (!m.killed && XA.isInSeq(xa, length, m.addr)) {\n\t\t\t\tif (deep || m.addr.length === xa.length - 1) an.push(m);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate(msg: Msg): void {\n\t\tif (msg instanceof MoanListAnnotMsg) {\n\t\t\t//Mise à jour de la liste des annots.\n\t\t\tconst del: ISkAnnot[] = [];\n\t\t\tif (msg.remAnnots) for (const id of msg.remAnnots) {\n\t\t\t\tconst m = this.annots.get(id);\n\t\t\t\tif (m) {\n\t\t\t\t\tthis.annots.delete(id);\n\t\t\t\t\tdel.push(m);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst domRoot = (this.house.getStateById(\"body\") as XmlBodyState).root;\n\t\t\tfor (const m of (msg.msgs as MoanAnnot[])) {\n\t\t\t\tm.bindToDom(domRoot);\n\t\t\t\tthis.annots.set(m.moanId, m);\n\t\t\t}\n\t\t\t(this.house as XmlTypedHouse).listeners.emit(\"onSkAnnotsChange\", del, msg.msgs as MoanAnnot[]);\n\t\t} else if (msg instanceof MsgOt && msg.isBodyMutator) {\n\t\t\t//Ajustement des xa essentiellement pour kill les annots des noeuds supprimés.\n\t\t\tlet del: ISkAnnot[];\n\t\t\tfor (const m of this.annots.values()) {\n\t\t\t\tif (!m.killed) {\n\t\t\t\t\tmsg.adjust(m);\n\t\t\t\t\tif (m.killed) {\n\t\t\t\t\t\tif (!del) del = [m];\n\t\t\t\t\t\telse del.push(m);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (del) (this.house as XmlTypedHouse).listeners.emit(\"onSkAnnotsChange\", del, null);\n\t\t}\n\t}\n\n\tfromJson(json: any, factoryReg: FactoryRegistry<State>) {\n\t\tsuper.fromJson(json, factoryReg)\n\t\tfor (const m of json.annots) {\n\t\t\tconst msg = House.MSG_FACTORYREG.newFromJson(m) as MoanAnnot;\n\t\t\tthis.annots.set(msg.moanId, msg);\n\t\t}\n\t}\n\n\tattachHouse(house: House | null): this {\n\t\tsuper.attachHouse(house);\n\t\tif (house) {\n\t\t\tconst domRoot = (house.getStateById(\"body\") as XmlBodyState).root;\n\t\t\tfor (const m of this.annots.values()) m.bindToDom(domRoot);\n\t\t} else {\n\t\t\tthis.annots.clear();\n\t\t}\n\t\treturn this;\n\t}\n\n}\n\nHouse.STATE_FACTORYREG.register(MoanState);\n\n/**\n * Msg de la house, qui une fois inséré dans le MoanState est vu comme une ISkAnnot immutable.\n */\nexport class MoanAnnot extends XmlAddrMsg implements ISkAnnot, IXmlPrgSensitiveMsg {\n\tstatic readonly type: string = \"moanAnnot\";\n\n\t/** Id stable de l'annot par rapport à l'ancrage à anchorNode (xa peut évoluer). */\n\tmoanId: number\n\n\tanchorNode: Node;\n\n\tlabel: string\n\tlevel: EAnnotLevel;\n\n\tinit(addr: IXAddr): this {throw \"Don't use!\"}\n\n\tinitMoan(addr: IXAddr, moanId: number, label: string, level: EAnnotLevel): this {\n\t\tsuper.init(addr);\n\t\tthis.moanId = moanId;\n\t\tthis.label = label;\n\t\tthis.level = level;\n\t\treturn this;\n\t}\n\n\tbindToDom(root: Node) {\n\t\tthis.anchorNode = XA.findDomLast(this.addr, root);\n\t}\n\n\tget start(): IXAddr {return this.anchorNode ? XA.from(this.anchorNode) : this.addr}\n\n\tinvert(): MoanAnnot {return new MoanAnnot().initMoan(this.addr, this.moanId, this.label, this.level).copyStableMetasFrom(this)}\n\n\tfromJson(json: any, factoryReg: FactoryRegistry<Msg>) {\n\t\tsuper.fromJson(json, factoryReg);\n\t\tthis.moanId = json.moanId;\n\t\tswitch (json.level) {\n\t\tcase \"error\":\n\t\t\tthis.level = EAnnotLevel.error;\n\t\t\tbreak;\n\t\tcase \"warning\":\n\t\t\tthis.level = EAnnotLevel.warning;\n\t\t\tbreak;\n\t\tcase \"info\":\n\t\t\tthis.level = EAnnotLevel.info;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.level = EAnnotLevel.error;\n\t\t}\n\t\tthis.label = json.label;\n\t}\n\n\t//------- Annot Api\n\n\tget len(): number {return 1}\n\n\tgetLabel(): string {return this.label}\n\n\tequals(other: ISkAnnot): boolean {\n\t\treturn other instanceof MoanAnnot && this.moanId === other.moanId;\n\t}\n\n\ttoJSON(): any {throw \"TODO\"}\n}\n\nHouse.MSG_FACTORYREG.register(MoanAnnot);\n\n\nclass MoanListAnnotMsg extends XmlListMsgOt implements IXmlPrgSensitiveMsg {\n\tstatic readonly type = \"moanListAnnot\";\n\n\t/** Liste de moanId à supprimer. */\n\tremAnnots?: number[]\n\n\tget isBodyMutator(): boolean {return false}\n\n\tfromJson(json: any, factoryReg: FactoryRegistry<Msg>) {\n\t\tsuper.fromJson(json, factoryReg);\n\t\tthis.remAnnots = json[\"remAnnots\"];\n\t}\n\n\ttoJson(json: any) {\n\t\tsuper.toJson(json);\n\t\tjson[\"remAnnots\"] = this.remAnnots;\n\t}\n}\n\nHouse.MSG_FACTORYREG.register(MoanListAnnotMsg);\n\n"]}