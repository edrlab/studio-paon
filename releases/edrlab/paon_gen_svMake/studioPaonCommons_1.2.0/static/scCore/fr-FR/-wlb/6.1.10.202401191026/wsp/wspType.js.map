{"version":3,"sources":["/@lib@/wsp/wspType.ts"],"names":["IO","CDM","WSPTYPE","async","getNewEditor","wspServer","wspCodeTpl","params","config","wspMetaEditorUrl","fetchDom","qs","stringify","getUpdateEditor"],"mappings":"OAAQA,OAAG;OAEHC,QAAI;OAEN,IAAWC,SAAjB,SAAiBA,SAQTC,eAAeC,aAAaC,UAAmBC,WAAqBC,QAC1E,OAAOF,UAAUG,OAAOC,iBAAiBC,SAASV,GAAGW,GAAG,WAAY,eAAgB,QAASL,WAAY,eAAgBL,IAAIW,UAAUL,UADlHL,QAAAE,aAAYA;AAY3BD,eAAeU,gBAAgBR,UAAmBC,YACxD,OAAOD,UAAUG,OAAOC,iBAAiBC,SAASV,GAAGW,GAAG,WAAY,kBAAmB,QAASL,aAD3EJ,QAAAW,gBAAeA,iBApBtC,CAAiBX,UAAAA,QAAO","sourcesContent":["import {IO} from \"lib/commons/io/io\";\nimport {JWspCreateParamsDB, JWspCreateParamsDB_DRF, JWspCreateParamsDB_DRV, JWspCreateParamsFS, WspSrv} from \"lib/wsp/wsp\";\nimport {CDM} from \"lib/commons/utils/cdm\";\n\nexport namespace WSPTYPE {\n\t/**\n\t * Retourne un éditeur pour la création d'un nouveau workspace\n\t * @see eu.scenari.wsp.service.wspmetaeditor.SvcWspMetaEditorDialog.CDACTION_GetNewEditor\n\t * @param wspServer\n\t * @param wspCodeTpl : code d'un workspace existant contenant un paramétrage par défaut de selection WspType / WspOption\n\t * @param params : paramètres de création tels qu'ils seront passés à la création effective de l'atelier. Les Wsptype et options disponibles pourraient dépendre des ces paramètres\n\t */\n\texport async function getNewEditor(wspServer: WspSrv, wspCodeTpl?: string, params?: JWspCreateParamsFS | JWspCreateParamsDB | JWspCreateParamsDB_DRF | JWspCreateParamsDB_DRV | any): Promise<(Document)> {\n\t\treturn wspServer.config.wspMetaEditorUrl.fetchDom(IO.qs(\"cdaction\", \"GetNewEditor\", \"param\", wspCodeTpl, \"createParams\", CDM.stringify(params)));\n\t}\n\n\n\t/**\n\t * Retourne un éditeur pour la modification d'un workspace\n\t * @see eu.scenari.wsp.service.wspmetaeditor.SvcWspMetaEditorDialog.CDACTION_GetUpdateEditor\n\t * @param wspServer\n\t * @param wspCodeTpl : code d'un workspace existant contenant un paramétrage par défaut de selection WspType / WspOption\n\t * @param params : paramètres de création tels qu'ils seront passés à la création effective de l'atelier. Les Wsptype et options disponibles pourraient dépendre des ces paramètres\n\t */\n\texport async function getUpdateEditor(wspServer: WspSrv, wspCodeTpl: string): Promise<(Document)> {\n\t\treturn wspServer.config.wspMetaEditorUrl.fetchDom(IO.qs(\"cdaction\", \"GetUpdateEditor\", \"param\", wspCodeTpl));\n\t}\n\n}"]}