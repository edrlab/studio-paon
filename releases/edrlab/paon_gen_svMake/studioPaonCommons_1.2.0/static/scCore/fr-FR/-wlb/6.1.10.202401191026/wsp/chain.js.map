{"version":3,"sources":["/@lib@/wsp/chain.ts"],"names":["REG","CoreUniverse","configWspSrv","WspSrv","configPackSrv","PackSrv","configExecutorSrv","ExecutorSrv","AreaAsync","IO","ChainUniverse","[object Object]","config","super","reg","this","addToList","id","setLabel","name","setVisible","ctx","hasPerm","requireLib","asEndPoint","setBodyBuilder","MOD","_modules","WspRolesExplorerTab","initialize","wsFrames","ws","buildConfig","wsps","httpFrames","web","execFrameUrl","packs","executor","buildUniverse","wspServer","packServer","feat","wspFeatures","undefined"],"mappings":"OAAmCA,QAAI;OAE/BC,iBAAyF;OACzFC,aAA2CC,WAAO;OAClDC,cAAyDC,YAAQ;OACjEC,kBAAmBC,gBAA4D;OAC/EC,cAAU;OACVC,OAAG;OAeL,MAAOC,sBAAsBT,aAgBlCU,YAAYC,QACXC,MAAMD;AACN,MAAME,IAAMC,KAAKD;AACjBd,IAAIc,IAAIE,UAAU,qBAAsBJ,OAAOK,IAAM,QAAS,GAAG,IAAIT,WACnEU,SAASN,OAAOO,MAAQ,cACxBC,WAAYC,KAAgBP,IAAIQ,QAAQ,uBACxCC,WAAWd,GAAGe,WAAW,0CACzBC,gBAAe,SAA0BJ,KACzC,MAAMK,IAAwDX,KAAKY,SAAS;AAC5E,OAAO,IAAID,IAAIE,qBAAsBC,WAAW,CAC/Cf,IAAAA,UAKJH,YAAYC,QACX,IAAKA,OAAOkB,SAAUlB,OAAOkB,SAAW;AACxC,IAAKlB,OAAOkB,SAASC,GAAInB,OAAOkB,SAASC,GAAK;AAC9ClB,MAAMmB,YAAYpB;AAClBA,OAAOqB,KAAO/B,aAAaU,OAAOsB,WAAWC,IAAIC,aAAcxB,OAAOqB;AACtE,GAAIrB,OAAOyB,QAAU,KAAMzB,OAAOyB,MAAQjC,cAAcQ,OAAOsB,WAAWC,IAAIC,aAAcxB,OAAOyB;AACnG,GAAIzB,OAAO0B,WAAa,KAAM1B,OAAO0B,SAAWhC,kBAAkBM,OAAOsB,WAAWC,IAAIC,aAAcxB,OAAO0B,UAG9G3B,cAAcC,QACbC,MAAM0B,cAAc3B;AACpBG,KAAKyB,UAAY,IAAIrC,OAAOY,KAAMH,OAAOqB;AACzC,GAAIrB,OAAOyB,QAAU,KAAMtB,KAAK0B,WAAa,IAAIpC,QAAQU,KAAMH,OAAOyB;AACtE,GAAIzB,OAAO0B,WAAa,KAAMvB,KAAKuB,SAAW,IAAI/B,YAAYK,OAAO0B,UAItE3B,oBAAoB+B,MACnB,OAAO3B,KAAKH,OAAO+B,YAAc5B,KAAKH,OAAO+B,YAAYD,MAAQE","sourcesContent":["import {IReg, IRegPointer, IUiEnv, REG} from 'lib/commons/registry';\nimport {ISecurityCtxPointer} from 'lib/commons/security';\nimport {CoreUniverse, IBasicUniversePointer, ICoreUniverseEnv, IWsExecFrame, OCoreUniverseConfig} from \"lib/core/universe\";\nimport {configWspSrv, OWspFeatures, OWspSrvConfig, WspSrv} from \"lib/wsp/wsp\";\nimport {configPackSrv, IPacksInUniverse, OPacksInUniverseConfig, PackSrv} from \"lib/wsp/pack\";\nimport {configExecutorSrv, ExecutorSrv, IExecutorInUniverse, OExecutorInUniverseConfig} from \"lib/core/executor\";\nimport {AreaAsync} from \"lib/commons/areas\";\nimport {IO} from \"lib/commons/io/io\";\n\n\nexport interface OChainUniverseConfig extends OCoreUniverseConfig, OPacksInUniverseConfig, OExecutorInUniverseConfig {\n\twsps?: OWspSrvConfig\n\tbackEnd: 'fs' | 'odb'\n\twspFeatures?: OWspFeatures\n\t/** true si le serveur a pour vocation a être exploité localement (ex : scChain-desktop) */\n\tlocal?: boolean\n\t/** true si fonction drv active dans l'univers */\n\tdrv?: boolean\n\t/** true si fonction drf active dans l'univers */\n\tdrf?: boolean\n}\n\nexport class ChainUniverse extends CoreUniverse implements IPacksInUniverse, IExecutorInUniverse {\n\n\tconfig: OChainUniverseConfig;\n\n\treg: IReg<IChainEnv>;\n\n\twspServer: WspSrv;\n\n\tpackServer: PackSrv;\n\n\texecutor: ExecutorSrv;\n\n\twsFrames: {\n\t\tws: IWsExecFrame\n\t};\n\n\tconstructor(config: OChainUniverseConfig) {\n\t\tsuper(config);\n\t\tconst reg = this.reg;\n\t\tREG.reg.addToList(\"rolesExplorer:tabs\", config.id || \"chain\", 1, new AreaAsync<IRegPointer<ICoreUniverseEnv & IUiEnv>>()\n\t\t\t.setLabel(config.name || \"Entrepôt\")\n\t\t\t.setVisible((ctx) => {return reg.hasPerm(\"exportConfig.roles\")})\n\t\t\t.requireLib(IO.asEndPoint(\"/@back@/wsp/views/wspRolesExplorer.js\"))\n\t\t\t.setBodyBuilder(function (this:AreaAsync, ctx){\n\t\t\t\tconst MOD: typeof import(\"back/wsp/views/wspRolesExplorer\") = this._modules[0];\n\t\t\t\treturn new MOD.WspRolesExplorerTab().initialize({\n\t\t\t\t\treg\n\t\t\t\t})\n\t\t\t}));\n\t}\n\n\tbuildConfig(config: OChainUniverseConfig) {\n\t\tif (!config.wsFrames) config.wsFrames = {};\n\t\tif (!config.wsFrames.ws) config.wsFrames.ws = {};\n\t\tsuper.buildConfig(config);\n\t\tconfig.wsps = configWspSrv(config.httpFrames.web.execFrameUrl, config.wsps);\n\t\tif (config.packs !== null) config.packs = configPackSrv(config.httpFrames.web.execFrameUrl, config.packs);\n\t\tif (config.executor !== null) config.executor = configExecutorSrv(config.httpFrames.web.execFrameUrl, config.executor);\n\t}\n\n\tbuildUniverse(config: OChainUniverseConfig) {\n\t\tsuper.buildUniverse(config);\n\t\tthis.wspServer = new WspSrv(this, config.wsps);\n\t\tif (config.packs !== null) this.packServer = new PackSrv(this, config.packs);\n\t\tif (config.executor !== null) this.executor = new ExecutorSrv(config.executor);\n\t}\n\n\t/** Evalue les wspFeatures */\n\tgetWspFeatureStatus(feat: 'publicWsp' | 'extIt' | 'airIt'): \"alwaysTrue\" | \"alwaysFalse\" | \"trueByDefault\" | \"falseByDefault\" | \"deprecated\" | undefined {\n\t\treturn this.config.wspFeatures ? this.config.wspFeatures[feat] : undefined;\n\t}\n\n}\n\ninterface IChainUniversePointer extends IBasicUniversePointer {\n\tuniverse: ChainUniverse\n}\n\n/** Environnement de registre attendu pour un contexte d'un univers chain. */\nexport type IChainEnv = IChainUniversePointer & ISecurityCtxPointer;\n"]}