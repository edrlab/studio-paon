{"version":3,"sources":["/@lib@/core/errorLogger/sentryErrorLog.ts"],"names":["Desk","REG","SentryErrorLogDeskFeat","[object Object]","desk","projectDsn","this","isIn","d","reg","addToList","LC_init","async","projectToken","match","projectScript","document","createElement","src","head","appendChild","Promise","resolve","reject","onload","window","Sentry","forceLoad","onLoad","querySelector","addEventListener","Error","onerror","init","integrations","Integrations","Breadcrumbs","dom","console","fetch","xhr","ignoreErrors","registerSvc","LEVELAUTH_CORE","sentryErrorLog","e","error","ReportedError","super","message","msg","cause","sentryError","configureScope","scope","ctx","propName","setExtra","adminDetails","captureException"],"mappings":"OAAQA,SAAK;OACLC,QAAI;OASN,MAAOC,+BAA+BF,KAC3CG,WAAWC,KAAYC,YACtB,GAAIC,KAAKC,KAAKH,MAAO,OAAOA;AAC5B,MAAMI,EAAIJ;AAEVH,IAAIQ,IAAIC,UAAUV,KAAKW,QAAS,iBAAkB,EAAGC,UACpD,IACC,MAAO,CAAEC,cAAgBR,WAAWS,MAAM;AAC1C,MAAMC,cAAgBC,SAASC,cAAc;AAC7CF,cAAcG,IAAM,6BAA6BL;AACjDG,SAASG,KAAKC,YAAYL;MACpB,IAAIM,QAAQ,CAACC,QAASC,UAC3BR,cAAcS,OAAS,KACtBC,OAAOC,OAAOC;AACdF,OAAOC,OAAOE,OAAON;AAIrBN,SAASa,cAAc,UAAUC,iBAAiB,QAAS,KAC1DP,OAAO,IAAIQ,MAAM;AAInBhB,cAAciB,QAAU,IAAMT,OAAO,IAAIQ,MAAM;AAEhDN,OAAOC,OAAOO,KAAK,CAClBC,aAAc,CAAC,IAAIT,OAAOC,OAAOS,aAAaC,YAAY,CAACC,IAAK,KAAMC,QAAS,MAAOC,MAAO,KAAMC,IAAK,QAExGC,aAAc,CAAC;AAGhBxC,IAAIQ,IAAIiC,YAAY,WAAYzC,IAAI0C,eAAiB,EAAGC,gBACvD,MAAOC,GACRP,QAAQQ,MAAM;AACdR,QAAQQ,MAAMD;AAahB,OAAOrC,EAGRL,YAAYC,MAA6C,MAAO,WAAYqB,QAG7E,MAAMsB,sBAAsBhB,MAC3B5B,YAAqB2C,OACpBE;AADoB1C,KAAAwC,MAAAA,MAIrBG,cAAgB,OAAO3C,KAAKwC,MAAMI,IAElCC,YAAc,OAAO7C,KAAKwC,MAAMK,OAGjC,MAAMP,eAA4B,CACjCzC,SAAS2C,OACR,MAAMM,YAAc,IAAIL,cAAcD;AACtCrB,OAAOC,OAAO2B,eAAgBC,QAC7B,GAAIR,MAAMS,IAAK,CACd,IAAK,MAAMC,YAAYV,MAAMS,IAAK,CACjC,GAAIC,UAAY,aAAeA,UAAY,aAAc,CACxDF,MAAMG,SAASD,SAAUV,MAAMS,IAAIC,aAItC,GAAIV,MAAMY,aAAcJ,MAAMG,SAAS,eAAgBX,MAAMY;AAC7DjC,OAAOC,OAAOiC,iBAAiBP","sourcesContent":["import {Desk} from \"lib/commons/desk\";\nimport {REG} from \"lib/commons/registry\";\nimport {IError, IErrorCtx, IErrorLog} from \"lib/commons/errorLog\";\n\ndeclare global {\n\tinterface Window {\n\t\tSentry: any;\n\t}\n}\n\nexport class SentryErrorLogDeskFeat extends Desk {\n\tstatic add(desk: Desk, projectDsn: string): SentryErrorLogDeskFeat {\n\t\tif (this.isIn(desk)) return desk;\n\t\tconst d = desk as SentryErrorLogDeskFeat;\n\n\t\tREG.reg.addToList(Desk.LC_init, 'sentryErrorLog', 1, async () => {\n\t\t\ttry {\n\t\t\t\tconst [, projectToken] = projectDsn.match(\"https://(.+?)@\");\n\t\t\t\tconst projectScript = document.createElement('script');\n\t\t\t\tprojectScript.src = `https://js.sentry-cdn.com/${projectToken}.min.js`;\n\t\t\t\tdocument.head.appendChild(projectScript);\n\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\tprojectScript.onload = () => {\n\t\t\t\t\t\twindow.Sentry.forceLoad();\n\t\t\t\t\t\twindow.Sentry.onLoad(resolve);\n\t\t\t\t\t\t// Le loader de Sentry ne gère pas l'échec du chargement du script... (qui survient si il est bloqué par une extension antipub)\n\t\t\t\t\t\t// Celui-ci est inséré avant le premier script de la page\n\t\t\t\t\t\t// TODO hack, à revoir sur les mises à jour de Sentry\n\t\t\t\t\t\tdocument.querySelector('script').addEventListener('error', () => {\n\t\t\t\t\t\t\treject(new Error(\"Unable to load the Sentry SDK script\"));\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tprojectScript.onerror = () => reject(new Error(\"Unable to load the Sentry project script\"));\n\t\t\t\t});\n\t\t\t\twindow.Sentry.init({\n\t\t\t\t\tintegrations: [new window.Sentry.Integrations.Breadcrumbs({dom: true, console: false, fetch: true, xhr: true})],\n\t\t\t\t\t// cf https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n\t\t\t\t\tignoreErrors: [/^ResizeObserver loop limit exceeded$/]\n\t\t\t\t\t//defaultIntegrations: false\n\t\t\t\t});\n\t\t\t\tREG.reg.registerSvc(\"errorLog\", REG.LEVELAUTH_CORE + 1, sentryErrorLog);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\"Sentry init failed\");\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t});\n\n\t\t/*\n\t\t\t\tlet showReportDialog = new Action<IErrorActionCtx>()\n\t\t\t\t\t.setLabel(\"Apporter des détails...\")\n\t\t\t\t\t.setExecute(function (ctx: IErrorActionCtx) {\n\t\t\t\t\t\tPOPUP.findPopupableParent(ctx.emitter).close();\n\t\t\t\t\t\twindow.Sentry.showReportDialog();\n\t\t\t\t\t});\n\t\t\t\tREG.reg.addToList(\"actions:error\", \"showReportDialog\", 1, showReportDialog, 0);\n\t\t*/\n\t\treturn d;\n\t}\n\n\tstatic isIn(desk: Desk): desk is SentryErrorLogDeskFeat {return 'Sentry' in window}\n}\n\nclass ReportedError extends Error {\n\tconstructor(readonly error: IError) {\n\t\tsuper();\n\t}\n\n\tget message() { return this.error.msg }\n\n\tget cause() { return this.error.cause }\n}\n\nconst sentryErrorLog: IErrorLog = {\n\tlogError(error: IError) {\n\t\tconst sentryError = new ReportedError(error);\n\t\twindow.Sentry.configureScope((scope: any) => {\n\t\t\tif (error.ctx) {\n\t\t\t\tfor (const propName in error.ctx) {\n\t\t\t\t\tif (propName == 'shortDesc' || propName == 'shortDescs') {\n\t\t\t\t\t\tscope.setExtra(propName, error.ctx[propName as keyof IErrorCtx]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (error.adminDetails) scope.setExtra('adminDetails', error.adminDetails);\n\t\t\twindow.Sentry.captureException(sentryError);\n\t\t});\n\t}\n};\n"]}