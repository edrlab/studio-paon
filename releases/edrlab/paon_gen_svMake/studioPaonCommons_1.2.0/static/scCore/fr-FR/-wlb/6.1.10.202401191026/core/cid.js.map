{"version":3,"sources":["/@lib@/core/cid.tsx"],"names":["IO","UrlQs","DOM","JSX","EventMgr","ERROR","ECidSessionState","CidSession","[object Object]","config","this","state","notStarted","sessionProps","metasOut","Object","assign","metasIn","onStateChange","Error","process","cidProcess","prcs","CID","filterIsFirst","processes","manifest","isProcess","size","changeState","uiProcessSel","uiHandler","selectProcess","aborted","keys","next","value","onStepFailed","foreignMetas","metas","fm","m","values","isMatch","is","name","cidTransport","transport","authenticating","authUrl","needWebAuth","uiAuth","processResult","webAuth","step","steps","currentStep","inStep","doStep","ended","e","failed","report","currentFrame","removeInteractPending","isClosed","datas","resolver","currentResolver","cidAuth","error","cidInteraction","frame","addInteractPending","Promise","resolve","reject","newProps","sessProps","k","v","toString","JSON","stringify","has","futureResult","result","errorReason","errorHttpCode","_updateProps","reason","httpCode","failedError","failedReason","failedHttpCode","emit","CidManifest","url","def","transports","manifestUrl","localName","namespaceURI","CID_NS","findLastChild","n","IS_element","trsp","firstElementChild","nextElementSibling","push","CidWebTransport","prc","CidProcess","getTransport","getAttribute","label","_label","undefined","parseLabel","Array","from","ids","length","id","split","tr","find","t","parseIs","_steps","CidExchangeStep","CidInteractiveStep","CidUploadStep","_metas","Map","meta","set","CidMetaDef","isExcludeForRecall","CidStep","session","uiStepDef","getUiStepDef","urlObj","parseCidStepUrl","getStr","webInteract","POST_MULTIPART","POST_URLENC","Math","round","random","form","createElement","method","enctype","target","action","enrichForm","submit","GET","src","enrichUrl","debug","_setCurrentFrame","elt","qs","enrichParams","indexOf","p","checkNeeds","append","metasUsesForStep","missingNeeds","metasNeedsForStep","join","appendChild","type","CidWebAuthStep","interact","findFirstChild","resp","doRequest","text","ok","status","parse","uiWait","uiResult","sysWait","getSystemWaitDef","setTimeout","doWebExchange","stepDef","webExch","webExchange","body","FormData","headers","content-type","fetch","credentials","queryString","header","enrichHeaders","uploadUrl","webUpload","customUpload","res","init","formData","propsMedia","bodyToUpload","PUT","POST","post","cidSession","use","knownMetas","outKey","need","props","Set","ch","webReq","req","getPropsMedia","r","auths","webAuthStep","checkAuth","auth","CidL10nStr","key","default","super","frag","substring","lang","lg","get","lastIndexOf","att","trim","parent","lb","textContent","hasAttribute","interactPending","window","addEventListener","ev","val","entries","contentWindow","source","onCidFrameMessage","data","delete","sess","CidHost","mn","getCidManifest","cidHost","async","path","absoluteUrl","Headers","parseDomValid","documentElement","getCidHosts","reg","univ","env","universe","cidHosts","doc","httpFrames","web","execFrameUrl","fetchDom","getCidHostsForInput","list","filter","getCidHostsForOutput","getCidManifestLabel","hosts","h","filterIs","objects","isList","forEach","add","addIn","filterIsOr","is1","is2","k1","cidErrorToMsg","cidError","IS_FileName","IS_ContentType","IS_Resend"],"mappings":"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","sourcesContent":["import {IBody, IO, UrlQs} from \"lib/commons/io/io\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {EventMgr} from \"lib/commons/events\";\nimport {IUniverseEnv, Universe} from \"lib/core/universe\";\nimport {IReg} from \"lib/commons/registry\";\nimport {ERROR} from \"lib/core/errorReport\";\n\nexport interface OCidSessionConfig {\n\t/** Manifest associé à cette session. */\n\tmanifest: CidManifest\n\n\t/** Gestionnaire graphique. */\n\tuiHandler: ICidUiHandler;\n\n\t/** Process déjà connu et sélectionné */\n\tprocess?: CidProcess\n\n\t/** Sélection du process par la prop \"is\" */\n\tisProcess?: string[]\n\n\t/** Liste restreinte des Process dans lequel peut choisir */\n\tprocesses?: CidProcess[]\n\n\t/** Ignorer les steps d'interaction optionnelles **/\n\tcidPassOptionalInteraction?: boolean\n\n\t/**\n\t * Métas entrantes identifées par leur name. Généralement issues d'un mémoire persistante\n\t * d'un précédent déploiement de la même ressource.\n\t */\n\tmetasIn?: Dict<string>\n\n\t/**\n\t * Valeurs de metas apportées et étrangères au process cible mais potentiellement\n\t * utilisables par ce dernier avec un matching des is.\n\t *\n\t * @see constantes CID.IS_xxx définissant des \"is\" standards.\n\t */\n\tforeignMetas?: { is: string[], value: string | ((session: CidSession) => string) }[]\n\n\t/**\n\t * Gestion personnalisée de l'upload (ex: redirigée via notre couche serveur, pas par le client).\n\t *\n\t * Si retourne null, l'impl standard est réassumée avec session.config.bodyToUpload\n\t * (qui a pu être affecté au cours de cet appel de méthode).\n\t */\n\tcustomUpload?: (session: CidSession, uploadStep: CidUploadStep, webUpload: ICidWebUploadDef) => Promise<null | Response>\n\n\t/** Contenu à uploader à l'étape cid:upload. */\n\tbodyToUpload?: IBody\n\n}\n\n/**\n * Comportements nécessaires à implémenter par le contexte graphique.\n *\n * NON implémenté par rapport aux possibilités du protocole :\n * - Exploitation des cid:restriction\n * - Construction d'une interface automatique de saisie des champs manquants.\n */\nexport interface ICidUiHandler {\n\n\t/**\n\t * Interface de sélection du process.\n\t * @return Si null abandon et cloture de la session.\n\t */\n\tselectProcess(session: CidSession, choices: Set<CidProcess>): Promise<CidProcess | null>\n\n\t/** Authentification par une iframe web. */\n\twebAuth(session: CidSession, step: CidWebAuthStep): Promise<ICidStepResult>\n\n\t/**\n\t * Etape interactive par une iframe web.\n\t * Le handler doit utiliser step.initFrame() pour initilaiser l'iframe d'interaction.\n\t */\n\tinteract(session: CidSession, step: CidStep): Promise<ICidStepResult>\n\n\t///** Edition des metas manquantes. */\n\t//editMetas(session: CidSession, metas: CidMeta[]): Promise<ICidUiResult>\n\n\t/**\n\t * Demande l'ouverture d'une fenêtre d'attente pendant un traitement asynchrone.\n\t * Le handler doit utiliser step.initFrame() pour initilaiser l'iframe d'interaction.\n\t *\n\t * @return null si le ICidUiHandler si la fenetre d'attente n'a pas été ouverte ou si la fin de l'étape en cours\n\t *  n'a pas été atteinte. le systemWait devrait alors prendre la main pour attendre la fin de l'étape.\n\t */\n\tuiWait(session: CidSession, step: CidStep): Promise<null | ICidStepResult>\n}\n\nexport interface ICidStepResult {\n\terror?: ECidStepError\n\terrorReason?: string\n\terrorHttpCode?: number\n\tmetas?: Dict<string>\n}\n\nexport enum ECidSessionState {\n\tnotStarted,\n\tuiProcessSel,\n\tauthenticating,\n\tuiAuth,\n\tinStep,\n\t/** Session achevée avec succès. */\n\tended,\n\t/** Abandonné par l'utilisateur au cours d'une interaction. */\n\taborted,\n\t/** Echec au cours de l'exécution d'un étape. */\n\tfailed\n}\n\nexport type ECidStepError = 'abort' | 'authFailed' | 'serverFailed' | 'other';\ntype ECidFailedError = ECidStepError | 'noProcessFound';\n\ninterface Iisable {\n\tis?: string[]\n}\n\n/**\n * Session CID.\n */\nexport class CidSession {\n\n\t/** Etat de la session. */\n\tstate: ECidSessionState;\n\n\t/** Evènement dispatché à chaque changement d'état et d'étape. */\n\tonStateChange: EventMgr<(session: this) => void>;\n\n\t/** Process sélectionné. */\n\tcidProcess: CidProcess;\n\n\t/** Transport sélectionné. */\n\tcidTransport: ICidTransport;\n\n\t/** Etape en cours. */\n\tcurrentStep: CidStep;\n\n\t/** Iframe en cours. */\n\tcurrentFrame: HTMLIFrameElement;\n\n\t/** Resolver de la promise en cours. */\n\tcurrentResolver: (resolve: ICidStepResult) => void;\n\n\t/** Metas modifiées au cours du processus. */\n\tmetasOut?: Dict<string>;\n\n\t/** SessionProperties à renvoyer dans chaque requête. */\n\tsessionProps?: Dict<string>;\n\n\t/** En cas d'echec, mémoire de l'erreur survenue au cours de la session. */\n\tfailedError?: ECidFailedError;\n\tfailedReason?: string;\n\tfailedHttpCode?: number;\n\n\tconstructor(public config: OCidSessionConfig) {\n\t\tthis.state = ECidSessionState.notStarted;\n\t\tthis.sessionProps = {};\n\t\tthis.metasOut = Object.assign({}, config.metasIn);\n\t\tthis.onStateChange = new EventMgr();\n\t}\n\n\t/** Execute la session. */\n\tasync doSession(): Promise<void> {\n\t\ttry {\n\t\t\tif (this.state !== ECidSessionState.notStarted) throw Error(\"CidSession already started\");\n\t\t\t//1ère étape : sel du process.\n\t\t\tif (this.config.process) {\n\t\t\t\tthis.cidProcess = this.config.process;\n\t\t\t} else {\n\t\t\t\tconst prcs = CID.filterIsFirst(this.config.processes || this.config.manifest.processes, this.config.isProcess);\n\t\t\t\tif (prcs.size > 1) {\n\t\t\t\t\t//Besoin d'une sélection par le user.\n\t\t\t\t\tthis.changeState(ECidSessionState.uiProcessSel);\n\t\t\t\t\tthis.cidProcess = await this.config.uiHandler.selectProcess(this, prcs);\n\t\t\t\t\tif (this.cidProcess == null) {\n\t\t\t\t\t\tthis.changeState(ECidSessionState.aborted);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tif (this.state === ECidSessionState.aborted) return; // annulation async\n\t\t\t\t\t}\n\t\t\t\t} else if (prcs.size === 1) {\n\t\t\t\t\t//1 process trouvé\n\t\t\t\t\tthis.cidProcess = prcs.keys().next().value;\n\t\t\t\t} else {\n\t\t\t\t\tthis.cidProcess = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.cidProcess == null) {\n\t\t\t\tthis.onStepFailed('noProcessFound', \"Aucun traitement compatible n'a pu être trouvé.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//2ème étape : matching des foreignMetas avec les metas de ce process\n\t\t\tif (this.config.foreignMetas) {\n\t\t\t\tconst metas = this.cidProcess.metas;\n\t\t\t\tfor (const fm of this.config.foreignMetas) {\n\t\t\t\t\tfor (const m of metas.values()) {\n\t\t\t\t\t\tif (CID.isMatch(fm.is, m.is)) {\n\t\t\t\t\t\t\tthis.metasOut[m.name] = typeof fm.value === 'function' ? fm.value(this) : fm.value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//3ème étape : auth\n\t\t\tthis.cidTransport = this.cidProcess.transport;\n\t\t\tthis.changeState(ECidSessionState.authenticating);\n\t\t\tconst authUrl = await this.cidTransport.needWebAuth(this);\n\t\t\t// @ts-ignore\n\t\t\tif (this.state === ECidSessionState.aborted) return; // annulation async\n\t\t\tif (authUrl) {\n\t\t\t\tthis.changeState(ECidSessionState.uiAuth);\n\t\t\t\tif (await this.processResult(this.config.uiHandler.webAuth(this, authUrl))) return;\n\t\t\t}\n\n\t\t\t//Etapes suivantes: Steps du process.\n\t\t\tfor (const step of this.cidProcess.steps) {\n\t\t\t\tthis.currentStep = step;\n\t\t\t\tthis.changeState(ECidSessionState.inStep);\n\t\t\t\tif (await this.processResult(step.doStep(this))) return;\n\t\t\t}\n\n\t\t\t//Fin\n\t\t\tthis.changeState(ECidSessionState.ended);\n\t\t} catch (e) {\n\t\t\tthis.changeState(ECidSessionState.failed);\n\t\t\tERROR.report(\"Une erreur est survenue au cours de ce traitement\", e);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\t//cleanup\n\t\t\tif (this.currentFrame) removeInteractPending(this.currentFrame, this);\n\t\t}\n\t}\n\n\t/** Abandon de la session en cours. */\n\tabortSession() {\n\t\tif (!this.isClosed()) this.changeState(ECidSessionState.aborted);\n\t}\n\n\tisClosed(): boolean {\n\t\treturn this.state === ECidSessionState.ended || this.state === ECidSessionState.failed || this.state === ECidSessionState.aborted;\n\t}\n\n\t/**\n\t * Réception d'un msg d'une iframe de webAuth, interaction ou userWait.\n\t *\n\t * Généralement le contexte graphique implémentant ICidUiHandler n'appelle pas elle-même\n\t * cette méthode : le message provenant de l'iframe est capté automatiquement (cf addInteractPending()).\n\t *\n\t * Mais si le contexte graphique permet de supprimer / fermer l'iframe de l'extérieur (iframe dans un dialogue...),\n\t * alors il doit appeler cette méthode lui-même avec en paramètre :\n\t * - si c'est un webAuth : {cidAuth:\"failed\"}\n\t * - si c'est une interaction ou un userWait : {cidInteraction:\"aborted\"}\n\t *\n\t */\n\tonCidFrameMessage(datas: JWebAuthDatas | JInteractionDatas) {\n\t\tif (!removeInteractPending(this.currentFrame, this)) return;\n\t\tconst resolver = this.currentResolver;\n\t\tif (!resolver) return;\n\t\tthis.currentResolver = null;\n\t\tthis.currentFrame = null;\n\n\t\tif (this.state === ECidSessionState.uiAuth) {\n\t\t\t//webAuth\n\t\t\tif (datas.cidAuth === \"succeeded\") {\n\t\t\t\tdelete datas.cidAuth;\n\t\t\t\tresolver({metas: datas});\n\t\t\t} else {\n\t\t\t\tresolver({error: \"authFailed\"});\n\t\t\t}\n\t\t} else if (this.currentStep) {\n\t\t\t//interaction ou userWait\n\t\t\tif (datas.cidInteraction === \"ended\") {\n\t\t\t\tdelete datas.cidInteraction;\n\t\t\t\tresolver({metas: datas});\n\t\t\t} else {\n\t\t\t\tresolver({error: \"abort\"});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Affectation de la UI frame pour l'étape en cours (interact, userWait ou webAuth).\n\t * Retourne un Promise qui sera résolu à l'appel de onCidFrameMessage()\n\t */\n\t_setCurrentFrame(frame: HTMLIFrameElement): Promise<ICidStepResult> {\n\t\taddInteractPending(frame, this);\n\t\tthis.currentFrame = frame;\n\t\treturn new Promise<ICidStepResult>((resolve, reject) => {\n\t\t\tthis.currentResolver = resolve;\n\t\t});\n\t}\n\n\t/** Update les props (metas et sessionProps) de la session. */\n\t_updateProps(newProps: Dict<any>) {\n\t\tif (!newProps) return;\n\t\tconst sessProps = this.cidTransport.sessionProps;\n\t\tfor (const k in newProps) {\n\t\t\tlet v = newProps[k];\n\t\t\tswitch (typeof v) {\n\t\t\tcase \"boolean\":\n\t\t\tcase \"number\":\n\t\t\tcase \"bigint\":\n\t\t\t\tv = v.toString();\n\t\t\t\tbreak;\n\t\t\tcase \"object\":\n\t\t\t\tv = JSON.stringify(v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.sessionProps && sessProps && sessProps.has(k)) this.sessionProps[k] = v;\n\t\t\telse this.metasOut[k] = v;\n\t\t}\n\t}\n\n\t/** Traite un résultat de step et retourne true si fin de la session (car erreur). */\n\tprotected async processResult(futureResult: Promise<ICidStepResult>): Promise<boolean> {\n\t\tlet result: ICidStepResult;\n\t\ttry {\n\t\t\tresult = await futureResult;\n\t\t} catch (e) {\n\t\t\tresult = {\n\t\t\t\terror: \"serverFailed\",\n\t\t\t\terrorReason: e,\n\t\t\t}\n\t\t}\n\t\tif (this.state === ECidSessionState.aborted) return true; //Session abandonnée entre temps.\n\t\tif (result.error) {\n\t\t\tif (result.error === \"abort\") {\n\t\t\t\tthis.changeState(ECidSessionState.aborted);\n\t\t\t} else {\n\t\t\t\tthis.onStepFailed(result.error, result.errorReason, result.errorHttpCode);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tthis._updateProps(result.metas);\n\t\treturn false;\n\t}\n\n\tprotected onStepFailed(error: ECidFailedError, reason: string, httpCode?: number) {\n\t\tthis.failedError = error;\n\t\tthis.failedReason = reason;\n\t\tthis.failedHttpCode = httpCode;\n\t\tthis.changeState(ECidSessionState.failed);\n\t}\n\n\tprotected changeState(state: ECidSessionState) {\n\t\tthis.state = state;\n\t\tthis.onStateChange.emit(this);\n\t}\n}\n\n/**\n *\n */\nexport class CidManifest {\n\n\tmanifestUrl: string;\n\n\tget label(): CidL10nStr {return this._label === undefined ? (this._label = parseLabel(this.def)) : this._label}\n\n\tprotected _label: CidL10nStr;\n\n\tprocesses: CidProcess[] = [];\n\n\ttransports: ICidTransport[] = [];\n\n\tconstructor(url: string, public def: Element) {\n\t\tthis.manifestUrl = url;\n\t\tif (!def || def.localName !== \"manifest\" || def.namespaceURI !== CID.CID_NS) throw Error(\"Invalid cid manifest: \" + url);\n\n\t\t//Transports\n\t\tconst transports = DOM.findLastChild(def, (n: Node): n is Element => DOM.IS_element(n) && n.localName === \"transports\" && n.namespaceURI === CID.CID_NS);\n\t\tif (!transports) throw Error(\"No transports definition found\");\n\t\tfor (let trsp = transports.firstElementChild; trsp; trsp = trsp.nextElementSibling) {\n\t\t\tif (trsp.localName === \"webTransport\" && trsp.namespaceURI === CID.CID_NS) {\n\t\t\t\tthis.transports.push(new CidWebTransport(trsp));\n\t\t\t}\n\t\t}\n\t\t//Process\n\t\tfor (let prc = def.firstElementChild; prc; prc = prc.nextElementSibling) {\n\t\t\tif (prc.localName === \"process\" && prc.namespaceURI === CID.CID_NS) {\n\t\t\t\tthis.processes.push(new CidProcess(prc, this.getTransport(prc.getAttribute(\"ids\"))));\n\t\t\t}\n\t\t}\n\t}\n\n\tgetProcesses(...is: string[]): CidProcess[] {\n\t\treturn Array.from(CID.filterIsFirst(this.processes, is));\n\t}\n\n\tgetTransport(ids: string | null): ICidTransport | null {\n\t\tif (!ids || ids.length === 0) return this.transports[0];\n\t\tfor (const id of ids.split(' ')) {\n\t\t\tconst tr = this.transports.find((t) => t.id === id);\n\t\t\tif (tr) return tr;\n\t\t}\n\t\treturn null;\n\t}\n\n}\n\nexport interface ICidManifestPointer {\n\tcidManifest?: CidManifest;\n}\n\n\nexport class CidProcess {\n\n\tis: string[];\n\n\tget label(): CidL10nStr {return this._label === undefined ? (this._label = parseLabel(this.def)) : this._label}\n\n\tprotected _label: CidL10nStr;\n\n\tget steps(): CidStep[] {\n\t\tif (!this._steps) {\n\t\t\tthis._steps = [];\n\t\t\tfor (let step = this.def.firstElementChild; step; step = step.nextElementSibling) {\n\t\t\t\tif (step.namespaceURI !== CID.CID_NS) continue;\n\t\t\t\tif (step.localName === \"exchange\") this._steps.push(new CidExchangeStep(step));\n\t\t\t\telse if (step.localName === \"interact\") this._steps.push(new CidInteractiveStep(step));\n\t\t\t\telse if (step.localName === \"upload\") this._steps.push(new CidUploadStep(step));\n\t\t\t}\n\t\t}\n\t\treturn this._steps\n\t}\n\n\tprotected _steps: CidStep[];\n\n\tget metas(): Map<string, CidMetaDef> {\n\t\tif (!this._metas) {\n\t\t\tthis._metas = new Map();\n\t\t\tfor (let meta = this.def.firstElementChild; meta; meta = meta.nextElementSibling) {\n\t\t\t\tif (meta.namespaceURI !== CID.CID_NS) continue;\n\t\t\t\tif (meta.localName === \"meta\") this._metas.set(meta.getAttribute(\"name\"), new CidMetaDef(meta));\n\t\t\t}\n\t\t}\n\t\treturn this._metas;\n\t}\n\n\tprotected _metas: Map<string, CidMetaDef>;\n\n\tconstructor(public def: Element, public transport: ICidTransport) {\n\t\tif (!transport) throw Error(\"No transport found\");\n\t\tthis.is = parseIs(def);\n\t}\n\n}\n\n/** Définition d'une meta dans un process. */\nexport class CidMetaDef {\n\tis?: string[];\n\n\tget name(): string {return this.def.getAttribute(\"name\")}\n\n\t/** Peut servir à éliminer une meta de la liste des metas à stocker pour un prochain appel à ce même process. */\n\tget isExcludeForRecall(): boolean {return this.def.getAttribute(\"forRecall\") === \"exclude\"}\n\n\tconstructor(public def: Element) {\n\t\tthis.is = parseIs(def);\n\t}\n}\n\n/** Step d'un process ou step de webAuth. */\nexport abstract class CidStep {\n\n\tconstructor(public def: Element) {}\n\n\tgetUiStepDef(): Element {return this.def}\n\n\tabstract doStep(session: CidSession): Promise<ICidStepResult>\n\n\t/** Appelé par le contexte graphique pour initialiser sa frame et obtenir la Promise à retourner. */\n\tinitFrame(frame: HTMLIFrameElement & ICidFrame, session: CidSession): Promise<ICidStepResult> {\n\t\tconst uiStepDef = this.getUiStepDef();\n\t\tconst urlObj = parseCidStepUrl(uiStepDef);\n\t\tconst url = urlObj ? urlObj.getStr(\"fr\") : null;\n\t\tconst webInteract = session.cidTransport.webInteract;\n\t\tif (webInteract.POST_MULTIPART || webInteract.POST_URLENC) {\n\t\t\t//on passe par un formulaire POST pour pointer la frame target.\n\t\t\tif (!frame.name) frame.name = \"cid\" + Math.round(Math.random() * 10000000);\n\t\t\tconst form = <form method=\"POST\"\n\t\t\t\t\t\t\t\t\t\t\t\t enctype={webInteract.POST_URLENC ? \"application/x-www-form-urlencoded\" : \"multipart/form-data\"}\n\t\t\t\t\t\t\t\t\t\t\t\t target={frame.name}\n\t\t\t\t\t\t\t\t\t\t\t\t action={url}/> as HTMLFormElement;\n\t\t\tCidStep.enrichForm(form, session, uiStepDef);\n\t\t\tform.submit();\n\t\t} else if (webInteract.GET) {\n\t\t\t//on passe en QS (header impossible)\n\t\t\tframe.src = CidStep.enrichUrl(url, session, uiStepDef);\n\t\t} else {\n\t\t\tthrow Error(\"webInteract not allowed in this transport: \" + DOM.debug(session.cidTransport.def));\n\t\t}\n\t\treturn session._setCurrentFrame(frame);\n\t}\n\n\tstatic enrichUrl(url: string, session: CidSession, elt: Element): string {\n\t\tconst qs = new UrlQs();\n\t\tthis.enrichParams(qs, session, elt);\n\t\tif (url.indexOf('?') > 0) return url += \"&\" + qs.toString();\n\t\telse return url += \"?\" + qs.toString();\n\t}\n\n\tstatic enrichParams<T extends URLSearchParams | FormData>(p: T, session: CidSession, elt: Element, checkNeeds: boolean = true): T {\n\t\tfor (const k in session.sessionProps) (p as any).append(k, session.sessionProps[k]);\n\t\tfor (const k of metasUsesForStep(elt, session)) {\n\t\t\tconst v = session.metasOut[k];\n\t\t\tif (v != null) (p as any).append(k, v);\n\t\t}\n\t\tlet missingNeeds = [];\n\t\tfor (const k of metasNeedsForStep(elt)) {\n\t\t\tconst v = session.metasOut[k];\n\t\t\tif (v != null) (p as any).append(k, v);\n\t\t\telse\n\t\t\t\tmissingNeeds.push(k);\n\t\t}\n\t\tif (checkNeeds && missingNeeds.length > 0)\n\t\t\tthrow Error(\"Missing needs properties: \" + missingNeeds.join(\", \"));\n\t\treturn p;\n\t}\n\n\tstatic enrichForm(form: HTMLFormElement, session: CidSession, elt: Element, checkNeeds: boolean = true): void {\n\t\tfor (const k in session.sessionProps) form.appendChild(<input type=\"hidden\" name={k} value={session.sessionProps[k]}/>);\n\t\tfor (const k of metasUsesForStep(elt, session)) {\n\t\t\tconst v = session.metasOut[k];\n\t\t\tif (v != null) form.appendChild(<input type=\"hidden\" name={k} value={v}/>)\n\t\t}\n\t\tlet missingNeeds = [];\n\t\tfor (const k of metasNeedsForStep(elt)) {\n\t\t\tconst v = session.metasOut[k];\n\t\t\tif (v != null) form.appendChild(<input type=\"hidden\" name={k} value={v}/>)\n\t\t\telse\n\t\t\t\tmissingNeeds.push(k);\n\t\t}\n\t\tif (checkNeeds && missingNeeds.length > 0)\n\t\t\tthrow Error(\"Missing needs properties: \" + missingNeeds.join(\", \"));\n\t}\n\n\tstatic enrichHeaders(session: CidSession, elt: Element, checkNeeds: boolean = true): Dict<any> {\n\t\tconst p: Dict<any> = {};\n\t\tfor (const k in session.sessionProps) p[k] = session.sessionProps[k];\n\t\tfor (const k of metasUsesForStep(elt, session)) {\n\t\t\tconst v = session.metasOut[k];\n\t\t\tif (v != null) p[k] = v;\n\t\t}\n\t\tlet missingNeeds = [];\n\t\tfor (const k of metasNeedsForStep(elt)) {\n\t\t\tconst v = session.metasOut[k];\n\t\t\tif (v != null) p[k] = v;\n\t\t\telse\n\t\t\t\tmissingNeeds.push(k);\n\t\t}\n\t\tif (checkNeeds && missingNeeds.length > 0)\n\t\t\tthrow Error(\"Missing needs properties: \" + missingNeeds.join(\", \"));\n\t\treturn p;\n\t}\n}\n\nexport class CidWebAuthStep extends CidStep {\n\n\tdoStep(session: CidSession): Promise<ICidStepResult> {\n\t\treturn session.config.uiHandler.webAuth(session, this);\n\t}\n}\n\nexport class CidInteractiveStep extends CidStep {\n\n\tdoStep(session: CidSession): Promise<ICidStepResult> {\n\t\treturn session.config.uiHandler.interact(session, this);\n\t}\n}\n\nexport class CidExchangeStep extends CidStep {\n\n\tgetUiStepDef(): Element {return DOM.findFirstChild(this.def, (n: Node): n is Element => DOM.IS_element(n) && n.localName === \"userWait\" && n.namespaceURI === CID.CID_NS)}\n\n\tgetSystemWaitDef(): Element {return DOM.findFirstChild(this.def, (n: Node): n is Element => DOM.IS_element(n) && n.localName === \"systemWait\" && n.namespaceURI === CID.CID_NS)}\n\n\tasync doStep(session: CidSession): Promise<ICidStepResult> {\n\t\tlet resp = await this.doRequest(session);\n\t\tconst text = await resp.text();\n\t\tif (!resp.ok) return {error: 'serverFailed', errorReason: text, errorHttpCode: resp.status};\n\t\tconst metas = text ? JSON.parse(text) : null;\n\t\tsession._updateProps(metas);\n\t\twhile (resp.status === 202) {\n\t\t\t//Asynch\n\t\t\tconst uiWait = this.getUiStepDef();\n\t\t\tif (uiWait) {\n\t\t\t\tconst uiResult = await session.config.uiHandler.uiWait(session, this);\n\t\t\t\tif (uiResult) return uiResult;\n\t\t\t}\n\t\t\tconst sysWait = this.getSystemWaitDef();\n\t\t\tif (sysWait) {\n\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 3000));\n\t\t\t\tresp = await CidExchangeStep.doWebExchange(session, sysWait);\n\t\t\t\tif (!resp.ok) return {error: 'serverFailed', errorReason: text, errorHttpCode: resp.status};\n\t\t\t\tconst metas = text ? JSON.parse(text) : null;\n\t\t\t\tsession._updateProps(metas);\n\t\t\t}\n\t\t}\n\t\treturn {};//Ok et pas de metas, traités à chaque remontée\n\t}\n\n\tdoRequest(session: CidSession): Promise<Response> {\n\t\treturn CidExchangeStep.doWebExchange(session, this.def);\n\t}\n\n\tstatic async doWebExchange(session: CidSession, stepDef: Element): Promise<Response> {\n\t\tconst urlObj = parseCidStepUrl(stepDef);\n\t\tconst url = urlObj ? urlObj.getStr(\"fr\") : null;\n\t\tconst webExch = session.cidTransport.webExchange;\n\t\tif (webExch.POST_URLENC || webExch.POST_MULTIPART) {\n\t\t\tconst body = CidStep.enrichParams(webExch.POST_URLENC ? new UrlQs() : new FormData(), session, stepDef);\n\t\t\tconst headers = webExch.POST_URLENC ? {\"content-type\": \"application/x-www-form-urlencoded\"} : {};\n\t\t\treturn fetch(url, {method: \"POST\", body, headers, credentials: \"include\"});\n\t\t} else if (webExch.GET && webExch.GET.queryString) {\n\t\t\treturn fetch(CidStep.enrichUrl(url, session, stepDef), {credentials: \"include\"});\n\t\t} else if (webExch.GET && webExch.GET.header) {\n\t\t\treturn fetch(url, {headers: CidStep.enrichHeaders(session, stepDef), credentials: \"include\"});\n\t\t} else throw Error(\"webExchange properties method not found in transport: \" + DOM.debug(session.cidTransport.def));\n\t}\n}\n\nexport class CidUploadStep extends CidExchangeStep {\n\n\tget uploadUrl(): string {return this.def.getAttribute(\"url\")}\n\n\tasync doRequest(session: CidSession): Promise<Response> {\n\t\tconst stepDef = this.def;\n\t\tlet url = this.uploadUrl;\n\t\tconst webUpload = session.cidTransport.webUpload;\n\t\tif (session.config.customUpload) {\n\t\t\t//Déploiement custom.\n\t\t\tconst res = await session.config.customUpload(session, this, webUpload);\n\t\t\tif (res != null) return res;\n\t\t}\n\t\t//Déploiement standard avec session.config.bodyToUpload\n\t\tconst init: RequestInit = {credentials: \"include\"};\n\t\tlet formData: FormData;\n\t\tlet propsMedia: ICidPropsMedia;\n\t\tif (webUpload.POST_MULTIPART) {\n\t\t\tpropsMedia = webUpload.POST_MULTIPART;\n\t\t\tformData = new FormData();\n\t\t\tformData.append(\"cidContent\", session.config.bodyToUpload as any); //XXX PAs sûr que FormData accepte\n\t\t\tinit.method = \"POST\";\n\t\t\tinit.body = formData;\n\t\t} else if (webUpload.PUT) {\n\t\t\tpropsMedia = webUpload.PUT;\n\t\t\tinit.method = \"PUT\";\n\t\t\tinit.body = session.config.bodyToUpload;\n\t\t} else if (webUpload.POST) {\n\t\t\tpropsMedia = webUpload.POST;\n\t\t\tinit.method = \"POST\";\n\t\t\tinit.body = session.config.bodyToUpload;\n\t\t} else throw Error(\"webUpload method not found in transport: \" + DOM.debug(session.cidTransport.def));\n\n\t\tif (propsMedia.post) CidStep.enrichParams(formData, session, stepDef);\n\t\telse if (propsMedia.queryString) url = CidStep.enrichUrl(url, session, stepDef);\n\t\telse if (propsMedia.header) init.headers = CidStep.enrichHeaders(session, stepDef);\n\t\telse throw Error(\"webUpload properties media not found in transport: \" + DOM.debug(session.cidTransport.def));\n\n\t\tinit.credentials = \"include\";\n\n\t\treturn fetch(url, init);\n\t}\n}\n\n/** Itère sur les metas \"use\"\" à envoyer */\nfunction* metasUsesForStep(elt: Element, cidSession: CidSession) {\n\tconst use = elt.getAttribute(\"useMetas\");\n\tif (use) {\n\t\tconst keys = use.split(\" \");\n\t\tfor (let k of keys) {\n\t\t\tif (k === \"*\") {\n\t\t\t\t//On retourne toutes les metasOut qui ne sont pas déclarées\n\t\t\t\tconst knownMetas = cidSession.cidProcess.metas;\n\t\t\t\tconst values = cidSession.metasOut;\n\t\t\t\tfor (let outKey in values) {\n\t\t\t\t\tif (!knownMetas.has(outKey)) yield outKey;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield k;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/** Itère sur les metas \"need\" à envoyer */\nfunction* metasNeedsForStep(elt: Element) {\n\tconst need = elt.getAttribute(\"needMetas\");\n\tif (need) yield* need.split(\" \");\n}\n\n/** */\ninterface ICidTransport {\n\tid: string | null\n\tdef: Element\n\tsessionProps: Set<string> | null\n\twebExchange: {\n\t\tGET?: ICidPropsMedia\n\t\tPOST_URLENC?: ICidPropsMedia\n\t\tPOST_MULTIPART?: ICidPropsMedia\n\t}\n\twebInteract: {\n\t\tGET?: ICidPropsMedia\n\t\tPOST_URLENC?: ICidPropsMedia\n\t\tPOST_MULTIPART?: ICidPropsMedia\n\t}\n\twebUpload: ICidWebUploadDef\n\n\t/** Evalue si une webAuth est nécessaire, si oui, retourne la CidWebAuthStep correspondante. */\n\tneedWebAuth(session: CidSession): Promise<null | CidWebAuthStep>\n\n}\n\nexport interface ICidWebUploadDef {\n\t//GET?: boolean XXX body interdit en GET non ?\n\tPUT?: ICidPropsMedia\n\tPOST?: ICidPropsMedia\n\tPOST_MULTIPART?: ICidPropsMedia\n}\n\n/** Zone de stockage des props dans un webTransport. */\ninterface ICidPropsMedia {\n\theader?: boolean\n\tqueryString?: boolean\n\tpost?: boolean\n}\n\nclass CidWebTransport implements ICidTransport {\n\n\tget id(): string {return this.def.getAttribute('id')}\n\n\tsessionProps: Set<string> | null;\n\twebExchange = {};\n\twebInteract = {};\n\twebUpload = {};\n\n\n\tconstructor(public def: Element) {\n\t\tconst props = def.getAttribute(\"sessionProperties\");\n\t\tif (props) this.sessionProps = new Set(props.split(' '));\n\t\tfor (let ch = def.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (ch.namespaceURI !== CID.CID_NS) continue;\n\t\t\tconst webReq = (this as any)[ch.localName];\n\t\t\tif (webReq) {\n\t\t\t\tfor (let req = ch.firstElementChild; req; req = req.nextElementSibling) {\n\t\t\t\t\tconst m = req.getAttribute(\"method\");\n\t\t\t\t\tif (m === \"GET\") webReq.GET = getPropsMedia(req);\n\t\t\t\t\telse if (m === \"PUT\") webReq.PUT = getPropsMedia(req);\n\t\t\t\t\telse if (m === \"POST\") webReq.POST = getPropsMedia(req);\n\t\t\t\t\telse if (m === \"POST;application/x-www-form-urlencoded\") webReq.POST_URLENC = getPropsMedia(req);\n\t\t\t\t\telse if (m === \"POST;multipart/form-data\") webReq.POST_MULTIPART = getPropsMedia(req);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getPropsMedia(req: Element): ICidPropsMedia {\n\t\t\tconst r = {} as any;\n\t\t\tfor (const p of req.getAttribute(\"properties\").split(' ')) if (p) r[p] = true;\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tasync needWebAuth(session: CidSession): Promise<null | CidWebAuthStep> {\n\t\tconst auths = DOM.findFirstChild(this.def, (n: Node): n is Element => DOM.IS_element(n) && n.localName === \"authentications\" && n.namespaceURI === CID.CID_NS);\n\t\tif (!auths) return null; //pas d'auth\n\t\tlet webAuthStep: CidWebAuthStep = null;\n\t\tfor (let ch = auths.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (ch.namespaceURI !== CID.CID_NS) continue;\n\t\t\tif (ch.localName === \"basicAuth\") {\n\t\t\t\tif (await this.checkAuth(session, ch)) return null; //authBasic Ok.\n\t\t\t} else if (ch.localName === \"webAuthentication\") {\n\t\t\t\tif (await this.checkAuth(session, ch)) return null; //authWeb Ok\n\t\t\t\twebAuthStep = new CidWebAuthStep(ch);\n\t\t\t} else if (ch.localName === \"noAuthentication\") {\n\t\t\t\treturn null; //si noAuth est présent on n'impose rien.\n\t\t\t}\n\t\t}\n\t\treturn webAuthStep;\n\t}\n\n\tprotected async checkAuth(session: CidSession, auth: Element): Promise<boolean> {\n\t\tfor (let ch = auth.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\tif (ch.localName === \"checkAuth\" && ch.namespaceURI === CID.CID_NS) {\n\t\t\t\ttry {\n\t\t\t\t\tconst resp = await CidExchangeStep.doWebExchange(session, ch);\n\t\t\t\t\treturn resp.ok;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n\nclass CidL10nStr extends Map<string, string> {\n\n\tdefault: string;\n\n\tset(key: string, value: string): this {\n\t\tif (this.size === 0) this.default = value;\n\t\tsuper.set(key, value);\n\t\tlet frag = key.indexOf('-');\n\t\twhile (frag > 0) {\n\t\t\tsuper.set(key.substring(0, frag), value);\n\t\t\tfrag = key.indexOf('-', frag + 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Retourne la chaine de caractère dans la langue voulue */\n\tgetStr(...lang: string[]): string {\n\t\tif (lang) {\n\t\t\t//Match exact\n\t\t\tfor (const lg of lang) {\n\t\t\t\tconst label = this.get(lg);\n\t\t\t\tif (label != undefined) return label;\n\t\t\t}\n\t\t\t//Match partiel\n\t\t\tfor (const lg of lang) {\n\t\t\t\tlet frag = lg.lastIndexOf('-');\n\t\t\t\twhile (frag > 0) {\n\t\t\t\t\tconst label = this.get(lg.substring(frag + 1));\n\t\t\t\t\tif (label != undefined) return label;\n\t\t\t\t\tfrag = lg.lastIndexOf('-', frag - 1);\n\t\t\t\t}\n\t\t\t\tconst label = this.get(lg);\n\t\t\t\tif (label != undefined) return label;\n\t\t\t}\n\t\t}\n\t\treturn this.default || \"\";\n\t}\n}\n\nfunction parseIs(elt: Element): string[] {\n\tconst att = elt.getAttribute(\"is\");\n\tif (!att) return null;\n\treturn att.trim().split(/ +/);\n}\n\nfunction parseLabel(parent: Element): CidL10nStr | null {\n\tconst label: CidL10nStr = new CidL10nStr();\n\tfor (let lb = parent.firstElementChild; lb; lb = lb.nextElementSibling) {\n\t\tif (lb.localName === \"label\" && lb.namespaceURI === CID.CID_NS) {\n\t\t\tlabel.set(lb.getAttribute(\"xml:lang\"), lb.textContent);\n\t\t}\n\t}\n\treturn label;\n}\n\n/** tags fils url localisés, ou @url à défaut */\nexport function parseCidStepUrl(parent: Element): CidL10nStr | null {\n\tconst url: CidL10nStr = new CidL10nStr();\n\tfor (let lb = parent.firstElementChild; lb; lb = lb.nextElementSibling) {\n\t\tif (lb.localName === \"url\" && lb.namespaceURI === CID.CID_NS) {\n\t\t\turl.set(lb.getAttribute(\"xml:lang\"), lb.textContent);\n\t\t}\n\t}\n\tif (url.size === 0 && parent.hasAttribute('url'))\n\t\turl.set('zxx', parent.getAttribute('url'));\n\treturn url.size > 0 ? url : null;\n}\n\n//const frameMsgLstnKey = Symbol(\"CidFrameMsgListenerKey\");\n\ntype ICidFrame = {\n\t//[frameMsgLstnKey]: (ev: MessageEvent) => void\n}\n\n/** Données de retour d'une iframe de webAuth*/\ntype JWebAuthDatas = {\n\tcidAuth: 'succeeded' | 'failed'\n\t/* Metas or session properties. */\n\t[meta: string]: any\n}\n\n/** Données de retour d'une iframe d'interaction*/\nexport interface JInteractionDatas {\n\tcidInteraction: 'ended' | 'aborted'\n\n\t/* Metas or session properties. */\n\t[meta: string]: any\n}\n\n\n/** Map des interactions en cours (plusieurs sessions peuvent s'exécuter en //). */\nlet interactPending: Map<HTMLIFrameElement, CidSession>;\n\nfunction addInteractPending(frame: HTMLIFrameElement, session: CidSession) {\n\tif (!interactPending) {\n\t\t//1er appel\n\t\tinteractPending = new Map();\n\t\twindow.addEventListener(\"message\", function (ev: MessageEvent) {\n\t\t\tfor (const [key, val] of interactPending.entries()) {\n\t\t\t\tif (key.contentWindow === ev.source) {\n\t\t\t\t\tval.onCidFrameMessage(ev.data);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (key.contentWindow == null) {\n\t\t\t\t\tinteractPending.delete(key); //iframe supprimée, cleanup\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\tinteractPending.set(frame, session);\n}\n\n/** Retourne true si cette session était bien en attente de cette frame. */\nfunction removeInteractPending(frame: HTMLIFrameElement, session: CidSession): boolean {\n\tif (!interactPending) return false;\n\tconst sess = interactPending.get(frame);\n\tif (sess === session) {\n\t\tinteractPending.delete(frame);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\nexport class CidHost {\n\tis: string[];\n\tuse: 'input' | 'output' | 'both' = \"both\";\n\tlabel: string;\n\tmanifestUrl: string;\n\n\t/** */\n\tmanifest: CidManifest | null | undefined;\n\n\tconstructor(def?: Element) {\n\t\tif (def != null) {\n\t\t\tthis.label = def.getAttribute(\"label\");\n\t\t\tthis.manifestUrl = def.getAttribute(\"manifestUrl\");\n\t\t\tthis.is = parseIs(def);\n\t\t\tthis.use = def.getAttribute(\"use\") as any || 'both';\n\t\t\tconst mn = def.firstElementChild;\n\t\t\tif (mn && mn.localName === \"manifest\") {\n\t\t\t\ttry {\n\t\t\t\t\tthis.manifest = new CidManifest(this.manifestUrl, mn);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.manifest = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync fetchManifest(): Promise<CidManifest> {\n\t\tif (this.manifest === undefined) {\n\t\t\ttry {\n\t\t\t\tthis.manifest = await CID.getCidManifest(this.manifestUrl);\n\t\t\t} catch (e) {\n\t\t\t\tthis.manifest = null;\n\t\t\t}\n\t\t}\n\t\treturn this.manifest;\n\t}\n\n\tstatic createFromUrl(url: string, use?: 'input' | 'output' | 'both', label?: string): CidHost {\n\t\tconst cidHost = new CidHost();\n\t\tcidHost.manifestUrl = url;\n\t\tif (use) cidHost.use = use;\n\t\tif (label) cidHost.label = label;\n\t\treturn cidHost;\n\t}\n}\n\ntype ICidHostsPointer = { cidHosts?: CidHost[] }\n\nexport namespace CID {\n\n\texport async function getCidManifest(path: string): Promise<CidManifest> {\n\t\tconst url = IO.absoluteUrl(path);\n\t\tconst headers = new Headers();\n\t\theaders.set(\"X-CidManifest\", \"1\");\n\t\tconst resp = await fetch(url, {headers});\n\t\tif (!resp.ok) throw resp;\n\t\treturn new CidManifest(url, DOM.parseDomValid(await resp.text()).documentElement);\n\t}\n\n\texport async function getCidHosts(reg: IReg<IUniverseEnv>): Promise<CidHost[]> {\n\t\tconst univ: Universe & ICidHostsPointer = reg.env.universe;\n\t\tif (!univ.cidHosts) {\n\t\t\tconst doc = await univ.config.httpFrames.web.execFrameUrl.fetchDom(\"u/cidProvider/GetManifests\");\n\t\t\tuniv.cidHosts = [];\n\t\t\tif (doc) for (let ch = doc.documentElement.firstElementChild; ch; ch = ch.nextElementSibling) {\n\t\t\t\tif (ch.localName === \"cidHost\") univ.cidHosts.push(new CidHost(ch));\n\t\t\t}\n\t\t}\n\t\treturn univ.cidHosts;\n\t}\n\n\texport async function getCidHostsForInput(reg: IReg<IUniverseEnv>): Promise<CidHost[]> {\n\t\tconst list = await getCidHosts(reg);\n\t\treturn list.filter((ch: CidHost) => ch.use !== \"output\");\n\t}\n\n\texport async function getCidHostsForOutput(reg: IReg<IUniverseEnv>): Promise<CidHost[]> {\n\t\tconst list = await getCidHosts(reg);\n\t\treturn list.filter((ch: CidHost) => ch.use !== \"input\");\n\t}\n\n\texport function getCidManifestLabel(hosts: CidHost[], manifest: CidManifest): string {\n\t\tif (hosts) {\n\t\t\tconst h = hosts.find((h) => h.manifestUrl === manifest.manifestUrl);\n\t\t\tif (h) return h.label;\n\t\t}\n\t\tconst label = manifest.label.getStr(\"fr\");\n\t\treturn label || manifest.manifestUrl;\n\t}\n\n\t/**\n\t * Retourne tous les objets matchant n'importe quelle entrée de isList\n\t * triés dans l'ordre des isList qui matchent puis de celui du tableau objects.\n\t * Retourne le tableau entier des objects si isList est null ou vide.\n\t *\n\t * A utiliser quand isList est une liste d'identifiant ou de termes non hiérarchisés.\n\t * @see filterIsFirst()\n\t */\n\texport function filterIs<T extends Iisable>(objects: T[] | null, isList: string[] | null): Set<T> {\n\t\tif (!isList || isList.length === 0 || !objects) return new Set(objects);\n\t\tconst result: Set<T> = new Set();\n\t\tfor (const is of isList) {\n\t\t\tobjects.filter((p: T) => p.is && p.is.indexOf(is) >= 0).forEach((p: T) => result.add(p));\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Retourne les objets matchant le 1er terme de isList, à défaut le 2ème terme de isList, etc.\n\t * Retourne le tableau entier des objects si isList est null ou vide.\n\t *\n\t * A utiliser quand isList est une liste hiérarchisée de termes sémantiques (du plus précis au plus générique).\n\t * @see filterIs()\n\t */\n\texport function filterIsFirst<T extends Iisable>(objects: T[] | null, isList: string[] | null, addIn?: Set<T>): Set<T> {\n\t\tif (!isList || isList.length === 0) {\n\t\t\tif (!objects) return addIn || new Set();\n\t\t\tif (!addIn) return new Set(objects);\n\t\t\tobjects.forEach(addIn.add, addIn);\n\t\t\treturn addIn;\n\t\t}\n\t\tconst result: Set<T> = addIn || new Set();\n\t\tfor (const is of isList) {\n\t\t\tobjects.filter((p: T) => p.is && p.is.indexOf(is) >= 0).forEach((p: T) => result.add(p));\n\t\t\tif (result.size > 0) return result; //Ce is a matché au moins une fois, on retourne cette sous-liste préférentielle.\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Equivalent à CID.filterIs() si isList est de type string[]\n\t * Mais si isList est de type string[][] c'est un OR qui est appliqué entre\n\t * chaque série hiérarchisée de termes string[] via CID.filterIsFirst().\n\t * @see filterIs()\n\t * @see filterIsFirst()\n\t */\n\texport function filterIsOr<T extends Iisable>(objects: T[] | null, isList: string[] | string[][] | null): Set<T> {\n\t\tif (!isList || isList.length === 0 || !objects) return new Set(objects);\n\t\tif (typeof isList[0] === \"string\") return filterIs(objects, isList as string[]);\n\t\tconst result: Set<T> = new Set();\n\t\tfor (const is of isList) filterIsFirst(objects, is as string[], result);\n\t\treturn result;\n\t}\n\n\texport function isMatch(is1: string[] | null, is2: string[] | null): boolean {\n\t\tif (!is1 || !is2) return false;\n\t\tfor (const k1 of is1) if (is2.indexOf(k1) >= 0) return true;\n\t\treturn false;\n\t}\n\n\t/** Retourne une forme lisible d'une erreur CID */\n\texport function cidErrorToMsg(cidError: ECidStepError | ECidFailedError) {\n\t\tswitch (cidError) {\n\t\tcase \"abort\":\n\t\t\treturn \"Processus abandonné\"\n\t\tcase \"authFailed\" :\n\t\t\treturn \"Échec d'authentification\"\n\t\tcase \"serverFailed\":\n\t\t\treturn \"Échec de traitement de la demande par le système cible\"\n\t\tcase \"noProcessFound\" :\n\t\t\treturn \"Aucun traitement compatible n'a pu être trouvé\"\n\t\tcase \"other\" :\n\t\t\treturn \"Erreur indéterminée\"\n\t\t}\n\t}\n\n\t/** \"is\" à utiliser pour les foreignMetas de type \"fileName\". */\n\texport const IS_FileName = [\"http://schema.org/name\", \"http://purl.org/dc/terms/title\"];\n\n\t/** \"is\" à utiliser pour les foreignMetas de type \"contentType\". */\n\texport const IS_ContentType = [\"http://purl.org/dc/terms/format\", \"http://schema.org/DataType\"];\n\n\t/** \"is\" à utiliser pour les foreignMetas de type \"réenvoi aveugle\"\n\t * \t\tidéalement, nécessité donc des contrôles supplémentaires (processing, existence de la res, ...)*/\n\texport const IS_Resend = [\"scenari.eu:cid:resend\"];\n\n\texport const CID_NS = \"http://www.cid-protocol.org/schema/v1/core\";\n}\n"]}