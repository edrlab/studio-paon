{"version":3,"sources":["/@lib@/wsp/search.tsx"],"names":["DOM","JSX","ITEM","Signboard","isColSearchBuilder","c","fillSearchColumns","SearchExportColumn","[object Object]","colDef","this","_colDef","ctx","call","status","_colStatus","isAvailable","ESearchExportColumnStatus","exported","notAvailable","map","getColDef","set","getLabel","SearchRequest","columns","Map","columnsFields","field","f","key","max","type","resultType","crit","where","whereXml","req","asXml","createElement","startOffset","toDom","undefined","select","firstChild","appendChild","dataKeys","_a","forEach","func","name","dataKey","ser","SearchAnd","Array","r","hasChildNodes","SearchOr","SearchNot","SearchFree","dom","SearchItemSrcType","srcTypes","ESearchItemSrcTypes","SearchPath","path","SearchRootFolder","SearchLinkParents","linkTraitFilter","SearchLinkChildren","SearchAirItems","SearchForeignItems","SearchItemSgnRegexp","sgnRegExp","regexpSgn","join","SearchItemModel","models","SearchLastUser","users","accounts","user","push","account","SearchOccurencesSubExp","op","value","subExp","SearchItems","uri","afterUri","beforeUri","beforeEndFolder","exclude","u","startsWith","delete","Set","add","has","isTildeRootExcluded","excludeExceptSpaces","AIR_PREFIX","excludeExcept","newExcludeSet","EXT_PREFIX","spaceUris","length","endsWith","withDrfErased","ANNOT_PREFIX","from","includeDrfErased","SearchItemLinks","linkAxis","linkName","linkNamePattern","elt","setAttribute","SearchFullText","textSearch","ignoreCase","wholeWord","dataKeyResults","dataKeyScore","opts","options","SearchRegexpUri","regexp","regExpTxt","flags","source","SearchFullXPath","xpath","ns","exp","xpathSearch","prefix","SearchItemTitleRegexp","SearchItemCodeOrTitle","SearchOrphan","SearchStatus","minStatus","maxStatus","itemStatusMin","itemStatusMax","SearchLastModif","operator","date","input","isSpecified","lessThan","getLessThan","moreThan","getMoreThan","SearchLastModifIn","vExp","getTime","toString","startDate","endDate","SearchLifeCycleStates","lcStates","lcBys","dateOperator","opDt","lcDate","SearchResponsibilities","responsibilities","toMembers","toGroups","expands","_b","expandUsers","SearchItemComment","withOpenComments","withClosedComments","XPathSearch","SearchItemPropsRegexp","propName","multiValued","SearchItemPropsNumber","Number","isInteger","SearchItemPropsDate","SearchDrfStates","drfStates","SearchDrvStates","drvStates","SearchFuncFree","funcDef","holder","freeElt","Element","parseDom","documentElement","att","attributes","children","ownerDocument","importNode","SearchFuncProps","SearchFuncXpath","SearchFuncUri2LeafName","trimExtension","String","SearchFuncUri2Space","SearchFuncSubRequest2Csv","escapeOnlyIfNeeded","fieldSeparator","lineSeparator","isArray","setWhere","reqDom","querySelector","SearchFuncTranslateStr","str","otherValue","concat","dict","char","val","dictElt","to","SearchFuncAccountProp","separator","SearchFuncItemProp","propType","eachValues","SearchFuncLong2Date","long","locale","time","formatDate","formatTime","formatPattern","pattern","ELong2DateStyles","SearchFuncResponsibles","resp","SearchTasksByUsers","stages","expand","expandToGroups","expandToMembers","resps","_c","actStages","SearchTasksAll","SearchTasksDeadline","SearchTasksScheduled","StreamedSearch","wsp","rowsHandler","svc","_tmpSearchIdCounter","_ws","wspServer","chain","wsFrames","ws","_onMsg","onMsg","bind","msgListeners","on","search","prevSearch","_currentSearchId","tmpSearchId","sendReq","wspCd","code","toXml","abort","failure","console","trace","searchId","sendMsg","abortSearch","e","removeListener","m","done","rows"],"mappings":"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","sourcesContent":["import {IWspUiEnv, Wsp} from \"lib/wsp/wsp\";\nimport {IWsExecFrame} from \"lib/core/universe\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {EActStage, EDrfState, EDrvState, ESrcField, srcUri} from \"lib/wsp/src\";\nimport {ITEM} from \"lib/wsp/item\";\nimport {JUser} from \"lib/core/user\";\nimport {IInputPeriod} from \"back/core/widgets/inputPeriod\";\nimport {IRegPointer} from \"lib/commons/registry\";\nimport {Signboard} from \"lib/commons/utils/signboard\";\n\n/**\n * L'interface ISearchStore abstrait le système de stockage de la requête :\n * - privateFile du profil dédié aux requêtes d'items, de tasks...\n * - dossier dynamique dans le bookmark...\n * - dans le flux XML d'un item...\n */\nexport interface ISearchStore {\n\tpersistSearch(search: ISearchPersist): Promise<void>\n}\n\n\n/**\n * L'interface ISearchViewResult propose les points d'entée pour visualiser une requete\n */\nexport interface ISearchViewResult {\n\t/** affiche/Refresh une requete de recherche donnée\n\t * \t@return searchId créé (pertinent si @param searchId null). `undefined` si pas de gestion d'ID (affichage d'une unique requete dans ce contexte ...) */\n\tviewSearch(whereCrit: Element, searchId: string | null, searchLabel?: string, searchDescription?: string): Promise<string | 'undefined'>\n\n\t/** @return retourne la forme XML (UI) de la requete affichée  */\n\tbuildWhereXml(): Element\n}\n\n/** Requete : enregistrement dans un profil ou dans une liste pré-établie */\nexport interface ISearchPersist {\n\n\t/** Id interne au système de stockage ISearchStore. */\n\tid?: string;\n\n\t/** Titre éditable de la requête. */\n\ttitle?: string;\n\n\t/** Titre éditable de la requête. */\n\tdescription?: string;\n\n\t/** Definition XML <where/> des critères. */\n\twhereCrit?: Element | ((ctx: IRegPointer<IWspUiEnv>) => Element);\n}\n\n/** Requete : enregistrement dans un profil ou dans une liste pré-établie */\nexport interface IExportColsPersist {\n\n\t/** Id interne au système de stockage ISearchStore. */\n\tid?: string;\n\n\t/** Titre éditable de cette liste */\n\ttitle?: string;\n\n\t/** Description de cette liste. */\n\tdescription?: string;\n\n\t/** Id des colonnes. à afficher */\n\tcolumns: string[],\n\n\t/** Non traité */\n\tparams?: Jsonisable,\n}\n\n\n/** Critère de recherche. */\nexport interface ISearchCrit {\n\ttoDom(): Element | undefined\n}\n\n/** Fonction intégrable dans un critère de recherche\n * \t@param holder. Exemple :\n * \t\t<column name={name}/>\n */\nexport interface ISearchFunc {\n\ttoDom(holder: Element): Element\n}\n\n/** Interface pour peupler les colonnes d'une reqête. */\nexport interface IColSearchBuilder {\n\tfillSearchColumns(map: Map<string, string | ISearchFunc>): void\n}\n\nexport function isColSearchBuilder(c: any): c is IColSearchBuilder {return c && (typeof c.fillSearchColumns === 'function')}\n\n\n/**\n * Export search : colonne d'export\n */\nexport class SearchExportColumn<C extends IRegPointer<IWspUiEnv>> extends Signboard<C> {\n\n\tprotected _colDef: ((ctx: C) => Promise<string | ISearchFunc>) | string | ISearchFunc | null;\n\n\tprotected _colStatus: ESearchExportColumnStatus;\n\n\t/** Specif de la ISearchFunc adsociée à cette colonne */\n\tsetColDef(colDef: ((ctx: C) => Promise<string | ISearchFunc>) | string | ISearchFunc): this {\n\t\tthis._colDef = colDef;\n\t\treturn this;\n\t}\n\n\tgetColDef(ctx: C): Promise<string | ISearchFunc> | string | ISearchFunc | null {\n\t\tif (!this._colDef) return null;\n\t\treturn typeof this._colDef === \"function\" ? this._colDef.call(this, ctx) : this._colDef;\n\t}\n\n\t/** Statut d'export de la colonne */\n\tsetExportStatus(status: ESearchExportColumnStatus): this {\n\t\tthis._colStatus = status;\n\t\treturn this;\n\t}\n\n\tgetExportStatus(ctx: C): ESearchExportColumnStatus {\n\t\treturn this.isAvailable(ctx) ? (this._colStatus || ESearchExportColumnStatus.exported) : ESearchExportColumnStatus.notAvailable;\n\t}\n\n\t/**\n\t * Déclaration de cette colonne dans une map en cours de constuctions\n\t * @param ctx\n\t * @param map\n\t */\n\tasync fillSearchColumn(ctx: C, map: Map<string, string | ISearchFunc>): Promise<void> {\n\t\tconst colDef = await this.getColDef(ctx);\n\t\tif (colDef) map.set(this.getLabel(ctx), colDef);\n\t}\n\n}\n\nexport const enum ESearchExportColumnStatus {\n\texported = 'exported',\n\texportable = 'exportable',\n\tnotAvailable = 'notAvailable',\n}\n\n\n/**\n * Constructeur d'une requête Xml de recherche d'items ou de tasks.\n * [request]\n *  [select resultType=\"entries|count\" max=\"200\" startOffset=\"\"]\n *    [columns dataKeys=\"srcUri*srcDt\"/]\n *    [column dataKey=\"...\"/]\n *    [column dataKey=\"...\" name=\"\" /]\n *    ...\n *    [column name=\"...\" func=\"...\"]...[/column]\n *    TODO [orderBy key=\"...\"]...\n *  [/select]\n *  [where]\n *    [exp type=\"...\"]...[/exp]\n *    [and]...[/and]\n *    [or]...[/or]\n *    [not]...[/not]\n *  [/where]\n * [/request]\n */\nexport class SearchRequest {\n\tresultType?: 'entries' | 'count';\n\tmax?: number;\n\tstartOffset?: number;\n\n\tcolumnsFields?: string;\n\tcolumns?: Map<string, null | string | ISearchFunc>;\n\n\twhere: ISearchCrit;\n\twhereXml: Element;\n\n\tconstructor(columns?: string | Map<string, null | string | ISearchFunc>) {\n\t\tif (columns instanceof Map) this.columns = columns;\n\t\telse if (typeof columns === \"string\") this.columnsFields = columns;\n\t}\n\n\taddFieldColumns(...field: ESrcField[]): this {\n\t\tif (!this.columns) this.columns = new Map();\n\t\tfor (const f of field) this.columns.set(f, null);\n\t\treturn this;\n\t}\n\n\taddColumn(key: string, colDef: string | ISearchFunc): this {\n\t\tif (!this.columns) this.columns = new Map();\n\t\tthis.columns.set(key, colDef);\n\t\treturn this;\n\t}\n\n\tsetMax(max: number): this {\n\t\tthis.max = max;\n\t\treturn this;\n\t}\n\n\tsetResultType(type: 'entries' | 'count'): this {\n\t\tthis.resultType = type;\n\t\treturn this;\n\t}\n\n\tsetWhere(crit: ISearchCrit): this {\n\t\tthis.where = crit;\n\t\tthis.whereXml = null;\n\t\treturn this;\n\t}\n\n\tsetWhereXml(crit: Element): this {\n\t\tthis.whereXml = crit;\n\t\tthis.where = null;\n\t\treturn this;\n\t}\n\n\ttoDom(): Element {\n\t\tconst req = JSX.asXml(() => <request>\n\t\t\t<select resultType={this.resultType} max={this.max} startOffset={this.startOffset}/>\n\t\t\t{this.whereXml ? this.whereXml : <where>{this.where ? this.where.toDom() : undefined}</where>}\n\t\t</request>);\n\t\tif (this.resultType !== 'count') {\n\t\t\tJSX.asXml(() => {\n\t\t\t\tconst select = req.firstChild;\n\t\t\t\tif (this.columnsFields) select.appendChild(<columns dataKeys={this.columnsFields}/>);\n\t\t\t\tthis.columns?.forEach((func, name) => {\n\t\t\t\t\tif (!func || name === func) select.appendChild(<column dataKey={name}/>);\n\t\t\t\t\telse if (typeof func === 'string') select.appendChild(<column name={name} dataKey={func}/>);\n\t\t\t\t\telse select.appendChild(func.toDom(<column name={name}/>));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn req;\n\t}\n\n\ttoXml(): string {\n\t\treturn DOM.ser(this.toDom());\n\t\t//return `<request><select max=\"200\"><column dataKey=\"srcUri\"/><column dataKey=\"itModel\"/></select><where><exp type=\"ItemSrcType\" srcTypes=\"12\"/></where></request>`\n\t}\n}\n\n\nexport class SearchAnd extends Array<ISearchCrit> implements ISearchCrit {\n\ttoDom(): Element | undefined {\n\t\tconst r = <and>{this.map((crit) => crit.toDom())}</and> as Element;\n\t\treturn r.hasChildNodes() ? r : undefined;\n\t}\n}\n\nexport class SearchOr extends Array<ISearchCrit> implements ISearchCrit {\n\ttoDom(): Element | undefined {\n\t\tconst r = <or>{this.map((crit) => crit.toDom())}</or>;\n\t\treturn r.hasChildNodes() ? r : undefined;\n\t}\n}\n\nexport class SearchNot implements ISearchCrit {\n\tconstructor(public crit: ISearchCrit) {}\n\n\ttoDom(): Element | undefined {\n\t\tconst r = this.crit.toDom();\n\t\treturn r ? <not>{r}</not> : undefined;\n\t}\n}\n\nexport class SearchFree implements ISearchCrit {\n\tconstructor(public dom: Element) {}\n\n\ttoDom(): Element | undefined {return this.dom}\n}\n\nexport class SearchItemSrcType implements ISearchCrit {\n\tconstructor(public srcTypes: ESearchItemSrcTypes | ESearchItemSrcTypes) {}\n\n\ttoDom(): Element | undefined {\n\t\treturn <exp type=\"ItemSrcType\" srcTypes={this.srcTypes}/>;\n\t}\n}\n\nexport enum ESearchItemSrcTypes {\n\tWSP = 1,\n\tSPACE = 2,\n\tITEMFOLDER = 4,\n\tITEMFILE = 8,\n\tRESFOLDER = 16,\n\tRESFILE = 32\n}\n\nexport class SearchPath implements ISearchCrit {\n\tconstructor(public path?: string) {}\n\n\ttoDom(): Element | undefined {return this.path ? <exp type=\"Path\" path={this.path}/> : undefined}\n}\n\nexport class SearchRootFolder implements ISearchCrit {\n\tconstructor(public path?: string) {}\n\n\ttoDom(): Element | undefined {return this.path ? <exp type=\"RootFolder\" path={this.path}/> : undefined}\n}\n\nexport class SearchLinkParents implements ISearchCrit {\n\tconstructor(public path?: string, public linkTraitFilter?: string) {}\n\n\ttoDom(): Element | undefined {return this.path ? <exp type=\"LinkParents\" path={this.path} linkTraitFilter={this.linkTraitFilter}/> : undefined}\n}\n\nexport class SearchLinkChildren implements ISearchCrit {\n\tconstructor(public path?: string, public linkTraitFilter?: string) {}\n\n\ttoDom(): Element | undefined {return this.path ? <exp type=\"LinkChildren\" path={this.path} linkTraitFilter={this.linkTraitFilter}/> : undefined}\n}\n\nexport class SearchAirItems implements ISearchCrit {\n\ttoDom(): Element | undefined {return <exp type=\"ItemsInAir\"/>}\n}\n\nexport class SearchForeignItems implements ISearchCrit {\n\ttoDom(): Element | undefined {return <exp type=\"ItemExternals\"/>}\n}\n\n\nexport class SearchItemSgnRegexp implements ISearchCrit {\n\t/** si {@param sgnRegExp} est un tableau, logique OR pour la recherche **/\n\tconstructor(public sgnRegExp?: string | string[]) {}\n\n\ttoDom(): Element | undefined {return this.sgnRegExp ? <exp type=\"ItemSgnRegexp\" regexpSgn={typeof this.sgnRegExp === 'object' ? this.sgnRegExp.join(\"|\") : this.sgnRegExp}/> : undefined}\n}\n\nexport class SearchItemModel implements ISearchCrit {\n\tconstructor(public models?: string[]) {}\n\n\ttoDom(): Element | undefined {return this.models ? <exp type=\"ItemModel\" models={this.models.join(' ')}/> : undefined}\n}\n\nexport class SearchLastUser implements ISearchCrit {\n\tconstructor(public users?: JUser[] | String[]) {}\n\n\ttoDom(): Element | undefined {\n\t\tif (this.users) {\n\t\t\tconst accounts: String[] = [];\n\t\t\tthis.users.forEach(user => accounts.push(typeof user === \"string\" ? user : (user as JUser).account));\n\t\t\treturn <exp type=\"LastUser\" users={accounts.join(' ')}/>\n\t\t} else\n\t\t\treturn undefined;\n\t}\n}\n\n\nexport class SearchOccurencesSubExp implements ISearchCrit {\n\tconstructor(public op: EOperatorsSimple, public value: number = 0, public subExp?: ISearchCrit) {}\n\n\tpublic setSubExp(subExp: ISearchCrit): void {\n\t\tthis.subExp = subExp;\n\t}\n\n\ttoDom(): Element | undefined {\n\t\treturn this.subExp ? <exp type=\"OccurencesSubExp\" op={this.op} value={this.value}>\n\t\t\t{this.subExp.toDom()}\n\t\t</exp> : undefined;\n\t}\n}\n\nexport class SearchItems implements ISearchCrit {\n\tpublic afterUri?: string;\n\tpublic beforeUri?: string;\n\tpublic beforeEndFolder?: string;\n\tpublic exclude?: Set<string>;\n\tpublic excludeExcept?: Set<string>;\n\tpublic withDrfErased: boolean;\n\n\tinSpace(uri: srcUri): this {\n\t\tthis.afterUri = uri + '/';\n\t\tif (this.beforeUri !== undefined) this.beforeUri = undefined;\n\t\tthis.beforeEndFolder = this.afterUri;\n\t\treturn this;\n\t}\n\n\t/** Exclut toutes les uri commençant par \"/~\". */\n\texcludeTildeRoot(): this {\n\t\tif (this.exclude) {\n\t\t\tfor (const u of this.exclude) if (u.startsWith(\"/~\")) this.exclude.delete(u);\n\t\t} else {\n\t\t\tthis.exclude = new Set();\n\t\t}\n\t\tthis.exclude.add(\"/~\");\n\t\treturn this;\n\t}\n\n\tisTildeRootExcluded() {\n\t\treturn this.exclude ? this.exclude.has(\"/~\") : false;\n\t}\n\n\t/** Exclut ou réinclut (si isTildeRootExcluded()) les airItems. */\n\texcludeAirItems(exclude: boolean): this {\n\t\tif (this.isTildeRootExcluded()) {\n\t\t\tif (!exclude) this.excludeExceptSpaces(ITEM.AIR_PREFIX);\n\t\t\telse if (this.excludeExcept) this.excludeExcept.delete(ITEM.AIR_PREFIX);\n\t\t} else {\n\t\t\tif (!this.exclude) this.newExcludeSet();\n\t\t\tif (exclude) this.exclude.add(ITEM.AIR_PREFIX);\n\t\t\telse this.exclude.delete(ITEM.AIR_PREFIX);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Exclut ou réinclut (si isTildeRootExcluded()) les extItems. */\n\texcludeExtItems(exclude: boolean): this {\n\t\tif (this.isTildeRootExcluded()) {\n\t\t\tif (!exclude) this.excludeExceptSpaces(ITEM.EXT_PREFIX);\n\t\t\telse if (this.excludeExcept) this.excludeExcept.delete(ITEM.EXT_PREFIX);\n\t\t} else {\n\t\t\tif (!this.exclude) this.newExcludeSet();\n\t\t\tif (exclude) this.exclude.add(ITEM.EXT_PREFIX);\n\t\t\telse this.exclude.delete(ITEM.EXT_PREFIX);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Exclut n'importe quel espace (voir un item) */\n\texcludeSpaces(...spaceUris: srcUri[]): this {\n\t\tif (spaceUris && spaceUris.length > 0) {\n\t\t\tif (!this.exclude) this.newExcludeSet();\n\t\t\tfor (const uri of spaceUris) this.exclude.add(uri.endsWith('/') ? uri : uri + '/');\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Retire d'une exclusion un sous path (sous espace ou item). */\n\texcludeExceptSpaces(...spaceUris: srcUri[]): this {\n\t\tif (spaceUris && spaceUris.length > 0) {\n\t\t\tif (!this.excludeExcept) this.excludeExcept = new Set();\n\t\t\tfor (const uri of spaceUris) this.excludeExcept.add(uri.endsWith('/') ? uri : uri + '/');\n\t\t}\n\t\treturn this;\n\t}\n\n\tincludeDrfErased(withDrfErased: boolean): this {\n\t\tthis.withDrfErased = withDrfErased;\n\t\treturn this;\n\t}\n\n\tprotected newExcludeSet() {\n\t\tthis.exclude = new Set();\n\t\tthis.exclude.add(ITEM.ANNOT_PREFIX);\n\t}\n\n\ttoDom(): Element | undefined {\n\t\treturn <exp type=\"Items\"\n\t\t\t\t\t\t\t\tafterUri={this.afterUri}\n\t\t\t\t\t\t\t\tbeforeUri={this.beforeUri}\n\t\t\t\t\t\t\t\tbeforeEndFolder={this.beforeEndFolder}\n\t\t\t\t\t\t\t\texclude={this.exclude ? Array.from(this.exclude).join(';') : ITEM.ANNOT_PREFIX}\n\t\t\t\t\t\t\t\texcludeExcept={this.excludeExcept ? Array.from(this.excludeExcept).join(';') : undefined}\n\t\t\t\t\t\t\t\tincludeDrfErased={this.withDrfErased || undefined}/>\n\t}\n}\n\nexport class SearchItemLinks implements ISearchCrit {\n\tpath: string | ISearchFunc;\n\tlinkName?: string;\n\tlinkNamePattern?: string;\n\tlinkTraitFilter?: string;\n\n\tconstructor(public linkAxis: 'LinkAsc' | 'LinkDesc' | 'LinkChildren' | 'LinkParents') {\n\t}\n\n\tsetPath(path: string | ISearchFunc): this {\n\t\tthis.path = path;\n\t\treturn this;\n\t}\n\n\tsetLinkName(linkName: string): this {\n\t\tthis.linkName = linkName;\n\t\tthis.linkNamePattern = undefined;\n\t\tthis.linkTraitFilter = undefined;\n\t\treturn this;\n\t}\n\n\tsetLinkNamePattern(linkNamePattern: string): this {\n\t\tthis.linkNamePattern = linkNamePattern;\n\t\tthis.linkName = undefined;\n\t\tthis.linkTraitFilter = undefined;\n\t\treturn this;\n\t}\n\n\tsetLinkTraitFilter(linkTraitFilter: string): this {\n\t\tthis.linkTraitFilter = linkTraitFilter;\n\t\tthis.linkName = undefined;\n\t\tthis.linkNamePattern = undefined;\n\t\treturn this;\n\t}\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.path) return undefined;\n\t\tconst elt = <exp type={this.linkAxis} linkName={this.linkName} linkNamePattern={this.linkNamePattern} linkTraitFilter={this.linkTraitFilter}/> as Element;\n\t\tif (typeof this.path === 'string') {\n\t\t\telt.setAttribute(\"path\", this.path || \"\");\n\t\t} else {\n\t\t\telt.appendChild(this.path.toDom(<path/>));\n\t\t}\n\t\treturn elt;\n\t}\n}\n\n/**\n * SearchFullText\n */\nexport class SearchFullText implements ISearchCrit {\n\tconstructor(public textSearch: string, public ignoreCase?: boolean, public wholeWord?: boolean, public dataKeyResults?: string, public dataKeyScore?: string) {}\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.textSearch) return undefined;\n\t\tlet opts: string;\n\t\tif (this.ignoreCase) {\n\t\t\topts = this.wholeWord ? \";c;w;\" : \";c;\";\n\t\t} else if (this.wholeWord) {\n\t\t\topts = \";w;\";\n\t\t}\n\t\treturn <exp type=\"FullText\" textSearch={this.textSearch} options={opts}\n\t\t\t\t\t\t\t\tdataKeyResults={this.dataKeyResults} dataKeyScore={this.dataKeyScore}/>;\n\t}\n}\n\n/**\n * SearchRegexpUri\n */\nexport class SearchRegexpUri implements ISearchCrit {\n\n\tconstructor(public regexp: RegExp) {}\n\n\ttoDom(): Element | undefined {\n\t\tif (this.regexp) {\n\t\t\tlet regExpTxt = this.regexp.flags ? \"(?\" + this.regexp.flags + \")\" : \"\";\n\t\t\tregExpTxt += this.regexp.source;\n\t\t\treturn <exp type=\"RegexpUri\" regexp={regExpTxt}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchFullPath\n */\nexport class SearchFullXPath implements ISearchCrit {\n\tconstructor(public xpath: string, public ns: Map<string, string>) {}\n\n\ttoDom(): Element | undefined {\n\t\tif (this.xpath) {\n\t\t\tconst exp = <exp type=\"FullXPath\" xpathSearch={this.xpath}/>\n\t\t\tif (this.ns)\n\t\t\t\tthis.ns.forEach((value, key) =>\n\t\t\t\t\texp.appendChild(<ns prefix={key} uri={value}/>)\n\t\t\t\t)\n\t\t\treturn exp;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchTitleRegexp\n */\nexport class SearchItemTitleRegexp implements ISearchCrit {\n\tconstructor(public regexp: RegExp) {}\n\n\ttoDom(): Element | undefined {\n\t\tif (this.regexp && this.regexp.source) {\n\t\t\tlet regExpTxt = \"\";\n\t\t\tif (this.regexp.flags) regExpTxt += \"(?\" + this.regexp.flags + \")\";\n\t\t\tregExpTxt += this.regexp.source;\n\t\t\treturn <exp type=\"ItemTitleRegexp\" regexp={regExpTxt}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchItemCodeOrTitle\n */\nexport class SearchItemCodeOrTitle implements ISearchCrit {\n\tconstructor(public regexp: RegExp) {}\n\n\ttoDom(): Element | undefined {\n\t\tif (this.regexp && this.regexp.source) {\n\t\t\tlet regExpTxt = \"\";\n\t\t\tif (this.regexp.flags) regExpTxt += \"(?\" + this.regexp.flags + \")\";\n\t\t\tregExpTxt += this.regexp.source;\n\t\t\treturn <exp type=\"ItemCodeOrTitle\" regexp={regExpTxt}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchOrphan\n */\nexport class SearchOrphan implements ISearchCrit {\n\ttoDom(): Element | undefined {\n\t\treturn <exp type=\"ItemOrphan\"/>;\n\t}\n}\n\n/**\n * SearchStatus\n */\nexport class SearchStatus implements ISearchCrit {\n\tconstructor(public minStatus: number, public maxStatus: number) {}\n\n\ttoDom(): Element | undefined {\n\t\treturn (this.minStatus && this.maxStatus) ? <exp type=\"ItemStatus\" itemStatusMin={this.minStatus} itemStatusMax={this.maxStatus}/> : undefined;\n\t}\n}\n\n/**\n * SearchLastModif\n */\nexport type EOperatorsSimple = \"=\" | \"!=\" | \"gt\" | \"lt\" | \"gt=\" | \"lt=\";\n\nexport type EOperatorsIn = \"lt.lt\" | \"lt=.lt\" | \"lt.lt=\" | \"lt=.lt=\";\n\nexport class SearchLastModif implements ISearchCrit {\n\n\tstatic buildFromInputPeriod(input: IInputPeriod): SearchLastModif | SearchLastModifIn | undefined {\n\t\tif (!input || !input.isSpecified()) return undefined;\n\t\tconst lessThan = input.getLessThan(true);\n\t\tconst moreThan = input.getMoreThan(true);\n\t\tif (moreThan !== null && lessThan !== null) return new SearchLastModifIn(\"lt.lt\", moreThan, lessThan);\n\t\treturn moreThan !== null ? new SearchLastModif(\"gt\", moreThan) : new SearchLastModif(\"lt\", lessThan);\n\t}\n\n\tconstructor(public operator: EOperatorsSimple, public date: Date | number) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (this.date == null || !this.operator) return undefined;\n\t\tconst vExp = <exp type=\"LastModif\" op={this.operator}/>;\n\t\tvExp.setAttribute(\"value\", (typeof this.date === \"number\" ? this.date : this.date.getTime()).toString());\n\t\treturn vExp;\n\t}\n}\n\nexport class SearchLastModifIn implements ISearchCrit {\n\tconstructor(public operator: EOperatorsIn, public startDate: Date | number, public endDate: Date | number) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.operator || this.startDate == null || this.endDate == null) return undefined;\n\t\treturn <exp type=\"LastModif\" op={this.operator} value={\n\t\t\t(typeof this.startDate === \"number\" ? this.startDate : this.startDate.getTime()).toString()\n\t\t\t+ \",\"\n\t\t\t+ (typeof this.endDate === \"number\" ? this.endDate : this.endDate.getTime()).toString()\n\t\t}/>;\n\t}\n}\n\n\n/**\n * SearchLifeCycleStates\n */\nexport class SearchLifeCycleStates implements ISearchCrit {\n\n\tstatic buildFromInputPeriod(input: IInputPeriod): SearchLifeCycleStates | undefined {\n\t\tif (!input || !input.isSpecified()) return undefined;\n\t\tconst lessThan = input.getLessThan(true);\n\t\tconst moreThan = input.getMoreThan(true);\n\t\tif (moreThan !== null && lessThan !== null) return new SearchLifeCycleStates(null, null, \"lt.lt\", moreThan, lessThan);\n\t\treturn moreThan !== null ? new SearchLifeCycleStates(null, null, \"gt\", moreThan) : new SearchLifeCycleStates(null, null, \"lt\", lessThan);\n\t}\n\n\tconstructor(public lcStates?: string[], public lcBys?: string[], public dateOperator?: EOperatorsSimple | EOperatorsIn, public startDate?: Date | number, public endDate?: Date | number) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.lcStates) return undefined;\n\t\tconst vExp = <exp type=\"LifeCycleStates\" lcStates={this.lcStates.join(' ')} lcBys={this.lcBys} opDt={this.dateOperator}/>;\n\t\tif (this.startDate) {\n\t\t\tlet lcDate = (typeof this.startDate === \"number\" ? this.startDate : this.startDate.getTime()).toString();\n\t\t\tif (this.endDate)\n\t\t\t\tlcDate += \",\" + (typeof this.endDate === \"number\" ? this.endDate : this.endDate.getTime()).toString();\n\t\t\tvExp.setAttribute(\"lcDate\", lcDate);\n\t\t}\n\t\treturn vExp;\n\t}\n}\n\n\n/**\n * SearchResponsibilities\n */\nexport class SearchResponsibilities implements ISearchCrit {\n\n\tconstructor(public responsibilities: string[], public accounts?: string[], public toMembers: boolean = false, public toGroups: boolean = false) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.responsibilities) return undefined;\n\t\tconst expands = [];\n\t\tif (this.toMembers) expands.push(\"toMembers\");\n\t\tif (this.toGroups) expands.push(\"toGroups\");\n\t\treturn <exp type=\"Responsibilities\" responsibilities={this.responsibilities?.join(' ')} users={this.accounts?.join(' ')} expandUsers={expands}/>;\n\t}\n}\n\n/**\n * SearchItemComment\n */\nexport class SearchItemComment implements ISearchCrit {\n\tconstructor(public withOpenComments: boolean, public withClosedComments: boolean) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (this.withClosedComments || this.withOpenComments) {\n\t\t\tlet XPathSearch = \"descendant::comment()[matchesRegex(normalize-space(.), '<comment.*')]\";\n\t\t\tif (this.withClosedComments && !this.withOpenComments)\n\t\t\t\tXPathSearch += \"[matchesRegex(normalize-space(.), '<comment[^>]*threadClosed=.true.[^>]*>.*')]\";\n\t\t\telse if (!this.withClosedComments && this.withOpenComments)\n\t\t\t\tXPathSearch += \"[not(matchesRegex(normalize-space(.), '<comment[^>]*threadClosed=.true.[^>]*>.*'))]\";\n\t\t\treturn <exp type=\"FullXPath\" xpathSearch={XPathSearch}/>;\n\t\t}\n\t}\n}\n\nexport type EItemPropsMultiValued = 'atLeastOne' | 'all' | 'firstValue';\n\n/**\n * SearchItemPropsRegexp\n */\nexport class SearchItemPropsRegexp implements ISearchCrit {\n\n\tconstructor(public propName: string, public regexp: RegExp, public multiValued: EItemPropsMultiValued = 'atLeastOne') {}\n\n\ttoDom(): Element | undefined {\n\t\tif (this.regexp) {\n\t\t\tlet regExpTxt = this.regexp.flags ? \"(?\" + this.regexp.flags + \")\" : \"\";\n\t\t\tregExpTxt += this.regexp.source;\n\t\t\treturn <exp type=\"ItemPropsRegexp\" propName={this.propName} regexp={regExpTxt} multiValued={this.multiValued}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchItemPropsNumber\n */\nexport class SearchItemPropsNumber implements ISearchCrit {\n\n\tconstructor(public propName: string, public op: EOperatorsSimple, public value: number, public multiValued: EItemPropsMultiValued = 'atLeastOne') {}\n\n\ttoDom(): Element | undefined {\n\t\tif (Number.isInteger(this.value)) {\n\t\t\treturn <exp type=\"ItemPropsNumber\" propName={this.propName} op={this.op} value={this.value} multiValued={this.multiValued}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchItemPropsDate\n */\nexport class SearchItemPropsDate implements ISearchCrit {\n\n\tstatic buildFromInputPeriod(input: IInputPeriod, propName: string, multiValued?: EItemPropsMultiValued): SearchItemPropsDate | undefined {\n\t\tif (!input || !input.isSpecified()) return undefined;\n\t\tconst lessThan = input.getLessThan(true);\n\t\tconst moreThan = input.getMoreThan(true);\n\t\tif (moreThan !== null && lessThan !== null) return new SearchItemPropsDate(propName, \"lt.lt\", moreThan, lessThan, multiValued);\n\t\treturn moreThan !== null ? new SearchItemPropsDate(propName, \"gt\", moreThan, null, multiValued) : new SearchItemPropsDate(propName, \"lt\", lessThan, null, multiValued);\n\t}\n\n\tconstructor(public propName: string, public op?: EOperatorsSimple | EOperatorsIn, public startDate?: Date | number, public endDate?: Date | number, public multiValued: EItemPropsMultiValued = 'atLeastOne') {};\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.startDate) return undefined;\n\t\tconst vExp = <exp type=\"ItemPropsDate\" propName={this.propName} multiValued={this.multiValued} op={this.op}/>;\n\t\tlet date = (typeof this.startDate === \"number\" ? this.startDate : this.startDate.getTime()).toString();\n\t\tif (this.endDate)\n\t\t\tdate += \",\" + (typeof this.endDate === \"number\" ? this.endDate : this.endDate.getTime()).toString();\n\t\tvExp.setAttribute(\"value\", date);\n\t\treturn vExp;\n\t}\n}\n\n/**\n * SearchDrfStates\n */\nexport class SearchDrfStates implements ISearchCrit {\n\tconstructor(public drfStates: EDrfState[]) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (this.drfStates && this.drfStates.length > 0) {\n\t\t\treturn <exp type=\"DrfStates\" drfStates={this.drfStates.join(\" \")}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n/**\n * SearchDrvStates\n */\nexport class SearchDrvStates implements ISearchCrit {\n\tconstructor(public drvStates: EDrvState[]) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (this.drvStates && this.drvStates.length > 0) {\n\t\t\treturn <exp type=\"DrvStates\" drvStates={this.drvStates.join(\" \")}/>;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\n//-----------  SearchFunc (valeurs des fields)  -------------\n\n\n/**\n * Construction d'une valeur via une func free donnée\n */\nexport class SearchFuncFree implements ISearchFunc {\n\n\t/**\n\t * @param funcDef : string (formal xml sérialisé)\n\t */\n\tconstructor(public funcDef: string | Element) {}\n\n\ttoDom(holder: Element): Element {\n\t\tconst freeElt = this.funcDef instanceof Element ? this.funcDef : DOM.parseDom(this.funcDef).documentElement;\n\t\tif (freeElt) {\n\t\t\tfor (const att of freeElt.attributes)\n\t\t\t\tholder.setAttribute(att.name, att.value)\n\t\t\tfor (const elt of freeElt.children)\n\t\t\t\tholder.appendChild(holder.ownerDocument.importNode(elt, true))\n\t\t}\n\t\treturn holder;\n\t}\n}\n\n\n/**\n * Construction d'une valeur par la valeur d'une propriété donnée, sans modification\n */\nexport class SearchFuncProps implements ISearchFunc {\n\n\tconstructor(public dataKey: string) {}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"dataKey\", this.dataKey);\n\t\treturn holder;\n\t}\n}\n\n/**\n * Construction d'une valeur par exécution de xpath\n */\nexport class SearchFuncXpath implements ISearchFunc {\n\n\tconstructor(public xpath: string, public ns: Map<string, string>) {}\n\n\ttoDom(holder: Element): Element {\n\t\tif (this.xpath) {\n\t\t\tholder.setAttribute(\"func\", \"XPath\");\n\t\t\tholder.setAttribute(\"xpath\", this.xpath);\n\t\t\tif (this.ns)\n\t\t\t\tthis.ns.forEach((value, key) =>\n\t\t\t\t\tholder.appendChild(<ns prefix={key} uri={value}/>)\n\t\t\t\t)\n\t\t}\n\t\treturn holder;\n\t}\n}\n\n/**\n * Construction d'une valeur en isolant le `leafName` d'une srcUri fournie par le param `uri`\n */\nexport class SearchFuncUri2LeafName implements ISearchFunc {\n\n\t/**\n\t * @param uri\n\t * \t\tstring : dataKey fournissant l'URL\n\t * \t\tOU ISearchFunc\n\t */\n\tconstructor(public uri: string | ISearchFunc, public trimExtension = false) {}\n\n\tsetUri(uri: string | ISearchFunc): this {\n\t\tthis.uri = uri;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"Uri2LeafName\");\n\t\tholder.setAttribute(\"trimExtension\", String(this.trimExtension));\n\t\tif (typeof this.uri === 'string') {\n\t\t\tholder.setAttribute(\"dataKey\", this.uri || \"\");\n\t\t} else {\n\t\t\tholder.appendChild(this.uri.toDom(<uri/>));\n\t\t}\n\t\treturn holder;\n\t}\n}\n\n/**\n * Construction d'une cellule en isolant l'espace d'une srcUri fournie par le param `uri`\n */\nexport class SearchFuncUri2Space implements ISearchFunc {\n\n\t/**\n\t * @param uri\n\t * \t\tstring : dataKey fournissant l'URL\n\t * \t\tOU ISearchFunc\n\t */\n\tconstructor(public uri: string | ISearchFunc) {}\n\n\tsetUri(uri: string | ISearchFunc): this {\n\t\tthis.uri = uri;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"Uri2Space\");\n\t\tif (typeof this.uri === 'string') {\n\t\t\tholder.setAttribute(\"dataKey\", this.uri || \"\");\n\t\t} else {\n\t\t\tholder.appendChild(this.uri.toDom(<uri/>));\n\t\t}\n\t\treturn holder;\n\t}\n\n}\n\n/**\n * Construction d'une cellule concaténant n résultats de recherche\n */\nexport class SearchFuncSubRequest2Csv implements ISearchFunc {\n\n\tprotected fieldSeparator: string;\n\n\tprotected lineSeparator: string;\n\n\tprotected escapeOnlyIfNeeded: boolean = true;\n\n\t/**\n\t * @param where : critères de recherche\n\t */\n\tconstructor(protected select?: Map<string, null | string | ISearchFunc>, protected where?: ISearchCrit | ISearchCrit[]) {}\n\n\tsetSelect(select: Map<string, null | string | ISearchFunc>): this {\n\t\tthis.select = select;\n\t\treturn this;\n\t}\n\n\tsetWhere(where: ISearchCrit | ISearchCrit[]): this {\n\t\tthis.where = where;\n\t\treturn this;\n\t}\n\n\tsetFieldSeparator(fieldSeparator: string): this {\n\t\tthis.fieldSeparator = fieldSeparator;\n\t\treturn this;\n\t}\n\n\tsetLineSeparator(lineSeparator: string): this {\n\t\tthis.lineSeparator = lineSeparator;\n\t\treturn this;\n\t}\n\n\tsetEscapeOnlyIfNeeded(escapeOnlyIfNeeded: boolean): this {\n\t\tthis.escapeOnlyIfNeeded = escapeOnlyIfNeeded;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tif (this.where && this.select) {\n\t\t\tholder.setAttribute(\"func\", \"SubRequest2Csv\");\n\t\t\tif (this.fieldSeparator) holder.setAttribute(\"fieldSeparator\", this.fieldSeparator);\n\t\t\tif (this.lineSeparator) holder.setAttribute(\"lineSeparator\", this.lineSeparator);\n\t\t\tholder.setAttribute(\"escapeOnlyIfNeeded\", String(this.escapeOnlyIfNeeded));\n\t\t\tconst req = new SearchRequest(this.select)\n\t\t\tif (Array.isArray(this.where))\n\t\t\t\treq.setWhere(new SearchAnd(...this.where));\n\t\t\telse\n\t\t\t\treq.setWhere(this.where)\n\t\t\tconst reqDom = req.toDom();\n\t\t\tholder.appendChild(holder.ownerDocument.importNode(reqDom.querySelector('select'), true));\n\t\t\tholder.appendChild(holder.ownerDocument.importNode(reqDom.querySelector('where'), true));\n\t\t\treturn holder;\n\t\t}\n\t}\n\n}\n\n\n/**\n * Construction d'une valeur en isolant le `leafName` d'une srcUri fournie par le param `uri`\n */\nexport class SearchFuncTranslateStr implements ISearchFunc {\n\n\tprotected otherValue: string | \"\" | null = null;\n\n\tprotected concat: string | null = null;\n\n\tprotected dict: { [key: string]: string } | (() => { [key: string]: string });\n\n\t/**\n\t * @param str\n\t * \t\tstring : dataKey fournissant l'URL\n\t * \t\tOU ISearchFunc\n\t */\n\tconstructor(public str: string | ISearchFunc) {}\n\n\t/**\n\t * Définit le dictionnaire de translation\n\t * @param dict\n\t */\n\tsetDict(dict: { [key: string]: string } | (() => { [key: string]: string })): this {\n\t\tthis.dict = dict;\n\t\treturn this;\n\t}\n\n\tsetStr(str: string | ISearchFunc): this {\n\t\tthis.str = str;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Définit le caractère de concaténation d'une liste de valeurs transformées\n\t * @param char\n\t */\n\tsetConcat(char: string): this {\n\t\tthis.concat = char;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Définit le comportement en cas d'absence de la clef du dictionnaire\n\t * @param val\n\t * <ul>\n\t * \t<li>null : si la clef est inconnue du dictionnaire, alors celle-ci est préservée</li>\n\t * \t<li>\"\" : si la clef est inconnue du dictionnaire, alors celle-ci est supprimée</li>\n\t * \t<li>string : si la clef est inconnue du dictionnaire, alors celle-ci est remplacée par cette valeur</li>\n\t * </ul>\n\t */\n\tsetOtherValue(val: string | \"\" | null = \"\"): this {\n\t\tthis.otherValue = val;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"TranslateStr\");\n\t\tif (this.concat) holder.setAttribute(\"concat\", this.concat);\n\t\tif (typeof this.str === 'string')\n\t\t\tholder.setAttribute(\"dataKey\", this.str || \"\");\n\t\telse\n\t\t\tholder.appendChild(this.str.toDom(<string/>));\n\t\tconst dictElt = holder.appendChild(<dict/>);\n\t\tif (this.otherValue !== null)\n\t\t\tdictElt.setAttribute(\"otherValue\", this.otherValue);\n\t\tconst dict = typeof this.dict === \"function\" ? this.dict() : this.dict;\n\t\tfor (const key in dict)\n\t\t\tdictElt.appendChild(<entry from={key} to={dict[key]}/>);\n\t\treturn holder;\n\t}\n}\n\n/**\n * Construction d'une valeur en mettant en forme un ou plusieurs account (en Prenom + nom)\n */\nexport class SearchFuncAccountProp implements ISearchFunc {\n\n\tprotected separator: string = \", \";\n\n\t/**\n\t * @param accounts\n\t * \t\tstring : dataKey fournissant l'account ou la liste d'accounts separés par {@link SearchFuncAccountProp.separator}\n\t * \t\tOU ISearchFunc\n\t */\n\tconstructor(public accounts: string | ISearchFunc) {}\n\n\tsetAccounts(accounts: string | ISearchFunc): this {\n\t\tthis.accounts = accounts;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Définit le caractère de séparation d'une liste d'accounts (à tokeniser)\n\t * @param char\n\t */\n\tsetSeparator(separator: string): this {\n\t\tthis.separator = separator;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"AccountPropFunc\");\n\t\tif (this.separator) holder.setAttribute(\"separator\", this.separator);\n\t\tif (typeof this.accounts === 'string')\n\t\t\tholder.setAttribute(\"dataKey\", this.accounts || \"\");\n\t\telse\n\t\t\tholder.appendChild(this.accounts.toDom(<account/>));\n\t\treturn holder;\n\t}\n}\n\n/**\n * Construction d'une valeur issue d'une propriété d'item\n */\nexport class SearchFuncItemProp implements ISearchFunc {\n\n\tprotected eachValues:boolean = false;\n\n\tprotected concat: string|null = \", \";\n\n\tconstructor(public propName: string, public propType : 'String'|'Date'|'Number' = \"String\") {}\n\n\t/**\n\t * Si true, toutes les valeurs sont retournées. Sous la forme d'une liste concaténée (comportement par défaut),\n\t * ou d'une lise d'objets (si separator==null)\n\t * @param eachValues\n\t */\n\tsetEachValues(eachValues: boolean, separator: string | null): this {\n\t\tthis.eachValues = eachValues;\n\n\t\tthis.concat = separator;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"ItemPropFunc\");\n\t\tholder.setAttribute(\"propName\", this.propName);\n\t\tholder.setAttribute(\"returnType\", this.propType);\n\t\tholder.setAttribute(\"eachValues\", String(this.eachValues));\n\t\tif (this.concat) holder.setAttribute(\"concat\", this.concat);\n\t\treturn holder;\n\t}\n}\n\n\n/**\n * Construction d'une cellule présentant une date fournie sous sa forme long\n */\nexport class SearchFuncLong2Date implements ISearchFunc {\n\tprotected formatDate: ELong2DateStyles | null;\n\tprotected formatTime: ELong2DateStyles | null;\n\tprotected formatPattern: string | null;\n\n\tprotected concat: string | null = null;\n\n\t/**\n\t * @param long\n\t * \t\tstring : dataKey fournissant l'URL\n\t * \t\tOU ISearchFunc\n\t */\n\tconstructor(public long: string | ISearchFunc, public locale: string = \"fr\") {}\n\n\tsetLong(long: string | ISearchFunc): this {\n\t\tthis.long = long;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Définit le caractère de concaténation d'une liste de valeurs transformées\n\t * @param char\n\t */\n\tsetConcat(char: string): this {\n\t\tthis.concat = char;\n\t\treturn this;\n\t}\n\n\t/** Specif du format simplifié : date/time */\n\tsetFormat(date: ELong2DateStyles | null, time: ELong2DateStyles | null): this {\n\t\tthis.formatDate = date;\n\t\tthis.formatTime = time;\n\t\tthis.formatPattern = null;\n\t\treturn this;\n\t}\n\n\t/** Specif du format complet par pattern */\n\tsetFomatByPattern(pattern: string): this {\n\t\tthis.formatPattern = pattern;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"Long2Date\");\n\t\tif (this.concat) holder.setAttribute(\"concat\", this.concat);\n\t\tif (this.locale) holder.setAttribute(\"locale\", this.locale);\n\t\tif (this.formatPattern) {\n\t\t\tholder.setAttribute(\"pattern\", this.formatPattern);\n\t\t} else {\n\t\t\tif (this.formatDate) holder.setAttribute(\"dateStyle\", this.formatDate);\n\t\t\tif (this.formatTime) holder.setAttribute(\"timeStyle\", this.formatTime);\n\t\t}\n\t\tif (typeof this.long === 'string') {\n\t\t\tholder.setAttribute(\"dataKey\", this.long || \"\");\n\t\t} else {\n\t\t\tholder.appendChild(this.long.toDom(<long/>));\n\t\t}\n\t\treturn holder;\n\t}\n}\n\nexport const enum ELong2DateStyles {\n\tshort = 'short',\n\tfull = 'full',\n\tmedium = 'medium',\n\tlong = 'long',\n}\n\n/**\n * Construction d'une cellule avec les responsabilités définies sur l'item\n */\nexport class SearchFuncResponsibles implements ISearchFunc {\n\n\tprotected separator: string = \",\";\n\n\t/**\n\t * @param resp\n\t */\n\tconstructor(public resp: string) {}\n\n\t/**\n\t * Définit le caractère de séparation d'une liste concaténée\n\t * @param separator\n\t */\n\tsetSeparator(separator: string): this {\n\t\tthis.separator = separator;\n\t\treturn this;\n\t}\n\n\ttoDom(holder: Element): Element {\n\t\tholder.setAttribute(\"func\", \"Responsibles\");\n\t\tholder.setAttribute(\"separator\", this.separator);\n\t\tholder.setAttribute(\"resp\", this.resp);\n\t\treturn holder;\n\t}\n}\n\n//----------- Taches ---------------\n\n/**\n * Recherche de taches par des users impliqués\n * FIXME : gérer responsibilities, periodOp, ordering\n */\nexport class SearchTasksByUsers implements ISearchCrit {\n\tprotected expandToGroups: boolean;\n\tprotected expandToMembers: boolean;\n\tprotected resps: string[];\n\n\tconstructor(protected users?: string[], protected stages: EActStage[] = ['pending']) {}\n\n\tsetUsers(...users: string[]): this {\n\t\tthis.users = users;\n\t\treturn this;\n\t}\n\n\tsetExpandToGroups(expand: boolean): this {\n\t\tthis.expandToGroups = true;\n\t\treturn this;\n\t}\n\n\tsetExpandToMembers(expand: boolean): this {\n\t\tthis.expandToMembers = true;\n\t\treturn this;\n\t}\n\n\tsetResps(resps: string[]) {\n\t\tthis.resps = resps;\n\t\treturn this;\n\t}\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.users) return undefined;\n\t\tconst expandUsers = [];\n\t\tif (this.expandToGroups) expandUsers.push(\"toGroups\");\n\t\tif (this.expandToMembers) expandUsers.push(\"toMembers\");\n\t\treturn (this.stages?.length && this.users?.length) ?\n\t\t\t<exp type=\"TasksByUsers\"\n\t\t\t\t\t users={this.users.join(' ')}\n\t\t\t\t\t expandUsers={expandUsers.length ? expandUsers.join(\" \") : undefined}\n\t\t\t\t\t responsibilities={this.resps?.length ? this.resps.join(\" \") : undefined}\n\t\t\t\t\t actStages={this.stages.join(\" \")}/>\n\t\t\t: undefined;\n\t}\n}\n\n/**\n * Recherche toutes les tasks disponibles de l'atelier\n * FIXME : periodOp, period et ordering non gérés ici\n */\nexport class SearchTasksAll implements ISearchCrit {\n\n\tconstructor(public stages: EActStage[]) {}\n\n\ttoDom(): Element | undefined {\n\t\treturn this.stages?.length ? <exp type=\"TasksAll\" actStages={this.stages.join(\" \")}/> : undefined;\n\t}\n}\n\n/**\n * SearchTasksDeadline\n */\nexport class SearchTasksDeadline implements ISearchCrit {\n\n\tstatic buildFromInputPeriod(input: IInputPeriod): SearchTasksDeadline | undefined {\n\t\tif (!input || !input.isSpecified()) return undefined;\n\t\tconst lessThan = input.getLessThan(true);\n\t\tconst moreThan = input.getMoreThan(true);\n\t\tif (moreThan !== null && lessThan !== null) return new SearchTasksDeadline(\"lt.lt\", moreThan, lessThan,);\n\t\treturn moreThan !== null ? new SearchTasksDeadline(\"gt\", moreThan, null) : new SearchTasksDeadline(\"lt\", lessThan, null);\n\t}\n\n\tconstructor(public op?: EOperatorsSimple | EOperatorsIn, public startDate?: Date | number, public endDate?: Date | number) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.startDate) return undefined;\n\t\tconst vExp = <exp type=\"TasksDeadline\" op={this.op}/>;\n\t\tlet date = (typeof this.startDate === \"number\" ? this.startDate : this.startDate.getTime()).toString();\n\t\tif (this.endDate)\n\t\t\tdate += \",\" + (typeof this.endDate === \"number\" ? this.endDate : this.endDate.getTime()).toString();\n\t\tvExp.setAttribute(\"value\", date);\n\t\treturn vExp;\n\t}\n}\n\n/**\n * SearchTasksScheduled\n */\nexport class SearchTasksScheduled implements ISearchCrit {\n\n\tstatic buildFromInputPeriod(input: IInputPeriod): SearchTasksScheduled | undefined {\n\t\tif (!input || !input.isSpecified()) return undefined;\n\t\tconst lessThan = input.getLessThan(true);\n\t\tconst moreThan = input.getMoreThan(true);\n\t\tif (moreThan !== null && lessThan !== null) return new SearchTasksScheduled(\"lt.lt\", moreThan, lessThan,);\n\t\treturn moreThan !== null ? new SearchTasksScheduled(\"gt\", moreThan, null) : new SearchTasksScheduled(\"lt\", lessThan, null);\n\t}\n\n\tconstructor(public op?: EOperatorsSimple | EOperatorsIn, public startDate?: Date | number, public endDate?: Date | number) {};\n\n\ttoDom(): Element | undefined {\n\t\tif (!this.startDate) return undefined;\n\t\tconst vExp = <exp type=\"TasksScheduled\" op={this.op}/>;\n\t\tlet date = (typeof this.startDate === \"number\" ? this.startDate : this.startDate.getTime()).toString();\n\t\tif (this.endDate)\n\t\t\tdate += \",\" + (typeof this.endDate === \"number\" ? this.endDate : this.endDate.getTime()).toString();\n\t\tvExp.setAttribute(\"value\", date);\n\t\treturn vExp;\n\t}\n}\n\n//-----------  StreamedSearch  -------------\n\n/** Requete d'init ou de renouvellement d'une recherche (Client -> Server) */\ntype JStreamedSearchReq = {\n\tsvc: 'search'\n\twspCd: string\t\t\t\t// Code du wsp\n\tsearch: string\n\tabort?: number \t\t\t// Recherche searchId précédente à annuler.\n};\n\n\n/** Réponse d'init d'une recherche (Server -> Client) */\ntype JStreamedSearchResp = {\n\tsvc: 'search'\n\tsearchId: number | undefined\t// A utiliser par le client pour la demande de recherche suivantes annulant celle-ci (cf JStreamedSearchReq.abort).\n\tfailure?: 'wspNotFound' | 'execFailed' // En cas d'echec, searchId est undefined.\n};\n\n/** Envoi d'un résultat partiel de recherche (Server -> Client) */\ntype JStreamedSearchResult = {\n\tsvc: 'search'\n\tsearchId: number \t\t\t// Recherche à laquelle ces résultats sont associés.\n\trows: Dict<any>[]\n\tdone?: true \t\t\t\t// Lorsque la recherche est achevée (en échec ou pas).\n\tfailure?: 'execFailed'\n};\n\n/** Msg de demande d'annulation d'une recherche en cours sans en enclencher une nouvelle (Client -> Server) */\ntype JStreamedSearchAbort = {\n\tsvc: 'search'\n\tabort: number \t\t\t\t// searchId à annuler.\n};\n\n/**\n * Gestionnaire d'une recherche évolutive en flux continu avec le serveur.\n */\nexport class StreamedSearch {\n\n\tpublic wsp: Wsp;\n\n\tpublic svc = 'search';\n\n\tpublic rowsHandler: (rows: Dict<any>[], done: boolean) => void | 'abort';\n\n\tprotected _ws: IWsExecFrame;\n\n\tprotected _onMsg: (m: Jsonisable) => void;\n\n\tprotected _currentSearchId: number | undefined;\n\n\tprotected _tmpSearchIdCounter = 0;\n\n\tconstructor(wsp: Wsp, rowsHandler: (rows: Dict<any>[], done: boolean) => void | 'abort') {\n\t\tthis.wsp = wsp;\n\t\tthis.rowsHandler = rowsHandler;\n\t\tthis._ws = wsp.wspServer.chain.wsFrames.ws;\n\t\tthis._onMsg = this.onMsg.bind(this);\n\t\tthis._ws.msgListeners.on(this.svc, this._onMsg);\n\t}\n\n\t/** Lance une nouvelle requête (et interrompt la précédente). Promesse rejetée en cas de requete invalide. */\n\tasync search(search: SearchRequest) {\n\t\tconst prevSearch = this._currentSearchId;\n\t\tconst tmpSearchId = this._currentSearchId = --this._tmpSearchIdCounter; //id temporaires sont < 0\n\t\tconst resp = await this._ws.sendReq<JStreamedSearchResp>({svc: this.svc, wspCd: this.wsp.code, search: search.toXml(), abort: prevSearch >= 0 ? prevSearch : undefined} as JStreamedSearchReq);\n\t\tif (resp.failure) {\n\t\t\tconsole.trace(\"Search failed\", search.toXml(), resp);\n\t\t\tthrow resp.failure;\n\t\t} else if (this._currentSearchId === tmpSearchId) { //racecond\n\t\t\tthis._currentSearchId = resp.searchId;\n\t\t}\n\t}\n\n\t/** Abandonne la requete en cours. */\n\tabortSearch() {\n\t\tif (this._currentSearchId) {\n\t\t\tthis._ws.sendMsg({svc: this.svc, abort: this._currentSearchId} as JStreamedSearchAbort);\n\t\t\tthis._currentSearchId = undefined;\n\t\t}\n\t}\n\n\t/** Clos ce StreamedSearch. Objet plus utilisable. */\n\tclose() {\n\t\tif (this._currentSearchId) try {\n\t\t\tthis.abortSearch();\n\t\t} catch (e) {}\n\t\tthis._ws.msgListeners.removeListener(this.svc, this._onMsg);\n\t\t//help gc\n\t\tthis._ws = null;\n\t\tthis._onMsg = null;\n\t\tthis.wsp = null;\n\t\tthis.rowsHandler = null;\n\t}\n\n\tprotected onMsg(m: JStreamedSearchResult) {\n\t\tif (m.searchId === this._currentSearchId) {\n\t\t\tif (m.done) this._currentSearchId = undefined;\n\t\t\tif (this.rowsHandler(m.rows, m.done) === 'abort') this.abortSearch();\n\t\t}\n\t}\n}\n\n"]}