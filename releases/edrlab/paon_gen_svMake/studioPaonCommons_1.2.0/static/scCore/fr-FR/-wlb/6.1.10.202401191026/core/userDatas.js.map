{"version":3,"sources":["/@lib@/core/userDatas.ts"],"names":["ERROR","UserDatasSrv","[object Object]","config","this","auth","listeners","on","loadDatas","ws","msgListeners","m","srcUri","substring","getPath","currentUser","useLocalStorage","d","localStorage","getItem","getLocalStorageKey","userDatas","JSON","parse","userDatasUrl","fetchJson","e","reportError","key","defaultVal","datas","Object","assign","setItem","stringify","fetch","method","body","DeskUserDatasSrv","_code","code","_a","window","desk","name","getCode","currentAccount","configUserDatasSrv","authenticatedExecFrameUrl","resolve"],"mappings":"OAGQA,UAAM;OAMR,MAAgBC,aAMrBC,YAA4BC,QAAAC,KAAAD,OAAAA,OAG5BD,cAAcG,MACbD,KAAKC,KAAOA;AACZD,KAAKC,KAAKC,UAAUC,GAAG,oBAAqB,IAAMH,KAAKI,aAAc,GAItEN,YAAYO,IACXA,GAAGC,aAAaH,GAAG,YAAcI,IAChC,GAAIA,EAAEC,OAAOC,UAAU,KAAOT,KAAKU,UAAWV,KAAKI,cAIrDN,kBACC,IAAKE,KAAKC,MAAQD,KAAKC,KAAKU,YAAa,CACxC,IACC,GAAIX,KAAKD,OAAOa,gBAAiB,CAChC,MAAMC,EAAIC,aAAaC,QAAQf,KAAKgB;AACpChB,KAAKiB,UAAYJ,EAAIK,KAAKC,MAAMN,GAAmB,OAC7C,CACNb,KAAKiB,gBAAmBjB,KAAKD,OAAOqB,aAAaC,UAAUrB,KAAKU,YAAe,IAE/E,MAAOY,GACR1B,MAAM2B,YAAYD;AAClBtB,KAAKiB,UAAY,QAEZ,CACNjB,KAAKiB,UAAY,IAInBnB,YAAkC0B,IAAaC,YAC9C,OAAOzB,KAAKiB,UAAUO,KAGvB1B,mBAAmB4B,OAClBC,OAAOC,OAAO5B,KAAKiB,UAAWS;AAC9B,IAAK1B,KAAKC,MAAQD,KAAKC,KAAKU,YAAa,CACxC,GAAIX,KAAKD,OAAOa,gBAAiB,CAChCE,aAAae,QAAQ7B,KAAKgB,qBAAsBE,KAAKY,UAAU9B,KAAKiB,gBAC9D,OACAjB,KAAKD,OAAOqB,aAAaW,MAAM/B,KAAKU,UAAW,OAAQ,CAC5DsB,OAAQ,MACRC,KAAMf,KAAKY,UAAU9B,KAAKiB,uBAuBzB,MAAOiB,yBAAyBrC,aAGrCC;AACC,IAAKE,KAAKmC,MAAOnC,KAAKmC,MAAQnC,KAAKD,OAAOqC,QAAQC,GAAAC,OAAOC,QAAI,MAAAF,UAAA,OAAA,EAAAA,GAAEG,OAAQ;AACvE,OAAOxC,KAAKmC,MAGbrC;AACC,MAAO,kBAAkBE,KAAKyC,eAAaJ,GAAArC,KAAKC,QAAI,MAAAoC,UAAA,OAAA,EAAAA,GAAEK,iBAAkB,KAGzE5C,UAAY,MAAO,SAASE,KAAKyC,yBAG5B,SAAUE,mBAAmBC,0BAAsC7C,QACxE,GAAIA,SAAW,KAAM,OAAO;AAC5B,GAAIA,kBAAkBF,aAAc,OAAOE;AAC3C,IAAKA,OAAQA,OAAS;AACtB,IAAKA,OAAOqB,aAAcrB,OAAOqB,aAAewB,0BAA0BC,QAAQ;AAClF,OAAO9C","sourcesContent":["import {IEndPoint} from \"lib/commons/io/io\";\nimport {IPersistUserDatas} from \"lib/commons/registry\";\nimport {AuthSrv} from \"lib/core/user\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {IWsExecFrame} from \"lib/core/universe\";\n\n/**\n * Serveur d'accès aux paramètres et configurations personnelles du user.\n */\nexport abstract class UserDatasSrv implements IPersistUserDatas {\n\n\tprotected auth: AuthSrv;\n\n\tprotected userDatas: Jsonisable;\n\n\tconstructor(public readonly config: OUserDatasSrvConfig) {}\n\n\t/** Permet d'être notifié des changements de user. */\n\tconnectToAuth(auth: AuthSrv) {\n\t\tthis.auth = auth;\n\t\tthis.auth.listeners.on(\"loggedUserChanged\", () => this.loadDatas(), -1 /* Mise à dispo des userDatas avant les redraw d'ihm. */);\n\t}\n\n\t/** Permet d'écouter les modifications opérées par le même user sur un autre device / onglet. */\n\tconnectToWs(ws: IWsExecFrame) {\n\t\tws.msgListeners.on(\"userDatas\", (m: IUserDatasMsg) => {\n\t\t\tif (m.srcUri.substring(1) === this.getPath()) this.loadDatas();\n\t\t});\n\t}\n\n\tasync loadDatas(): Promise<void> {\n\t\tif (!this.auth || this.auth.currentUser) {\n\t\t\ttry {\n\t\t\t\tif (this.config.useLocalStorage) {\n\t\t\t\t\tconst d = localStorage.getItem(this.getLocalStorageKey());\n\t\t\t\t\tthis.userDatas = d ? JSON.parse(d) as Jsonisable : {};\n\t\t\t\t} else {\n\t\t\t\t\tthis.userDatas = (await this.config.userDatasUrl.fetchJson(this.getPath())) || {};\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tERROR.reportError(e);\n\t\t\t\tthis.userDatas = {};\n\t\t\t}\n\t\t} else {\n\t\t\tthis.userDatas = {};\n\t\t}\n\t}\n\n\tgetUserData<T extends Jsonisable>(key: string, defaultVal?: T): T {\n\t\treturn this.userDatas[key];\n\t}\n\n\tasync setUserDatas(datas: Dict<Jsonisable>): Promise<void> {\n\t\tObject.assign(this.userDatas, datas);\n\t\tif (!this.auth || this.auth.currentUser) {\n\t\t\tif (this.config.useLocalStorage) {\n\t\t\t\tlocalStorage.setItem(this.getLocalStorageKey(), JSON.stringify(this.userDatas));\n\t\t\t} else {\n\t\t\t\tawait this.config.userDatasUrl.fetch(this.getPath(), 'none', {\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\tbody: JSON.stringify(this.userDatas)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tabstract getLocalStorageKey(): string\n\n\tabstract getPath(): string\n}\n\ninterface IUserDatasMsg {\n\tsvc: 'userDatas',\n\tsrcUri: string,\n\tevent: 'write' | 'delete'\n}\n\nexport interface OUserDatasSrvConfig {\n\tuseLocalStorage?: boolean\n\tuserDatasUrl?: IEndPoint\n\tcode?: string\n}\n\nexport class DeskUserDatasSrv extends UserDatasSrv {\n\tprotected _code: string;\n\n\tgetCode() {\n\t\tif (!this._code) this._code = this.config.code || window.desk?.name || 'none';\n\t\treturn this._code;\n\t}\n\n\tgetLocalStorageKey() {\n\t\treturn `userDatas:desk:${this.getCode()}:${this.auth?.currentAccount || ''}`;\n\t}\n\n\tgetPath() { return `front_${this.getCode()}.json`; }\n}\n\nexport function configUserDatasSrv(authenticatedExecFrameUrl: IEndPoint, config: OUserDatasSrvConfig | UserDatasSrv): OUserDatasSrvConfig | UserDatasSrv {\n\tif (config === null) return null; //Refus explicite du svc userDatas\n\tif (config instanceof UserDatasSrv) return config; //Redirection vers un svc userDatas existant\n\tif (!config) config = {};\n\tif (!config.userDatasUrl) config.userDatasUrl = authenticatedExecFrameUrl.resolve(\"u/userDatas/\");\n\treturn config;\n}\n"]}