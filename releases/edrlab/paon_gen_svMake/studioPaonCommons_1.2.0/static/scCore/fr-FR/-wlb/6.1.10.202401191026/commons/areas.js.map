{"version":3,"sources":["/@lib@/commons/areas.tsx"],"names":["IO","REG","Signboard","DOM","JSX","MsgLabel","ActionBtn","isArea","a","needAsync","buildBody","Area","[object Object]","ctx","lastDatas","this","_body","body","name","val","AreaAsync","_libsLoadedIn","window","loadLibs","_a","_libs","length","_modules","importAllJs","libs","appendUrl","isAreaPointer","h","area","SimpleTagArea","customTag","id","super","tagName","Array","isArray","requireLib","elt","newElt","isVisible","setAttribute","document","createElement","CustomTagArea","initialize","getInit","_init","CustomAsyncTagArea","loadBody","initializedAsync","AreaOver","_subArea","AREAS","NULL","svc","_label","undefined","getLabel","getSubArea","_description","getDescription","_group","getGroup","_visible","checkObjectRootVisiblePerm","Promise","all","AreaOverFromSvc","_svcCd","svcCd","getReg","getSvc","MsgArea","msgInit","msg","Ã®","getId","_iniMsgElement","element","setHidden","isEnabled","LabelArea","control","_buildControl","buildControlLabel","_buildControlLabel","_initBodyElement","hidden","title","label","Math","floor","random","toString","LabelAsyncArea","_loadControl","desc","elemId","class","for","ControlAsyncArea","required","_required","defaultValue","_defaultValue","locked","_readOnly","input","isRequired","isReadOnly","DatasetAsyncArea","dataset","_dataset","SelectAsyncArea","multiple","_multiple","selectElt","isMultiple","getDataset","getDefaultValue","key","data","option","appendChild","value","selected","includes","disabled","description","_initStdControl","ControlArea","_locked","reg","registerSkin","SubControlsArea","areas","setAreas","_areas","level","_hideLevel","fieldsetElt","applyLayout","InputArea","inputType","_inputCustomValidityLatency","_inputCustomValidityReportOnInput","_onInputValiditySheduled","setInputType","_inputType","fct","delay","reportOnInput","_inputCustomValidity","type","getInputType","addEventListener","async","clearTimeout","setCustomValidity","setTimeout","call","reportValidity","dispatchEvent","CustomEvent","bubbles","cancelable","StringInputArea","_placeholder","placeholder","pattern","_pattern","getPlaceholder","getPattern","HiddenInputArea","BoolCheckInputArea","_checkedValue","_uncheckedValue","checkedValue","getCheckedValue","uncheckedValue","getUncheckedValue","checkedByDefault","Boolean","checked","Object","assign","fillJson","parent","root","extractJson","DateInputArea","deltaDays","d","valueAsNumber","date","Date","setMinutes","getMinutes","getTimezoneOffset","setDate","getDate","getTime","InputTextArea","inputElt","InputJsonArea","JSON","parse","stringify","DatasetArea","InputChoiceArea","_direction","mode","jsonBinderMode","fieldset","isGlobalDisabled","hasAttribute","fieldType","initJsonBinders","fieldSet","querySelector","r","findNext","n","HTMLInputElement","push","array","indexOf","SelectArea","doLevel","currentElt","objLevel","subs","optiongroup","isListEntry","SelectSubPanelArea","subPanel","ev","select","target","_selectSubPanel","ctn","_selectSubPanelAsync","innerHTML","ActionBtnArea","svcAction","setSvcAction","svcActionCd","_svcAction","uictx","_uiContext","action","buildButton","getSvcAction","getUiContext","freeze","setVisible","areasList","clear","doc","ownerDocument","areasSet","Set","values","bodies","idsParents","groupsParents","remainParent","it","createNodeIterator","NodeFilter","SHOW_ELEMENT","nextNode","ids","getAttribute","HTMLSlotElement","assignedNodes","forEach","node","parentNode","removeChild","firstChild","lastChild","groups","remove","i","split","HTMLElement","ShadowRoot","slot","host","delete","size","areaGroup","localName","IS_element"],"mappings":"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","sourcesContent":["import {IEndPoint, IO} from \"lib/commons/io/io\";\nimport {JLastDatas} from \"lib/commons/lastDatas\";\nimport {IRegPointer, REG} from 'lib/commons/registry';\nimport {ISignboard, Signboard} from \"lib/commons/utils/signboard\";\nimport {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {EButtonUiContext, IAction} from \"lib/commons/actions\";\nimport {BaseElement, BaseElementAsync, MsgLabel, OLabelInit} from \"back/commons/basis\";\nimport {IFormJsonisable} from \"lib/commons/forms\";\nimport {ActionBtn} from \"back/commons/widgets/buttons\";\n\ntype dynString<C> = (ctx: C, area: Area<C>) => string;\ntype dynBoolean<C> = (ctx: C, area: Area<C>) => boolean;\ntype dynAny<C, T = any> = (ctx: C, area: Area<C>) => T;\n\n/**\n * Un Area est une factory d'un widget graphique (view, input...).\n *\n * Chaque Area possÃ¨de :\n *  - les mÃ©ta-donnÃ©es du widget (id, label, desc, icon, group),\n *  - la visibilitÃ© et les permissions d'affichage du widget,\n *  - les librairies nÃ©cessaires Ã  charger en amont de l'instanciation du widget,\n *  - la fonction pour construire le widget.\n */\nexport interface IArea<C = {}, E extends HTMLElement = HTMLElement> extends ISignboard<C> {\n\n\t/** Cette Area exige-t-elle une chargement asynchrone de librairies ? */\n\tneedAsync(ctx: C): boolean\n\n\t/**\n\t * Construit une zone graphique.\n\t * @param ctx DonnÃ©es permettant de construire et initialiser l'area.\n\t * @return Node crÃ©Ã©\n\t */\n\tbuildBody(ctx: C, lastDatas?: JLastDatas): E\n\n\t/**\n\t * Construit une zone graphique en s'assurant que les libs nÃ©cessaires sont chargÃ©es.\n\t * @param ctx DonnÃ©es permettant de construire et initialiser l'area.\n\t * @return Node crÃ©Ã©\n\t */\n\tloadBody(ctx: C, lastDatas?: JLastDatas): Promise<E>\n\n\t/**\n\t * Si needAsync===true force le chargement des libs async sans construire de body.\n\t * Une fois la promesse rÃ©solue, needAsync devrait Ãªtre Ã©gal Ã  false, sauf si l'impl ne permet\n\t * pas ce prÃ©chargement.\n\t */\n\tloadLibs(ctx: C): Promise<void>\n}\n\nexport function isArea<C, E extends HTMLElement>(a: any): a is IArea<C, E> {return a && typeof a.needAsync === \"function\" && typeof a.buildBody === \"function\"}\n\nexport class Area<C = {}, E extends HTMLElement = HTMLElement> extends Signboard<C> implements IArea<C, E> {\n\n\tprotected _body: (ctx: C, area: Area<C, E>, lastDatas?: JLastDatas) => E;\n\n\tneedAsync(ctx: C): boolean {return false}\n\n\tbuildBody(ctx: C, lastDatas?: JLastDatas): E {\n\t\treturn this._body(ctx, this, lastDatas);\n\t}\n\n\tasync loadBody(ctx: C, lastDatas?: JLastDatas): Promise<E> {\n\t\treturn this.buildBody(ctx, lastDatas);\n\t}\n\n\tasync loadLibs(ctx: C): Promise<void> {}\n\n\tsetBodyBuilder(body: (ctx: C, area: Area<C>, lastDatas?: JLastDatas) => E): this {\n\t\tthis._body = body;\n\t\treturn this;\n\t}\n\n\t/** Surcharge d'une propriÃ©tÃ© / mÃ©thode quelconque. */\n\toverride(name: keyof Area, val: any): this {\n\t\tthis[name] = val;\n\t\treturn this;\n\t}\n\n}\n\nexport class AreaAsync<C = {}, E extends HTMLElement = HTMLElement> extends Area<C, E> {\n\n\tprotected _libsLoadedIn: Window;\n\tprotected _libs: IEndPoint[];\n\tprotected _modules: any[];\n\n\tasync loadBody(ctx: C, lastDatas?: JLastDatas): Promise<E> {\n\t\tif (this._libsLoadedIn !== window) await this.loadLibs(ctx);\n\t\treturn this.buildBody(ctx, lastDatas);\n\t}\n\n\tneedAsync(ctx: C): boolean {\n\t\tif (this._libsLoadedIn === window) return false;\n\t\treturn this._libs?.length > 0;\n\t}\n\n\t/** PrÃ©chargement des libs nÃ©cessaires. */\n\tasync loadLibs(ctx: C): Promise<void> {\n\t\tif (this._libsLoadedIn === window) return;\n\t\tif (this._libs?.length) this._modules = await IO.importAllJs(this._libs);\n\t\tthis._libsLoadedIn = window;\n\t}\n\n\t/**\n\t * Chargement asycnhrone des librairies nÃ©cessaires Ã  la construction de cet area.\n\t */\n\trequireLib(...libs: IEndPoint[]): this {\n\t\tif (libs) {\n\t\t\tif (!this._libs) this._libs = libs;\n\t\t\telse IO.appendUrl(this._libs, ...libs);\n\t\t}\n\t\treturn this;\n\t}\n}\n\n\n/**\n * Pointeur d'une area avec son contexte.\n * Ces propriÃ©tÃ©s peuvent Ãªtre dÃ©finies sur le widget construit par l'area ou sur son container permettant sa construction.\n * Exemple : pour un onglet d'un c-tabs, la ref Ã  l'area et son contexte peut-Ãªtre portÃ© par l'objet interne c-tab et/ou\n *        par la view constituant le contenu de l'onglet.\n */\nexport interface IAreaPointer<C = {}, E extends HTMLElement = HTMLElement> {\n\tarea?: IArea<C, E>;\n\tareaContext?: C;\n}\n\nexport function isAreaPointer(h: any): h is IAreaPointer {return h && ((h as IAreaPointer).area != null)}\n\n\n/** Area dont la construction du widget se rÃ©sume Ã  l'instanciation d'un simple tag. */\nexport class SimpleTagArea<C, E extends HTMLElement> extends AreaAsync<C, E> {\n\ttagName: string;\n\n\tconstructor(customTag: string, libs?: IEndPoint | IEndPoint[], id?: string) {\n\t\tsuper(id || customTag);\n\t\tthis.tagName = customTag;\n\t\tif (libs) Array.isArray(libs) ? this.requireLib(...libs) : this.requireLib(libs);\n\t}\n\n\tbuildBody(ctx: C, lastDatas?: JLastDatas): E {\n\t\tconst elt = this.newElt(ctx, lastDatas);\n\t\tif (!this.isVisible(ctx)) elt.setAttribute('hidden', '');\n\t\treturn elt;\n\t}\n\n\tprotected newElt(ctx: C, lastDatas?: JLastDatas): E {\n\t\treturn document.createElement(this.tagName) as E;\n\t}\n}\n\n/** Area pour la construction d'une custom element avec initialisation (setInit/getInit) */\nexport class CustomTagArea<C, E extends BaseElement, EI = C> extends SimpleTagArea<C, E> {\n\t_init?: any | dynAny<C, EI>;\n\n\tbuildBody(ctx: C, lastDatas?: JLastDatas): E {\n\t\tconst elt = super.buildBody(ctx, lastDatas);\n\t\telt.initialize(this.getInit(ctx));\n\t\treturn elt;\n\t}\n\n\tsetInit(ctx: any | dynAny<C, EI>): this {\n\t\tthis._init = ctx;\n\t\treturn this;\n\t}\n\n\tgetInit(ctx: C): EI {\n\t\tif (this._init) {\n\t\t\tif (typeof this._init === 'function') return this._init(ctx);\n\t\t\telse return this._init;\n\t\t}\n\t\treturn ctx as any as EI;\n\t}\n\n}\n\n/** Area pour la construction d'une custom element avec initialisation asynchrone (setInit/getInit) */\nexport class CustomAsyncTagArea<C, E extends BaseElementAsync, EI = C> extends SimpleTagArea<C, E> {\n\t_init?: any | dynAny<C, EI>;\n\n\tneedAsync(ctx: C): boolean {return true}\n\n\tasync loadBody(ctx: C, lastDatas?: JLastDatas): Promise<E> {\n\t\tconst body = await super.loadBody(ctx, lastDatas);\n\t\tbody.initialize(this.getInit(ctx));\n\t\tawait body.initializedAsync;\n\t\treturn body;\n\t}\n\n\tsetInit(ctx: any | dynAny<C, EI>): this {\n\t\tthis._init = ctx;\n\t\treturn this;\n\t}\n\n\tgetInit(ctx: C): EI {\n\t\tif (this._init) {\n\t\t\tif (typeof this._init === 'function') return this._init(ctx);\n\t\t\telse return this._init;\n\t\t}\n\t\treturn ctx as any as EI;\n\t}\n}\n\n/**\n * Surcharge d'une area.\n * L'area surchargÃ©e peut Ãªtre initialisÃ©e par setOverridenSvc() via le mÃ©canisme de surcharge\n * des svc des extPoints ou appelÃ© explicitement.\n * La mÃ©thode getWrappedArea(ctx) peut aussi Ãªtre surchargÃ©e.\n */\nexport class AreaOver<C, E extends HTMLElement> extends AreaAsync<C, E> implements REG.IOverridingSvc {\n\n\tprotected _subArea: Area<C, E>;\n\n\t/**\n\t * Doit renvoyer ActionWrapper.NULL si pas de wrappedAction.\n\t */\n\tgetSubArea(ctx: C): Area<C, E> {return this._subArea || AREAS.NULL}\n\n\t/** MÃ©thode utilisÃ©e par Reg.getSvc() pour affecter le svc surchargÃ© avant de retourner le svc surchargeant. */\n\tsetOverridenSvc(svc: any) {\n\t\tthis._subArea = svc;\n\t\treturn this;\n\t}\n\n\tgetLabel(ctx: C) {\n\t\treturn this._label !== undefined ? super.getLabel(ctx) : this.getSubArea(ctx).getLabel(ctx);\n\t}\n\n\tgetDescription(ctx: C) {\n\t\treturn this._description !== undefined ? super.getDescription(ctx) : this.getSubArea(ctx).getDescription(ctx);\n\t}\n\n\tgetGroup(ctx: C) {\n\t\treturn this._group !== undefined ? super.getGroup(ctx) : this.getSubArea(ctx).getGroup(ctx);\n\t}\n\n\tisVisible(ctx: C) {\n\t\tif (this._visible !== undefined) return super.isVisible(ctx);\n\t\tif (!this.checkObjectRootVisiblePerm(ctx)) return false;\n\t\treturn this.getSubArea(ctx).isVisible(ctx);\n\t}\n\n\tbuildBody(ctx: C, lastDatas?: JLastDatas): E {\n\t\tif (this._body) return super.buildBody(ctx, lastDatas);\n\t\treturn this.getSubArea(ctx).buildBody(ctx, lastDatas);\n\t}\n\n\tasync loadLibs(ctx: C): Promise<void> {\n\t\tawait Promise.all([super.loadLibs(ctx), this._subArea.loadLibs(ctx)]);\n\t}\n}\n\n/**\n * Wrapper d'une area obtenue dynamiquement via un svc d'un extPoints.\n * La mÃ©thode setWrappedSvc(svcCd) permet d'initialiser ce wrapper.\n */\nexport class AreaOverFromSvc<C, E extends HTMLElement> extends AreaOver<C, E> {\n\tprotected _svcCd: string;\n\n\tgetWrappedSvcCd() {return this._svcCd}\n\n\tsetWrappedSvcCd(svcCd: string): this {\n\t\tthis._svcCd = svcCd;\n\t\treturn this;\n\t}\n\n\tgetSubArea(ctx: C): Area<C, E> {\n\t\treturn REG.getReg(ctx).getSvc<Area<C, E>>(this._svcCd) || AREAS.NULL;\n\t}\n}\n\n/**\n * Interface pour le contexte de construction des contrÃ´le d'un formulaire\n */\nexport interface IControlLabelContext {\n\t/**\n\t * Si true, enveloppe l'input du label.\n\t * TODO permet-on le positionnement du label ?\n\t */\n\tbuildControlLabel?: boolean,\n}\n\nexport interface IControlAreaContext extends IControlLabelContext {}\n\n/**\n * Area du type MsgLabel\n */\nexport class MsgArea<C> extends Area<C, MsgLabel> {\n\tconstructor(id?: string, public msgInit?: OLabelInit) {\n\t\tsuper(id);\n\t}\n\n\t/** Construction de l'inputArea par dÃ©faut. */\n\tbuildBody(ctx: C): MsgLabel {\n\t\tconst msg = <MsgLabel Ã®={this.msgInit}/> as MsgLabel;\n\t\tmsg.setAttribute('area-id', this.getId());\n\t\tthis._iniMsgElement(msg, ctx);\n\t\treturn msg;\n\t}\n\n\t/** Initialise les comportement MsgLabel du body */\n\tprotected _iniMsgElement(element: HTMLElement, ctx: C) {\n\t\tif (!this.isVisible(ctx)) DOM.setHidden(element, true);\n\t\tif (!this.isEnabled(ctx)) element.setAttribute('disabled', '');\n\t}\n\n}\n\n/**\n * Area du type [label Element]\n */\nexport abstract class LabelArea<C extends IControlLabelContext = IControlLabelContext> extends Area<C, HTMLElement> {\n\n\t/** Construction de l'inputArea par dÃ©faut. */\n\tbuildBody(ctx: C): HTMLElement {\n\t\tconst control = this._buildControl(ctx, this.getId());\n\t\tconst body = ctx.buildControlLabel ? this._buildControlLabel(control, ctx) : control;\n\t\tbody.setAttribute('area-id', this.getId());\n\t\tthis._initBodyElement(body, ctx);\n\t\treturn body;\n\t}\n\n\t/** Initialise les comportement standard du body */\n\tprotected _initBodyElement(element: HTMLElement, ctx: C) {\n\t\tif (!this.isVisible(ctx)) element.hidden = true;\n\t\tconst title = this.getDescription(ctx);\n\t\tif (title) element.title = title;\n\t}\n\n\t/**\n\t * Initialise les comportement standard d'un contrÃ´le (visible, enabled, required, etc...).\n\t * L'initialistion d'un custom doit se faire en surchargeant cette mÃ©thode pour bÃ©nÃ©fier de l'affectation des attributs\n\t */\n\tprotected _initStdControl(element: HTMLElement, ctx: C) {\n\t\tif (!this.isEnabled(ctx)) element.setAttribute('disabled', '');\n\t}\n\n\tprotected _buildControlLabel(control: HTMLElement, ctx: C, label = this.getLabel(ctx)): HTMLElement {\n\t\treturn AREAS.buildControlLabel(control, this.getId() + '~' + Math.floor(Math.random() * 100000).toString(36), label);\n\t}\n\n\tabstract _buildControl(ctx: C, name: string): HTMLElement;\n}\n\n/**\n * Area async du type [label Element]\n */\nexport abstract class LabelAsyncArea<C extends IControlLabelContext = IControlLabelContext> extends AreaAsync<C, HTMLElement> {\n\n\t/** Construction de l'inputArea par dÃ©faut. */\n\tasync loadBody(ctx: C, lastDatas?: JLastDatas): Promise<HTMLElement> {\n\t\tconst control = await this._loadControl(ctx, this.getId());\n\t\tconst body = this._buildControlLabel ? this._buildControlLabel(control, ctx) : control;\n\t\tbody.setAttribute('area-id', this.getId());\n\t\tthis._initBodyElement(body, ctx);\n\t\treturn body;\n\t}\n\n\t/** Construction de l'inputArea par dÃ©faut. */\n\tbuildBody(ctx: C): HTMLElement {\n\t\tconst control = this._buildControl(ctx, this.getId());\n\t\tconst body = ctx.buildControlLabel ? this._buildControlLabel(control, ctx) : control;\n\t\tbody.setAttribute('area-id', this.getId());\n\t\tthis._initBodyElement(body, ctx);\n\t\treturn body;\n\t}\n\n\t/** Initialise les comportement standard du body */\n\tprotected _initBodyElement(element: HTMLElement, ctx: C) {\n\t\tif (!this.isVisible(ctx)) DOM.setHidden(element, true);\n\t}\n\n\t/**\n\t * Initialise les comportement standard d'un contrÃ´le (visible, enabled, required, etc...).\n\t * L'initialistion d'un custom doit se faire en surchargeant cette mÃ©thode pour bÃ©nÃ©fier de l'affectation des attributs\n\t */\n\tprotected _initStdControl(element: HTMLElement, ctx: C) {\n\t\tif (!this.isEnabled(ctx)) element.setAttribute('disabled', '');\n\t}\n\n\tprotected _buildControlLabel(control: HTMLElement, ctx: C, label = this.getLabel(ctx), desc = this.getDescription(ctx)): HTMLDivElement {\n\t\tconst elemId = this.getId() + '~' + Math.floor(Math.random() * 100000).toString(36);\n\t\tcontrol.id = elemId;\n\t\treturn <div class=\"ctrlLbl\">\n\t\t\t<label class=\"lbl\" for={elemId} title={desc}>{label}</label>\n\t\t\t{control}\n\t\t</div> as HTMLDivElement;\n\t}\n\n\tprotected _buildControl?(ctx: C, name: string): HTMLElement;\n\n\tabstract _loadControl(ctx: C, name: string): Promise<HTMLElement>;\n\n\tneedAsync(ctx: C): boolean {\n\t\treturn !(\"_buildControl\" in this) ? true : super.needAsync(ctx);\n\t}\n\n}\n\n\n/**\n * Area regroupant les comportements pour les contrÃ´le d'un formulaire (input, select et textarea)\n */\nexport abstract class ControlAsyncArea<C extends IControlAreaContext = IControlAreaContext> extends LabelAsyncArea<C> {\n\tprotected _required: boolean | dynBoolean<C>;\n\tprotected _defaultValue: any | dynAny<C>;\n\tprotected _readOnly: any | dynBoolean<C>;\n\n\tsetRequired(required: boolean | dynBoolean<C>): this {\n\t\tthis._required = required;\n\t\treturn this;\n\t}\n\n\tisRequired(ctx: C) {\n\t\tif (typeof this._required === 'function' && this._required(ctx, this) === true) return true;\n\t\tif (this._required === true) return true;\n\t\treturn false;\n\t}\n\n\t/**\n\t * Valeur par dÃ©faut de l'inputArea\n\t * @type object\n\t */\n\tsetDefaultValue(defaultValue: any | dynAny<C>) {\n\t\tthis._defaultValue = defaultValue;\n\t\treturn this;\n\t}\n\n\tgetDefaultValue(ctx: C) {\n\t\treturn (typeof this._defaultValue === 'function') ? this._defaultValue(ctx, this) : this._defaultValue;\n\t}\n\n\t/**\n\t * Indique que le champ est protÃ©gÃ©, et enverra un Ã©vÃ¨nement\n\t * @param protected\n\t */\n\tsetReadOnly(locked: boolean | dynBoolean<C>): this {\n\t\tthis._readOnly = locked;\n\t\treturn this;\n\t}\n\n\tisReadOnly(ctx: C) {\n\t\tif (typeof this._readOnly === 'function' && this._readOnly(ctx, this) === true) return true;\n\t\tif (this._readOnly === true) return true;\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initialise les comportement standard d'un contrÃ´le (visible, enabled, required, etc...).\n\t * L'initialistion d'un custom doit se faire en surchargeant cette mÃ©thode pour bÃ©nÃ©fier de l'affectation des attributs\n\t */\n\tprotected async _initStdControl(input: HTMLElement, ctx: C) {\n\t\tif (!this.isVisible(ctx)) input.setAttribute('hidden', '');\n\t\tif (!this.isEnabled(ctx)) input.setAttribute('disabled', '');\n\t\tif (this.isRequired(ctx)) input.setAttribute('required', '');\n\t\tif (this.isReadOnly(ctx)) input.setAttribute('readonly', '');\n\n\t}\n}\n\n/**\n * Area abstraite pour les contrÃ´les acceptant un dataset\n */\nexport abstract class DatasetAsyncArea<E extends DatasetEntry<C>, C> extends ControlAsyncArea<C> {\n\t_dataset: Promise<Dataset<E>> | dynAny<C, Promise<Dataset<E>>>;\n\n\tsetDataset(dataset: Promise<Dataset<E>> | dynAny<C, Promise<Dataset<E>>>): this {\n\t\tthis._dataset = dataset;\n\t\treturn this;\n\t}\n\n\tgetDataset(ctx: C): Promise<Dataset<E>> {\n\t\treturn (typeof this._dataset === 'function') ? this._dataset(ctx, this) : this._dataset;\n\t}\n}\n\n/**\n * Area construisant un Ã©lÃ©ment <select> Ã  partir d'un dataset\n */\nexport class SelectAsyncArea<E extends DatasetEntry<C>, C> extends DatasetAsyncArea<E, C> {\n\t_multiple: boolean | dynBoolean<C>;\n\n\tsetMultiple(multiple: boolean | dynBoolean<C>): this {\n\t\tthis._multiple = multiple;\n\t\treturn this;\n\t}\n\n\tisMultiple(ctx: C) {\n\t\tif (typeof this._multiple === 'function' && this._multiple(ctx, this) === true) return true;\n\t\tif (this._multiple === true) return true;\n\t\treturn false;\n\t}\n\n\tasync _loadControl(ctx: C, name: string): Promise<HTMLElement> {\n\t\tconst selectElt = <select name={name}/> as HTMLSelectElement;\n\t\tselectElt.multiple = this.isMultiple(ctx);\n\t\tconst dataset = await this.getDataset(ctx);\n\t\tlet defaultValue = this.getDefaultValue(ctx);\n\t\tif (!Array.isArray(defaultValue)) {\n\t\t\tif (defaultValue == null) defaultValue = [];\n\t\t\telse defaultValue = [defaultValue];\n\t\t}\n\t\tfor (const key in dataset) {\n\t\t\tconst data = dataset[key];\n\t\t\tconst option = selectElt.appendChild(<option value={key}>{data.label}</option>) as HTMLOptionElement;\n\t\t\toption.selected = defaultValue.includes(key);\n\t\t\toption.disabled = !this.isEnabled(ctx) || (typeof data.disabled === 'function' ? data.disabled(ctx, this) : data.disabled);\n\t\t\tlet desc = (typeof data.description === 'function' ? data.description(ctx, this) : data.description || \"\");\n\t\t\tif (desc) option.title = desc;\n\t\t}\n\t\tthis._initStdControl(selectElt, ctx);\n\t\treturn selectElt;\n\t}\n}\n\n\n/**\n * Area regroupant les comportements pour les contrÃ´le d'un formulaire (input, select et textarea)\n */\nexport abstract class ControlArea<C extends IControlAreaContext = IControlAreaContext> extends LabelArea<C> {\n\tprotected _required: boolean | dynBoolean<C>;\n\tprotected _defaultValue: any | dynAny<C>;\n\tprotected _locked: any | dynBoolean<C>;\n\n\tsetRequired(required: boolean | dynBoolean<C>): this {\n\t\tthis._required = required;\n\t\treturn this;\n\t}\n\n\tisRequired(ctx: C) {\n\t\tif (typeof this._required === 'function' && this._required(ctx, this) === true) return true;\n\t\tif (this._required === true) return true;\n\t\treturn false;\n\t}\n\n\t/**\n\t * Valeur par dÃ©faut de l'inputArea\n\t * @type object\n\t */\n\tsetDefaultValue(defaultValue: any | dynAny<C>) {\n\t\tthis._defaultValue = defaultValue;\n\t\treturn this;\n\t}\n\n\tgetDefaultValue(ctx: C) {\n\t\treturn (typeof this._defaultValue === 'function') ? this._defaultValue(ctx, this) : this._defaultValue;\n\t}\n\n\t/**\n\t * Indique que le champ est protÃ©gÃ©, et enverra un Ã©vÃ¨nement\n\t * @param protected\n\t */\n\tsetReadOnly(locked: boolean | dynBoolean<C>): this {\n\t\tthis._locked = locked;\n\t\treturn this;\n\t}\n\n\tisReadOnly(ctx: C) {\n\t\tif (typeof this._locked === 'function' && this._locked(ctx, this) === true) return true;\n\t\tif (this._locked === true) return true;\n\t\treturn false;\n\t}\n\n\t/** Initialise les comportement standard d'un contrÃ´le (visible, enabled, required, etc...) */\n\tprotected _initStdControl(input: HTMLElement, ctx: C) {\n\t\tif (!this.isVisible(ctx)) input.setAttribute('hidden', '');\n\t\tif (!this.isEnabled(ctx)) input.setAttribute('disabled', '');\n\t\tif (this.isRequired(ctx)) input.setAttribute('required', '');\n\t\tif (this.isReadOnly(ctx)) input.setAttribute('readonly', '');\n\t}\n}\n\n/**\n * Styles par dÃ©faut des forms basÃ©s sur ControlArea\n */\nREG.reg.registerSkin('form-control-areas', 1, /* language=CSS */ `\n\n\t.ctrlLbl {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tmargin: 0.5em 0;\n\t}\n\n\t.lbl {\n\t\twhite-space: nowrap;\n\t\tmin-width: 6em;\n\t\tmargin-inline-end: 0.5em;\n\t\tcolor: var(--alt1-color);\n\t\tuser-select: none;\n\t}\n\n\t.subPanel {\n\t\tmargin-inline-start: 1.5em;\n\t\tpadding-inline-start: 0.5em;\n\t\tborder-inline-start: solid 2px var(--border-color);\n\t}\n\n\tlabel.choicevalue {\n\t\twhite-space: nowrap;\n\t\tmargin-inline-end: 0.5em;\n\t\tuser-select: none;\n\t}\n\n\t.optionslist {\n\t\tdisplay: flex;\n\t\tmin-height: 0;\n\t\tmin-width: 0;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.optionslist.vertical {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto 1fr;\n\t\tgrid-gap: 0rem .5rem;\n\t\tgrid-auto-rows: max-content;\n\t}\n\n\t.optionslist.vertical label.choicevalue {\n\t\twhite-space: unset;\n\t\tmargin-inline-end: unset;\n\t}\n\n\tinput, textarea, select {\n\t\tflex: 1;\n\t\tmin-width: 0;\n\t\tbackground-color: var(--form-bgcolor);\n\t\tcolor: var(--form-color);\n\t\tborder: 1px solid var(--border-color);\n\t\ttext-overflow: ellipsis;\n\t\tfont-size: inherit;\n\t}\n\n\tinput:disabled, textarea:disabled, select:disabled, .formElt:disabled {\n\t\tbackground-color: transparent;\n\t}\n\n\tinput:focus-visible, textarea:focus-visible, select:focus-visible, .formElt:focus-visible {\n\t\toutline: var(--focus-outline);\n\t}\n\n\tinput:invalid,\n\ttextarea:invalid,\n\tselect:invalid,\n\t.formElt:invalid {\n\t\t/* Pas outline car masque le focus (et le caret si input vide) */\n\t\tborder-color: var(--error-color);\n\t}\n\n\t.formElt {\n\t\t/* NÃ©cessaire pour matÃ©rialisation de l'Ã©tat invalide */\n\t\tborder: 1px solid transparent;\n\t}\n\n\tinput[readonly], textarea[readonly], select[readonly] {\n\t\tbackground-color: transparent;\n\t\tborder: none;\n\t}\n\n\tinput[type=checkbox], input[type=radio] {\n\t\tflex: 0;\n\t\tmin-width: initial;\n\t}\n\n\tinput::placeholder {\n\t\tcolor: var(--fade-color);\n\t\tletter-spacing: 2px;\n\t\tfont-size: .8em;\n\t\tfont-style: italic;\n\t}\n\n\tinput:focus::placeholder {\n\t\tcolor: transparent;\n\t}\n`);\n\n/**\n * Area construisant un Ã©lÃ©ment <fieldset>\n */\nexport class SubControlsArea<C> extends ControlArea<C> {\n\n\tprotected _areas: Area[] | dynAny<C, Area[]>;\n\n\tprotected _hideLevel: Boolean | \"uiOnly\" | \"formOnly\";\n\n\tconstructor(id?: string, areas?: Area[] | dynAny<C, Area[]>) {\n\t\tsuper(id);\n\t\tif (areas) this.setAreas(areas);\n\t}\n\n\tsetAreas(areas: Area[] | dynAny<C, Area[]>): this {\n\t\tthis._areas = areas;\n\t\treturn this;\n\t}\n\n\tgetAreas(ctx: C): Area[] | dynAny<C, Area[]> {\n\t\treturn this._areas;\n\t}\n\n\tsetHideLevel(level: Boolean | \"uiOnly\" | \"formOnly\"): this {\n\t\tthis._hideLevel = level;\n\t\treturn this;\n\t}\n\n\tgetHideLevel(ctx: C): Boolean | \"uiOnly\" | \"formOnly\" {\n\t\treturn this._hideLevel;\n\t}\n\n\t_buildControl(ctx: C, name?: string): HTMLFieldSetElement {\n\t\tlet fieldsetElt = <fieldset name={(this._hideLevel === true || this._hideLevel === \"formOnly\") ? null : name}/> as HTMLFieldSetElement;\n\t\tthis._initStdControl(fieldsetElt, ctx);\n\t\tlet areas = this._areas;\n\t\tif (typeof areas == 'function') areas = areas(ctx, this);\n\t\tif (areas && areas.length) {\n\t\t\tAREAS.applyLayout(fieldsetElt, areas, ctx, true);\n\t\t\tfieldsetElt.hidden = false;\n\t\t} else\n\t\t\tfieldsetElt.hidden = true;\n\t\treturn fieldsetElt;\n\t}\n\n\tprotected _buildControlLabel(control: HTMLElement, ctx: C, label = this.getLabel(ctx)): HTMLElement {\n\t\tif (this._hideLevel === true || this._hideLevel === \"uiOnly\")\n\t\t\treturn control;\n\t\telse\n\t\t\treturn super._buildControlLabel(control, ctx, label);\n\t}\n}\n\n/**\n * Area construisant un Ã©lÃ©ment <input>\n */\nexport class InputArea<C, IT extends string = string> extends ControlArea<C> {\n\tprotected _inputType: IT | dynAny<C, IT>;\n\tprotected _inputCustomValidity: (this: HTMLInputElement, ctx: C) => Promise<string | \"\">;\n\tprotected _inputCustomValidityLatency: number = 0;\n\tprotected _inputCustomValidityReportOnInput: boolean = false;\n\tprivate _onInputValiditySheduled: number = 0;\n\n\tconstructor(id?: string, inputType?: IT) {\n\t\tsuper(id);\n\t\tif (inputType) this.setInputType(inputType);\n\t}\n\n\tgetInputType(ctx: C): IT {\n\t\treturn (typeof this._inputType === 'function') ? this._inputType(ctx, this) : this._inputType || \"hidden\" as IT;\n\t}\n\n\tsetInputType(inputType: IT | dynAny<C, IT>): this {\n\t\tthis._inputType = inputType;\n\t\treturn this;\n\t}\n\n\tsetInputCustomValidity(fct: (this: HTMLInputElement, ctx: C) => Promise<string | \"\">, delay?: number, reportOnInput?: boolean) {\n\t\tthis._inputCustomValidity = fct;\n\t\tif (reportOnInput) this._inputCustomValidityReportOnInput = reportOnInput;\n\t\tif (delay) this._inputCustomValidityLatency = delay;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLInputElement {\n\t\tconst input = <input name={name} type={this.getInputType(ctx)}/> as HTMLInputElement;\n\t\tthis._initStdControl(input, ctx);\n\t\tif (this._inputCustomValidity)\n\t\t\tinput.addEventListener(\"input\", async () => {\n\t\t\t\tif (this._onInputValiditySheduled) {\n\t\t\t\t\tclearTimeout(this._onInputValiditySheduled);\n\t\t\t\t\tthis._onInputValiditySheduled = 0;\n\t\t\t\t}\n\t\t\t\tinput.setCustomValidity(\"\");\n\t\t\t\tthis._onInputValiditySheduled = setTimeout(async () => {\n\t\t\t\t\tinput.setCustomValidity(await this._inputCustomValidity.call(input, ctx));\n\t\t\t\t\tif (this._inputCustomValidityReportOnInput) input.reportValidity();\n\t\t\t\t\tinput.dispatchEvent(new CustomEvent(\"x-validity-change\", {bubbles: true, cancelable: false}));// permet le refresh de la validitÃ© du form\n\t\t\t\t}, this._inputCustomValidityLatency) as any;\n\t\t\t});\n\t\tconst defaultValue = this.getDefaultValue(ctx);\n\t\tif (defaultValue != null) input.setAttribute('value', defaultValue);\n\t\treturn input;\n\t}\n}\n\ntype IStringInputType = \"text\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"email\";\n\n/**\n * Area reprÃ©sentant un Ã©lÃ©ment <input> de type text, cad acceptant un placeholer et un pattern\n */\nexport class StringInputArea<C> extends InputArea<C, IStringInputType> {\n\tprotected _placeholder: string | dynString<C>;\n\tprotected _pattern: string | dynString<C>;\n\n\tconstructor(id?: string, inputType: IStringInputType = \"text\") {\n\t\tsuper(id, inputType);\n\t}\n\n\tgetPlaceholder(ctx: C) {\n\t\treturn (typeof this._placeholder === 'function') ? this._placeholder(ctx, this) : this._placeholder;\n\t}\n\n\tsetPlaceholder(placeholder: string | dynString<C>): this {\n\t\tthis._placeholder = placeholder;\n\t\treturn this;\n\t}\n\n\tsetPattern(pattern: string | dynString<C>): this {\n\t\tthis._pattern = pattern;\n\t\treturn this;\n\t}\n\n\tgetPattern(ctx: C) {\n\t\treturn (typeof this._pattern === 'function') ? this._pattern(ctx, this) : this._pattern;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLInputElement {\n\t\tconst input = super._buildControl(ctx, name);\n\t\tconst placeholder = this.getPlaceholder(ctx);\n\t\tif (placeholder) input.setAttribute('placeholder', placeholder);\n\t\tconst pattern = this.getPattern(ctx);\n\t\tif (pattern) input.setAttribute('pattern', pattern);\n\t\treturn input;\n\t}\n}\n\n/**\n * Area reprÃ©sentant un Ã©lÃ©ment <input> de type hidden, cad non matÃ©rialisÃ©, avec valeur fixe\n */\nexport class HiddenInputArea<C> extends InputArea<C, \"hidden\"> {\n\tprotected _placeholder: string | dynString<C>;\n\tprotected _pattern: string | dynString<C>;\n\n\tconstructor(id?: string) {\n\t\tsuper(id, \"hidden\");\n\t}\n\n\tprotected _buildControlLabel(control: HTMLElement, ctx: C, label = this.getLabel(ctx)): HTMLElement {\n\t\t// Ã©lÃ©ment non matÃ©rialisÃ©\n\t\treturn control;\n\t}\n}\n\n\nexport class BoolCheckInputArea<C> extends InputArea<C> {\n\tconstructor(id?: string) {\n\t\tsuper(id, \"checkbox\");\n\t}\n\n\tprotected _checkedValue: string | dynString<C> | boolean | dynBoolean<C> = true;\n\n\tprotected _uncheckedValue: string | dynString<C> | boolean | dynBoolean<C> = false;\n\n\tsetCheckedValue(pattern: string | dynString<C> | boolean | dynBoolean<C>): this {\n\t\tthis._checkedValue = pattern;\n\t\treturn this;\n\t}\n\n\tgetCheckedValue(ctx: C) {\n\t\treturn (typeof this._checkedValue === 'function') ? this._checkedValue(ctx, this) : this._checkedValue;\n\t}\n\n\tsetUncheckedValue(pattern: string | dynString<C> | boolean | dynBoolean<C>): this {\n\t\tthis._uncheckedValue = pattern;\n\t\treturn this;\n\t}\n\n\tgetUncheckedValue(ctx: C) {\n\t\treturn (typeof this._uncheckedValue === 'function') ? this._uncheckedValue(ctx, this) : this._uncheckedValue;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLInputElement {\n\t\tconst input = super._buildControl(ctx, name);\n\n\t\tconst checkedValue = this.getCheckedValue(ctx);\n\t\tconst uncheckedValue = this.getUncheckedValue(ctx);\n\n\t\tconst checkedByDefault = Boolean(this.getDefaultValue(ctx));\n\t\tinput.checked = checkedByDefault;\n\n\t\tObject.assign(input, {\n\t\t\tfillJson: function (this: HTMLInputElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\tparent[this.name] = this.checked ? checkedValue : uncheckedValue;\n\t\t\t},\n\t\t\textractJson: function (this: HTMLInputElement, parent: Dict<any>) {\n\t\t\t\tconst value = parent[this.name];\n\t\t\t\tif (value == checkedValue)\n\t\t\t\t\tthis.checked = true\n\t\t\t\telse if (value == null)\n\t\t\t\t\tthis.checked = checkedByDefault\n\t\t\t\telse\n\t\t\t\t\tthis.checked = false\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} as IFormJsonisable);\n\t\treturn input;\n\t}\n}\n\n/** Date avec value lue et enregistrÃ©e en number EPOCH ou 0 si indÃ©fini. */\nexport class DateInputArea<C> extends InputArea<C, \"date\" | \"datetime-local\"> {\n\n\t/**\n\t * Nombre de jours de dÃ©calage entre la valeur enregistrÃ©e et celle affichÃ©e.\n\t * Exemple : 1 permet d'afficher une date incluse\n\t */\n\tdeltaDays?: number;\n\n\tconstructor(id?: string, deltaDays?: number) {\n\t\tsuper(id, \"date\");\n\t\tthis.deltaDays = deltaDays || 0;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLInputElement {\n\t\tconst input = super._buildControl(ctx, name);\n\t\tconst area = this;\n\t\tObject.assign(input, {\n\t\t\tfillJson: function (this: HTMLInputElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\tconst d = this.valueAsNumber; //valueAsDate not impl avec type=\"datetime-local\" (chrome 104)\n\t\t\t\tif (d) {\n\t\t\t\t\tconst date = new Date(d);\n\t\t\t\t\tdate.setMinutes(date.getMinutes() + date.getTimezoneOffset()); //On enregistre Ã  00:00 Ã  la timeZone locale courante.\n\t\t\t\t\tif (area.deltaDays) date.setDate(date.getDate() + area.deltaDays);\n\t\t\t\t\tparent[this.name] = date.getTime();\n\t\t\t\t} else {\n\t\t\t\t\tparent[this.name] = 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\textractJson: function (this: HTMLInputElement, parent: Dict<any>) {\n\t\t\t\tconst value = parent[this.name];\n\t\t\t\tif (value > 0) {\n\t\t\t\t\tconst date = new Date(value);\n\t\t\t\t\tdate.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n\t\t\t\t\tif (area.deltaDays) date.setDate(date.getDate() - area.deltaDays);\n\t\t\t\t\tthis.valueAsNumber = date.getTime();\n\t\t\t\t} else this.value = null;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} as IFormJsonisable);\n\t\treturn input;\n\t}\n\n}\n\n/**\n * Area construisant un Ã©lÃ©ment <textarea>\n */\nexport class InputTextArea<C> extends ControlArea<C> {\n\tprotected _placeholder: string | dynString<C>;\n\n\tconstructor(id?: string,) {\n\t\tsuper(id);\n\t}\n\n\tgetPlaceholder(ctx: C) {\n\t\treturn (typeof this._placeholder === 'function') ? this._placeholder(ctx, this) : this._placeholder;\n\t}\n\n\tsetPlaceholder(placeholder: string | dynString<C>): this {\n\t\tthis._placeholder = placeholder;\n\t\treturn this;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLTextAreaElement {\n\t\tconst inputElt = <textarea name={name}/> as HTMLTextAreaElement;\n\t\tconst placeholder = this.getPlaceholder(ctx);\n\t\tif (placeholder) inputElt.setAttribute('placeholder', placeholder);\n\t\tthis._initStdControl(inputElt, ctx);\n\t\tconst defaultValue = this.getDefaultValue(ctx);\n\t\tif (defaultValue != null) inputElt.setAttribute('value', defaultValue);\n\t\treturn inputElt;\n\t}\n}\n\n/**\n * Area construisant un Ã©lÃ©ment <textarea> d'Ã©dition d'un JSON\n */\nexport class InputJsonArea<C> extends InputTextArea<C> {\n\n\t_buildControl(ctx: C, name: string): HTMLTextAreaElement {\n\t\tconst control = super._buildControl(ctx, name);\n\t\tObject.assign(control, {\n\t\t\tfillJson: function (this: HTMLTextAreaElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\tparent[this.name] = this.value ? JSON.parse(this.value) : null;\n\t\t\t},\n\t\t\textractJson: function (this: HTMLTextAreaElement, parent: Dict<any>) {\n\t\t\t\tconst value = parent[this.name];\n\t\t\t\tif (value == null) this.value = \"\";\n\t\t\t\telse if (typeof value == \"string\") this.value = value;\n\t\t\t\telse this.value = JSON.stringify(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} as IFormJsonisable);\n\t\treturn control;\n\t}\n}\n\nexport interface DatasetEntry<C> {\n\tlabel: string | dynString<C>,\n\ticon?: string | dynString<C>,\n\tdisabled?: boolean | dynBoolean<C>,\n\tdescription?: string | dynString<C>,\n}\n\nexport interface DatasetEntryMultiLevels<C> extends DatasetEntry<C> {\n\t/** si true, le groupe est sÃ©lectionnable */\n\tisListEntry?: boolean | dynBoolean<C>,\n\tsubs?: Dict<DatasetEntryMultiLevels<C>>,\n}\n\nexport type Dataset<E extends DatasetEntry<C> = any, C = any> = Dict<E>;\n\nexport type DatasetMultiLevels<E extends DatasetEntryMultiLevels<C> = any, C = any> = Dict<E>;\n\n/**\n * Area abstraite pour les contrÃ´les acceptant un dataset\n */\nexport abstract class DatasetArea<E extends DatasetEntry<C>, C> extends ControlArea<C> {\n\t_dataset: Dataset<E> | dynAny<C, Dataset<E>>;\n\n\tsetDataset(dataset: Dataset<E> | dynAny<C, Dataset<E>>): this {\n\t\tthis._dataset = dataset;\n\t\treturn this;\n\t}\n\n\tgetDataset(ctx: C): Dataset<E> {\n\t\treturn (typeof this._dataset === 'function') ? this._dataset(ctx, this) : this._dataset;\n\t}\n}\n\n/**\n * Area construisant une liste d'Ã©lÃ©ments checkbox ou radio partir d'un dataset\n */\nexport class InputChoiceArea<C> extends DatasetArea<DatasetEntry<C>, C> {\n\tprotected _inputType: \"checkbox\" | \"radio\" | dynAny<C, \"checkbox\" | \"radio\"> = \"radio\";\n\n\tprotected _direction: \"vertical\" | \"horizontal\" = \"horizontal\";\n\n\tprotected jsonBinderMode?: 'boolean' | 'array' | null;\n\n\tconstructor(id?: string, inputType?: \"checkbox\" | \"radio\") {\n\t\tsuper(id);\n\t\tif (inputType) this.setInputType(inputType);\n\t}\n\n\tgetInputType(ctx: C): \"checkbox\" | \"radio\" {\n\t\treturn (typeof this._inputType === 'function') ? this._inputType(ctx, this) : this._inputType || \"radio\" as \"checkbox\" | \"radio\";\n\t}\n\n\tsetInputType(inputType: \"checkbox\" | \"radio\" | dynAny<C, \"checkbox\" | \"radio\">): this {\n\t\tthis._inputType = inputType;\n\t\treturn this;\n\t}\n\n\tsetDirection(value: \"vertical\" | \"horizontal\") {\n\t\tthis._direction = value;\n\t}\n\n\tsetJsonBinderMode(mode: 'boolean' | 'array' | null /*todo | 'booleanNegate'  | 'arrayNegate' */): this {\n\t\tthis.jsonBinderMode = mode;\n\t\treturn this;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLDivElement {\n\t\t//data-direction=vertical\n\t\tlet fieldset: HTMLDivElement = <div class={`optionslist ${this._direction}`}/> as HTMLDivElement;\n\t\tthis._initStdControl(fieldset, ctx);\n\t\tconst dataset = this.getDataset(ctx);\n\t\tlet defaultValue = this.getDefaultValue(ctx);\n\t\tif (!Array.isArray(defaultValue)) {\n\t\t\tif (defaultValue == null) defaultValue = [];\n\t\t\telse defaultValue = [defaultValue];\n\t\t}\n\t\tconst isGlobalDisabled = fieldset.hasAttribute(\"disabled\"); //calculÃ© dans _initStdControl()\n\t\tconst fieldType = this.getInputType(ctx);\n\t\tfor (const key in dataset) {\n\t\t\tconst data = dataset[key];\n\t\t\tconst id = name + \"_\" + key;\n\t\t\tconst input = fieldset.appendChild(<input name={name} type={fieldType} value={key} id={id}/>) as HTMLInputElement;\n\t\t\tconst label = fieldset.appendChild(<label class=\"choicevalue\" for={id}>{data.label}</label>);\n\t\t\tinput.checked = defaultValue.includes(key);\n\t\t\tinput.disabled = isGlobalDisabled || (typeof data.disabled === 'function' ? data.disabled(ctx, this) : data.disabled);\n\t\t\tlet desc = (typeof data.description === 'function' ? data.description(ctx, this) : data.description || \"\");\n\t\t\tif (desc) label.title = input.title = desc;\n\t\t}\n\t\tthis.initJsonBinders(fieldset, name, this.jsonBinderMode);\n\t\treturn fieldset;\n\t}\n\n\t/** Ã surcharger si les modes de binders par dÃ©faut ne conviennent pas. */\n\tinitJsonBinders(fieldSet: HTMLDivElement, name: string, mode: 'boolean' | 'array' /*todo | 'booleanNegate'  | 'arrayNegate' */) {\n\t\tif (!mode) return;\n\t\tif (mode === 'boolean') {\n\t\t\tObject.assign(fieldSet, {\n\t\t\t\tfillJson: function (this: HTMLDivElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\t\tlet input = this.querySelector(\"input:checked\") as HTMLInputElement;\n\t\t\t\t\tif (input) parent[name] = input.value === \"true\"; //input.value est la key static ici !== input.checked\n\t\t\t\t},\n\t\t\t\textractJson: function (this: HTMLDivElement, parent: Dict<any>) {\n\t\t\t\t\t//input.value est la key static ici !== input.checked\n\t\t\t\t\tif (parent[name]) {\n\t\t\t\t\t\t(this.querySelector(\"input[value='true']\") as HTMLInputElement).checked = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(this.querySelector(\"input[value='false']\") as HTMLInputElement).checked = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} as IFormJsonisable);\n\t\t} else if (mode === 'array') {\n\t\t\tObject.assign(fieldSet, {\n\t\t\t\tfillJson: function (this: HTMLDivElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\t\tconst r: string[] = [];\n\t\t\t\t\tDOM.findNext(this, this, (n: Node): n is Node => {\n\t\t\t\t\t\tif (n instanceof HTMLInputElement && n.checked) r.push(n.value);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tparent[name] = r;\n\t\t\t\t},\n\t\t\t\textractJson: function (this: HTMLDivElement, parent: Dict<any>) {\n\t\t\t\t\tconst array = parent[name];\n\t\t\t\t\tif (Array.isArray(array)) {\n\t\t\t\t\t\tDOM.findNext(this, this, (n: Node): n is Node => {\n\t\t\t\t\t\t\tif (n instanceof HTMLInputElement) n.checked = array.indexOf(n.value) >= 0;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} as IFormJsonisable);\n\t\t}\n\t}\n}\n\n\n/**\n * Area construisant un Ã©lÃ©ment <select> Ã  partir d'un dataset\n */\nexport class SelectArea<E extends DatasetEntryMultiLevels<C>, C> extends DatasetArea<E, C> {\n\t_multiple: boolean | dynBoolean<C>;\n\n\tsetMultiple(multiple: boolean | dynBoolean<C>): this {\n\t\tthis._multiple = multiple;\n\t\treturn this;\n\t}\n\n\tisMultiple(ctx: C) {\n\t\tif (typeof this._multiple === 'function' && this._multiple(ctx, this) === true) return true;\n\t\tif (this._multiple === true) return true;\n\t\treturn false;\n\t}\n\n\t_buildControl(ctx: C, name: string): HTMLSelectElement {\n\t\tconst selectElt = <select name={name}/> as HTMLSelectElement;\n\t\tthis._initStdControl(selectElt, ctx);\n\t\t// Pas de select.readonly => disabled dans ce cas\n\t\tif (this.isReadOnly(ctx)) selectElt.setAttribute('disabled', '');\n\t\tselectElt.multiple = this.isMultiple(ctx);\n\t\tconst dataset = this.getDataset(ctx);\n\t\tlet defaultValue = this.getDefaultValue(ctx);\n\t\tif (!Array.isArray(defaultValue)) {\n\t\t\tif (defaultValue == null) defaultValue = [];\n\t\t\telse defaultValue = [defaultValue];\n\t\t}\n\t\tconst doLevel = (currentElt: HTMLElement, objLevel: Dict<DatasetEntryMultiLevels<C>>) => {\n\t\t\tfor (const key in objLevel) {\n\t\t\t\tconst data = objLevel[key];\n\t\t\t\tif (data.subs) {\n\t\t\t\t\tconst optiongroup = currentElt.appendChild(<optgroup label={data.label}/>) as HTMLOptGroupElement;\n\t\t\t\t\tlet desc = (typeof data.description === 'function' ? data.description(ctx, this) : data.description || \"\");\n\t\t\t\t\tif (desc) optiongroup.title = desc;\n\t\t\t\t\tif (data.isListEntry) {\n\t\t\t\t\t\tconst option = optiongroup.appendChild(<option value={key}>{data.label}</option>) as HTMLOptionElement;\n\t\t\t\t\t\toption.selected = defaultValue.includes(key);\n\t\t\t\t\t\toption.disabled = !this.isEnabled(ctx) || (typeof data.disabled === 'function' ? data.disabled(ctx, this) : data.disabled);\n\t\t\t\t\t\tlet desc = (typeof data.description === 'function' ? data.description(ctx, this) : data.description || \"\");\n\t\t\t\t\t\tif (desc) option.title = desc;\n\n\t\t\t\t\t}\n\t\t\t\t\t;\n\t\t\t\t\tdoLevel(optiongroup, data.subs);\n\t\t\t\t} else {\n\t\t\t\t\tconst option = currentElt.appendChild(<option value={key}>{data.label}</option>) as HTMLOptionElement;\n\t\t\t\t\toption.selected = defaultValue.includes(key);\n\t\t\t\t\toption.disabled = !this.isEnabled(ctx) || (typeof data.disabled === 'function' ? data.disabled(ctx, this) : data.disabled);\n\t\t\t\t\tlet desc = (typeof data.description === 'function' ? data.description(ctx, this) : data.description || \"\");\n\t\t\t\t\tif (desc) option.title = desc;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tdoLevel(selectElt, dataset);\n\t\treturn selectElt;\n\t}\n\n}\n\nexport interface DatasetEntrySubAreas<C> extends DatasetEntry<C> {\n\tareas?: Area[] | dynAny<C, Area[]>\n}\n\n/**\n * Area construisant un Ã©lÃ©ment <select> Ã  partir d'un dataset ainsi qu'un sous-panneaux Ã  partir\n * de la liste d'areas prÃ©cisÃ©es pour cette clÃ© dans le dataset\n */\nexport class SelectSubPanelArea<E extends DatasetEntrySubAreas<C>, C extends IControlAreaContext> extends SelectArea<E, C> {\n\tisMultiple(ctx: C) {\n\t\treturn false;\n\t}\n\n\tbuildBody(ctx: C): HTMLElement {\n\t\tconst area = this;\n\t\tconst body = <div/>;\n\t\tconst control = this._buildControl(ctx, this.getId());\n\t\tbody.appendChild(ctx.buildControlLabel ? this._buildControlLabel(control, ctx) : control);\n\n\t\tconst subPanel = body.appendChild(<div class=\"subPanel\" hidden/>) as HTMLDivElement;\n\t\tcontrol.addEventListener('change', async (ev: UIEvent) => {\n\t\t\tconst select = ev.target as HTMLSelectElement;\n\t\t\tthis._selectSubPanel(ctx, subPanel, select.value)\n\t\t});\n\t\tObject.assign(control, {\n\t\t\tfillJson: function (this: HTMLSelectElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\tparent[this.name] = this.value;\n\t\t\t},\n\t\t\textractJson: function (this: HTMLSelectElement, parent: Dict<any>) {\n\t\t\t\tthis.value = parent[this.name];\n\t\t\t\tarea._selectSubPanel(ctx, subPanel, this.value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} as IFormJsonisable);\n\t\tconst defaultValue = this.getDefaultValue(ctx);\n\t\tif (defaultValue != null) this._selectSubPanel(ctx, subPanel, defaultValue);\n\t\tbody.setAttribute('area-id', this.getId());\n\t\treturn body;\n\t}\n\n\tasync loadBody(ctx: C): Promise<HTMLElement> {\n\t\tconst area = this;\n\t\tconst ctn = <div/>;\n\t\tconst control = this._buildControl(ctx, this.getId());\n\t\tctn.appendChild(ctx.buildControlLabel ? this._buildControlLabel(control, ctx) : control);\n\n\t\tconst subPanel = ctn.appendChild(<div class=\"subPanel\" hidden/>) as HTMLDivElement;\n\t\tcontrol.addEventListener('change', async (ev: UIEvent) => {\n\t\t\tconst select = ev.target as HTMLSelectElement;\n\t\t\tawait this._selectSubPanelAsync(ctx, subPanel, select.value)\n\t\t});\n\t\tObject.assign(control, {\n\t\t\tfillJson: function (this: HTMLSelectElement, parent: Jsonisable, root: Jsonisable) {\n\t\t\t\tparent[this.name] = this.value;\n\t\t\t},\n\t\t\textractJson: function (this: HTMLSelectElement, parent: Dict<any>) {\n\t\t\t\tthis.value = parent[this.name];\n\t\t\t\tarea._selectSubPanel(ctx, subPanel, this.value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} as IFormJsonisable);\n\t\tconst defaultValue = this.getDefaultValue(ctx);\n\t\tif (defaultValue != null) await this._selectSubPanelAsync(ctx, subPanel, defaultValue);\n\n\t\treturn ctn;\n\t}\n\n\t_selectSubPanel(ctx: C, subPanel: HTMLDivElement, key: string) {\n\t\tconst dataset = this.getDataset(ctx);\n\t\tlet areas = key in dataset && dataset[key].areas;\n\t\tif (typeof areas == 'function') areas = areas(ctx, this);\n\t\tsubPanel.innerHTML = '';\n\t\tif (areas && areas.length) {\n\t\t\tAREAS.applyLayout(subPanel, areas, ctx, true);\n\t\t\tsubPanel.hidden = false;\n\t\t} else {\n\t\t\tsubPanel.hidden = true;\n\t\t}\n\t}\n\n\tasync _selectSubPanelAsync(ctx: C, subPanel: HTMLDivElement, key: string) {\n\t\tconst dataset = this.getDataset(ctx);\n\t\tlet areas = key in dataset && dataset[key].areas;\n\t\tif (typeof areas == 'function') areas = areas(ctx, this);\n\t\tif (areas && areas.length) {\n\t\t\tawait AREAS.applyLayout(subPanel, areas, ctx, true);\n\t\t\tsubPanel.hidden = false;\n\t\t} else {\n\t\t\tsubPanel.innerHTML = '';\n\t\t\tsubPanel.hidden = true;\n\t\t}\n\t}\n\n\tneedAsync(ctx: C): boolean {\n\t\tconst dataset = this.getDataset(ctx);\n\t\tfor (const key in dataset) {\n\t\t\tlet areas = key in dataset && dataset[key].areas;\n\t\t\tif (typeof areas == 'function') areas = areas(ctx, this);\n\t\t\tif (areas) for (const area of areas) {\n\t\t\t\tif (area.needAsync(ctx)) return true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\n/**\n * Area de construction d'un bouton Ã  partir d'un svcAction\n */\nexport class ActionBtnArea<C extends IRegPointer<any>> extends Area<C> {\n\tprotected _svcAction: string | dynString<C> | IAction<C>;\n\n\tprotected _uiContext: EButtonUiContext | dynString<C>;\n\n\tconstructor(id?: string, svcAction?: string | dynString<C> | IAction<C>) {\n\t\tsuper(id);\n\t\tif (svcAction) this.setSvcAction(svcAction);\n\t}\n\n\tsetSvcAction(svcActionCd: string | dynString<C> | IAction<C>): this {\n\t\tthis._svcAction = svcActionCd;\n\t\treturn this;\n\t}\n\n\tsetUiContext(uictx: EButtonUiContext | dynString<C>): this {\n\t\tthis._uiContext = uictx;\n\t\treturn this;\n\t}\n\n\tgetSvcAction(ctx: C): IAction<C> | null {\n\t\tlet action = (typeof this._svcAction === 'function') ? this._svcAction(ctx, this) : this._svcAction;\n\t\tif (action && typeof action === 'string')\n\t\t\treturn ctx.reg.getSvc<IAction<C>>(action);\n\t\treturn action as IAction<C>;\n\t}\n\n\tgetUiContext(ctx: C) {\n\t\treturn (typeof this._uiContext === 'function') ? this._uiContext(ctx, this) : this._uiContext;\n\t}\n\n\tbuildBody(ctx: C): HTMLElement {\n\t\treturn ActionBtn.buildButton(this.getSvcAction(ctx), ctx, this.getUiContext(ctx));\n\t}\n}\n\nexport namespace AREAS {\n\n\texport const NULL = Object.freeze(new Area('#NULL').setVisible(false)) as Area<any, any>;\n\n\t/**\n\t * CrÃ©e et rÃ©parti les areas en fonction de rÃ¨gle de sÃ©lection par id ou group.\n\t * Si utilisÃ© sur des slots dans un shadowRoot, les Ã©lÃ©ments sont ajoutÃ©s sur le host et rÃ©partis par la propriÃ©tÃ© slot\n\t *\n\t * @example\n\t * <div id=\"div\">\n\t *   <div area-ids=\"area1 area2\"></div>\n\t *   <div area-groups=\"areaGroup\" />\n\t *   <div area-ids=\"*\" />\n\t * </div>\n\n\t *\n\t * @param root\n\t * @param {Area<C,E>[]} areasList Liste ou map des areas Ã  rÃ©partir\n\t * @param {C} ctx Contexte pour construire les areas.\n\t * @param {boolean} clear Dans le cas d'un deuxiÃ¨me appel, permet de supprimer les prÃ©cÃ©dentes areas\n\t * @returns {Promise<Element[]>} Promesse retournant les corps des areas construites\n\t */\n\texport async function applyLayout<C>(root: Element | ShadowRoot | DocumentFragment, areasList: IArea<C>[] | Dict<IArea<C>>, ctx: C, clear = false): Promise<Dict<Element>> {\n\t\tconst doc = root.ownerDocument;\n\t\tconst areasSet = new Set<IArea<C>>(Array.isArray(areasList) ? areasList : Object.values(areasList));\n\t\tconst bodies: Dict<Element> = {};\n\t\tconst idsParents = [], groupsParents = [];\n\t\tlet remainParent = null;\n\t\tconst it = doc.createNodeIterator(root, NodeFilter.SHOW_ELEMENT);\n\t\tlet elt;\n\t\twhile (elt = it.nextNode() as Element) {\n\t\t\tconst ids = elt.getAttribute('area-ids');\n\t\t\tif (ids) {\n\t\t\t\tif (ids != '*') {\n\t\t\t\t\tidsParents.push(elt);\n\t\t\t\t\tif (elt instanceof HTMLSlotElement && !elt.name) elt.name = ids;\n\t\t\t\t} else if (!remainParent) {\n\t\t\t\t\tremainParent = elt;\n\t\t\t\t}\n\n\t\t\t\tif (clear) {\n\t\t\t\t\tif (elt instanceof HTMLSlotElement) {\n\t\t\t\t\t\tconst assignedNodes = elt.assignedNodes();\n\t\t\t\t\t\tassignedNodes.forEach((node) => node.parentNode.removeChild(node));\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (elt.firstChild) elt.removeChild(elt.lastChild);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst groups = elt.getAttribute('area-groups');\n\t\t\tif (groups) {\n\t\t\t\tgroupsParents.push(elt);\n\t\t\t\tif (elt instanceof HTMLSlotElement && !elt.name) elt.name = groups;\n\t\t\t\tif (clear) {\n\t\t\t\t\tif (elt instanceof HTMLSlotElement) {\n\t\t\t\t\t\tconst assignedNodes = elt.assignedNodes();\n\t\t\t\t\t\tassignedNodes.forEach((node) => node.parentNode.removeChild(node));\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile (elt.firstChild) elt.removeChild(elt.lastChild);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!remainParent) {\n\t\t\tremainParent = root;\n\t\t\tif (clear) while (remainParent.lastChild) remainParent.lastChild.remove();\n\t\t}\n\n\t\tfor (let i = 0; i < idsParents.length; i++) {\n\t\t\tconst parent = idsParents[i];\n\t\t\tconst ids = parent.getAttribute('area-ids').split(' ');\n\t\t\tfor (const area of areasSet) {\n\t\t\t\tif (ids.includes(area.getId())) {\n\t\t\t\t\tconst body = area.needAsync(ctx) ? await area.loadBody(ctx) : area.buildBody(ctx);\n\t\t\t\t\tif (body) {\n\t\t\t\t\t\tif (parent instanceof HTMLSlotElement && body instanceof HTMLElement && root instanceof ShadowRoot) {\n\t\t\t\t\t\t\tbody.slot = (parent as HTMLSlotElement).name;\n\t\t\t\t\t\t\troot.host.appendChild(body);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparent.appendChild(body);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbodies[area.getId()] = body;\n\t\t\t\t\t}\n\t\t\t\t\tareasSet.delete(area);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (areasSet.size) {\n\t\t\tfor (let i = 0; i < groupsParents.length; i++) {\n\t\t\t\tconst parent = groupsParents[i];\n\t\t\t\tconst groups = parent.getAttribute('area-groups').split(' ');\n\t\t\t\tfor (const area of areasSet) {\n\t\t\t\t\tconst areaGroup = area.getGroup(ctx);\n\t\t\t\t\tif (areaGroup && groups.includes(areaGroup)) {\n\t\t\t\t\t\tconst body = area.needAsync(ctx) ? await area.loadBody(ctx) : area.buildBody(ctx);\n\t\t\t\t\t\tif (body) {\n\t\t\t\t\t\t\tif (parent.localName == 'slot' && body instanceof HTMLElement && root instanceof ShadowRoot) {\n\t\t\t\t\t\t\t\tbody.slot = (parent as HTMLSlotElement).name;\n\t\t\t\t\t\t\t\troot.host.appendChild(body);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparent.appendChild(body);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbodies[area.getId()] = body;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tareasSet.delete(area);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (areasSet.size) {\n\t\t\tfor (const area of areasSet) {\n\t\t\t\tconst body = area.needAsync(ctx) ? await area.loadBody(ctx) : area.buildBody(ctx);\n\t\t\t\tif (body) {\n\t\t\t\t\tif (DOM.IS_element(remainParent) && remainParent.localName == 'slot' && body instanceof HTMLElement && root instanceof ShadowRoot) {\n\t\t\t\t\t\troot.host.appendChild(body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tremainParent.appendChild(body);\n\t\t\t\t\t}\n\t\t\t\t\tbodies[area.getId()] = body;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bodies;\n\t}\n\n\t/**\n\t * Construction standard d'un label autour d'un Input.\n\t */\n\texport function buildControlLabel(control: HTMLElement, id: string, label: string): HTMLElement {\n\t\tcontrol.id = id;\n\t\treturn <div class=\"ctrlLbl\">\n\t\t\t<label class=\"lbl\" for={id}>{label}</label>\n\t\t\t{control}\n\t\t</div>;\n\t}\n}\n"]}