{"version":3,"sources":["/@lib@/wsp/dyngen.ts"],"names":["DYNGEN","getOriginFrom","elt","origin","oriPath","ori","getAttribute","charAt","sep","indexOf","srcRef","substring","sep2","lastModif","parseInt","push","reverse","join","parentElement","getSrcRefFrom","findSrcRefs","from","cb","tw","ownerDocument","createTreeWalker","NodeFilter","SHOW_ELEMENT","currentNode","nextNode","updateOrigin","path","delta","depthDelta","length","fragDelta","depths","lastDepth","findNewDepth","offsetPath","frags","split","currentDepth","i","frag","toString","setAttribute","newDepth","firstElementChild","nextElementSibling","splice","encodeUrl2","val","encodeURIComponent","replace","encodeUrl2Esc","match"],"mappings":"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","sourcesContent":["import {srcRef} from \"lib/wsp/src\";\n\n/**\n * Librairie pour les dynamicGenerator d'un chain.\n */\n\n/**\n * Reconstruction des données d'une hierarchie d'attributs data-origin.\n */\nexport interface JOrigin {\n\tsrcRef: srcRef\n\toriPath: string\n\tlastModif: number\n}\n\nexport namespace DYNGEN {\n\n\t/** Retrouve les info d'origne en remontant les ancêtres d'un élément DOM. */\n\texport function getOriginFrom(elt: Element): JOrigin {\n\t\tconst origin = {} as JOrigin;\n\t\tconst oriPath: string[] = [];\n\t\tdo {\n\t\t\tconst ori = elt.getAttribute(\"data-origin\");\n\t\t\tif (ori) {\n\t\t\t\tif (ori.charAt(0) === '@') {\n\t\t\t\t\tconst sep = ori.indexOf('?', 1);\n\t\t\t\t\torigin.srcRef = ori.substring(1, sep);\n\t\t\t\t\tconst sep2 = ori.indexOf('#', sep);\n\t\t\t\t\torigin.lastModif = parseInt(sep2 > 0 ? ori.substring(sep + 1, sep2) : ori.substring(sep + 1));\n\t\t\t\t\tif (sep2 > 0) oriPath.push(ori.substring(sep2 + 1));\n\t\t\t\t\torigin.oriPath = oriPath.reverse().join(\"/\");\n\t\t\t\t\treturn origin;\n\t\t\t\t} else {\n\t\t\t\t\toriPath.push(ori);\n\t\t\t\t}\n\t\t\t}\n\t\t} while ((elt = elt.parentElement));\n\t\treturn origin;\n\t}\n\n\texport function getSrcRefFrom(elt: Element): srcRef {\n\t\tdo {\n\t\t\tconst ori = elt.getAttribute(\"data-origin\");\n\t\t\tif (ori) {\n\t\t\t\tif (ori.charAt(0) === '@') {\n\t\t\t\t\treturn ori.substring(1, ori.indexOf('?', 1));\n\t\t\t\t}\n\t\t\t}\n\t\t} while ((elt = elt.parentElement));\n\t\treturn null;\n\t}\n\n\t/**\n\t * Parcourt un arbre DOM pour trouver tous les éléments qui définissent un srcRef.\n\t */\n\texport function findSrcRefs(from: Element, cb: (elt: Element, srcRef: srcRef, lastModif: number) => void | 'stop') {\n\t\tconst tw = from.ownerDocument.createTreeWalker(from, NodeFilter.SHOW_ELEMENT);\n\t\tdo {\n\t\t\tconst ori = (tw.currentNode as Element).getAttribute(\"data-origin\");\n\t\t\tif (ori && ori.charAt(0) === '@') {\n\t\t\t\tconst sep = ori.indexOf('?', 1);\n\t\t\t\tconst srcRef = ori.substring(1, sep);\n\t\t\t\tconst sep2 = ori.indexOf('#', sep);\n\t\t\t\tconst lastModif = parseInt(sep2 > 0 ? ori.substring(sep + 1, sep2) : ori.substring(sep + 1));\n\t\t\t\tif (cb(tw.currentNode as Element, srcRef, lastModif) === 'stop') return;\n\t\t\t}\n\t\t} while (tw.nextNode());\n\t}\n\n\texport function updateOrigin(from: Element, srcRef: srcRef, path: number[], delta: number) {\n\t\tconst depthDelta = path.length - 1;\n\t\tconst fragDelta = path[depthDelta];\n\t\t//depth = profondeur courante de l'oriPath\n\t\t// null = hors du srcRef recherché,\n\t\t// 0 : on est à la racine du document srcRef\n\t\t// 1 : on est dans path[0]\n\t\t// 2 : on est dans path[0]/path[1]\n\t\t// ...\n\t\t// -1 : on est à la profondeur 1 du path, mais hors de path[0]\n\t\t// -2 : on est à la profondeur 2 du path, mais hors de path[0]/path[1]\n\t\t// -3 : on est à la profondeur 3 du path, mais hors du path car path.length == 2\n\t\t// ...\n\t\tconst depths: Array<number | null> = [];\n\t\tlet lastDepth = null as number | null;\n\t\tlet elt = from;\n\n\t\tfunction findNewDepth(ori: string, offsetPath: number): number {\n\t\t\tconst frags = ori.substring(offsetPath).split('/');\n\t\t\tif (lastDepth < 0) {\n\t\t\t\t//On est hors du path recherché\n\t\t\t\treturn lastDepth - frags.length;\n\t\t\t} else {\n\t\t\t\tlet currentDepth = lastDepth;\n\t\t\t\tfor (let i = 0; i < frags.length; i++) {\n\t\t\t\t\tconst frag = parseInt(frags[i], 10);\n\t\t\t\t\tif (currentDepth === depthDelta) {\n\t\t\t\t\t\tif (frag >= fragDelta) {\n\t\t\t\t\t\t\t//On doit réécrire l'attribut.\n\t\t\t\t\t\t\tfrags[i] = (frag + delta).toString();\n\t\t\t\t\t\t\telt.setAttribute(\"data-origin\", ori.substring(0, offsetPath) + frags.join('/'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn -(lastDepth + frags.length); //on sort du path recherché\n\t\t\t\t\t}\n\t\t\t\t\tif (frag !== path[currentDepth]) return -(lastDepth + frags.length); //on sort du path recherché\n\t\t\t\t\t//On s'enfonce dans le bon path\n\t\t\t\t\tcurrentDepth++;\n\t\t\t\t}\n\t\t\t\treturn currentDepth;\n\t\t\t}\n\t\t}\n\n\t\twhile (elt) {\n\t\t\tlet newDepth = lastDepth; //par défaut, on va garder le même depth de l'oriPath.\n\t\t\tconst ori = elt.getAttribute(\"data-origin\");\n\t\t\tif (ori) {\n\t\t\t\tif (lastDepth === null) {\n\t\t\t\t\t//on n'est pas dans le srcRef\n\t\t\t\t\tif (ori.charAt(0) === '@') {\n\t\t\t\t\t\tconst sep = ori.indexOf('?', 1);\n\t\t\t\t\t\tif (srcRef === ori.substring(1, sep)) {\n\t\t\t\t\t\t\t//On a trouvé le srcRef.\n\t\t\t\t\t\t\tlastDepth = 0; //on se place à la racine\n\t\t\t\t\t\t\t//on s'enfonce dans le path\n\t\t\t\t\t\t\tconst sep2 = ori.indexOf('#', sep);\n\t\t\t\t\t\t\tnewDepth = sep2 > 0 ? findNewDepth(ori, sep2 + 1) : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//on est dans le srcRef\n\t\t\t\t\tif (ori.charAt(0) === '@') {\n\t\t\t\t\t\t//on change de srcRef,\n\t\t\t\t\t\tconst sep = ori.indexOf('?', 1);\n\t\t\t\t\t\tif (srcRef === ori.substring(1, sep)) {\n\t\t\t\t\t\t\t//On a trouvé le srcRef.\n\t\t\t\t\t\t\tlastDepth = 0; //on se place à la racine\n\t\t\t\t\t\t\t//on s'enfonce dans le path\n\t\t\t\t\t\t\tconst sep2 = ori.indexOf('#', sep);\n\t\t\t\t\t\t\tnewDepth = sep2 > 0 ? findNewDepth(ori, sep2 + 1) : 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewDepth = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//on s'enfonce dans le path\n\t\t\t\t\t\tnewDepth = findNewDepth(ori, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (elt.firstElementChild) {\n\t\t\t\tdepths.push(newDepth);\n\t\t\t\tlastDepth = newDepth;\n\t\t\t\telt = elt.firstElementChild;\n\t\t\t} else {\n\t\t\t\tif (elt === from) return;\n\t\t\t\twhile (!elt.nextElementSibling) {\n\t\t\t\t\telt = elt.parentElement;\n\t\t\t\t\tif (elt === from) return;\n\t\t\t\t\tdepths.splice(depths.length - 1, 1);\n\t\t\t\t\tlastDepth = depths[depths.length - 1];\n\t\t\t\t}\n\t\t\t\telt = elt.nextElementSibling;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Encoding de fragments URL selon une règle complémentaire pour éviter\n\t * plusieurs problèmes (avec flash, sécutité tomcat, apache et proxy...)\n\t *\n\t * Règles d'encoding :\n\t *\n\t * Not encoded :\n\t * [0-9a-zA-Z] - _ .\n\t *\n\t * Translation :\n\t * /  -> !\n\t * :  -> (\n\t * @  -> )\n\t *\n\t * Simple escaping :\n\t * !  -> '!\n\t * (  -> '(\n\t * )  -> ')\n\t * '  -> ''\n\t * *  -> '*\n\t *\n\t * For all other characters : UTF8 escaping\n\t * each byte  -> *XX with X = [0-9A-F]\n\t */\n\texport function encodeUrl2(val: string): string {\n\t\treturn encodeURIComponent(val.replace(/[\\/:@\\!\\(\\)\\'\\*]/g, encodeUrl2Esc)).replace(/\\%/g, \"*\");\n\t}\n\n\tfunction encodeUrl2Esc(match: string) {\n\t\tswitch (match) {\n\t\tcase \"/\":\n\t\t\treturn \"!\";\n\t\tcase \":\":\n\t\t\treturn \"(\";\n\t\tcase \"@\":\n\t\t\treturn \")\";\n\t\tcase \"!\":\n\t\t\treturn \"'!\";\n\t\tcase \"(\":\n\t\t\treturn \"'(\";\n\t\tcase \")\":\n\t\t\treturn \"')\";\n\t\tcase \"'\":\n\t\t\treturn \"''\";\n\t\tcase \"*\":\n\t\t\treturn \"'*\";\n\t\t}\n\t}\n}\n"]}