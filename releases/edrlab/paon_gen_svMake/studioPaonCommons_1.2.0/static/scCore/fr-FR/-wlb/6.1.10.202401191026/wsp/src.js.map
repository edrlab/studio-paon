{"version":3,"sources":["/@lib@/wsp/src.ts"],"names":["POPUP","ESrcSt","RESPS","toRespsList","involvedUsers","list","forEach","entry","resp","usr","push","SRC","URI_ROOT","srcRef","ident","srcId","srcUri","addLeafToUri","uriParent","leafName","Error","extractUriParent","uri","idx","lastIndexOf","substring","extractLeafFromUri","isSubUri","ancestorUri","startsWith","charAt","length","isSubUriOrEqual","parentLen","isParentUri","parentUri","indexOf","matchExt","fileName","ext","startExt","toLowerCase","isValidPartUri","name","fromForNotif","r","test","showNotifWarning","filterPartUri","replace","ID_PREFIX","isSrcId","NEW_PREFIX","isNewSrcUri","createNewSrcUri","itModel","Math","random","toString","substr","extractItModelFromNewSrcUri","end","resolveAliasSrcFields","fields","set","Set","k","aliasSrcFields","f","add","sdFs","sdOdb","item","sortSrcUriTree","p1","p2","s1","s2","i","m","min","c1","codePointAt","c2","URITREE_ASCII_ORDER","extractIdFromSrcId","refUri2AgtBagId","refUri2AgtPath","axis","role","nodeId","vPath"],"mappings":"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","sourcesContent":["import {POPUP} from \"back/commons/widgets/popups\";\nimport {ESrcRights} from 'lib/commons/security';\nimport {EItResp, EItStatus} from \"lib/wsp/item\";\n\n/** cf com.scenari.src.ISrcContent */\nexport const enum ESrcSt {\n\tnone = -1,\n\tconflict = -2,\n\tfile = 1,\n\tfolder = 2\n}\n\n/** Refs vers une uri et/ou un id. */\nexport type srcUri = string;\nexport type srcId = string;\nexport type srcRef = srcUri | srcId;\n\nexport interface JSrcIdent {\n\tsrcUri?: srcUri\n\tsrcId?: srcId\n\titSubItem?: JSubItem\n}\n\nexport interface JSrcFields extends JSrcIdent {\n\t//com.scenari.src.feature.fields.SrcFeatureFields\n\tsrcNm?: string\n\tsrcSt?: ESrcSt\n\tsrcDt?: number\n\tsrcStamp?: string\n\tsrcTreeDt?: number\n\tsrcSi?: number\n\tsrcTy?: string //ContentType\n\tsrcRi?: ESrcRights\n\tsrcRoles?: string[]\n\tsrcUser?: string\n\tsrcLiveUri?: string\n\tsrcTrashed?: boolean\n\tmetaComment?: string\n\tmetaFlag?: number\n\t//com.scenari.src.feature.drv.SrcFeatureDrv\n\tdrvState?: EDrvState\n\tdrvAxisDefCo?: string | null\n\t//com.scenari.src.feature.drf.SrcFeatureDrf\n\tdrfState?: EDrfState\n\t//eu.scenari.wsp.item.IItemDataKeys\n\titTi?: string\n\titSt?: EItStatus // @see eu.scenari.wsp.item.IItemDef\n\titSgn?: string\n\titModel?: string\n\titFullUriInOwnerWsp?: string\n\titSubItems?: JSubItem[]\n\t/* propriétés DES subItems ancêtres DU subItem pointé */\n\titSubItemAnc?: JSubItem[]\n\t//com.scenari.src.feature.responsibility.SrcFeatureResponsibility\n\trspUsrs?: JInvolvedUser[]\n\trspSt?: EItResp\n\t//com.scenari.src.feature.tasks.SrcFeatureTasks\n\ttkPending?: boolean\n\ttkPendingCount?: number\n\ttkForthcoming?: boolean\n\ttkForthcomingCount?: number\n\t//com.scenari.src.act.IAct\n\tactStage?: EActStage\n\tactTi?: string\n\tactCts?: JActTouchedContent[]\n\t//com.scenari.src.feature.lifecycle.SrcFeatureLifeCycle\n\tlcSt?: string\n\tlcDt?: number\n\tlcBy?: string\n\t//com.scenari.src.feature.tasks.ISrcTask\n\ttkDeadline?: number\n\ttkCompletedDt?: number\n\ttkCompletedBy?: string\n\t//eu.scenari.wsp.provider.IReposSrcNode\n\twspOwner?: string\n\t// @DEPRECATED com.scenari.src.feature.alternateurl.SrcFeatureAlternateUrl\n\t// préférer l'appel de \"SvcWspSrcSender\" avec @format=filePath\n\t//srcFilePath?: string\n}\n\nexport interface JSubItem {\n\tid: string\n\tti?: string\n\tmo?: string\n\tsubItems?: JSubItem[]\n}\n\nexport interface JSrcFieldsTree extends JSrcFields {\n\tch?: JSrcFieldsTree[]\n}\n\n/** Utilisé pour les entrées d'historique d'un noeud ET les noeuds fils en corbeille*/\nexport interface JSrcHistNodes extends JSrcFields {\n\tliveNode: JSrcFields\n\thistNodes: JSrcFields[]\n}\n\nexport interface JInvolvedUser {\n\tusr: string,\n\tresp: string[]\n}\n\nexport interface JActTouchedContent {\n\tsrcId: srcId\n}\n\nexport type ESrcField = keyof JSrcFields;\n\n/** cf com.scenari.src.feature.drv.SrcFeatureDrv */\nexport type EDrvState = 'erased' | 'notOverriden' | 'notOverridenDone' | 'createdDone' | 'overridenDone' | 'createdNew' | 'overridenNew' | 'notOverridenDirty' | 'createdDirty' | 'overridenDirty' | 'createdNotComputed' | 'notComputed';\n\n/** cf com.scenari.src.feature.drf.SrcFeatureDrf */\nexport type EDrfState = 'erased' | 'notOverriden' | 'overriden' | 'created' | 'createdDeleted' | 'notComputed';\n\n/** cf com.scenari.src.act.IAct.ActStage */\nexport type EActStage = 'pending' | 'forthcoming' | 'completed';\n\n/**\n * Propriétés et fonctions relatives aux responsabilities\n */\nexport namespace RESPS {\n\t/**\n\t * Transforme un JInvolvedUser[] en liste de users par resp\n\t */\n\texport function toRespsList(involvedUsers?: JInvolvedUser[]): JRespsList | null {\n\t\tif (!involvedUsers) return null;\n\t\tconst list: JRespsList = {};\n\t\tinvolvedUsers.forEach((entry) => {\n\t\t\tif (entry.resp)\n\t\t\t\tentry.resp.forEach((resp) => {\n\t\t\t\t\tif (!list[resp]) list[resp] = [];\n\t\t\t\t\tif (entry.usr) list[resp].push(entry.usr);\n\t\t\t\t})\n\t\t});\n\t\treturn list;\n\t}\n\n\ttype JRespsList = { [key: string]: string[] }\n}\n\n\n/**\n * Propriétés et fonctions relatives à l'API Src (uri, paths, id...).\n */\nexport namespace SRC {\n\n\t/**\n\t * Uri racine d'un arbre de source.\n\t */\n\texport const URI_ROOT = \"\";\n\n\texport function srcRef(ident: JSrcIdent): srcRef {return ident.srcId || ident.srcUri}\n\n\t/**\n\t * Ajoute un élément fils à une uri et retourne la nouvelle Uri.\n\t */\n\texport function addLeafToUri(uriParent: string, leafName: string): string {\n\t\tif (uriParent == null) throw Error(\"SRC.addLeafToUri : uriParent is null.\");\n\t\treturn uriParent + \"/\" + leafName;\n\t}\n\n\t/**\n\t * Retourne l'Uri parent d'une uri ou null si uri est la racine \"\".\n\t */\n\texport function extractUriParent(uri: string): string {\n\t\tif (uri == null) throw Error(\"src.extractUriParent : uri is null.\");\n\t\tif (uri == \"\") return null;\n\t\tconst idx = uri.lastIndexOf(\"/\");\n\t\tif (idx <= 0) return \"\";\n\t\treturn uri.substring(0, idx);\n\t}\n\n\t/**\n\t * Retourne l'élément terminal d'une Uri.\n\t */\n\texport function extractLeafFromUri(uri: string): string {\n\t\tif (uri == null) throw Error(\"src.extractLeafFromUri : uri is null.\");\n\t\tconst idx = uri.lastIndexOf(\"/\") + 1;\n\t\t//let idx2 = uri.indexOf(\"#\", idx);\n\t\t//if(idx<=0) return idx2<0 ? uri : uri.substring(0, idx2);\n\t\t//if(idx2>=0) uri.substring(idx, idx2);\n\t\treturn uri.substring(idx);\n\t}\n\n\t/**\n\t * ancestorUri est-elle un ancêtre de uri.\n\t * Si ancestorUri==uri retourne false.\n\t */\n\texport function isSubUri(ancestorUri: string, uri: string): boolean {\n\t\treturn uri.startsWith(ancestorUri) && uri.charAt(ancestorUri.length) === \"/\";\n\t}\n\n\t/**\n\t * ancestorUri est-elle un ancêtre de uri.\n\t * Si ancestorUri==uri retourne true.\n\t */\n\texport function isSubUriOrEqual(ancestorUri: string, uri: string): boolean {\n\t\tconst parentLen = ancestorUri.length;\n\t\tif (parentLen === uri.length) return ancestorUri === uri;\n\t\treturn uri.startsWith(ancestorUri) && uri.charAt(parentLen) === \"/\";\n\t}\n\n\t/**\n\t * parentUri est-elle l'uri parent de uri.\n\t */\n\texport function isParentUri(parentUri: string, uri: string): boolean {\n\t\tconst parentLen = parentUri.length;\n\t\tif (uri.length > parentLen && uri.lastIndexOf(parentUri, 0) == 0) {\n\t\t\treturn uri.charAt(parentLen) === \"/\" && uri.indexOf(\"/\", parentLen + 1) < 0;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Evalue l'extension, non sensible à la casse.\n\t * @param fileName Ex: \"image.JpEg\"\n\t * @param ext Ex: \"png\", \"JPEG\", \".png\"\n\t */\n\texport function matchExt(fileName: string, ext: string): boolean {\n\t\tconst startExt = fileName.length - ext.length;\n\t\tif (ext.charAt(0) !== '.' && fileName.charAt(startExt - 1) !== '.') return false;\n\t\treturn fileName.substring(startExt).toLowerCase() === ext.toLowerCase();\n\t}\n\n\t/**\n\t * Evalue si une chaine de caractère est une part d'uri valide (space, code item ou name de res).\n\t * @param fromForNotif Si resnseigné une notification sera affichée en cas de nom invalide.\n\t */\n\texport function isValidPartUri(name: string, fromForNotif?: Node): true | string {\n\t\tlet r: true | string = true;\n\t\t//Caractères interdits.\n\t\tif (/[+$\\\\\\/><|?:*#\"~]/.test(name)) r = \"Le nom ne doit comporter aucun des caractères suivants : $ + \\\\ / > < | ? : * # \\\" ~\";\n\t\t//.. interdit\n\t\tif (r === true && /\\.\\./.test(name)) r = \"Le nom ne doit pas comporter deux points successifs.\";\n\t\t//Ne peut commencer par un \".\"\n\t\tif (r === true && name.charAt(0) == \".\") r = \"Le nom ne peut pas commencer par un point.\";\n\t\tif (fromForNotif && r !== true) POPUP.showNotifWarning(r, fromForNotif);\n\t\treturn r;\n\t}\n\n\texport function filterPartUri(name: string): string {\n\t\treturn name.replace(/[+$\\\\\\/><|?:*#\"~\\s]/g, \"\");\n\t}\n\n\t/**\n\t * Prefix pour les srcRef de type Id.\n\t */\n\texport const ID_PREFIX = \"id:\";\n\n\t/**\n\t * Une srcRef est-elle de nature Id ?\n\t */\n\texport function isSrcId(srcRef: srcRef): srcRef is srcId {\n\t\treturn srcRef ? srcRef.lastIndexOf(ID_PREFIX, 0) === 0 : false;\n\t}\n\n\t/**\n\t * Prefix pour les srcUri de type new.\n\t */\n\texport const NEW_PREFIX = \"new:\";\n\n\t/**\n\t * Cette srcUri représente-t-elle une uri en création.\n\t */\n\texport function isNewSrcUri(srcUri: srcUri): boolean {\n\t\treturn srcUri ? srcUri.lastIndexOf(NEW_PREFIX, 0) === 0 : false;\n\t}\n\n\t/**\n\t * Crée une srcUri pour un contenu en création (ie inconnu du serveur).\n\t * Schéma : 'new:' itModel ':' uniqueId\n\t */\n\texport function createNewSrcUri(itModel: string): srcUri {\n\t\treturn `${NEW_PREFIX}${itModel}:${Math.random().toString(36).substr(2)}`\n\t}\n\n\texport function extractItModelFromNewSrcUri(srcUri: srcUri): string | null {\n\t\tif (!isNewSrcUri(srcUri)) return null;\n\t\tconst end = srcUri.indexOf(':', NEW_PREFIX.length);\n\t\treturn end > 0 ? srcUri.substring(NEW_PREFIX.length, end) : srcUri.substring(NEW_PREFIX.length);\n\t}\n\n\t/**\n\t * Résolution des alias des srcFields et dédoublonnement.\n\t */\n\texport function resolveAliasSrcFields(fields: string[]): Set<ESrcField> {\n\t\tconst set = new Set<ESrcField>();\n\t\tfor (let k of fields) {\n\t\t\tif (k in aliasSrcFields) for (let f of aliasSrcFields[k]) set.add(f);\n\t\t\telse set.add(k as ESrcField);\n\t\t}\n\t\treturn set;\n\t}\n\n\tconst aliasSrcFields: Dict<ESrcField[]> = {\n\t\t\"sdFs\": [\"srcUri\", \"srcSt\", \"srcDt\", \"srcRi\", \"srcRoles\"],\n\t\t\"sdOdb\": [\"srcUri\", \"srcSt\", \"srcDt\", \"srcRi\", \"srcRoles\", \"srcId\", \"srcStamp\", \"srcUser\"],\n\t\t\"item\": [\"itTi\", \"itSt\", \"itSgn\", \"itModel\"],\n\t}\n\n\t/**\n\t * Comparator dédié aux uri (ie un arbre de fragments sparés par / ) qui correspond à l'ordre logique d'affichage d'un arbre.\n\t * TRES important pour algo d'affichage d'un arbre déployé AVEC pagination.\n\t *\n\t * cf java com.scenari.src.search.UriTreeComparator\n\t */\n\texport function sortSrcUriTree(p1: string, p2: string): number {\n\t\tconst s1 = p1.length;\n\t\tconst s2 = p2.length;\n\t\tfor (let i = 0, m = Math.min(s1, s2); i < m; i++) {\n\t\t\tconst c1 = p1.codePointAt(i);\n\t\t\tconst c2 = p2.codePointAt(i);\n\t\t\tif (c1 === c2) continue;\n\t\t\tif (c1 < 127) {\n\t\t\t\tif (c2 < 127) return URITREE_ASCII_ORDER[c1] - URITREE_ASCII_ORDER[c2];\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn c1 - c2;\n\t\t\t}\n\t\t}\n\t\tif (s1 === s2) return 0;\n\t\treturn s1 - s2;\n\t}\n\n\texport function extractIdFromSrcId(srcId: srcId): string {\n\t\treturn srcId.substr(3);\n\t}\n\n\texport function refUri2AgtBagId(srcUri: srcUri): string {\n\t\treturn srcUri.replace(/\\//g, \"\\\\\") + \";\";\n\t}\n\n\texport function refUri2AgtPath(srcUri: srcUri, axis?: String, role?: String, nodeId?: String): string {\n\t\tlet vPath = \"@\" + refUri2AgtBagId(srcUri);\n\t\tif (nodeId) vPath += nodeId;\n\t\tif (role) vPath += \"_\" + role;\n\t\tif (axis) vPath += \"_A\" + axis;\n\t\treturn vPath;\n\t}\n\n\n}\n\nconst URITREE_ASCII_ORDER = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 33, 32, 61, 62, 63, 64, 65, 66, 67,\n\t68, 69, 70, 48, 49, 50, 51, 52, 53, 54, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 55, 56, 57, 58, 59, 60, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102,\n\t104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 123, 124, 125, 126];\n"]}