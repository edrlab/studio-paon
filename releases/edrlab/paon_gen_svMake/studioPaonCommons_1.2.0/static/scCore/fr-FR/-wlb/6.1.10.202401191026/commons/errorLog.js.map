{"version":3,"sources":["/@lib@/commons/errorLog.ts"],"names":["REG","defaultErrorLog","[object Object]","error","adminDetails","console","msg","cause","reg","registerSvc","LEVELAUTH_CORE"],"mappings":"OAAcA,QAAI;AAqDlB,MAAMC,gBAA6B,CAClCC,SAASC,OACR,GAAIA,MAAMC,aAAcC,QAAQF,MAAMA,MAAMG,IAAKH,MAAMC,aAAcD,MAAMI;KACtEF,QAAQF,MAAMA,MAAMG,IAAKH,MAAMI;AAKtCP,IAAIQ,IAAIC,YAAY,WAAYT,IAAIU,eAAgBT","sourcesContent":["import {IReg, REG} from \"lib/commons/registry\";\n\nexport interface IError {\n\t/**\n\t * Résumé localisé de l'anomalie. Correspond à un titre (sans retour charriot).\n\t */\n\tmsg: string;\n\n\t/** Exception à l'origine l'erreur */\n\tcause?: Error;\n\n\t/** Contexte de l'erreur */\n\tctx?: IErrorCtx;\n\n\t/**\n\t * Message détaillé localisé pour l'utilisateur (avec retours charriot possibles).\n\t */\n\tdetails?: string;\n\n\t/**\n\t * Message non localisé et non affiché à l'utilisateur par défaut,\n\t * destiné à l'envoi à un administrateur / développeur.\n\t * Si non renseigné, il est déterminé à partir de la cause\n\t * (analyse de la stack sur un RespError)\n\t */\n\n\t/**\n\t * Message non localisé et non affiché à l'utilisateur par défaut,\n\t * destiné à l'envoi à un administrateur / développeur.\n\t * Si non renseigné, il est déterminé à partir de la cause\n\t * (ex: analyse de la trace Java sur un RespError)\n\t */\n\t adminDetails?: string;\n\n\n\t/**\n\t * Version lisible de l'adminDetails (donc non localisé) non affiché\n\t * à l'utilisateur par défaut.\n\t * Peut retourner un élément HTML pour afficher correctement les niveaux d'erreur\n\t * (classes supportées : .msgList, .warn, .error)\n\t */\n\ttechnicalDetails?: string | HTMLElement;\n}\n\nexport interface IErrorCtx {\n\treg?: IReg<any>,\n\t[key: string]: any\n}\n\nexport interface IErrorLog {\n\tlogError(error: IError): void | Promise<void>;\n}\n\nconst defaultErrorLog: IErrorLog = {\n\tlogError(error: IError) {\n\t\tif (error.adminDetails) console.error(error.msg, error.adminDetails, error.cause);\n\t\telse console.error(error.msg, error.cause);\n\n\t}\n};\n\nREG.reg.registerSvc(\"errorLog\", REG.LEVELAUTH_CORE, defaultErrorLog);\n"]}