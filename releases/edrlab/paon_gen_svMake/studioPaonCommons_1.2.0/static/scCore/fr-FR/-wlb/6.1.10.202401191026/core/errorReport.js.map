{"version":3,"sources":["/@lib@/core/errorReport.tsx"],"names":["DOM","RespError","REG","POPUP","ErrorViewer","ERROR","async","report","msg","cause","ctx","reportError","adminDetails","extractAdminDetails","show","showError","log","logError","error","showDialog","initialize","document","body","titleBar","barLabel","label","resizer","initWidth","fixSize","onNextClose","e","console","errorLog","reg","getSvc","extractDescError","traceDoc","extractXmlDoc","documentElement","getAttribute","response","url","ser","indentDom","respContent","text","parseDomValid","getReport","details","propName","json","JSON","stringify","simpleObjectReplacer","getRegDef","stack","window","location","href","Date","toLocaleString","navigator","userAgent","key","value","constr","constructor","Object","Array","undefined"],"mappings":"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","sourcesContent":["import {DOM, JSX} from \"lib/commons/xml/dom\";\nimport {RespError} from \"lib/commons/io/io\";\nimport {IError, IErrorCtx, IErrorLog} from \"lib/commons/errorLog\";\nimport {REG} from \"lib/commons/registry\";\nimport \"lib/commons/errorLog\";\nimport {POPUP} from \"back/commons/widgets/popups\";\nimport {ErrorViewer} from \"back/core/dialogs/errorViewer\";\n\nexport namespace ERROR {\n\n\t/** Diffusion d'une erreur dans le système de log ET affichée à l'utilisateur. */\n\texport async function report(msg: string, cause?: Error, ctx?: IErrorCtx): Promise<void> {\n\t\treturn reportError({msg, cause, ctx, adminDetails: await extractAdminDetails(cause)});\n\t}\n\n\t/** Affichage d'une erreur à l'utilisateur, sans diffusion dans le système de log */\n\texport async function show(msg: string, cause?: Error, ctx?: IErrorCtx): Promise<void> {\n\t\treturn showError({msg, cause, ctx, adminDetails: await extractAdminDetails(cause)});\n\t}\n\n\t/** Diffusion d'une erreur dans le système de log sans notification à l'utilisateur. */\n\texport async function log(msg: string, cause?: Error, ctx?: IErrorCtx): Promise<void> {\n\t\treturn logError({msg, cause, ctx, adminDetails: await extractAdminDetails(cause)});\n\t}\n\n\texport async function reportError(error: IError): Promise<void> {\n\t\tawait logError(error);\n\t\tawait showError(error);\n\t}\n\n\texport async function showError(error: IError): Promise<void> {\n\t\ttry {\n\t\t\tawait POPUP.showDialog(new ErrorViewer().initialize({error}), document.body, {\n\t\t\t\ttitleBar: {barLabel: {label: \"Erreur\"}},\n\t\t\t\tresizer: {},\n\t\t\t\tinitWidth: '40em',\n\t\t\t\tfixSize: false\n\t\t\t}).onNextClose();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\n\texport async function logError(error: IError): Promise<void> {\n\t\ttry {\n\t\t\tconst errorLog = REG.reg.getSvc<IErrorLog>(\"errorLog\");\n\t\t\tif (errorLog) errorLog.logError(error);\n\t\t\telse console.error(error.msg, error.adminDetails, error.cause);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\n\t/** Tente d'extraire la description d'un message Scenari à partir d'une erreur issue d'un fetch */\n\texport async function extractDescError(cause: Error): Promise<string | null> {\n\t\tif (cause instanceof RespError) {\n\t\t\tconst traceDoc = await extractXmlDoc(cause);\n\t\t\treturn traceDoc ? traceDoc.documentElement.getAttribute(\"desc\") : null;\n\t\t}\n\t}\n\n\t/** Tente d'extraire un adminDetails à partir d'une erreur issue d'un fetch */\n\texport async function extractAdminDetails(cause: Error): Promise<string> {\n\t\tif (cause instanceof RespError) {\n\t\t\tconst traceDoc = await extractXmlDoc(cause);\n\t\t\tif (traceDoc) return `url: ${cause.response.url}\\ntrace:\\n${DOM.ser(DOM.indentDom(traceDoc))}`;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Tente d'extraire un document XML à partir d'une erreur issue d'un fetch */\n\texport async function extractXmlDoc(cause: Error): Promise<Document | null> {\n\t\tif (cause instanceof RespError) {\n\t\t\ttry {\n\t\t\t\tconst respContent = await cause.response.text();\n\t\t\t\treturn DOM.parseDomValid(respContent);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Construit le rapport complet à partir des différentes informations disponible dans l'erreur */\n\texport function getReport(error: IError): string {\n\t\tlet report = error.msg;\n\t\tif (error.details) report += `\\n\\n${error.details}`;\n\t\tif (error.adminDetails) report += `\\n\\n--- Admin details ---\\n${error.adminDetails}`;\n\t\tif (error.ctx) {\n\t\t\treport += `\\n\\n--- Context ---`;\n\t\t\tfor (const propName in error.ctx) {\n\t\t\t\tif (propName === 'shortDesc' || propName === 'shortDescs') {\n\t\t\t\t\tconst json = JSON.stringify(error.ctx[propName], simpleObjectReplacer);\n\t\t\t\t\treport += `\\n${propName}: ${json}`;\n\t\t\t\t} else if (propName === 'reg' && 'getRegDef' in error.ctx[propName]) {\n\t\t\t\t\treport += `\\nreg: ${JSON.stringify(error.ctx[propName].getRegDef())}`;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treport += `\\n${propName}: ${JSON.stringify(error.ctx[propName], simpleObjectReplacer)}`;\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (error.cause) report += `\\n\\n--- Js stack ---\\n${error.cause.stack}`;\n\t\treport += `\\n\\n--- App context ---\nurl: ${window.location.href},\ntimestamp: ${new Date().toLocaleString()}\nuserAgent: ${navigator.userAgent}`;\n\t\treturn report;\n\t}\n}\n\n/***\n * Une fonction de remplacement pour JSON.stringify qui enlève tout les objects complexes (cad avec une classe non native)\n */\nfunction simpleObjectReplacer(key: string, value: any): any {\n\tif (value == null || typeof value !== 'object') return value;\n\tconst constr = value.constructor;\n\treturn constr === Object || constr === Array || constr === Date ? value : undefined;\n}\n"]}