{"version":3,"sources":["/@lib@/wsp/wsp.ts"],"names":["POPUP","EHttpStatusCode","IO","RespError","UrlQs","REG","SEC","CDM","DOM","ITEM","ESrcSt","SRC","EWspChangesEvts","WspsLive","ERROR","WspSrv","[object Object]","chain","config","this","reg","wspsLive","_wspsLive","configWspSrv","webFrameUrl","adminWspUrl","resolve","wspMetaEditorUrl","wspAgtUrl","wspGenUrl","pubUrl","exportUrl","importUrl","wspDavUrl","drfUrl","drvUrl","versionUrl","historyUrl","wspSrcUrl","privateFolderUrl","tasksUrl","itemDynGenUrl","searchUrl","diffUrl","adminWspFsUrl","wspSvcUrl","wspSvcExistUrl","wspSvcSkinSet","wspCode","EWspLoadingStatus","Wsp","wspServer","code","infoWsp","wspMetaUi","countUsed","_pendingLongDescFetch","Map","createSubReg","env","wsp","status","waitForLoad","setInfoWsp","copyFrom","srcRefField","backEnd","isLoaded","infoWspError","notLoaded","isAvailable","wspTypeWarn","migrating","fullLoading","isFullLoading","isFullLoaded","_a","allItemsLoaded","isInError","isDeleted","srcFields","srcSt","undefined","isAccessDenied","lastNetError","response","forbidden","isPublic","props","publicWsp","isAirItem","airIt","isExtItem","extIt","isPrxItem","universe","wspTitle","title","wspAlias","alias","wspType","wspDefProps","feat","drv","drf","Error","_wspInfoLoading","fields","fetchJson","qs","then","Promise","setTimeout","e","_wspMetaUiLoading","shouldLoadWspMetaUi","fetchWspMetaUi","notifFrom","notifWaiting","noWsp","waitForAvailable","clearAllNotifWaiting","console","log","msg","offsetHeight","_lastWaitNotif","lastNotif","get","setContent","showNotif","autoHide","set","onNextClose","delete","notif","values","close","clear","findWsp","sendMsg","svc","type","addWsp","_wsps","add","resetFullLoading","resetMigrating","remWsp","pl","newPlace","registerWsp","result","desc","skins","_b","_c","mirror","_d","drfRefWsp","draftTitle","wspRef","drvAxis","drvMasterWsp","wspMaster","drvDefaultSrcFindPath","split","srcRefSub","uiContext","_pendingShortDescs","FetchSrcDescBulk","pending","FetchSrcDescPending","promise","withSubItem","srcRef","p","WSP","fetchLongDesc","_shortDescFields","resolveAliasSrcFields","mergeLists","_shortDescDef","join","_longDescFields","_longDescDef","list","push","srcUriItemsSortFn","sortSrcUriTree","deleteParams","fetchVoid","stringify","method","append","toString","updateParams","withMigration","normalizeWspType","initReq","body","ser","WSPMETA","toWspTypeDom","vRespDom","fetchDom","documentElement","nodeName","hasChildNodes","firstElementChild","resetRemoteDatas","m","wspSt","_migrResolver","_dispatchWspLiveChange","updateAllNotifWaiting","_fullLoadingResolver","_dispatchWspFullLoadStateChange","WspDEBUG","place","_places","isWspUsed","eventsMgr","emitCatched","uriStates","wspState","srcDt","resetWspMetaUi","securityCtx","createSub","srcRoles","srcRi","ok","wspCd","failed","loading","addToList","createWspMetaUi","newWspUi","resetExtPoints","otherWsp","WspVersion","origin","super","wspTypeInst","elt","newDomDoc","createElement","setAttribute","key","uri","version","lang","wspOptions","wspOpt","optElt","appendChild","ownerDocument","WspMetasCache","wspSrv","wspTypeInstAtoms","wspMetaUis","id","getWspTypeInstId","w","done","total","size","fetched","finished","entry","err","resolved","_id","uris","forEach","opt","sort","buildWspUri","srcUri","buildWspId","srcId","buildWspRef","ident","isSrcId","isWspUriRoot","wspUri","indexOf","extractWspCdFromWspRef","end","substring","extractSrcRefFromWspRef","start","URI_ROOT","sortWspsByDeep","wsps","wspsDeep","computeDeep","has","find","wspDeep","a","b","defaultWspOpenMode","getUserData","hasPerm","alternateWspOpenMode","async","listWsps","options","opts","withWspSrcSpecifiedRoles","inTrash","fetchInfoWspProvider","fetchExportAssignedRoles","fetchSrc","refUri","fetchSrcs","refUris","data","FormData","Array","isArray","fetchShortDesc","getShortDescDef","fetchShortDescs","fetchShortDescsSubItems","fetchShortDescSubItems","getLongDescDef","fetchLongDescs","fetchShortDescTree","depth","fetchSrcTree","fetchShortDescSubTree","targets","fetchItemInfo","fetchFilePath","local","fetchText","fetchSearch","req","fetchSearchJson","fetchSearchCount","Number","parseInt","fetchSearchCsv","fetchSearchScWsp","fetchBlob","fetchSrcId","force","fetchAskAgt","genCode","dialogPath","fetchStreamJson","transform","fetchStreamText","fetchStreamDom","getStreamUrl","getStreamStampedUrl","stamp","url","fetchDiff","baseRef","candidateWspCd","candidateRef","fetchHistory","srcRefLive","fetchSrcTrashed","folder","createWsp","params","importWsp","scwsp","fetchExistWspFsOnPath","contentPath","resp","createSpaceOrFolder","fromPlace","newSrc","clId","getSrcUriType","itemFields","extractItemUri","dispatchLocalChange","u","findNewRefUri","candidateSrcUriConstructor","maxChecks","cnt","target","candidate","node","none","srcCopyTo","sources","newParentUri","fd","srcUris","srcMoveTo","srcMove","from","newUri","srcRename","newCode","addLeafToUri","extractUriParent","srcDuplicate","srcDelete","srcRestore","srcRefs","srcDeletePermanently","srcSetRoles","specifiedRoles","srcGetRoles","srcGetRolesForAccounts","pAccounts","length","srcUpdateFields","checkWspSvc","svcCode","encodeURIComponent","fetch","skinSetsList","skinSetsIconUrl","skinCode","skinClass","findWspReg","parentReg","removeCache","reloadWsp","bulk","reject","pendings","pendingsWSI","map","results","i","catch","error","wspMeta","_createWspMetaUi","import","WspMetaUi"],"mappings":"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","sourcesContent":["import {POPUP, PopupNotif} from \"back/commons/widgets/popups\";\nimport {IInfoBrokerPointer} from \"lib/commons/infos\";\nimport {EHttpStatusCode, IBody, IEndPoint, IO, RespError, UrlQs} from \"lib/commons/io/io\";\nimport {IReg, IUiEnv, REG} from 'lib/commons/registry';\nimport {ESrcRights, ISecurityCtxPointer, SEC} from 'lib/commons/security';\nimport {CDM} from \"lib/commons/utils/cdm\";\nimport {DOM} from \"lib/commons/xml/dom\";\nimport {ChainUniverse, IChainEnv} from \"lib/wsp/chain\";\nimport {EItStatus, ITEM, srcRefSub} from \"lib/wsp/item\";\nimport {ESrcField, ESrcSt, JSrcFields, JSrcFieldsTree, JSrcHistNodes, JSrcIdent, SRC, srcId, srcRef, srcUri} from \"lib/wsp/src\";\nimport \"lib/wsp/wsp_Perms\";\nimport {WspMetaUi} from \"lib/wsp/wspMetaUi\";\nimport {EWspChangesEvts, EWspWorkingSt, IWspsLivePlacePointer, WspsLive, WspsLivePlace} from \"lib/wsp/wspsLive\";\nimport {JUserRolesMap, JUserSpecifiedRolesMap} from \"lib/commons/roles\";\nimport {ERROR} from \"lib/core/errorReport\";\n\n/** Typage du code d'un atelier. */\nexport type wspCd = string;\n\n/** Typage des uri incluant le code de l'atelier. */\nexport type wspUri = string; // {wspCd}/{srcUri}\nexport type wspId = string; // {wspCd}/{srcId}\nexport type wspRef = wspId | wspUri;\n\n/**\n * Serveur d'accès aux ateliers.\n */\nexport class WspSrv {\n\n\tprotected _wspsLive: WspsLive;\n\n\tget reg(): IReg<IChainEnv> {return this.chain.reg}\n\n\tconstructor(public readonly chain: ChainUniverse, public readonly config: OWspSrvConfig) {}\n\n\t/** Gestionnaire des ateliers en communication instantannée avec le serveur (webSocket). */\n\tget wspsLive(): WspsLive {\n\t\tif (!this._wspsLive) this._wspsLive = new WspsLive(this);\n\t\treturn this._wspsLive;\n\t}\n}\n\n/** deprecated : uniquement désactivable */\nexport interface OWspFeatures {\n\tpublicWsp?: \"alwaysTrue\" | \"alwaysFalse\" | \"trueByDefault\" | \"falseByDefault\" | \"deprecated\" | undefined\n\textIt?: \"alwaysTrue\" | \"alwaysFalse\" | \"trueByDefault\" | \"falseByDefault\" | \"deprecated\" | undefined\n\tairIt?: \"alwaysTrue\" | \"alwaysFalse\" | \"trueByDefault\" | \"falseByDefault\" | \"deprecated\" | undefined\n\t//mirror\n}\n\nexport interface OWspSrvConfig {\n\tadminWspUrl?: IEndPoint\n\twspMetaEditorUrl?: IEndPoint\n\twspAgtUrl?: IEndPoint\n\twspGenUrl?: IEndPoint\n\tpubUrl?: IEndPoint\n\texportUrl?: IEndPoint\n\timportUrl?: IEndPoint\n\twspDavUrl?: IEndPoint\n\tdrfUrl?: IEndPoint\n\tdrvUrl?: IEndPoint\n\tversionUrl?: IEndPoint\n\twspSrcUrl?: IEndPoint\n\thistoryUrl?: IEndPoint\n\tprivateFolderUrl?: IEndPoint\n\ttasksUrl?: IEndPoint\n\titemDynGenUrl?: IEndPoint\n\tsearchUrl?: IEndPoint\n\tdiffUrl?: IEndPoint\n\t/** spécifique FS */\n\tadminWspFsUrl?: IEndPoint\n\t/** Racine des Svc des ateliers. */\n\twspSvcUrl?: IEndPoint\n\twspSvcExistUrl?: IEndPoint\n\t/** Services de l'atelier */\n\twspSvcSkinSet?: (wspCode: string) => IEndPoint\n\tremoteHouseOt?: boolean\n}\n\nexport function configWspSrv(webFrameUrl: IEndPoint, config?: OWspSrvConfig): OWspSrvConfig {\n\tif (!config) config = {} as OWspSrvConfig;\n\tif (!config.adminWspUrl) config.adminWspUrl = webFrameUrl.resolve(\"u/adminWsp/\");\n\tif (!config.wspMetaEditorUrl) config.wspMetaEditorUrl = webFrameUrl.resolve(\"u/wspMetaEditor\");\n\tif (!config.wspAgtUrl) config.wspAgtUrl = webFrameUrl.resolve(\"u/wspAgt\");\n\tif (!config.wspGenUrl) config.wspGenUrl = webFrameUrl.resolve(\"u/wspGen\");\n\tif (!config.pubUrl) config.pubUrl = webFrameUrl.resolve(\"u/pub/\");\n\tif (!config.exportUrl) config.exportUrl = webFrameUrl.resolve(\"u/export\");\n\tif (!config.importUrl) config.importUrl = webFrameUrl.resolve(\"u/import\");\n\tif (!config.wspDavUrl) config.wspDavUrl = webFrameUrl.resolve(\"u/wspDav/\");\n\tif (!config.drfUrl) config.drfUrl = webFrameUrl.resolve(\"u/drf\");\n\tif (!config.drvUrl) config.drvUrl = webFrameUrl.resolve(\"u/drv\");\n\tif (!config.versionUrl) config.versionUrl = webFrameUrl.resolve(\"u/version\");\n\tif (!config.historyUrl) config.historyUrl = webFrameUrl.resolve(\"u/history\");\n\tif (!config.wspSrcUrl) config.wspSrcUrl = webFrameUrl.resolve(\"u/wspSrc\");\n\tif (!config.privateFolderUrl) config.privateFolderUrl = webFrameUrl.resolve(\"u/privateFolder/\");\n\tif (!config.tasksUrl) config.tasksUrl = webFrameUrl.resolve(\"u/tasks\");\n\tif (!config.itemDynGenUrl) config.itemDynGenUrl = webFrameUrl.resolve(\"u/itemDynGen/\");\n\tif (!config.searchUrl) config.searchUrl = webFrameUrl.resolve(\"u/search\");\n\tif (!config.diffUrl) config.diffUrl = webFrameUrl.resolve(\"u/wspDiff\");\n\t/** spécifique FS */\n\tif (!config.adminWspFsUrl) config.adminWspFsUrl = webFrameUrl.resolve(\"u/adminWspFs/\");\n\t/** Services du wsp **/\n\tif (!config.wspSvcUrl) config.wspSvcUrl = webFrameUrl.resolve(\"repos/\");\n\tif (!config.wspSvcExistUrl) config.wspSvcExistUrl = webFrameUrl.resolve(\"*repos/\");\n\tif (!config.wspSvcSkinSet) config.wspSvcSkinSet = (wspCode: string) => config.wspSvcUrl.resolve(wspCode + \"/skinSet\")\n\treturn config;\n}\n\n\nexport interface JWspTypeInst {\n\twspType: JWspType\n\twspOptions?: JWspType[]\n}\n\nexport interface JWspType {\n\turi: string,\n\tkey: string\n\tversion: string\n\tlang?: string\n\ttitle?: string\n\tdesc?: string\n}\n\nexport interface JWspDefProps {\n\tdesc?: string\n\tpublicWsp?: 'true' | 'false'\n\tairIt?: 'true' | 'false'\n\textIt?: 'true' | 'false'\n\tprxIt?: 'true' | 'false'\n\tmirror?: 'true' | 'false'\n\tdrfRefWsp?: string\n\tdraftTitle?: string\n\tdrvAxis?: string\n\tdrvDefaultSrcFindPath?: string;\n\tdrvMasterWsp?: string\n\t/**\n\t * wspPropsOpts 'drvWspUsedBy'\n\t * Liste des codes de dérivation exploitant cette dérivation\n\t * \tATTENTION : propriété non liée au WSP dont l'évolution de la valeur ne donne pas lieu à un reload du wsp :\n\t * \t\tla valeur est formellement juste au moment de l'interrogation uniquement\n\t */\n\tdrvWspUsedBy?: string\n\t/**\n\t * wspPropsOpts 'listDrvs'\n\t * Liste des ateliers DRV exploitant cet atelier\n\t * ATTENTION : propriété non liée au WSP dont l'évolution de la valeur ne donne pas lieu à un reload du wsp :\n\t * \t\tla valeur est formellement juste au moment de l'interrogation uniquement\n\t */\n\tlistDrvs?: string\n\t/**\n\t * wspPropsOpts 'listDrfs'\n\t * Liste des ateliers DRF exploitant *directement* cet atelier (ie : pas de parcours de la descendance)\n\t * \tATTENTION : propriété non liée au WSP dont l'évolution de la valeur ne donne pas lieu à un reload du wsp :\n\t * \t\tla valeur est formellement juste au moment de l'interrogation uniquement\n\t */\n\tlistDrfs?: string\n}\n\nexport interface JWspProviderProps {\n\tbackEnd: 'fs' | 'odb'\n\tdefaultContentPath?: string\n\tdefaultGenPath?: string\n}\n\nexport interface JInfoWsp {\n\twspCd: string\n\tstatus: EWspLoadingStatus\n\ttitle: string\n\talias: string\n\tskins?: string[]\n\tprops: JWspDefProps\n\twspProvider: JWspProviderProps\n\tsrcFields?: JSrcFields //fields sur le noeud racine de l'atelier (roles, rights...)\n\twspMeta?: JWspTypeInst\n\t//Props suivant dispo uniquement si status='ok'|'failed'\n\tisMigrationNeeded?: boolean\n\tallItemsLoaded?: \"no\" | \"working\" | \"ok\"\n\twspTypeWarn?: 'unknown'\n\twspType: JWspType\n\twspOptions: JWspType[]\n\t//Props uniquement présent dans les WSP FS local\n\tcontent?: string\n\t//Props uniquement présent dans les WSP local\n\tgen?: string\n}\n\n/** Roles  */\nexport interface JWspProviderRolesSet {\n\troles?: Dict<JNodeRole>\n\twsps: Dict<JWspRolesSet>\n}\n\nexport interface JWspRolesSet {\n\ttitle: string\n\tnodes: JNodeRolesSet\n\tinfoWsp: JWspInfoInList\n}\n\nexport interface JNodeRolesSet {\n\tname: string\n\troles?: Dict<JNodeRole>\n\tch?: JNodeRolesSet[]\n}\n\nexport interface JNodeRole {\n\tallowed?: string[]\n\tdenied?: string[]\n\tuserUnknown?: true | undefined\n}\n\n\nexport interface JWspInfoInList {\n\twspCd: wspCd\n\tstatus: EWspLoadingStatus\n\ttitle: string\n\talias: string\n\tprops: JWspDefProps\n\tsrcFields?: {\n\t\t/** Liste de roles du user pour l'objet métier de ce contexte. */\n\t\tsrcRoles: string[]\n\t\t/** Droits systèmes de l'objet métier (ex: un item de l'historique est toujours read-only). voir Api Src. */\n\t\tsrcRi?: ESrcRights\n\t} //fields sur le noeud racine de l'atelier (roles, rights...)\n\t// Roles spécifiés sur le noeud racine de l'atelier\n\tsrcSpecifiedRoles?: JUserRolesMap\n\t//Dispo uniquement si status='ok'|'failed'\n\tisMigrationNeeded?: boolean\n\twspTypeWarn?: 'unknown'\n\twspType: JWspType\n\twspOptions: JWspType[]\n}\n\n/** Statut de chargement d'un wsp */\nexport const enum EWspLoadingStatus {\n\tnotLoaded = 'notLoaded',\n\tok = 'ok',\n\tfailed = 'failed',\n\tloading = 'loading',\n\tnoWsp = 'noWsp'\n}\n\nexport interface JWspCreateParamsFS {\n\ttitle?: string;\n\tdesc?: string;\n\tcode: string;\n\tfolderContent?: string;\n\tfolderGen?: string;\n}\n\nexport interface JWspCreateParamsDB {\n\ttitle: string;\n\talias?: string;\n\tdesc?: string;\n\tskins?: string[];\n\tpublicWsp?: boolean;\n\tairIt?: boolean;\n\textIt?: boolean;\n\tmirror?: boolean;\n}\n\nexport interface JWspCreateParamsDB_DRF extends JWspCreateParamsDB {\n\twspRef?: string;\n\tdraftTitle?: string;\n}\n\nexport interface JWspCreateParamsDB_DRV extends JWspCreateParamsDB {\n\twspMaster?: string;\n\tdrvAxis?: string;\n\tdrvDefaultSrcFindPath?: string[];\n}\n\ninterface JWspUpdateParamsFS {\n\ttitle?: string;\n\tdesc?: string;\n}\n\ninterface JWspUpdateParamsDB {\n\ttitle?: string;\n\talias?: string;\n\tdesc?: string;\n\tskins?: string[];\n\tpublicWsp?: boolean;\n\tairIt?: boolean;\n\textIt?: boolean;\n\tmirror?: boolean;\n}\n\ninterface JWspUpdateParamsDB_DRF extends JWspUpdateParamsDB {\n\twspRef?: string;\n\tdraftTitle?: string;\n}\n\ninterface JWspUpdateParamsDB_DRV extends JWspUpdateParamsDB {\n\twspMaster?: string;\n\tdrvAxis?: string;\n\tdrvDefaultSrcFindPath?: string[];\n}\n\n\ninterface JWspDeleteParamsFS {\n\tdeleteGen: 'true' | 'false';\n\tdeleteContent?: 'true' | 'false';\n}\n\ninterface JWspDeleteParamsDB {\n\tdeleteGen: 'true' | 'false';\n}\n\n/**\n *\n */\nexport class Wsp {\n\n\t/**\n\t * Le registre du Wsp sera enrichi au chargement de son wspMetaUi.\n\t */\n\treg: IReg<IWspEnv>;\n\n\t/**\n\t * InfoWsp si status === \"ok\".\n\t * Si undefined : pas encore chargé.\n\t * Si null : réponse du serveur en echec.\n\t */\n\tinfoWsp: JInfoWsp | undefined | null;\n\n\t/** InfoWsp si status !== \"ok\". */\n\tinfoWspError: JInfoWsp;\n\n\t/**\n\t * Si non null, atelier actuellement en cours de migration.\n\t * Utiliser waitForLoading()\n\t */\n\tmigrating?: Promise<this>;\n\n\t/**\n\t * Si non null, atelier actuellement en cours de chargement intégral (mode allItemsLoaded).\n\t */\n\tfullLoading?: Promise<this>;\n\n\t/**\n\t * Modèle documentaire de cet atelier.\n\t * Si undefined : pas encore chargé.\n\t * Si null : réponse du serveur en echec.\n\t */\n\twspMetaUi: WspMetaUi | undefined | null;\n\n\tlastNetError: RespError;\n\n\tprotected _shortDescFields: ESrcField[];\n\tprotected _longDescFields: ESrcField[];\n\tprotected _shortDescDef: string;\n\tprotected _longDescDef: string;\n\n\tprotected countUsed = 0;\n\n\tconstructor(public readonly wspServer: WspSrv, public code: wspCd, infoWsp?: JInfoWsp, wspMetaUi?: WspMetaUi) {\n\t\tthis.reg = REG.createSubReg<IWspEnv>(wspServer.reg); //Note SubReg obligatoire car reg.resetExtPoints() au rechargement du wspMeta.\n\t\tthis.reg.env.wsp = this;\n\t\tif (infoWsp) {\n\t\t\tif (infoWsp.status === \"loading\") this.waitForLoad();\n\t\t\telse this.setInfoWsp(infoWsp);\n\t\t\tif (wspMetaUi) {\n\t\t\t\tthis.wspMetaUi = wspMetaUi;\n\t\t\t\tthis.reg.copyFrom(wspMetaUi.reg);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Field srcUri ou srcId à privilégier en fonction de l'implémentation du WspProvider. */\n\tget srcRefField(): 'srcUri' | 'srcId' {return this.backEnd === 'odb' ? 'srcId' : 'srcUri'}\n\n\t/** Les infos de l'atelier sont-elles chargées, que l'atelier soit en erreur ou non. */\n\tget isLoaded(): boolean {return this.infoWsp != null || (this.infoWspError != null && this.infoWspError.status != EWspLoadingStatus.notLoaded)}\n\n\t/** L'atelier est-il disponible, statut ok et modèle documentaire disponible. */\n\tget isAvailable(): boolean {return this.infoWsp != null && !this.infoWsp.wspTypeWarn && this.wspMetaUi != null && !this.migrating && !this.fullLoading}\n\n\t/** L'atelier est-il en cours de chargement complet de son contenu. */\n\tget isFullLoading(): boolean {return this.fullLoading != null}\n\n\t/** L'atelier est-il intégralement chargé. */\n\tget isFullLoaded(): boolean {return this.infoWsp?.allItemsLoaded === \"ok\" || false}\n\n\tget isInError(): boolean {return this.infoWspError != null || this.wspMetaUi === /* === pour != undefined */ null}\n\n\tget isDeleted(): boolean | undefined {return this.infoWsp && this.infoWsp.srcFields ? this.infoWsp.srcFields.srcSt === -1 : undefined}\n\n\tget isAccessDenied(): boolean {return this.lastNetError && this.lastNetError.response.status === EHttpStatusCode.forbidden}\n\n\tget isPublic(): boolean | undefined {return this.infoWsp ? this.infoWsp.props.publicWsp === 'true' : undefined}\n\n\tget isAirItem(): boolean | undefined {return this.infoWsp ? this.infoWsp.props.airIt === 'true' : undefined}\n\n\tget isExtItem(): boolean | undefined {return this.infoWsp ? this.infoWsp.props.extIt === 'true' : undefined}\n\n\tget isPrxItem(): boolean | undefined {return this.backEnd === \"odb\" /*todo this.infoWsp ? this.infoWsp.props.prxIt === 'true' : undefined*/}\n\n\tget backEnd(): 'fs' | 'odb' {return this.reg.env.universe.config.backEnd}\n\n\tget wspTitle(): string | undefined {\n\t\tif (this.infoWsp && this.infoWsp.title) return this.infoWsp.title;\n\t\tif (this.infoWspError && this.infoWspError.title) return this.infoWspError.title;\n\t\treturn this.code;\n\t}\n\n\tget wspAlias(): string | undefined {return this.infoWsp ? this.infoWsp.alias : undefined}\n\n\tget wspType(): JWspTypeInst | undefined {return this.infoWsp && this.infoWsp.wspType ? this.infoWsp : undefined}\n\n\tget wspDefProps(): JWspDefProps | undefined {return this.infoWsp ? this.infoWsp.props : undefined}\n\n\t/** Evalue si le backend de ce wsp implémente une fonction (indépendamment des caractéristqiues du wspMeta en cours). */\n\thasFeature(feat: 'revealFs' | 'trash' | 'history' | 'version' | 'tasks' | 'liveCycle' | 'resp' | 'drv' | 'drf' | 'git'): boolean | undefined {\n\t\tconst backEnd = this.backEnd;\n\t\tif (backEnd === undefined) return undefined;\n\t\tif (backEnd === 'fs') {\n\t\t\tif (feat === 'revealFs') return true;\n\t\t\tif (feat === 'git') return true;\n\t\t} else {\n\t\t\tif (feat === 'trash') return true;\n\t\t\tif (feat === 'history') return true;\n\t\t\tif (feat === 'version') return true;\n\t\t\tif (feat === 'tasks') return true;\n\t\t\tif (feat === 'liveCycle') return true;\n\t\t\tif (feat === 'resp') return true;\n\t\t\tif (feat === 'drv') return this.reg.env.universe.wspServer.chain.config.drv;\n\t\t\tif (feat === 'drf') return this.reg.env.universe.wspServer.chain.config.drf;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Attend que les informations sur l'atelier soient chargés\n\t * (que l'atelier soit en erreur ou non coté serveur).\n\t * Promesse rejetée si accès au serveur impossible.\n\t *\n\t * Le modèle documentaire n'est pas chargé ici, voir waitForAvailable().\n\t */\n\tasync waitForLoad(): Promise<this> {\n\t\tif (this.isLoaded) return this;\n\t\tif (this.infoWsp === null) throw Error(\"Fetch infoWsp previously failed: \" + this.lastNetError);\n\t\tif (this._wspInfoLoading == null) {\n\t\t\tconst fields = this.backEnd === \"odb\" ? \"srcRoles*srcRi*srcDt*srcSt\" : \"srcRoles*srcRi*srcDt*srcSt*gitSt\";\n\t\t\tthis._wspInfoLoading = this.wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", \"InfoWsp\", \"param\", this.code, \"fields\", fields)).then((infoWsp) => {\n\t\t\t\tif (infoWsp && infoWsp.status === \"loading\") return new Promise<this>((resolve) => {\n\t\t\t\t\tthis._wspInfoLoading = null;\n\t\t\t\t\tsetTimeout(() => resolve(this.waitForLoad()), 500);\n\t\t\t\t});\n\t\t\t\tthis.setInfoWsp(infoWsp);\n\t\t\t\treturn this;\n\t\t\t}, (e) => {\n\t\t\t\tif (e instanceof RespError) this.lastNetError = e;\n\t\t\t\tthis.setInfoWsp(null); //Marque le fetch en erreur.\n\t\t\t\tthrow e;\n\t\t\t});\n\t\t}\n\t\treturn this._wspInfoLoading;\n\t}\n\n\t/**\n\t * Attend que l'atelier et le modèle documentaire soient chargés.\n\t * Le statut de l'atelier n'est pas évalué ici, voir waitForAvailable().\n\t */\n\tasync waitForWspMetaUiAvailable(): Promise<this> {\n\t\tif (this.wspMetaUi !== null) {\n\t\t\tif (this._wspMetaUiLoading != null) {\n\t\t\t\tawait this._wspMetaUiLoading;\n\t\t\t} else {\n\t\t\t\tawait this.waitForLoad();\n\t\t\t\tif (this.shouldLoadWspMetaUi()) {\n\t\t\t\t\tif (this._wspMetaUiLoading != null) await this._wspMetaUiLoading;\n\t\t\t\t\telse await this.fetchWspMetaUi();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Attend que l'atelier et le modèle documentaire soient chargés et disponibles, pas en erreur.\n\t * Promesse rejetée dans les autres cas.\n\t */\n\tasync waitForAvailable(notifFrom?: HTMLElement): Promise<this> {\n\t\ttry {\n\t\t\tif (!this.wspMetaUi) {\n\t\t\t\tif (!this.isLoaded) {\n\t\t\t\t\tthis.notifWaiting(notifFrom, \"Chargement de l'atelier...\");\n\t\t\t\t\tawait this.waitForLoad();\n\t\t\t\t}\n\t\t\t\tif (this.infoWspError != null) {\n\t\t\t\t\tif (this.infoWspError.status === EWspLoadingStatus.noWsp) {\n\t\t\t\t\t\tthis.notifWaiting(notifFrom, \"Atelier non trouvé\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.notifWaiting(notifFrom, \"Atelier en erreur\");\n\t\t\t\t\t}\n\t\t\t\t\tthrow Error(\"WspInfo in error\");\n\t\t\t\t}\n\t\t\t\tif (this.infoWsp === null) {\n\t\t\t\t\tthis.notifWaiting(notifFrom, \"Accès impossible à l'atelier\");\n\t\t\t\t\tthrow Error(\"Fetch infoWsp previously failed\");\n\t\t\t\t}\n\t\t\t\tif (this.wspMetaUi === null) {\n\t\t\t\t\tthis.notifWaiting(notifFrom, \"Accès impossible aux propriétés de l'atelier\");\n\t\t\t\t\tthrow Error(\"Fetch wspMeta previously failed\");\n\t\t\t\t}\n\t\t\t\tif (this._wspMetaUiLoading != null) {\n\t\t\t\t\tawait this._wspMetaUiLoading;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.shouldLoadWspMetaUi()) {\n\t\t\t\t\t\tthis.notifWaiting(notifFrom, \"Chargement de l'atelier...\");\n\t\t\t\t\t\tif (this._wspMetaUiLoading != null) await this._wspMetaUiLoading;\n\t\t\t\t\t\telse await this.fetchWspMetaUi();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.migrating) {\n\t\t\t\tthis.notifWaiting(notifFrom, \"Migration de l'atelier en cours...\");\n\t\t\t\tawait this.migrating;\n\t\t\t\tawait this.waitForAvailable(notifFrom); //réévaluation des cas d'erreur\n\t\t\t}\n\t\t\tif (this.fullLoading) {\n\t\t\t\tthis.notifWaiting(notifFrom, \"Chargement de l'atelier complet en cours...\");\n\t\t\t\tawait this.fullLoading;\n\t\t\t\tawait this.waitForAvailable(notifFrom); //réévaluation des cas d'erreur\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.clearAllNotifWaiting();\n\t\t}\n\t\treturn this;\n\t}\n\n\tprotected shouldLoadWspMetaUi(): boolean {\n\t\tif (this.wspMetaUi != null) return false;//non, déjà chargé\n\t\tif (this.infoWsp != null) return true;//oui, infoWsp dispo\n\t\tif (this.infoWspError != null) console.log(\"this.infoWspError.status:::\", this.infoWspError.status);\n\t\tif (this.infoWspError != null && this.infoWspError.status !== EWspLoadingStatus.notLoaded && this.infoWspError.status !== EWspLoadingStatus.noWsp) return true; //oui, wsp en erreur mais chargeable\n\t\treturn false; //oui, wsp pas utilisable\n\t}\n\n\tprotected notifWaiting(notifFrom: HTMLElement, msg: string) {\n\t\tif (!notifFrom || notifFrom.offsetHeight == 0) return; //pas de contexte ou contexte graphique masqué.\n\t\tif (!this._lastWaitNotif) this._lastWaitNotif = new Map();\n\t\tlet lastNotif = this._lastWaitNotif.get(notifFrom);\n\t\tif (lastNotif) {\n\t\t\t//précédente notif encore ouverte.\n\t\t\tlastNotif.setContent(msg);\n\t\t} else {\n\t\t\t//nouvelle motif\n\t\t\tlastNotif = POPUP.showNotif(msg, notifFrom, {autoHide: 0});\n\t\t\tthis._lastWaitNotif.set(notifFrom, lastNotif);\n\t\t\tlastNotif.onNextClose().then(() => {this._lastWaitNotif.delete(notifFrom)});\n\t\t}\n\t}\n\n\tprotected clearAllNotifWaiting() {\n\t\tif (this._lastWaitNotif) {\n\t\t\tfor (const notif of this._lastWaitNotif.values()) {\n\t\t\t\tnotif.close();\n\t\t\t}\n\t\t\tthis._lastWaitNotif.clear();\n\t\t}\n\t}\n\n\tprotected updateAllNotifWaiting(msg: string) {\n\t\tif (this._lastWaitNotif) {\n\t\t\tfor (const notif of this._lastWaitNotif.values()) {\n\t\t\t\tnotif.setContent(msg);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _lastWaitNotif: Map<HTMLElement, PopupNotif>;\n\n\t/**\n\t * Ecoute les changements issus du server sur les propriétés de l'atelier.\n\t * stopListenChanges() doit être en fin d'utilisation.\n\t */\n\tlistenChanges(): this {\n\t\tif (this.countUsed++ === 0) {\n\t\t\tconst wspsLive = this.wspServer.wspsLive;\n\t\t\tif (wspsLive.isAvailable && !wspsLive.findWsp(this.code)) wspsLive.sendMsg({svc: 'wspChanges', type: 'listen', addWsp: this.code});\n\t\t\twspsLive._wsps.add(this);\n\t\t}\n\t\treturn this;\n\t}\n\n\tstopListenChanges(): this {\n\t\tif (--this.countUsed === 0) {\n\t\t\tconst wspsLive = this.wspServer.wspsLive;\n\t\t\twspsLive._wsps.delete(this);\n\t\t\t//Reset des états graphiques en cours : ce wsp étant éléminé de wspsLive._wsps\n\t\t\t// les events WebSockets 'fullLoaded' ou 'migratingDone'/'migratingFailed' ne seront jamais reçus,\n\t\t\t// les promesses associées ne sont donc jamais résolues.\n\t\t\tthis.resetFullLoading();\n\t\t\tthis.resetMigrating();\n\t\t\tif (wspsLive.isAvailable && !wspsLive.findWsp(this.code)) wspsLive.sendMsg({svc: 'wspChanges', type: 'listen', remWsp: this.code});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Créée une place avec ce wsp pré-enregistré pour écouter les events. */\n\tnewPlaceWsp(): WspsLivePlace {\n\t\tconst pl = this.wspServer.wspsLive.newPlace();\n\t\tpl.registerWsp(this); //préenregistrement.\n\t\treturn pl;\n\t}\n\n\t/** Construit un objet fournissant les propriétés de l'atelier en respectant le le formalisme JSON d'update requis */\n\tmakeParamsForUpdate(): JWspUpdateParamsFS | JWspUpdateParamsDB | JWspUpdateParamsDB_DRF | JWspUpdateParamsDB_DRV {\n\t\tlet result = {};\n\t\tconst infoWsp = this.infoWsp || this.infoWspError;\n\t\tif (this.backEnd == \"fs\") {\n\t\t\tif (infoWsp.props.desc) (result as JWspUpdateParamsFS).desc = infoWsp.props.desc;\n\t\t\tif (infoWsp.title) (result as JWspUpdateParamsFS).title = infoWsp.title;\n\t\t} else if (this.backEnd == \"odb\") {\n\t\t\tif (infoWsp.props.desc) (result as JWspUpdateParamsDB).desc = infoWsp.props.desc;\n\t\t\tif (infoWsp.title) (result as JWspUpdateParamsDB).title = infoWsp.title;\n\t\t\tif (infoWsp.alias) (result as JWspUpdateParamsDB).alias = infoWsp.alias;\n\t\t\tif (infoWsp.skins) (result as JWspUpdateParamsDB).skins = infoWsp.skins;\n\t\t\tif (infoWsp.props?.airIt) (result as JWspUpdateParamsDB).airIt = infoWsp.props.airIt === 'true';\n\t\t\tif (infoWsp.props?.extIt) (result as JWspUpdateParamsDB).extIt = infoWsp.props.extIt === 'true';\n\t\t\tif (infoWsp.props?.mirror) (result as JWspUpdateParamsDB).mirror = infoWsp.props.mirror === 'true';\n\t\t\tif (infoWsp.props?.publicWsp) (result as JWspUpdateParamsDB).publicWsp = infoWsp.props.publicWsp === 'true';\n\t\t}\n\t\tif (this.wspDefProps && this.wspDefProps.drfRefWsp) {\n\t\t\tif (infoWsp.props.draftTitle) (result as JWspUpdateParamsDB_DRF).draftTitle = infoWsp.props.draftTitle;\n\t\t\tif (infoWsp.props.drfRefWsp) (result as JWspUpdateParamsDB_DRF).wspRef = infoWsp.props.drfRefWsp;\n\t\t}\n\t\tif (this.wspDefProps && this.wspDefProps.drvAxis) {\n\t\t\tif (infoWsp.props.drvMasterWsp) (result as JWspUpdateParamsDB_DRV).wspMaster = infoWsp.props.drvMasterWsp;\n\t\t\tif (infoWsp.props.drvAxis) (result as JWspUpdateParamsDB_DRV).drvAxis = infoWsp.props.drvAxis;\n\t\t\tif (infoWsp.props.drvDefaultSrcFindPath) (result as JWspUpdateParamsDB_DRV).drvDefaultSrcFindPath = infoWsp.props.drvDefaultSrcFindPath.split(\" \");\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Le shortDesc retourné est potentiellement issu d'un cache.\n\t * L'appelant DOIT donc le cloner s'il veut modifier l'objet (refs internes dans un tree...).\n\t */\n\tasync fetchShortDesc(srcRefSub: srcRefSub, uiContext?: HTMLElement): Promise<JSrcFields> {\n\t\tif (!this._pendingShortDescs) this._pendingShortDescs = new FetchSrcDescBulk(this, uiContext);\n\t\tlet pending = this._pendingShortDescs.get(srcRefSub);\n\t\tif (!pending) pending = new FetchSrcDescPending(this._pendingShortDescs, srcRefSub, false);\n\t\treturn pending.promise;\n\t}\n\n\t_pendingShortDescs?: FetchSrcDescBulk;\n\n\t/**\n\t * Le shortDesc retourné est potentiellement issu d'un cache.\n\t * L'appelant DOIT donc le cloner s'il veut modifier l'objet (refs internes dans un tree...).\n\t */\n\tasync fetchShortDescSubItems(srcRefSub: srcRefSub, uiContext?: HTMLElement): Promise<JSrcFields> {\n\t\tif (!this._pendingShortDescs) this._pendingShortDescs = new FetchSrcDescBulk(this, uiContext);\n\t\tlet pending = this._pendingShortDescs.get(srcRefSub);\n\t\tif (!pending) pending = new FetchSrcDescPending(this._pendingShortDescs, srcRefSub, true);\n\t\telse pending.withSubItem = true;\n\t\treturn pending.promise;\n\t}\n\n\t/**\n\t * Le longDesc retourné est potentiellement issu d'un cache.\n\t * L'appelant DOIT donc le cloner s'il veut modifier l'objet (refs internes dans un tree...).\n\t */\n\tasync fetchLongDesc(srcRef: srcRef, uiContext?: HTMLElement): Promise<JSrcFields> {\n\t\tlet p = this._pendingLongDescFetch.get(srcRef);\n\t\tif (p) return p;\n\t\tp = WSP.fetchLongDesc(this, uiContext, srcRef);\n\t\tthis._pendingLongDescFetch.set(srcRef, p);\n\t\ttry {\n\t\t\treturn await p;\n\t\t} finally {\n\t\t\tthis._pendingLongDescFetch.delete(srcRef);\n\t\t}\n\t}\n\n\tprotected _pendingLongDescFetch = new Map<srcRef, Promise<JSrcFields>>();\n\n\t/** Liste des srcFields du shortDesc, une fois intégré les particularités du desk, du wspProvider et du modèle documentaire. */\n\tgetShortDescFields(): ESrcField[] {\n\t\tif (!this._shortDescFields) {\n\t\t\tthis._shortDescFields = [...SRC.resolveAliasSrcFields(this.reg.mergeLists(this.backEnd === 'odb' ? 'srcFields:shortDesc:odb' : 'srcFields:shortDesc:fs', 'srcFields:shortDesc'))];\n\t\t}\n\t\treturn this._shortDescFields;\n\t}\n\n\t/** Définition du shortDesc avec alias, une fois intégré les particularités du desk, du wspProvider et du modèle documentaire. */\n\tgetShortDescDef(): string {\n\t\tif (!this._shortDescDef) {\n\t\t\tthis._shortDescDef = this.reg.mergeLists(this.backEnd === 'odb' ? 'srcFields:shortDesc:odb' : 'srcFields:shortDesc:fs', 'srcFields:shortDesc').join('*');\n\t\t}\n\t\treturn this._shortDescDef;\n\t}\n\n\t/** Liste des srcFields du longDesc, une fois intégré les particularités du desk, du wspProvider et du modèle documentaire. */\n\tgetLongDescFields(): ESrcField[] {\n\t\tif (!this._longDescFields) {\n\t\t\tconst set = SRC.resolveAliasSrcFields(this.reg.mergeLists(this.backEnd === 'odb' ? 'srcFields:longDesc:odb' : 'srcFields:longDesc:fs', 'srcFields:longDesc', this.backEnd === 'odb' ? 'srcFields:shortDesc:odb' : 'srcFields:shortDesc:fs', 'srcFields:shortDesc'));\n\t\t\tif (this.isExtItem) set.add(\"itFullUriInOwnerWsp\");\n\t\t\tthis._longDescFields = [...set];\n\t\t}\n\t\treturn this._longDescFields;\n\t}\n\n\t/** Définition du longDesc avec alias, une fois intégré les particularités du desk, du wspProvider et du modèle documentaire. */\n\tgetLongDescDef(): string {\n\t\tif (!this._longDescDef) {\n\t\t\tconst list = this.reg.mergeLists<ESrcField | string/*alias*/>(this.backEnd === 'odb' ? 'srcFields:longDesc:odb' : 'srcFields:longDesc:fs', 'srcFields:longDesc', this.backEnd === 'odb' ? 'srcFields:shortDesc:odb' : 'srcFields:shortDesc:fs', 'srcFields:shortDesc');\n\t\t\tif (this.isExtItem) list.push(\"itFullUriInOwnerWsp\");\n\t\t\tthis._longDescDef = list.join('*');\n\t\t}\n\t\treturn this._longDescDef;\n\t}\n\n\t/**\n\t * Fonction de tri des contenus des espaces (et des dosssiers des items de ressources).\n\t * Doit être identique à celui du moteur de recherche de l'atelier selon l'expression \"Items\".\n\t *\n\t * Projet de le rendre configurable (prop serveur du wsp) : espaces en 1er...\n\t */\n\tget srcUriItemsSortFn(): (a: srcUri, b: srcUri) => number {\n\t\treturn SRC.sortSrcUriTree;\n\t}\n\n\tasync delete(deleteParams: JWspDeleteParamsFS | JWspDeleteParamsDB): Promise<void> {\n\t\treturn this.wspServer.config.adminWspUrl.fetchVoid(IO.qs(\"cdaction\", \"DeleteWsp\", \"param\", this.code, \"deleteParams\", CDM.stringify(deleteParams)), {method: \"POST\"});\n\t}\n\n\tasync deletePermanently(deleteParams?: Jsonisable): Promise<void> {\n\t\tconst qs = new UrlQs();\n\t\tqs.append(\"cdaction\", \"DeletePermanentlyWsp\");\n\t\tqs.append(\"param\", this.code);\n\t\tif (deleteParams) qs.append(\"deleteParams\", CDM.stringify(deleteParams));\n\t\treturn this.wspServer.config.adminWspUrl.fetchVoid(\"?\" + qs.toString(), {method: \"POST\"});\n\t}\n\n\tasync restore(): Promise<void> {\n\t\treturn this.wspServer.config.adminWspUrl.fetchVoid(IO.qs(\"cdaction\", \"RestoreWsp\", \"param\", this.code), {method: \"POST\"});\n\t}\n\n\tupdateWspProps(updateParams: JWspUpdateParamsFS | JWspUpdateParamsDB | JWspUpdateParamsDB_DRF | JWspUpdateParamsDB_DRV): Promise<void> {\n\t\treturn this.wspServer.config.adminWspUrl.fetchVoid(IO.qs(\"cdaction\", \"UpdateWspProps\", \"param\", this.code, \"updateParams\", CDM.stringify(updateParams)), {method: \"POST\"});\n\t}\n\n\t/**\n\t * Maj du wspType d'un atelier\n\t * @param withMigration : si true, affecte le nouveau wspType en déclenchant la migration si nécessaire\n\t * @param normalizeWspType : si true, demande la normalisation du wspType partiel passé en argument (langue inconnue, version inconnue, ...) par rapport aux packs installés\n\t *\t\tATTENTION : l'objet wsp ne sera rafraîchi QUE suite aux remontées d'event WS, si (wsp.listenChanges())\n\t */\n\tasync updateWspType(wspType: JWspTypeInst, withMigration: boolean = false, normalizeWspType: boolean = false): Promise<this> {\n\t\tconst initReq: RequestInit = {method: 'PUT', body: DOM.ser(WSPMETA.toWspTypeDom(wspType))};\n\t\tawait this.wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", withMigration ? \"MigrateUpdateWspType\" : \"UpdateWspType\", \"normaliseWspType\", normalizeWspType, \"param\", this.code), initReq);\n\t\t// this.resetRemoteDatas();\n\t\t// if (infoWsp && infoWsp.status === \"loading\") {\n\t\t// \tthis.setInfoWsp(undefined);\n\t\t// \treturn this.waitForLoad();\n\t\t// }\n\t\t// this.setInfoWsp(infoWsp);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Evalue si une migration est nécessaire pour affecter le wspMeta à l'atelier\n\t * @return false : pas de migration nécessaire\n\t * @return true : migration nécessaire\n\t * @return Node : migration nécessaire mais necessite des prérequis décris par ce message\n\t * @see  eu.scenari.commons.log.LogMsg.writeAsXmlFormat\n\t */\n\tasync isMigrationNeeded(wspType: JWspTypeInst): Promise<boolean | Element> {\n\t\tconst initReq: RequestInit = {method: 'PUT', body: DOM.ser(WSPMETA.toWspTypeDom(wspType))};\n\t\tconst vRespDom: Document = await this.wspServer.config.adminWspUrl.fetchDom(IO.qs(\"cdaction\", \"IsMigrationNeeded\", \"param\", this.code), initReq);\n\t\tif (vRespDom.documentElement.nodeName === \"noMigrationNeeded\")\n\t\t\treturn Promise.resolve(false);\n\t\telse if (vRespDom.documentElement.hasChildNodes())\n\t\t\treturn Promise.resolve(vRespDom.documentElement.firstElementChild);\n\t\telse\n\t\t\treturn Promise.resolve(true);\n\t}\n\n\t/** Appelé par ex. en cas de chgt de user. */\n\tforceReload(notifFrom?: HTMLElement): Promise<this> {\n\t\tif (this.isAvailable) {\n\t\t\tthis.resetRemoteDatas();\n\t\t\treturn this.waitForAvailable(notifFrom);\n\t\t}\n\t\tif (this.isLoaded) {\n\t\t\tthis.resetRemoteDatas();\n\t\t\treturn this.waitForLoad();\n\t\t}\n\t\treturn Promise.resolve(this);\n\t}\n\n\tasync forceAllItemsLoaded(notifFrom: HTMLElement): Promise<this> {\n\t\tif (this.infoWsp.allItemsLoaded === \"ok\") return this;\n\t\tif (!this.isAvailable) {\n\t\t\tawait this.waitForAvailable(notifFrom);\n\t\t\t// @ts-ignore\n\t\t\tif (this.infoWsp.allItemsLoaded === \"ok\") return this;\n\t\t}\n\t\tthis.notifWaiting(notifFrom, \"Chargement de l'atelier complet en cours...\");\n\t\ttry {\n\t\t\tif (this.isFullLoading) {\n\t\t\t\tawait this.fullLoading;\n\t\t\t} else {\n\t\t\t\tawait this.wspServer.config.adminWspUrl.fetchVoid(IO.qs(\"cdaction\", \"ActivateModeLoadAllItems\", \"param\", this.code), {method: \"POST\"});\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.clearAllNotifWaiting();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** L'état de l'atelier coté serveur a été modifié. */\n\t_onWspChange(m: JWspStChangeMsg) {\n\t\tthis.resetMigrating();\n\t\tthis.resetFullLoading();\n\t\tif (m.wspSt === 'loaded' || m.wspSt === 'closed') {\n\t\t\tif (this.isLoaded) this.resetRemoteDatas();\n\t\t\tthis.waitForAvailable();\n\t\t} else if (m.wspSt === 'migrating') {\n\t\t\tthis.migrating = new Promise<this>((resolve: (r: this) => void): void => {this._migrResolver = resolve});\n\t\t\tthis._dispatchWspLiveChange();\n\t\t\tthis.updateAllNotifWaiting(\"Migration de l'atelier en cours...\");\n\t\t} else if (m.wspSt === 'migratingDone' || m.wspSt === 'migratingFailed') {\n\t\t\tthis.clearAllNotifWaiting();\n\t\t\tthis._dispatchWspLiveChange();\n\t\t} else if (m.wspSt === 'fullLoading') {\n\t\t\tthis.fullLoading = new Promise<this>((resolve): void => {this._fullLoadingResolver = resolve});\n\t\t\tthis._dispatchWspFullLoadStateChange();\n\t\t\tthis.updateAllNotifWaiting(\"Chargement complet de l'atelier en cours...\");\n\t\t} else if (m.wspSt === 'fullLoaded') {\n\t\t\tif (this.infoWsp) this.infoWsp.allItemsLoaded = \"ok\";\n\t\t\tthis._dispatchWspFullLoadStateChange();\n\t\t\tthis.clearAllNotifWaiting();\n\t\t}\n\t}\n\n\tprotected resetFullLoading() {\n\t\tif (this._fullLoadingResolver) {\n\t\t\tthis._fullLoadingResolver(this);\n\t\t\tthis._fullLoadingResolver = null;\n\t\t}\n\t\tthis.fullLoading = null;\n\t}\n\n\tprotected resetMigrating() {\n\t\tif (this._migrResolver) {\n\t\t\tthis._migrResolver(this);\n\t\t\tthis._migrResolver = null;\n\t\t}\n\t\tthis.migrating = null;\n\t}\n\n\t/** Changement de perm sur l'atelier. */\n\t_onWspPermChange(m: JWspUriChangeMsg): Promise<this> {\n\t\tthis.resetRemoteDatas();\n\t\treturn this.waitForAvailable();\n\t}\n\n\tprotected _dispatchWspLiveChange() {\n\t\tif (WspDEBUG) console.log(\"WspLiveChange:::\", this.code, this);\n\t\tfor (const place of this.wspServer.wspsLive._places) {\n\t\t\tif (place.isWspUsed(this)) place.eventsMgr.emitCatched(\"wspLiveStateChange\", this);\n\t\t}\n\t}\n\n\tprotected _dispatchWspFullLoadStateChange() {\n\t\tfor (const place of this.wspServer.wspsLive._places) {\n\t\t\tif (place.isWspUsed(this)) place.eventsMgr.emitCatched(\"wspLiveFullLoadStateChange\", this);\n\t\t}\n\t}\n\n\tprotected _migrResolver: (r: this) => void;\n\tprotected _fullLoadingResolver: (r: this) => void;\n\n\t/** Controle de fraicheur de l'atelier après une reconnexion webSocket. */\n\tasync onWsConnectionRenewed(uriStates: JWspWorkingInitStates) {\n\t\tconst wspState = uriStates[this.code];\n\t\t//si !wspState, cet atelier a été déclaré après la requete websocket d'init et avant la réponse du serveur\n\t\t//=>pas de reload\n\t\tif (!wspState) return;\n\t\tif (this.migrating) {\n\t\t\tif (WspDEBUG) console.log(\"Wsp.onWsConnectionRenewed::reload due to migrating::\", wspState);\n\t\t\tthis.resetRemoteDatas(); //Besoin de recharger le wspInfo pour isMigrationNeeded.\n\t\t} else {\n\t\t\tconst infoWsp = this.infoWsp || this.infoWspError;\n\t\t\tif (infoWsp === null || this.wspMetaUi === null) {\n\t\t\t\t//infoWsp === null : accès impossible (ex: 403) on reset et retente\n\t\t\t\t//wspMetaUi === null : échec précédent, peut-être à présent résolu (relancement serveur)\n\t\t\t\tif (WspDEBUG) console.log(\"Wsp.onWsConnectionRenewed::tryLoad::\", wspState);\n\t\t\t\tthis.resetRemoteDatas();\n\t\t\t} else if (infoWsp && infoWsp.srcFields && wspState && infoWsp.srcFields.srcDt !== wspState.srcDt) {\n\t\t\t\t//infoWsp déjà chargé, mais Dt différent\n\t\t\t\tif (WspDEBUG) console.log(\"Wsp.onWsConnectionRenewed::reload::\", wspState, infoWsp.srcFields);\n\t\t\t\tthis.resetRemoteDatas();\n\t\t\t} else {\n\t\t\t\tthis.resetFullLoading(); //srcDt n'est pas impacté par le statut fullLoading\n\t\t\t}\n\t\t}\n\t\treturn this.waitForAvailable();\n\t}\n\n\n\tprotected _wspInfoLoading: Promise<this>;\n\tprotected _wspMetaUiLoading: Promise<WspMetaUi>;\n\n\tprotected setInfoWsp(infoWsp: JInfoWsp) {\n\t\tthis._wspInfoLoading = null;\n\t\tthis.resetWspMetaUi();\n\t\t//console.log(\"infoWsp:::::::::::\", infoWsp);\n\t\tif (infoWsp) {\n\t\t\tif (infoWsp.srcFields) {\n\t\t\t\tthis.reg.env.securityCtx = SEC.createSub(this.wspServer.reg.env.securityCtx, infoWsp.srcFields.srcRoles, infoWsp.srcFields.srcRi, this);\n\t\t\t} else {\n\t\t\t\tthis.reg.env.securityCtx = null;\n\t\t\t}\n\t\t\tswitch (infoWsp.status) {\n\t\t\tcase EWspLoadingStatus.ok :\n\t\t\t\tthis.code = infoWsp.wspCd; //en cas d'accès par alias.\n\t\t\t\tthis.infoWsp = infoWsp;\n\t\t\t\tthis.infoWspError = null;\n\t\t\t\tbreak;\n\t\t\tcase EWspLoadingStatus.failed :\n\t\t\tcase EWspLoadingStatus.loading : //ne devrait jamais arriver.\n\t\t\t\tthis.code = infoWsp.wspCd; //en cas d'accès par alias.\n\t\t\t\tthis.infoWsp = null;\n\t\t\t\tthis.infoWspError = infoWsp;\n\t\t\t\tif (WspDEBUG) console.log(\"WspInfo fetched with failed status:\", infoWsp);\n\t\t\t\tbreak;\n\t\t\tcase EWspLoadingStatus.notLoaded :\n\t\t\t\tthis.code = infoWsp.wspCd; //en cas d'accès par alias.\n\t\t\t\tthis.infoWsp = undefined;\n\t\t\t\tthis.infoWspError = infoWsp;\n\t\t\t\tbreak;\n\t\t\tcase EWspLoadingStatus.noWsp :\n\t\t\t\tthis.infoWsp = null;\n\t\t\t\tthis.infoWspError = infoWsp;\n\t\t\t\tif (WspDEBUG) console.log(\"Wsp do not exist:\", infoWsp);\n\t\t\t}\n\t\t\tif (infoWsp.props && infoWsp.props.drfRefWsp) {\n\t\t\t\tthis.reg.addToList(\"srcFields:shortDesc\", \"drfState\", 1, \"drfState\");\n\t\t\t} else if (infoWsp.props && infoWsp.props.drvAxis) {\n\t\t\t\tthis.reg.addToList(\"srcFields:shortDesc\", \"drvState\", 1, \"drvState\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.infoWsp = infoWsp; //null (erreur) ou undefined (à charger)\n\t\t\tthis.infoWspError = infoWsp;\n\t\t\tthis.reg.env.securityCtx = null;\n\t\t}\n\t\tthis._dispatchWspLiveChange();\n\t}\n\n\t/** Construit le WspMetaUi. */\n\tprotected async fetchWspMetaUi(): Promise<this> {\n\t\ttry {\n\t\t\tconst wspType = this.wspType;\n\t\t\tif (!wspType) throw Error(\"WspMeta definition not available\");\n\t\t\tthis._wspMetaUiLoading = createWspMetaUi(this.wspServer, wspType);\n\t\t\tconst newWspUi = await this._wspMetaUiLoading;\n\t\t\tif (newWspUi == null) throw Error(\"WspMeta not found\");\n\t\t\tif (this.wspType !== wspType) return; //raceCond chgt d'infoWsp entre temps.\n\t\t\tthis.wspMetaUi = newWspUi;\n\t\t\tthis.reg.copyFrom(this.wspMetaUi.reg);\n\t\t} catch (e) {\n\t\t\tif (e instanceof RespError) this.lastNetError = e;\n\t\t\tthis.wspMetaUi = null;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis._wspMetaUiLoading = undefined;\n\t\t\tthis._dispatchWspLiveChange();\n\t\t}\n\t\treturn this;\n\t}\n\n\tprotected resetRemoteDatas() {\n\t\tthis.infoWsp = undefined;\n\t\tthis.infoWspError = undefined;\n\t\tthis.resetMigrating();\n\t\tthis.resetFullLoading();\n\t\tif (this.lastNetError) this.lastNetError = undefined;\n\t\tthis.resetWspMetaUi();\n\t\tthis._dispatchWspLiveChange();\n\t}\n\n\tprotected resetWspMetaUi() {\n\t\tif (this.wspMetaUi) this.reg.resetExtPoints();\n\t\tthis.wspMetaUi = undefined; //null -> undefined\n\t\tthis._shortDescFields = null;\n\t\tthis._longDescFields = null;\n\t\tthis._shortDescDef = null;\n\t\tthis._longDescDef = null;\n\t}\n\n\tequals(otherWsp: Wsp): boolean {\n\t\treturn otherWsp && this.code === otherWsp.code;\n\t}\n\n\ttoString() {return `Wsp(code:'${this.code}')`}\n}\n\nexport class WspVersion extends Wsp {\n\n\tconstructor(origin: Wsp, code: any, infoWsp?: JInfoWsp) {\n\t\tsuper(origin.wspServer, code, infoWsp);\n\t}\n}\n\nconst WspDEBUG = false;\n\n\nexport interface IWspPointer {\n\twsp?: Wsp\n}\n\n/** Un environnement de wsp est issu d'un env d'un universChain, avec le securityCtx dédié et le Wsp chargé. */\nexport type IWspEnv = IChainEnv & IWspPointer & ISecurityCtxPointer;\n\n/** Contexte graphique avec un atelier: en plus de l'atelier une IWspsLivePlace par défaut et un IInfoBroker peuvent être disponibles. */\nexport type IWspUiEnv = IWspEnv & IWspsLivePlacePointer & IInfoBrokerPointer & IUiEnv;\n\n//shortDesc\nREG.reg.addToList('srcFields:shortDesc', 'item', 1, 'item');\n//shortDesc odb\nREG.reg.addToList('srcFields:shortDesc:odb', 'sdOdb', 1, 'sdOdb');\n//shortDesc FS\nREG.reg.addToList('srcFields:shortDesc:fs', 'sdFs', 1, 'sdFs');\nREG.reg.addToList('srcFields:shortDesc:fs', 'gitSt', 1, 'gitSt');\n\n//longDesc base\n//REG.reg.addToList('srcFields:longDesc', 'itSubItems', 1, 'itSubItems');\n\n//longDesc odb\n//Si tasks ou resp sur items\n// REG.reg.addToList('srcFields:longDesc:odb', 'rspUsrs', 1, 'rspUsrs');\n//Si tasks\n// REG.reg.addToList('srcFields:longDesc:odb', 'actStage', 1, 'actStage');\n// REG.reg.addToList('srcFields:longDesc:odb', 'actCts', 1, 'actCts');\n\n/**\n *\n */\nexport namespace WSPMETA {\n\n\t/**\n\t * Crée une structure DOM à partir d'un JWspTypeInst, utilisable à la création d'un atelier par exemple.\n\t */\n\texport function toWspTypeDom(wspTypeInst: JWspTypeInst): Element {\n\t\tconst elt = DOM.newDomDoc().createElement(\"wspType\");\n\t\telt.setAttribute(\"key\", wspTypeInst.wspType.key);\n\t\tif (wspTypeInst.wspType.uri) elt.setAttribute(\"uri\", wspTypeInst.wspType.uri);\n\t\tif (wspTypeInst.wspType.version) elt.setAttribute(\"version\", wspTypeInst.wspType.version);\n\t\tif (wspTypeInst.wspType.lang) elt.setAttribute(\"lang\", wspTypeInst.wspType.lang);\n\t\tif (wspTypeInst.wspType.title) elt.setAttribute(\"title\", wspTypeInst.wspType.title);\n\t\tif (wspTypeInst.wspOptions) for (const wspOpt of wspTypeInst.wspOptions) {\n\t\t\tconst optElt = elt.appendChild(elt.ownerDocument.createElement(\"wspOption\"));\n\t\t\toptElt.setAttribute(\"key\", wspOpt.key);\n\t\t\tif (wspOpt.uri) optElt.setAttribute(\"uri\", wspOpt.uri);\n\t\t\tif (wspOpt.version) optElt.setAttribute(\"version\", wspOpt.version);\n\t\t\tif (wspOpt.lang) optElt.setAttribute(\"lang\", wspOpt.lang);\n\t\t\tif (wspOpt.title) optElt.setAttribute(\"title\", wspOpt.title);\n\t\t}\n\t\treturn elt;\n\t}\n\n\t/** Cache pour la manipulation d'un grand nombre d'ateliers : mutialisation du JWspTypeInst et du WspMetaUi chargé. */\n\texport class WspMetasCache {\n\n\t\tprotected wspTypeInstAtoms = new Map<string, JWspTypeInst>();\n\t\tprotected wspMetaUis = new Map<string, Promise<WspMetaUi>>();\n\t\tprotected fetched: Map<string, WspMetaUi>;\n\n\t\tconstructor(public wspSrv: WspSrv) {}\n\n\t\t/** Mutualisation des JWspTypeInst (micro-optimisation). */\n\t\tatomWspTypeInst(wspTypeInst: JWspTypeInst): JWspTypeInst {\n\t\t\tconst id = getWspTypeInstId(wspTypeInst);\n\t\t\tconst w = this.wspTypeInstAtoms.get(id);\n\t\t\tif (w) return w;\n\t\t\tthis.wspTypeInstAtoms.set(id, wspTypeInst);\n\t\t\treturn wspTypeInst;\n\t\t}\n\n\t\t/** Déclaration d'un JWspTypeInst dans ce cache. */\n\t\tfetchWspMetaUi(wspTypeInst: JWspTypeInst): Promise<WspMetaUi> {\n\t\t\tconst id = getWspTypeInstId(wspTypeInst);\n\t\t\tlet w = this.wspMetaUis.get(id);\n\t\t\tif (!w) {\n\t\t\t\tw = createWspMetaUi(this.wspSrv, wspTypeInst);\n\t\t\t\tthis.wspMetaUis.set(id, w);\n\t\t\t}\n\t\t\treturn w;\n\t\t}\n\n\t\t/** Attend que tous les JWspTypeInst déclarés via fetchWspMetaUi() soient bien chargés. */\n\t\tasync waitForAll(): Promise<void> {\n\t\t\tlet done = 0;\n\t\t\tconst total = this.wspMetaUis.size;\n\t\t\tif (!total) return;\n\t\t\tconst fetched = new Map<string, WspMetaUi>();\n\t\t\tlet finished: (v: unknown) => void;\n\t\t\tfor (let entry of this.wspMetaUis) {\n\t\t\t\tentry[1].then((wspMetaUi) => {\n\t\t\t\t\tfetched.set(entry[0], wspMetaUi);\n\t\t\t\t\tif (++done === total) finished(undefined);\n\t\t\t\t}, (err) => {\n\t\t\t\t\tif (++done === total) finished(undefined);\n\t\t\t\t})\n\t\t\t}\n\t\t\tawait new Promise((resolved) => {finished = resolved});\n\t\t\tthis.fetched = fetched;\n\t\t\t// Promise.all = echec complet si un seul échoue => pas bon\n\t\t\t// const ids = [...this.wspMetaUis.keys()];\n\t\t\t// const promises = [...this.wspMetaUis.values()];\n\t\t\t// const w = await Promise.all(promises);\n\t\t\t// this.fetched = new Map();\n\t\t\t// for (let i = 0; i < ids.length; i++) this.fetched.set(ids[i], w[i]);\n\t\t}\n\n\t\t/** Offre un accès synchrone WspMetaUi à partir d'un JWspTypeInst, après un appel à waitForAll(). */\n\t\tgetWspMetaUi(wspTypeInst: JWspTypeInst): WspMetaUi | null {\n\t\t\treturn this.fetched?.get(getWspTypeInstId(wspTypeInst));\n\t\t}\n\t}\n\n\tfunction getWspTypeInstId(wspTypeInst: JWspTypeInst & { _id?: string }): string {\n\t\tif (wspTypeInst._id) return wspTypeInst._id;\n\t\tconst uris = [wspTypeInst.wspType.uri];\n\t\twspTypeInst.wspOptions?.forEach((opt) => uris.push(opt.uri));\n\t\turis.sort();\n\t\treturn wspTypeInst._id = uris.join('\\n');\n\t}\n}\n\n\n/** States distants issus du renouvellement de la connexion. */\nexport type JWspWorkingInitStates = {\n\t[uri: string/*wspUri*/]: {\n\t\tsrcDt: number\n\t\tsrcStamp?: string\n\t\treject?: 'perm' | 'conflict'\n\t\tstates: JWspWorkingState[]\n\t}\n}\n\n/** Etat d'un device concernant une uri. */\nexport type JWspWorkingState = {\n\tstate: EWspWorkingSt\n\taccount: string\n\tclId: string\n}\n\nexport type JWspUriChangeMsg = {\n\tsvc: 'wspChanges'\n\ttype: EWspChangesEvts\n\twspCd: string\n\tsrcUri: string\n\tsrcId?: string\n\titSt?: EItStatus // si type = EWspChangesEvts.s\n\titModel?: string //uniquement si le user connecté est impliqué dans les responsabilités de cette source.\n\tinvolved?: boolean //uniquement si le user connecté est impliqué dans les responsabilités de cette source.\n\t/** Peut être renseigné en cas de dispatch local. */\n\tshortDesc?: JSrcFields\n}\n\nexport type JWspStChangeMsg = {\n\tsvc: 'wspChanges'\n\twspCd: string\n\twspSt: 'loading' | 'loaded' | 'fullLoading' | 'fullLoaded' | 'migrating' | 'migratingDone' | 'migratingFailed' | 'closed'\n}\n\n\nexport type JItemInfo = {\n\tsrcUri: srcUri\n\tcPbs: JItemSsError[]\n}\n\nexport type JItemSsError = {\n\tty: 'Error' | 'Warning'\n\tcode: string\n\tmsg: string\n\tdetails?: string\n}\n\n/** Liste de skinsets d'un WSP **/\nexport type JSkinSets = {\n\teditMode: \"white\" | \"black\"\n\tskinSets: JSkinSetEntry[]\n}\n\nexport type JSkinSetEntry = {\n\tcode: string\n\tversion: number\n\ttitle: string\n\tselected: boolean\n}\n\n/** Msgs du serveur pour la house slave. */\nexport type JMoanServerMsg = {\n\tsvc: 'moan'\n\thouseId: wspRef\n\ttype: 'initSlaveRep'\n}\n\n/**\n *\n */\nexport namespace WSP {\n\n\texport function buildWspUri(wspCd: wspCd, srcUri: srcUri): wspUri {return wspCd + srcUri}\n\n\texport function buildWspId(wspCd: wspCd, srcId: srcId): wspId {return wspCd + \"/\" + srcId}\n\n\texport function buildWspRef(wspCd: wspCd, ident: JSrcIdent | srcRef): wspRef {\n\t\tif (typeof ident === 'string') return SRC.isSrcId(ident) ? buildWspId(wspCd, ident) : buildWspUri(wspCd, ident);\n\t\treturn ident.srcId ? buildWspId(wspCd, ident.srcId) : buildWspUri(wspCd, ident.srcUri);\n\t}\n\n\texport function isWspUriRoot(wspUri: wspUri): boolean {return wspUri && wspUri.indexOf('/') < 0}\n\n\n\texport function extractWspCdFromWspRef(wspRef: wspRef): wspCd {\n\t\tif (!wspRef) return null;\n\t\tconst end = wspRef.indexOf('/');\n\t\tif (end > 0) return wspRef.substring(0, end);\n\t\treturn end < 0 ? wspRef : null;\n\t}\n\n\texport function extractSrcRefFromWspRef(wspRef: wspRef): srcRef {\n\t\tif (!wspRef) return null;\n\t\tconst start = wspRef.indexOf('/');\n\t\tif (start > 0) {\n\t\t\tconst srcRef = wspRef.substring(start + 1);\n\t\t\tif (SRC.isSrcId(srcRef)) return srcRef;\n\t\t\treturn wspRef.substring(start);\n\t\t}\n\t\tif (start == 0) return null; //anomalie : pas de wspCd !\n\t\treturn SRC.URI_ROOT;\n\t}\n\n\t/** Tri d'une liste d'ateliers par ordre de profondeur (DRV, DRF/DRF, ...) croissante **/\n\texport function sortWspsByDeep(wsps: Wsp[]): Wsp[] {\n\t\t//console.log(\"INI ::: \", wsps);\n\t\tlet wspsDeep: Map<string, number> = new Map<string, number>();\n\n\t\tfunction computeDeep(wspCode: string): number {\n\t\t\tif (wspsDeep.has(wspCode))\n\t\t\t\treturn wspsDeep.get(wspCode);\n\t\t\telse {\n\t\t\t\tlet wsp: Wsp = wsps.find((entry) => entry.code === wspCode);\n\t\t\t\tlet wspDeep = 0;\n\t\t\t\tif (wsp) {\n\t\t\t\t\tlet infoWsp = wsp.infoWsp || wsp.infoWspError;\n\t\t\t\t\tif (infoWsp.props.drfRefWsp)\n\t\t\t\t\t\twspDeep = computeDeep(infoWsp.props.drfRefWsp) + 1;\n\t\t\t\t\telse if (infoWsp.props.drvMasterWsp)\n\t\t\t\t\t\twspDeep = computeDeep(infoWsp.props.drvMasterWsp) + 1;\n\t\t\t\t}\n\t\t\t\twspsDeep.set(wspCode, wspDeep);\n\t\t\t\treturn wspDeep;\n\t\t\t}\n\t\t}\n\n\t\twsps.forEach((entry) => {computeDeep(entry.code)});\n\t\twsps.sort((a, b): number => {\n\t\t\treturn wspsDeep.get(a.code) - wspsDeep.get(b.code);\n\t\t});\n\t\t//console.log(\"SORTED ::: \", wsps);\n\t\treturn wsps;\n\t}\n\n\texport function defaultWspOpenMode(reg: IReg<IChainEnv>): 'wspApp' | 'wspDocApp' | null {\n\t\tif (reg.getUserData(\"wspAppPrefered\")) {\n\t\t\tif (reg.hasPerm(\"ui.wspApp\")) return 'wspApp';\n\t\t\tif (reg.hasPerm(\"ui.wspDocApp\")) return 'wspDocApp';\n\t\t} else {\n\t\t\tif (reg.hasPerm(\"ui.wspDocApp\")) return 'wspDocApp';\n\t\t\tif (reg.hasPerm(\"ui.wspApp\")) return 'wspApp';\n\t\t}\n\t\treturn null;\n\t}\n\n\texport function alternateWspOpenMode(reg: IReg<IChainEnv>): 'wspApp' | 'wspDocApp' | null {\n\t\tif (reg.getUserData(\"wspAppPrefered\")) {\n\t\t\tif (reg.hasPerm(\"ui.wspDocApp\")) return 'wspDocApp';\n\t\t\tif (reg.hasPerm(\"ui.wspApp\")) return 'wspApp';\n\t\t} else {\n\t\t\tif (reg.hasPerm(\"ui.wspApp\")) return 'wspApp';\n\t\t\tif (reg.hasPerm(\"ui.wspDocApp\")) return 'wspDocApp';\n\t\t}\n\t\treturn null;\n\t}\n\n\tinterface JListWsp {\n\t\twspProvider: JWspProviderProps\n\t\twsps: JWspInfoInList[]\n\t}\n\n\texport async function listWsps(wspServer: WspSrv, options?: {\n\t\tinTrash?: boolean\n\t\twithWspSrcSpecifiedRoles?: boolean\n\t\tfields?: ESrcField[]\n\t}): Promise<JListWsp> {\n\t\tlet qs: string;\n\t\tif (options) {\n\t\t\tconst opts: string[] = [];\n\t\t\tif (options.fields) opts.push(\"fields\", options.fields.join('*'));\n\t\t\tif (options.withWspSrcSpecifiedRoles) opts.push(\"withWspSrcSpecifiedRoles\", \"true\");\n\t\t\tqs = IO.qs(\"cdaction\", options.inTrash ? \"ListTrash\" : \"List\", ...opts);\n\t\t} else {\n\t\t\tqs = \"?cdaction=List\";\n\t\t}\n\t\treturn wspServer.config.adminWspUrl.fetchJson<JListWsp>(qs);\n\t}\n\n\texport async function fetchInfoWspProvider(wspServer: WspSrv): Promise<JWspProviderProps> {\n\t\treturn wspServer.config.adminWspUrl.fetchJson(IO.qs(\"cdaction\", \"InfoWspProvider\"));\n\t}\n\n\t/**\n\t * Exporte la config des affectations de rôles cet entrepot : groupes, users, ateliers et espaces\n\t * @param wspServer\n\t */\n\texport async function fetchExportAssignedRoles(wspServer: WspSrv, options?: {\n\t\twithWspSrcSpecifiedRoles?: boolean\n\t\tfields?: ESrcField[]\n\t}): Promise<JWspProviderRolesSet> {\n\t\tconst opts: string[] = [];\n\t\tif (options?.fields) opts.push(\"fields\", options.fields.join('*'));\n\t\tif (options?.withWspSrcSpecifiedRoles) opts.push(\"withWspSrcSpecifiedRoles\", \"true\");\n\n\t\treturn wspServer.config.adminWspUrl.fetchJson(IO.qs(\"cdaction\", \"ExportAssignedRoles\", ...opts));\n\t}\n\n\texport async function fetchSrc(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef, fields: ESrcField[]): Promise<JSrcFields> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"fields\", fields.join(\"*\")));\n\t}\n\n\texport async function fetchSrcs(wsp: Wsp, uiContext: HTMLElement, refUris: srcRef[], fields: string | ESrcField[]): Promise<(JSrcFields | null)[]> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst data = new FormData();\n\t\tdata.append(\"refUris\", refUris.join('\\t'));\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson<JSrcFields[]>(IO.qs(\"param\", wsp.code, \"fields\", Array.isArray(fields) ? fields.join('*') : fields), {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data\n\t\t});\n\t}\n\n\texport async function fetchShortDesc(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef): Promise<JSrcFields> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"fields\", wsp.getShortDescDef()))\n\t}\n\n\texport function fetchShortDescs(wsp: Wsp, uiContext: HTMLElement, ...refUris: srcRef[]): Promise<(JSrcFields | null)[]> {\n\t\treturn fetchSrcs(wsp, uiContext, refUris, wsp.getShortDescDef());\n\t}\n\n\texport function fetchShortDescsSubItems(wsp: Wsp, uiContext: HTMLElement, ...refUris: srcRef[]): Promise<(JSrcFields | null)[]> {\n\t\treturn fetchSrcs(wsp, uiContext, refUris, wsp.getShortDescDef() + \"*itSubItems\");\n\t}\n\n\texport async function fetchShortDescSubItems(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef): Promise<JSrcFields> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"fields\", wsp.getShortDescDef() + \"*itSubItems\"))\n\t}\n\n\texport async function fetchLongDesc(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef): Promise<JSrcFields> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"fields\", wsp.getLongDescDef()))\n\t}\n\n\texport function fetchLongDescs(wsp: Wsp, uiContext: HTMLElement, ...refUris: srcRef[]): Promise<(JSrcFields | null)[]> {\n\t\treturn fetchSrcs(wsp, uiContext, refUris, wsp.getLongDescDef());\n\t}\n\n\texport async function fetchShortDescTree(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef, depth: number = 1): Promise<JSrcFieldsTree> {\n\t\treturn fetchSrcTree(wsp, uiContext, refUri, depth, wsp.getShortDescDef());\n\t}\n\n\texport async function fetchSrcTree(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef, depth: number, fields: string | ESrcField[]): Promise<JSrcFieldsTree> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"depth\", depth, \"fields\", Array.isArray(fields) ? fields.join('*') : fields))\n\t}\n\n\texport async function fetchShortDescSubTree(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef, targets: srcRef | srcRef[]): Promise<JSrcFieldsTree> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tif (Array.isArray(targets)) targets = targets.join(';');\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"targets\", targets, \"fields\", wsp.getShortDescDef()))\n\t}\n\n\texport async function fetchItemInfo(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef): Promise<JItemInfo> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson<JItemInfo>(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"format\", \"itemInfo\"))\n\t}\n\n\t/** @return path fileSystem de la ressource (accessible uiniquement dans le mode \"universe.locale\", et FS) */\n\texport async function fetchFilePath(wsp: Wsp, uiContext: HTMLElement, refUri: srcRef): Promise<string> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tif (wsp.reg.env.universe.config.local && wsp.reg.env.universe.config.backEnd == \"fs\")\n\t\t\treturn wsp.wspServer.config.wspSrcUrl.fetchText(IO.qs(\"param\", wsp.code, \"refUri\", refUri, \"format\", \"filePath\"));\n\t}\n\n\t/**\n\t * <pre>\n\t * [request]\n\t *  [select resultType=\"entries|count\" max=\"200\" startOffset=\"\"]\n\t *    [column dataKey=\"...\"/]\n\t *    [column dataKey=\"...\" name=\"\" /]\n\t *    ...\n\t *    [column name=\"...\" func=\"...\"]...[/column]\n\t *  [/select]\n\t *  [where]\n\t *    [exp type=\"...\"]...[/exp]\n\t *    [and]...[/and]\n\t *    [or]...[/or]\n\t *    [not]...[/not]\n\t *  [/where]\n\t * [/request]\n\t * </pre>\n\t *\n\t */\n\texport async function fetchSearch(wsp: Wsp, uiContext: HTMLElement, req: string): Promise<{ columns: string[], results: any[][] }> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"Search\", \"param\", wsp.code);\n\t\treturn wsp.wspServer.config.searchUrl.fetchJson<any>(qs, {method: \"POST\", body: req});\n\t}\n\n\texport async function fetchSearchJson<T>(wsp: Wsp, uiContext: HTMLElement, req: string): Promise<T[]> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"Search\", \"param\", wsp.code, \"format\", 'json');\n\t\treturn wsp.wspServer.config.searchUrl.fetchJson<any>(qs, {method: \"POST\", body: req});\n\t}\n\n\texport async function fetchSearchCount(wsp: Wsp, uiContext: HTMLElement, req: string): Promise<number> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"Search\", \"param\", wsp.code);\n\t\treturn Number.parseInt(await wsp.wspServer.config.searchUrl.fetchText(qs, {method: \"POST\", body: req}));\n\t}\n\n\texport async function fetchSearchCsv(wsp: Wsp, uiContext: HTMLElement, req: string): Promise<string> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"Search\", \"param\", wsp.code, \"format\", 'csv');\n\t\treturn wsp.wspServer.config.searchUrl.fetchText(qs, {method: \"POST\", body: req});\n\t}\n\n\texport async function fetchSearchScWsp(wsp: Wsp, uiContext: HTMLElement, req: string): Promise<Blob> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"Search\", \"param\", wsp.code, \"format\", 'scwsp');\n\t\treturn wsp.wspServer.config.searchUrl.fetchBlob(qs, {method: \"POST\", body: req});\n\t}\n\n\t/** Récupère le srcId d'une uri en forçant au besoin sa création (besoin pour édition des méta dans les items par ex...). */\n\texport async function fetchSrcId(wsp: Wsp, uiContext: HTMLElement, srcUri: srcUri, force: boolean): Promise<srcUri> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn (await wsp.wspServer.config.wspSrcUrl.fetchJson<JSrcFields>(IO.qs(\"param\", wsp.code, \"refUri\", srcUri, \"fields\", \"srcId\", \"forceId\", force ? \"\" : undefined))).srcId;\n\t}\n\n\t/** Interroge un agent d'une gen et retourne le résultat */\n\texport async function fetchAskAgt(wsp: Wsp, uiContext: HTMLElement, genCode: string, dialogPath: string): Promise<Document> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspAgtUrl.fetchDom(IO.qs(\"cdaction\", \"Ask\", \"param\", wsp.code, \"contextCode\", genCode, \"dialogPath\", dialogPath));\n\t}\n\n\t// export async function fetchSrcUri(wsp: Wsp, srcId: srcId): Promise<srcUri> {\n\t// \treturn (await wsp.wspServer.config.wspSrcUrl.fetchJson<JSrcFields>(IO.qs(\"param\", wsp.code, \"refUri\", srcId, \"fields\", \"srcUri\"))).srcUri;\n\t// }\n\t//\n\t// export async function fetchSrcIdentFromWspRef(wspServer: WspServer, wspRef: wspRef): Promise<JSrcIdent> {\n\t// \treturn (await wspServer.config.wspSrcUrl.fetchJson<JSrcFields>(IO.qs(\"param\", WSP.extractWspCdFromWspRef(wspRef), \"refUri\", WSP.extractSrcRefFromWspRef(wspRef), \"fields\", \"srcUri*srcId\")));\n\t// }\n\n\texport async function fetchStreamJson<R>(wsp: Wsp, uiContext: HTMLElement | null, refUri: srcRef, transform?: string): Promise<R> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson<R>(IO.qs(\"format\", \"stream\", \"param\", wsp.code, \"probeContentType\", \"true\", \"transform\", transform, \"refUri\", refUri));\n\t}\n\n\texport async function fetchStreamText(wsp: Wsp, uiContext: HTMLElement | null, refUri: srcRef, transform?: string): Promise<string> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchText(IO.qs(\"format\", \"stream\", \"param\", wsp.code, \"probeContentType\", \"true\", \"transform\", transform, \"refUri\", refUri));\n\t}\n\n\texport async function fetchStreamDom(wsp: Wsp, uiContext: HTMLElement | null, refUri: srcRef, transform?: string): Promise<Document> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchDom(IO.qs(\"format\", \"stream\", \"param\", wsp.code, \"probeContentType\", \"true\", \"transform\", transform, \"refUri\", refUri));\n\t}\n\n\texport function getStreamUrl(wsp: Wsp, refUri: srcRef, transform?: string): IEndPoint {\n\t\treturn wsp.wspServer.config.wspSrcUrl.resolve(IO.qs(\"format\", \"stream\", \"param\", wsp.code, \"probeContentType\", \"true\", \"transform\", transform, \"refUri\", refUri));\n\t}\n\n\t/** Ajout d'une empreinte du fichier courant dans l'URL pour invalider le cache local du navigateur. */\n\texport function getStreamStampedUrl(wsp: Wsp, refUri: srcRef, stamp: string | number, transform?: string): string {\n\t\treturn wsp.wspServer.config.wspSrcUrl.resolve(IO.qs(\"format\", \"stream\", \"param\", wsp.code, \"probeContentType\", \"true\", \"transform\", transform, \"refUri\", refUri, \"srcTrashed\", \"false\", \"stamp\", stamp)).url;\n\t}\n\n\texport async function fetchDiff(wsp: Wsp, uiContext: HTMLElement, baseRef: srcRef, candidateWspCd: wspCd, candidateRef: srcRef | ESpecialCandidateUri): Promise<Document> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"GetDiff\", \"goal\", \"diff4xed\", \"param\", wsp.code, \"candidateWspCd\", candidateWspCd, \"baseRefUri\", baseRef, \"candidateRefUri\", candidateRef);\n\t\treturn wsp.wspServer.config.diffUrl.fetchDom(qs);\n\t}\n\n\texport type ESpecialCandidateUri = \"special:drf:ref\" | \"special:drv:default\" | \"special:drv:done\" | \"special:drv:default:done\";\n\n\texport async function fetchHistory(wsp: Wsp, uiContext: HTMLElement, srcRefLive: srcRef, fields?: string | ESrcField[]): Promise<JSrcHistNodes> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.historyUrl.fetchJson<JSrcHistNodes>(IO.qs(\"cdaction\", \"ListHistoryNodes\", \"param\", wsp.code, \"refUriLive\", srcRefLive, \"fields\", Array.isArray(fields) ? fields.join('*') : fields || wsp.getShortDescDef()));\n\t}\n\n\texport async function fetchSrcTrashed(wsp: Wsp, uiContext: HTMLElement, folder: srcRef, fields?: string | ESrcField[]): Promise<JSrcHistNodes> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.historyUrl.fetchJson<JSrcHistNodes>(IO.qs(\"cdaction\", \"ListTrashedNodes\", \"param\", wsp.code, \"refUriLive\", folder, \"fields\", Array.isArray(fields) ? fields.join('*') : fields || wsp.getShortDescDef()));\n\t}\n\n\texport async function createWsp(wspServer: WspSrv, params: JWspCreateParamsFS | JWspCreateParamsDB | JWspCreateParamsDB_DRF | JWspCreateParamsDB_DRV, wspType: JWspTypeInst, normalizeWspType?: boolean): Promise<Wsp>;\n\texport async function createWsp(wspServer: WspSrv, params: any, wspType: JWspTypeInst, normalizeWspType?: boolean): Promise<Wsp>;\n\texport async function createWsp(wspServer: WspSrv, params: any, wspType: JWspTypeInst, normalizeWspType: boolean = false): Promise<Wsp> {\n\t\tconst initReq = {method: \"PUT\", body: DOM.ser(WSPMETA.toWspTypeDom(wspType))} as RequestInit;\n\t\tconst qs = IO.qs(\"cdaction\", \"CreateWsp\", \"createParams\", CDM.stringify(params), \"normaliseWspType\", normalizeWspType);\n\t\tconst infoWsp = await wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(qs, initReq);\n\t\treturn new Wsp(wspServer, infoWsp.wspCd, infoWsp);\n\t}\n\n\texport async function importWsp(wspServer: WspSrv, params: JWspCreateParamsFS | JWspCreateParamsDB | JWspCreateParamsDB_DRF | JWspCreateParamsDB_DRV, scwsp: IBody, normalizeWspType?: boolean): Promise<Wsp>;\n\texport async function importWsp(wspServer: WspSrv, params: any, scwsp: IBody, normalizeWspType?: boolean): Promise<Wsp>;\n\texport async function importWsp(wspServer: WspSrv, params: any, scwsp: IBody, normalizeWspType: boolean = false): Promise<Wsp> {\n\t\tconst initReq = {} as RequestInit;\n\t\tinitReq.method = \"POST\";\n\t\tinitReq.body = scwsp as any; //bug ts2.7 oubli URLSearchParams\n\t\tconst qs = IO.qs(\"cdaction\", \"CreateWspImport\", \"createParams\", CDM.stringify(params), \"normaliseWspType\", normalizeWspType);\n\t\tconst infoWsp = await wspServer.config.adminWspUrl.fetchJson<JInfoWsp>(qs, initReq);\n\t\treturn new Wsp(wspServer, infoWsp.wspCd, infoWsp);\n\t}\n\n\t/** retourne true si un wspMeta existe déjà dans le répertoire de cet atelier à créer */\n\texport async function fetchExistWspFsOnPath(wspServer: WspSrv, wspCode: string, contentPath?: string): Promise<JWspTypeInst | null> {\n\t\tconst resp = await wspServer.config.adminWspFsUrl.fetchJson<JInfoWsp>(IO.qs(\"cdaction\", \"CheckWspOnPath\", \"param\", wspCode, \"contentPath\", contentPath));\n\t\tif ((resp.status as any) === 'noActiveWsp')\n\t\t\treturn resp;\n\t}\n\n\texport async function createSpaceOrFolder(wsp: Wsp, fromPlace: WspsLivePlace | null, uiContext: HTMLElement, srcUri: srcUri): Promise<JSrcFields> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst newSrc = await wsp.wspServer.config.wspSrcUrl.fetchJson<JSrcFields>(IO.qs(\"cdaction\", \"PutSrc\", \"param\", wsp.code, \"asFolder\", \"true\", \"clId\", wsp.wspServer.chain.clId, \"refUri\", srcUri, \"fields\", wsp.getShortDescDef()), {method: \"POST\"});\n\t\tif (ITEM.getSrcUriType(newSrc.srcUri) === \"res\") {\n\t\t\tconst itemFields = await wsp.fetchShortDesc(ITEM.extractItemUri(newSrc.srcUri));\n\t\t\twsp.wspServer.wspsLive.dispatchLocalChange(fromPlace, wsp, itemFields, EWspChangesEvts.u, itemFields);\n\t\t} else {\n\t\t\twsp.wspServer.wspsLive.dispatchLocalChange(fromPlace, wsp, newSrc, EWspChangesEvts.u, newSrc);\n\t\t}\n\t\treturn newSrc;\n\t}\n\n\t/** Recherche d'une refUri inexistante */\n\texport async function findNewRefUri(wsp: Wsp, candidateSrcUriConstructor: (cnt: number) => srcUri | null, maxChecks = 1000): Promise<srcUri | null> {\n\t\tlet cnt: number = 0;\n\t\tlet target: srcUri;\n\t\twhile (!target && cnt < maxChecks) {\n\t\t\tconst candidate: srcUri = candidateSrcUriConstructor(cnt);\n\t\t\tif (!candidate) return;\n\t\t\tconst node = await WSP.fetchSrcTree(wsp, null, candidate, 0, [\"srcSt\"]);\n\t\t\tif (node.srcSt != ESrcSt.none)\n\t\t\t\tcnt++;\n\t\t\telse\n\t\t\t\treturn (candidate)\n\t\t}\n\t}\n\n\t/** Retourne les srcUri résultant de la copie (utile si renommages à la volée en cas de conflit de noms dans l'espace cible). */\n\texport async function srcCopyTo(wsp: Wsp, uiContext: HTMLElement, sources: srcRef[], newParentUri: srcRef): Promise<srcUri[]> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst fd = new FormData();\n\t\tfd.append(\"refUris\", sources.join('\\t'));\n\t\tconst srcUris = await wsp.wspServer.config.wspSrcUrl.fetchText(IO.qs(\"cdaction\", \"CopyTo\", \"param\", wsp.code, \"refUri\", newParentUri), {method: \"POST\", body: fd});\n\t\treturn srcUris.split('\\t');\n\t}\n\n\t/** Retourne les srcUri résultant du déplacement (utile si renommages à la volée en cas de conflit de noms dans l'espace cible). */\n\texport async function srcMoveTo(wsp: Wsp, uiContext: HTMLElement, sources: srcRef[], newParentUri: srcRef): Promise<srcUri[]> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst fd = new FormData();\n\t\tfd.append(\"refUris\", sources.join('\\t'));\n\t\tconst srcUris = await wsp.wspServer.config.wspSrcUrl.fetchText(IO.qs(\"cdaction\", \"MoveTo\", \"param\", wsp.code, \"refUri\", newParentUri), {method: \"POST\", body: fd});\n\t\treturn srcUris.split('\\t');\n\t}\n\n\texport async function srcMove(wsp: Wsp, uiContext: HTMLElement, from: srcRef, newUri: srcUri): Promise<void> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchVoid(IO.qs(\"cdaction\", \"Move\", \"param\", wsp.code, \"refUri\", newUri, \"refUris\", from), {method: \"POST\"});\n\t}\n\n\texport async function srcRename(wsp: Wsp, uiContext: HTMLElement, from: JSrcIdent, newCode: string): Promise<srcUri> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst newUri = SRC.addLeafToUri(SRC.extractUriParent(from.srcUri), newCode);\n\t\tawait wsp.wspServer.config.wspSrcUrl.fetchVoid(IO.qs(\"cdaction\", \"Rename\", \"param\", wsp.code, \"refUri\", newUri, \"refUris\", from.srcUri), {method: \"POST\"});\n\t\treturn newUri;\n\t}\n\n\texport async function srcDuplicate(wsp: Wsp, uiContext: HTMLElement, from: JSrcIdent, newCode: string): Promise<srcUri> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst newUri = SRC.addLeafToUri(SRC.extractUriParent(from.srcUri), newCode);\n\t\tawait wsp.wspServer.config.wspSrcUrl.fetchVoid(IO.qs(\"cdaction\", \"Duplicate\", \"param\", wsp.code, \"refUri\", newUri, \"refUris\", from.srcUri), {method: \"POST\"});\n\t\treturn newUri;\n\t}\n\n\texport async function srcDelete(wsp: Wsp, uiContext: HTMLElement, refUris: srcRef[]): Promise<void> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst fd = new FormData();\n\t\tfd.append(\"refUris\", refUris.join('\\t'));\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchVoid(IO.qs(\"cdaction\", \"Delete\", \"param\", wsp.code), {method: \"POST\", body: fd});\n\t}\n\n\texport async function srcRestore(wsp: Wsp, uiContext: HTMLElement, srcRefs: srcRef[]): Promise<void> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst fd = new FormData();\n\t\tfd.append(\"srcUris\", srcRefs.join('\\t'));\n\t\treturn wsp.wspServer.config.historyUrl.fetchVoid(IO.qs(\"cdaction\", \"RestoreTrashed\", \"param\", wsp.code), {method: \"POST\", body: fd});\n\t}\n\n\texport async function srcDeletePermanently(wsp: Wsp, uiContext: HTMLElement, srcUris: srcRef[]): Promise<void> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst fd = new FormData();\n\t\tfd.append(\"srcUris\", srcUris.join('\\t'));\n\t\treturn wsp.wspServer.config.historyUrl.fetchVoid(IO.qs(\"cdaction\", \"DeletePermanently\", \"param\", wsp.code), {method: \"POST\", body: fd});\n\t}\n\n\texport async function srcSetRoles(wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef, specifiedRoles: JUserSpecifiedRolesMap): Promise<JUserRolesMap> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"SetSpecifiedRoles\", \"param\", wsp.code, \"refUri\", srcRef, \"options\", CDM.stringify(specifiedRoles));\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(qs, {method: \"POST\"});\n\t}\n\n\t/** Roles actuellement affectés sur l'objet srcRef */\n\texport async function srcGetRoles(wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef): Promise<JUserRolesMap> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"GetSrc\", \"param\", wsp.code, \"format\", \"specifiedRoles\", \"refUri\", srcRef);\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(qs);\n\t}\n\n\t/** Roles des users passés en argument sur l'objet srcRef */\n\texport async function srcGetRolesForAccounts(wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef, pAccounts: string[]): Promise<JUserRolesMap> {\n\t\tif (!pAccounts || pAccounts.length == 0) return {};\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"GetSrc\", \"param\", wsp.code, \"format\", \"specifiedRoles\", \"refUri\", srcRef, \"forUser\", pAccounts.join(\"\\t\"));\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchJson(qs);\n\t}\n\n\texport async function srcUpdateFields(wsp: Wsp, uiContext: HTMLElement, srcRef: srcRef, fields: JSrcFields): Promise<void> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\tconst qs = IO.qs(\"cdaction\", \"UpdateFields\", \"param\", wsp.code, \"refUri\", srcRef, \"options\", CDM.stringify(fields));\n\t\treturn wsp.wspServer.config.wspSrcUrl.fetchVoid(qs, {method: \"POST\"});\n\t}\n\n\n\t/** Vérifie l'existance d'un svc de l'atelier **/\n\texport async function checkWspSvc(wsp: Wsp, uiContext: HTMLElement, svcCode: string): Promise<boolean> {\n\t\tconst resp = await wsp.wspServer.config.wspSvcExistUrl.resolve(encodeURIComponent(wsp.code) + \"/\" + svcCode).fetch();\n\t\treturn resp.ok;\n\t}\n\n\t/** [SvcSkinSet] SkinSet disponibles pour cet atelier **/\n\texport async function skinSetsList(wsp: Wsp, uiContext: HTMLElement, lang?: string): Promise<JSkinSets> {\n\t\tif (!wsp.isAvailable) await wsp.waitForAvailable(uiContext);\n\t\treturn await wsp.wspServer.config.wspSvcSkinSet(wsp.code).fetchJson(IO.qs(\"cdaction\", \"ListSkinSets\", \"lang\", lang));\n\t}\n\n\t/** [SvcSkinSet] : Icone d'un skinSet, ou d'un skin d'une skinClass **/\n\texport function skinSetsIconUrl(wsp: Wsp, skinCode: string, skinClass?: string): string {\n\t\treturn wsp.wspServer.config.wspSvcSkinSet(wsp.code).resolve(IO.qs(\"cdaction\", \"GetIcon\", \"skinCode\", skinCode, \"skinClass\", skinClass)).url;\n\t}\n\n\t/** Trouve le Reg ancêtre de niveau Wsp, sans autre surcharge.*/\n\texport function findWspReg(reg: IReg<IWspUiEnv>): IReg<IWspUiEnv> {\n\t\twhile (reg && reg.parentReg && reg.parentReg.env.wsp) reg = reg.parentReg;\n\t\treturn reg;\n\t}\n\n\t/** [SvcAdminWsp] RemoveCache **/\n\texport async function removeCache(wsp: Wsp): Promise<void> {\n\t\treturn await wsp.wspServer.config.adminWspUrl.fetchVoid(IO.qs(\"cdaction\", \"RemoveCache\", \"param\", wsp.code), {method: \"POST\"});\n\t}\n\n\t/** [SvcAdminWsp] ReloadWsp **/\n\texport async function reloadWsp(wsp: Wsp): Promise<void> {\n\t\treturn await wsp.wspServer.config.adminWspUrl.fetchVoid(IO.qs(\"cdaction\", \"ReloadWsp\", \"param\", wsp.code), {method: \"POST\"});\n\t}\n}\n\nclass FetchSrcDescPending {\n\tpromise: Promise<JSrcFields | null>;\n\tresolve: (value: JSrcFields | null) => void\n\treject: (e: any) => void\n\tsrcRefSub: srcRefSub\n\n\tconstructor(bulk: FetchSrcDescBulk, srcRefSub: srcRefSub, public withSubItem: boolean) {\n\t\tthis.srcRefSub = srcRefSub;\n\t\tthis.promise = new Promise<JSrcFields | null>((resolve, reject) => {\n\t\t\tthis.resolve = resolve;\n\t\t\tthis.reject = reject;\n\t\t});\n\t\tbulk.set(srcRefSub, this);\n\t}\n}\n\nclass FetchSrcDescBulk extends Map<srcRefSub, FetchSrcDescPending> {\n\tconstructor(public wsp: Wsp, public uiContext: HTMLElement) {\n\t\tsuper();\n\t\tPromise.resolve().then(() => {\n\t\t\tthis.wsp._pendingShortDescs = null;\n\t\t\tconst pendings: FetchSrcDescPending[] = [];\n\t\t\tconst pendingsWSI: FetchSrcDescPending[] = [];\n\t\t\tfor (const p of this.values()) {\n\t\t\t\tif (p.withSubItem) pendingsWSI.push(p)\n\t\t\t\telse pendings.push(p);\n\t\t\t}\n\t\t\tif (pendings.length > 0) WSP.fetchShortDescs(this.wsp, this.uiContext, ...(pendings.map(p => p.srcRefSub))).then((results) => {\n\t\t\t\tfor (let i = 0; i < pendings.length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpendings[i].resolve(results[i]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tERROR.log(\"Fail to resolve one fetch bulk: \" + pendings[i].srcRefSub, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (pendingsWSI.length > 0) WSP.fetchShortDescsSubItems(this.wsp, this.uiContext, ...(pendingsWSI.map(p => p.srcRefSub))).then((results) => {\n\t\t\t\tfor (let i = 0; i < pendingsWSI.length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpendingsWSI[i].resolve(results[i]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tERROR.log(\"Fail to resolve one fetch bulk: \" + pendingsWSI[i].srcRefSub, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}).catch((e) => {\n\t\t\tfor (const p of this.values()) {\n\t\t\t\ttry {p.reject(e)} catch (e) {console.error(e)}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/** LazyLoadung WspMetaUi.createWspMetaUi : optimisation chargement initial et résolution cycles */\nasync function createWspMetaUi(wspServer: WspSrv, wspMeta: JWspTypeInst): Promise<WspMetaUi> {\n\tif (!_createWspMetaUi) _createWspMetaUi = (await import(\"lib/wsp/wspMetaUi.js\")).WspMetaUi.createWspMetaUi;\n\treturn _createWspMetaUi(wspServer, wspMeta);\n}\n\nlet _createWspMetaUi: (wspServer: WspSrv, wspMeta: JWspTypeInst) => Promise<WspMetaUi>;\n"]}