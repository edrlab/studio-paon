{"version":3,"sources":["/@lib@/help/helpLocalDb.tsx"],"names":["HELP","JSX","ERROR","LANG","helpDbs","Map","getHelpLocalDb","source","parent","prefix","db","get","url","HelpLocalDb","set","[object Object]","this","indexes","UNIONDB_SEP_ID","foreignFragIndexes","fragments","undefined","fetchBase","d","fetchJson","log","freeLibs","module","Promise","all","map","p","importJs","initFreeLib","index","HelpFrag","i","HelpIndex","indexKey","id","getFragmentSync","sep","indexOf","startsWith","parseInt","substring","_a","frag","push","crit","result","text","re","RegExp","escape4RegexpFuzzy","score","title","searchInContent","body","found","length","max","sort","r1","r2","key","role","r","Set","values","indexRole","add","getIndexesForSync","filter","fragId","ct","extractRoot","matches","match","c","s","data","helpDb","toString","cls","ti","resolvePaths","titleString","_titleStr","extractTextContent","options","resolve","makeElt","createElement","makeNode","HTMLElement","document","createTextNode","elt","a","att","setAttribute","onclick","ev","openFragId","getAttribute","reg","initialize","ch","appendChild","resolvePathsElt","src","thisDb","members","n","addIndex","addIndexToForeignFrag","HelpIndexNode","deepFetch","f","_parent","root","join"],"mappings":"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","sourcesContent":["import {EHelpIndexRole, HELP, helpId, IHelpDb, IHelpFrag, IHelpIndex, IHelpIndexNode, IHelpPageTplContext, IHelpSearchResults, IHelpTopic, OHelpSearchExp} from \"back/help/helpApi\";\nimport {IEndPoint} from \"lib/commons/io/io\";\nimport {IEltInitable, OSkinableInit} from \"back/commons/basis\";\nimport {JSX} from \"lib/commons/xml/dom\";\nimport {ERROR} from \"lib/core/errorReport\";\nimport {LANG} from \"lib/commons/lang\";\n\nconst helpDbs = new Map();\n\nexport function getHelpLocalDb(source: IEndPoint, parent?: HelpLocalDb, prefix?: string): HelpLocalDb {\n\tlet db = helpDbs.get(source.url);\n\tif (!db) {\n\t\tdb = new HelpLocalDb(source, parent, prefix);\n\t\thelpDbs.set(source.url, db);\n\t}\n\treturn db;\n}\n\nexport class HelpLocalDb implements IHelpDb {\n\n\tsource: IEndPoint;\n\n\tparent: HelpLocalDb | undefined;\n\tprefix: string | undefined;\n\tforeignFragIndexes: Map<helpId, IHelpIndex[]>;\n\n\tfragments: HelpFrag[] | undefined;\n\n\tindexes: Map<string, HelpIndex | HelpIndexNode> = new Map();\n\n\n\t// /** Pour r√©solution de fragId issus de la db parente. */\n\t// globalDb: IHelpDb;\n\n\tconstructor(source: IEndPoint, parent?: HelpLocalDb, prefix?: string) {\n\t\tthis.source = source;\n\t\tif (parent) {\n\t\t\tthis.parent = parent;\n\t\t\tthis.prefix = prefix + HELP.UNIONDB_SEP_ID;\n\t\t\tthis.foreignFragIndexes = new Map();\n\t\t}\n\t}\n\n\tinitIfNeeded(): Promise<this> | this {\n\t\tif (this.fragments === undefined) return this.fetchBase();\n\t\treturn this;\n\t}\n\n\tprotected async fetchBase(): Promise<this> {\n\t\tif (this.fragments === undefined) {\n\t\t\tconst d = await this.source.fetchJson<JHelpDb>();\n\t\t\tif (d == null) {\n\t\t\t\tthis.fragments = [];\n\t\t\t\tERROR.log(\"HelpDb notFound\" + this.source);\n\t\t\t} else {\n\t\t\t\tif (d.freeLibs) {\n\t\t\t\t\tfor (const module of await Promise.all(d.freeLibs.map(p => this.source.importJs(p)))) {\n\t\t\t\t\t\tif (typeof module.initFreeLib === \"function\") await (module as IHelpContentFreeLib).initFreeLib(this.source);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.fragments = d.fragments.map((d, index) => new HelpFrag(d, index, this));\n\t\t\t\tfor (const index of d.indexes) {\n\t\t\t\t\tconst i = new HelpIndex(index, this);\n\t\t\t\t\tthis.indexes.set(i.indexKey, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tasync getFragment(id: helpId | null): Promise<IHelpFrag | undefined> {\n\t\treturn this.getFragmentSync(id);\n\t}\n\n\tgetFragmentSync(id: helpId | null): HelpFrag | null {\n\t\tif (!id) return undefined;\n\t\tconst sep = id.indexOf(HELP.UNIONDB_SEP_ID);\n\t\tif (sep >= 0) {\n\t\t\tif (id.startsWith(this.prefix)) return this.fragments[parseInt(id.substring(sep + 1))];\n\t\t\treturn this.parent?.getFragmentSync(id);\n\t\t}\n\t\treturn this.fragments[parseInt(id)];\n\t}\n\n\taddIndexToForeignFrag(index: IHelpIndex, id: helpId | null): HelpFrag | undefined {\n\t\tconst frag = this.getFragmentSync(id);\n\t\tif (frag) {\n\t\t\tlet indexes = (this.foreignFragIndexes || (this.foreignFragIndexes = new Map())).get(id);\n\t\t\tif (indexes == null) this.foreignFragIndexes.set(id, indexes = []);\n\t\t\tindexes.push(index);\n\t\t}\n\t\treturn frag;\n\t}\n\n\tasync search(crit: OHelpSearchExp): Promise<IHelpSearchResults> {\n\t\tconst result: IHelpSearchResults = [];\n\t\tif (crit.text) {\n\t\t\tconst re = new RegExp(LANG.escape4RegexpFuzzy(crit.text), \"gi\");\n\t\t\tfor (const frag of this.fragments) {\n\t\t\t\tlet score = 0;\n\t\t\t\tif (frag.title) score = this.searchInContent(frag.title, re, null) * 10;\n\t\t\t\tif (frag.body) score += this.searchInContent(frag.body, re, null);\n\t\t\t\tif (score > 0) {\n\t\t\t\t\tresult.push({found: frag, score});\n\t\t\t\t\tif (result.length === crit.max) break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult.sort((r1, r2) => r2.score - r1.score);\n\t\treturn result;\n\t}\n\n\tasync getIndex(key: string): Promise<IHelpIndex | undefined> {\n\t\treturn this.indexes.get(key)\n\t}\n\n\tasync getKeyIndexes(role: EHelpIndexRole): Promise<Set<string>> {\n\t\tconst r = new Set<string>();\n\t\tfor (const index of this.indexes.values()) {\n\t\t\tif (index.indexRole === role) r.add(index.indexKey);\n\t\t}\n\t\treturn r;\n\t}\n\n\tasync getIndexesFor(frag: IHelpFrag): Promise<(IHelpIndex | IHelpIndexNode)[]> {\n\t\treturn this.getIndexesForSync(frag);\n\t}\n\n\tasync getIndexesWithRoleFor(frag: IHelpFrag, indexRole: EHelpIndexRole): Promise<(IHelpIndex | IHelpIndexNode)[]> {\n\t\treturn this.getIndexesForSync(frag).filter((i) => i.indexRole === indexRole);\n\t}\n\n\tprotected getIndexesForSync(frag: IHelpFrag): IHelpIndex[] {\n\t\tif (!this.prefix) return (frag as HelpFrag).indexes;\n\t\tif (frag.fragId.startsWith(this.prefix)) return (frag as HelpFrag).indexes;\n\t\treturn this.foreignFragIndexes.get(frag.fragId) || [];\n\t}\n\n\tprotected searchInContent(ct: JHelpContent, re: RegExp, extractRoot: HTMLElement): number {\n\t\tlet score = 0;\n\t\tif (typeof ct === \"string\") {\n\t\t\tconst matches = ct.match(re);\n\t\t\tif (matches) {\n\t\t\t\tscore = matches.length;\n\t\t\t\tif (extractRoot) {\n\t\t\t\t\t//TODO extract\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (ct.c) for (let i = 0, s = ct.c.length; i < s; i++) {\n\t\t\t\tscore += this.searchInContent(ct.c[i], re, extractRoot);\n\t\t\t}\n\t\t}\n\t\treturn score;\n\t}\n}\n\nclass HelpFrag implements IHelpTopic {\n\tfragId: helpId;\n\tcls: string;\n\ttitle?: JHelpContent;\n\tbody?: JHelpContent;\n\tindexes: (HelpIndex | HelpIndexNode)[] = [];\n\tprotected _titleStr: string;\n\n\tget titleString(): string {\n\t\tif (this._titleStr === undefined) {\n\t\t\tif (this.title) {\n\t\t\t\tthis._titleStr = extractTextContent(this.title);\n\t\t\t} else {\n\t\t\t\tthis._titleStr = \"\"; //pas de titre: plutot un car qui permet de se placer en fin ?\n\t\t\t}\n\t\t}\n\t\treturn this._titleStr;\n\t}\n\n\tconstructor(data: JHelpFragment, index: number, helpDb: HelpLocalDb) {\n\t\tthis.fragId = data.id || helpDb.prefix ? helpDb.prefix + index : index.toString();\n\t\tthis.cls = data.cls || \"tag\";\n\t\tif (data.ti) this.title = this.resolvePaths(data.ti, helpDb.source);\n\t\tif (data.body) this.body = this.resolvePaths(data.body, helpDb.source);\n\t}\n\n\tisTopic(): this is IHelpTopic {return this.title != null}\n\n\thasBody(): boolean {return this.body != null}\n\n\tmakeBody(options: IHelpPageTplContext): Promise<HTMLElement> | null {\n\t\treturn this.body ? Promise.resolve(this.makeElt(this.body, options)) : null;\n\t}\n\n\tmakeTitle(options: IHelpPageTplContext): HTMLElement {\n\t\treturn this.makeElt(this.title, options);\n\t}\n\n\tmakeElt(ct: JHelpContent | null, options: IHelpPageTplContext): HTMLElement {\n\t\tif (ct == null) return <span/>;\n\t\tconst r = this.makeNode(ct, options);\n\t\treturn r instanceof HTMLElement ? r : <span>{r}</span>;\n\t}\n\n\tmakeNode(ct: JHelpContent, options: IHelpPageTplContext): Node {\n\t\tif (typeof ct === \"string\") return document.createTextNode(ct);\n\t\tconst elt = document.createElement(ct[\"\"]);\n\t\tif (ct.a) for (const att in ct.a) {\n\t\t\telt.setAttribute(att, ct.a[att]);\n\t\t\tif (att === \"open-help\") elt.onclick = function (this: HTMLElement, ev: Event) {return options.openFragId(this.getAttribute(\"open-help\"), ev)}\n\t\t}\n\t\tif (ct.i) {\n\t\t\tct.i.reg = options.reg;\n\t\t\t(elt as IEltInitable).initialize(ct.i);\n\t\t\tct.i.reg = null;\n\t\t}\n\t\tif (ct.c) for (const ch of ct.c) elt.appendChild(this.makeNode(ch, options));\n\t\treturn elt;\n\t}\n\n\t/** R√©solution des path dans els attribut des contenus html. */\n\tprotected resolvePaths(ct: JHelpContent, source: IEndPoint): JHelpContent {\n\t\tif (typeof ct === \"object\") this.resolvePathsElt(ct, source);\n\t\treturn ct;\n\t}\n\n\t/** R√©solution des path dans els attribut des contenus html. */\n\tprotected resolvePathsElt(ct: JHelpElt, source: IEndPoint) {\n\t\tif (ct.a?.src) ct.a.src = source.resolve(ct.a.src).url;\n\t\tif (ct.c) for (let i = 0, s = ct.c.length; i < s; i++) {\n\t\t\tconst elt = ct.c[i];\n\t\t\tif (typeof elt === \"object\") this.resolvePathsElt(elt, source);\n\t\t}\n\t}\n\n\taddIndex(index: HelpIndex | HelpIndexNode): this {\n\t\tthis.indexes.push(index)\n\t\treturn this;\n\t}\n}\n\nclass HelpIndex implements IHelpIndex {\n\tindexKey: string;\n\tindexRole: EHelpIndexRole;\n\tprotected members: (IHelpFrag | IHelpIndexNode)[];\n\n\tconstructor(d: JHelpIndex, thisDb: HelpLocalDb) {\n\t\tthis.indexKey = d.indexKey;\n\t\tthis.indexRole = d.indexRole;\n\t\tthis.members = d.members.map((n) => typeof n === \"number\" ? thisDb.fragments[n].addIndex(this) :\n\t\t\ttypeof n === \"string\" ? thisDb.addIndexToForeignFrag(this, n) : new HelpIndexNode(n, this, thisDb));\n\t}\n\n\tasync getMembers(deepFetch?: boolean): Promise<(IHelpFrag | IHelpIndexNode)[]> {return this.members}\n\n\tisTreeNode(): this is IHelpIndexNode {return false}\n}\n\nclass HelpIndexNode implements IHelpIndexNode {\n\tfrag: HelpFrag;\n\t_parent: HelpIndex | HelpIndexNode;\n\n\tmembers: (IHelpFrag | IHelpIndexNode)[];\n\n\tget parent(): IHelpIndexNode | null {return this._parent && \"frag\" in this._parent ? this._parent : null}\n\n\tconstructor(d: JHelpIndexNode, parent: HelpIndex | HelpIndexNode, thisDb: HelpLocalDb/*, globalDb:IHelpDb r√©solution fragId externes. */) {\n\t\tconst f = d.f;\n\t\tthis.frag = typeof f === \"number\" ? thisDb.fragments[f].addIndex(parent) : thisDb.addIndexToForeignFrag(parent, f);\n\t\tthis._parent = parent;\n\t\tthis.members = d.c.map((n) =>\n\t\t\ttypeof n === \"number\" ? thisDb.fragments[n].addIndex(this) :\n\t\t\t\ttypeof n === \"string\" ? thisDb.addIndexToForeignFrag(this, n) : new HelpIndexNode(n, this, thisDb));\n\t}\n\n\tasync getMembers(): Promise<(IHelpFrag | IHelpIndexNode)[]> {return this.members}\n\n\tisTreeNode(): this is HelpIndexNode {return true}\n\n\tget indexKey() {\n\t\tlet root = this._parent;\n\t\twhile (root instanceof HelpIndexNode) root = root._parent;\n\t\treturn root.indexKey;\n\t}\n\n\tget indexRole(): EHelpIndexRole {\n\t\tlet root = this._parent;\n\t\twhile (root instanceof HelpIndexNode) root = root._parent;\n\t\treturn root.indexRole;\n\t}\n}\n\nfunction extractTextContent(ct: JHelpContent): string {\n\tif (typeof ct === \"string\") return ct;\n\tlet r: string[] = []\n\tif (ct.c) for (const ch of ct.c) {\n\t\tr.push(extractTextContent(ch));\n\t}\n\treturn r.join(\"\");\n}\n\n\n/**\n * Sch√©ma JSON de la base.\n */\ninterface JHelpDb {\n\t/** Liste √† plat de toutes les pages d'aide. */\n\tfragments: JHelpFragment[]\n\n\t/** Index des fragments. */\n\tindexes: JHelpIndex[]\n\n\t/** Components custom √† charger. cf IHelpContentFreeLib */\n\tfreeLibs: string[]\n}\n\n/** Fragment en json. */\ninterface JHelpFragment {\n\t/** Id stable custom (pour futur doc d'un mod√®le, pas utilis√© dans builder) */\n\tid?: helpId\n\t/** Classe(s) du fragment */\n\tcls?: string\n\t/** Titre du fragment */\n\tti?: JHelpContent\n\t/** Contenu du fragment */\n\tbody?: JHelpContent\n}\n\n/** Contenu html en json. */\nexport type JHelpContent = JHelpElt | string;\n\n/** El√©ment html en json. */\nexport interface JHelpElt {\n\t/** Obligatoire: Nom du tag. */\n\t\"\": string\n\n\t/** Attributs statiques affect√©s au tag. */\n\ta: Dict<string>\n\n\t/**\n\t * Config du custom tag du framework SC.\n\t * Si renseign√©, this.reg est automatiquement affect√© √† cet objet d'init avant l'appel √† IEltInitable.initialize(init).\n\t */\n\ti?: OSkinableInit\n\n\tc?: JHelpContent[]\n}\n\n/** Index d'une Db. */\ninterface JHelpIndex {\n\t/** Nom de l'index */\n\tindexKey: string\n\t/** Role de cet index */\n\tindexRole: EHelpIndexRole\n\t/** Membres de l'index */\n\tmembers?: (number | JHelpIndexNode | helpId /* fragments √©tragers*/)[]\n}\n\n/** Noeud d'un index de type arbre (plan, structure xml...) */\ninterface JHelpIndexNode {\n\tf: number | helpId /* fragments √©tragers*/\n\tc?: (number | JHelpIndexNode | helpId /* fragments √©tragers*/)[]\n}\n\n/** Api d'un d'une freeLib. */\ninterface IHelpContentFreeLib {\n\t/** Appel√© une et une seule fois. Permet de lier le code free au code de dev-core (via callerSource.resolve()). */\n\tinitFreeLib?(callerSource: IEndPoint): Promise<void>\n}"]}