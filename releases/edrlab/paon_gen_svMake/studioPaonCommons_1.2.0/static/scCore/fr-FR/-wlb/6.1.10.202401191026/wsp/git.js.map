{"version":3,"sources":["/@lib@/wsp/git.ts"],"names":["EGitState","WSP_GIT","getSimpleState","gitSt","undefined","none","insynch","match","conflicting","untracked","ignored","added","missing","removed","modified","changed","Error","st","flag","getGitStateLabel","gitSimpleStates","adding","updating","deleting","conflict"],"mappings":"OAMA,IAAkBA,WAAlB,SAAkBA,WAKjBA,UAAAA,UAAA,SAAA,GAAA;AAEAA,UAAAA,UAAA,WAAA,GAAA;AAKAA,UAAAA,UAAA,eAAA,GAAA;AAEAA,UAAAA,UAAA,aAAA,GAAA;AAEAA,UAAAA,UAAA,WAAA,GAAA;AAEAA,UAAAA,UAAA,SAAA,GAAA;AAEAA,UAAAA,UAAA,WAAA,IAAA;AAEAA,UAAAA,UAAA,YAAA,IAAA;AAEAA,UAAAA,UAAA,WAAA,IAAA;AAEAA,UAAAA,UAAA,WAAA,KAAA,WA1BD,CAAkBA,YAAAA,UAAS;OA+BrB,IAAWC,SAAjB,SAAiBA,SAEhB,SAAgBC,eAAeC,OAC9B,GAAIA,QAAUC,WAAaD,QAAUH,UAAUK,KAAM,MAAO;AAC5D,GAAIF,QAAUH,UAAUM,QAAS,MAAO;AACxC,GAAIC,MAAMJ,MAAOH,UAAUQ,aAAc,MAAO;AAChD,GAAIL,QAAUH,UAAUS,UAAW,MAAO;AAC1C,GAAIN,QAAUH,UAAUU,QAAS,MAAO;AACxC,GAAIH,MAAMJ,MAAOH,UAAUW,OAAQ,MAAO;AAC1C,GAAIJ,MAAMJ,MAAOH,UAAUY,UAAYL,MAAMJ,MAAOH,UAAUa,SAAU,MAAO;AAC/E,GAAIN,MAAMJ,MAAOH,UAAUc,WAAaP,MAAMJ,MAAOH,UAAUe,SAAU,MAAO;AAChF,MAAMC,MAAM,+BAAiCb,OAT9BF,QAAAC,eAAcA;AAY9B,SAAgBK,MAAMU,GAAYC,MAAe,OAAQD,GAAKC,QAAUA,KAAxDjB,QAAAM,MAAKA;AAErB,SAAgBY,iBAAiBF,IAA8B,OAAOG,gBAAgBH,KAAO,GAA7EhB,QAAAkB,iBAAgBA;AAEhC,MAAMC,gBAAkB,CACvBf,KAAQ,+BACRC,QAAW,GACXG,UAAa,8BACbC,QAAW,yCACXW,OAAU,sCACVC,SAAY,yCACZC,SAAY,wCACZC,SAAY,6BA1Bd,CAAiBvB,UAAAA,QAAO","sourcesContent":["import {JSrcFields} from \"lib/wsp/src\";\n\nexport interface JGitSrcFields extends JSrcFields {\n\tgitSt?: number\n}\n\nexport const enum EGitState {\n\n\t//Valeurs NON combinables\n\n\t/** Hors GIT workspace */\n\tnone = -1,\n\t/** File in synch with the index and the tree repo */\n\tinsynch= 0,\n\n\n\t//Valeurs combinables\n\t/** File in conflict */\n\tconflicting= 1,\n\t/** File not ignored, and not in the index */\n\tuntracked= 2,\n\t/** File ignored */\n\tignored= 4,\n\t/** Added to the index, but not in the tree repo */\n\tadded= 8,\n\t/** File changed from tree to index */\n\tchanged= 16,\n\t/** File modified on working filesystem relative to the index */\n\tmodified= 32,\n\t/** File removed from index, but not in tree repo */\n\tremoved= 64,\n\t/** File in index, but not in working filesystem */\n\tmissing= 128\n}\n\nexport type EGitSimpleState = \"none\" | \"insynch\" | \"untracked\" | \"ignored\" | \"adding\" | \"updating\" | \"deleting\" | \"conflict\"\n\nexport namespace WSP_GIT {\n\n\texport function getSimpleState(gitSt: number | undefined): EGitSimpleState {\n\t\tif (gitSt === undefined || gitSt === EGitState.none) return \"none\";\n\t\tif (gitSt === EGitState.insynch) return \"insynch\";\n\t\tif (match(gitSt, EGitState.conflicting)) return \"conflict\";\n\t\tif (gitSt === EGitState.untracked) return \"untracked\";\n\t\tif (gitSt === EGitState.ignored) return \"ignored\";\n\t\tif (match(gitSt, EGitState.added)) return \"adding\";\n\t\tif (match(gitSt, EGitState.missing) || match(gitSt, EGitState.removed)) return \"deleting\";\n\t\tif (match(gitSt, EGitState.modified) || match(gitSt, EGitState.changed)) return \"updating\";\n\t\tthrow Error(\"Unkonwn simple GIT status : \" + gitSt);\n\t}\n\n\texport function match(st: number, flag: number) {return (st & flag) === flag}\n\n\texport function getGitStateLabel(st: EGitSimpleState): string {return gitSimpleStates[st] || \"\"}\n\n\tconst gitSimpleStates = {\n\t\t\"none\": \"Aucun entrepôt Git détecté\",\n\t\t\"insynch\": \"\", //fichier ou dossier, msg pas simple.\n\t\t\"untracked\": \"Fichier non suivi par Git\",\n\t\t\"ignored\": \"Fichier explicitement ignoré par Git\",\n\t\t\"adding\": \"Fichier en cours d'ajout dans Git\",\n\t\t\"updating\": \"Fichier en cours de modification Git\",\n\t\t\"deleting\": \"Fichier en cours de suppression Git\",\n\t\t\"conflict\": \"Fichier en conflit Git\"\n\t}\n}"]}