<!DOCTYPE html>
<!--
Paramètres en QueryString : 
- account : compte pour lequel renouveler le password,
- updateToken : token de mise à jour.
- forwardUrl : [optionnel] url de retour une fois l'opération terminée.
- svcs : code d'un svc de l'extPoints fournissant les paths des services rest à interroger.
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta charset="UTF-8" />
<title>Renouvellement de votre mot de passe - Import</title>

<!-- Librairies -->

					<script>
						CustomElements = { flags: { register: true } }
					</script>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/x-tag.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/commons.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/areas.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/extPoints.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/security.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/root_Perms.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/actions.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/commons/enums.js"/>
				

					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wbk/6.1.10.202401191026/desk/desk_Perms.js"/>
					<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/desk/utils/deskUtils.js"/>
				

<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wbk/6.1.10.202401191026/store/store_Perms.js"/>
<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/store/store.js"/>
<script src="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wlb/6.1.10.202401191026/store/facets.js"/>
				
<script>extPoints.initAsRoot();</script>
<script src="https://studio-paon.edrlab.org/~~static/import/fr-FR/configPublic.js"/>

<!-- Components -->
<link rel="import" href="https://studio-paon.edrlab.org/~~static/scCore/fr-FR/webfrm/-wbk/6.1.10.202401191026/desk/widgets.html" />

<script id="initCtx"><![CDATA[
var vQs = io.parseQueryString(window.location.search);
var vPaths = {
	pwdLostRenew : "/public/u/pwdLost?cdaction=UpdateUser",
	checkPwd : "/public/u/checkPwdWeb"
}
if(vQs.svcs) vPaths = extPoints.getSvc(vQs.svcs);
]]></script>
<script id="load"><![CDATA[//
deskUtils.createDesk(window);
extPoints.addToList("event:load:renewPassword", "init", 1, function() {
	if(vQs.account && vQs.updateToken) {
		sc$("passwordLabel").textContent = i18n.formatStr("Nouveau mot de passe pour \'%s\'.", vQs.account);
		desk.setMsg("Merci de saisir, puis de confirmer votre nouveau mot de passe.");
	} else {
		desk.setError("Nous n\'avons pas reconnu votre identité, l\'URL de cette page obtenue à partir du mail que vous avez reçu est probablement incorrecte. Veuillez faire une nouvelle demande de changement de mot de passe.");
		sc$("fieldset").style.display = "none";
	}
}, 10);

desk.tryRenewPwd = function(){
	if(!desk.checkPwd2()) {
		this.setError("La confirmation du mot de passe est incorrecte, veuillez resaisir votre nouveau mot de passe.");
		return;
	}
	var vReq = io.openHttpRequest(extPoints.getPref("auth.serverUrl") + vPaths.pwdLostRenew, "POST");
	vReq.onloadend = desk.onServerResponse;
	vReq.send(JSON.stringify({account: vQs.account, password: sc$("newPwd").value, updateToken: vQs.updateToken}));
}

desk.checkPwd = function(){
	var vReq = io.openHttpRequest(extPoints.getPref("auth.serverUrl") + vPaths.checkPwd, "POST");
	vReq.onloadend = desk.onServerResponse;
	vReq.send(JSON.stringify({account: vQs.account, password: sc$("newPwd").value, updateToken: vQs.updateToken}));
}

desk.checkPwd2 = function(){
	var vPwd = sc$("newPwd");
	var vPwd2 = sc$("newPwd2");
	if(vPwd.value != vPwd2.value) {
		vPwd2.classList.add("error");
		vPwd2.setAttribute("title", "Cette confirmation ne correspond pas au nouveau mot de passe saisi.");
		return false;
	} else {
		vPwd2.classList.remove("error");
		vPwd2.removeAttribute("title");
		return true;
	}
}

desk.onServerResponse = function (pEvt) {
	try {
		if(pEvt.target.status==200) {
			var vResp = JSON.parse(pEvt.target.responseText);
			desk.showResult(vResp.result, vResp.secondaryResults);
		} else {
			desk.showResult("otherFailure");
		}
	} catch(e) {
		desk.showResult("otherFailure");
		console.log(e);
	}
}

desk.showResult = function (pMainResult, pSecondaryResults) {
	switch (pMainResult) {
		case "ok": //checkPwd
		this.setError("");
		break;
	  case "updated": //pwdLost
		  this.setMsg("Votre nouveau mot de passe a bien été enregistré.");
		  this.setError("");
		  this.disableEdition();
		  if (isRedirectValid(vQs.forwardUrl)) window.location.href = vQs.forwardUrl;
		  break;
	  case "accountNotFound" : //pwdLost
		case "authRejected" :
			this.setError("Ce compte n\'existe pas ou plus, le renouvellement du mot de passe est impossible.");
			break;
		case "accountDisabled" : //pwdLost
			var vTs = pSecondaryResults ? parseInt(pSecondaryResults[0], 10) : 0;
			if (vTs > (Date.now() - 5000)) {
				var vDt = new Date(vTs);
				this.setError(i18n.formatStr("Ce compte a été temporairement désactivé. Il sera de nouveau actif le %s vers %s.", vDt.toLocaleDateString(), vDt.toLocaleTimeString()));
			} else {
				this.setError("Ce compte est désactivé");
			}
			break;
		case "invalidToken" : //pwdLost
			this.setError("Nous n\'avons pas reconnu votre identité, l\'URL de cette page obtenue à partir du mail que vous avez reçu est probablement incorrecte. Veuillez faire une nouvelle demande de changement de mot de passe.");
			this.setMsg("");
			this.disableEdition();
			break;
		case "tooOldToken" : //pwdLost
			this.setError("Votre demande de changement de mot de passe a expiré. Veuillez faire une nouvelle demande.");
			this.setMsg("");
			this.disableEdition();
			break;
		case "failedInvalidDatas" : //checkPwd
			if(pSecondaryResults && pSecondaryResults.msgs && pSecondaryResults.msgs.length > 0) {
				this.setError(pSecondaryResults.msgs[0]);
			} else {
				this.setError("Ce mot de passe est incorrect");
			}
		sc$("newPwd").classList.add("error");
		break;
	  case "otherFailure": //pwdLost, checkPwd
		  this.setError("Le système de validation des mots de passe est indisponible. Recommencez ultérieurement.");
		  break;
	  default:
		  log.debug("authFailed cause unknown : " + pMainResult);
		  this.setError("Le système de validation des mots de passe est indisponible. Recommencez ultérieurement.");
  }
}

function isRedirectValid(r) {
	if (!r) return false;
	if (r.charAt(0) === "/" && r.charAt(1) !== "/") return true; // path absolu dans le domaine => ok (mais pas "//..." qui redéfinit le domaine)
	if (/^http(s)?:\/\//.test(r) || /^\/\//.test(r)) {
		//on limite aux protocole http(s), (exclus javascript: data: ...)
		if (document.location.hostname !== new URL(r, document.baseURI).hostname) return false;
		return true;
	}
	return false;
}

desk.setMsg = function (pMsg) {
	sc$("msg").textContent = pMsg;
}
desk.setError = function (pMsg) {
	sc$("error").textContent = pMsg;
}

desk.disableEdition = function () {
	sc$("fieldset").style.display = "none";
	sc$("boxActions").style.display = "none";
}

//]]></script>
<style>
	body {
		align-items: center;
	}
	fieldset{
		border: none;
	}
	.thinBorder{
		padding : 5px;
	}
	
	#error{
		color: red;
	}
	#msg{
		font-style: italic;
	}

	input.error{
		border: 2px inset red;
	}
	
	#boxActions{
		text-align : right;
	}
	#fieldset > div{
		margin-top : 0.5em;
		display: flex;
		flex-direction: row;
	}
	
	label {
		flex : 1 1 0%;
		margin: 3px;
	}
</style>
</head>

<body is="sc-desk">
	<h1>Import</h1>
	<h2>Renouvellement de votre mot de passe</h2>
	<div class="vbox thinBorder" id="renewPassword">
		<p id="msg"></p>
		<p id="error"></p>
		<fieldset id="fieldset">
			<div>
				<label id="passwordLabel" for="newPwd"/>
				<input id="newPwd" type="password" onfocus="this.classList.remove('error')" onblur="desk.checkPwd(); desk.checkPwd2()" />
			</div>
			<div>
				<label id="confirmLabel" for="newPwd2">Confirmation du nouveau mot de passe</label>
				<input id="newPwd2" type="password" onfocus="this.classList.remove('error')" onblur="desk.checkPwd2()"/>
			</div>
		</fieldset>
		<div id="boxActions">
			<button onclick="desk.tryRenewPwd()">Changer le mot de passe</button>
		</div>
	</div>
</body>
<script>
	deskUtils.launchDesk(window);
</script>

<!-- Skin -->


</html>
