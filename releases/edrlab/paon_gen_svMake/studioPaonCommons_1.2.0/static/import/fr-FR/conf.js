
				import "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/basis_Perms.js"
				import {LANG} from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/lang.js";
				import {Desk} from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/desk.js";
				import * as LITHTML from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/utils/htmlLit.js";
				import { AuthEndPoint, IO, PublicEndPoint } from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/io/io.js";
				import * as ACTIONS from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/actions.js";
				import { DepotUniverse } from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/store/depot.js";
				import { ResType } from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/store/res.js";
				import * as RES_VIEW_AREAS from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wbk/6.1.10.202401191026/store/areas/resViewAreas.js";
				import * as RES_ACTIONS from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wbk/6.1.10.202401191026/store/actions/resActions.js";
				import * as AREAS from "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/areas.js";
			
import "https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/store/store_Perms.js";
export function init(reg, authReg, allPrlRegs, ovrUnivConf){

					
reg.newPerm("~actionsSystem", "admin.UTNode", null);
reg.newPerm("roles.use", "DATA", null);
reg.newPerm("roles.use#set", "roles.use", null);
reg.newPerm("roles.use#show", "roles.use", null);
reg.newPerm("roles.adminSyst", "DATA", null);
reg.newPerm("roles.adminSyst#set", "roles.adminSyst", null);
reg.newPerm("roles.adminSyst#show", "roles.adminSyst", null);
reg.newPerm("role.main:author#set", "roles.use#set", null);
reg.newPerm("role.main:author#show", "roles.use#show", null);
reg.newPerm("role.main:manager#set", "roles.use#set", null);
reg.newPerm("role.main:manager#show", "roles.use#show", null);
reg.newPerm("role.main:admin#set", "roles.adminSyst#set", null);
reg.newPerm("role.main:admin#show", "roles.adminSyst#show", null);
reg.newPerm("role.main:none#set", "roles.use#set", null);
reg.newPerm("role.main:none#show", "roles.use#show", null);
reg.newPerm("role.main:reader#set", "roles.use#set", null);
reg.newPerm("role.main:reader#show", "roles.use#show", null);
reg.addRolePermList([{"role":"~default","priority":0,"allow":["DATA","dialog.adminUser#List"],"deny":["DO","role.main:admin.applyOn.group#show","role.hideWspApp.applyOn.wsp#show","role.hideWspDocApp.applyOn.wsp#show","role.main:admin.applyOn.wsp#show","role.hideWspApp.applyOn.space#show","role.hideWspDocApp.applyOn.space#show","role.main:admin.applyOn.space#show"]}], 21);
reg.addRolePermList([{"role":"main:author","title":"Auteur","sortKey":"20","priority":1,"setPerm":"role.main:author#set","superRole":"main:reader","allow":["write"]}], 21);
reg.addRolePermList([{"role":"main:manager","title":"Gestionnaire fonctionnel","sortKey":"30","priority":1,"setPerm":"role.main:manager#set","superRole":"main:author","allow":["admin"],"deny":["roles.adminSyst#set","admin.props.isHidden.user"]}], 21);
reg.addRolePermList([{"role":"main:system","priority":1,"allow":["adminSyst","deploy","dialog.ping#Ping","admin.liaise","install.skinPack","admin.Container"],"deny":["DO"]}], 21);
reg.addRolePermList([{"role":"main:admin","title":"Administrateur technique","sortKey":"40","priority":1,"setPerm":"role.main:admin#set","superRole":"~default","allow":["DO","~actionsSystem"]}], 21);
reg.addRolePermList([{"role":"main:none","title":"Aucun","sortKey":"1","priority":1,"setPerm":"role.main:none#set","superRole":"main:~fallback"}], 21);
reg.addRolePermList([{"role":"main:reader","title":"Lecteur","sortKey":"10","priority":1,"setPerm":"role.main:reader#set","superRole":"~default","allow":["read","use","server.storeChanges#Listen"],"deny":["ui.app.wspDoc.create.doc","ui.app.wspDoc.change.doc","ui.wspApp","ui.wspsPlg","view.depot"]}], 21);
				
					
reg.addToList("user:roles", "main:author", 21, new Promise(async function(resolve){
const {RoleEditUiHandler} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/roles.js");
resolve(new RoleEditUiHandler("main:author").setLabel("Auteur"));
}),20);
			
reg.addToList("user:roles", "main:manager", 21, new Promise(async function(resolve){
const {RoleEditUiHandler} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/roles.js");
resolve(new RoleEditUiHandler("main:manager").setLabel("Gestionnaire fonctionnel"));
}),30);
			
reg.addToList("user:roles", "main:admin", 21, new Promise(async function(resolve){
const {RoleEditUiHandler} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/roles.js");
resolve(new RoleEditUiHandler("main:admin").setLabel("Administrateur technique"));
}),40);
			
reg.addToList("user:roles", "main:none", 21, new Promise(async function(resolve){
const {RoleEditUiHandler} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/roles.js");
resolve(new RoleEditUiHandler("main:none").setLabel("Aucun"));
}),1);
			
reg.addToList("user:roles", "main:reader", 21, new Promise(async function(resolve){
const {RoleEditUiHandler} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/commons/roles.js");
resolve(new RoleEditUiHandler("main:reader").setLabel("Lecteur"));
}),10);
			
				
					// - clean trashed
					reg.addToList("executor:jobs:factories",
						"md-removeTrashed",
						21,
						new Promise(async (resolve)=>{
							const {RemoveTrashedJobFactory} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/store/jobs.js");
							resolve(new RemoveTrashedJobFactory());
						})
					);
					
					

					
						// - Rebuild ES
						reg.addToList("executor:jobs:factories",
							"md-rebuildEsIndex",
							21,
							new Promise(async (resolve)=>{
								const {RebuildEsIndexJobFactory} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/store/jobs.js");
								let jobFactory = new RebuildEsIndexJobFactory();
								
									
									jobFactory.addChoiceProcessing("folder", "Dossier sans accueil", false);
								
									
									jobFactory.addChoiceProcessing("home", "Dossier avec accueil personnalisé", false);
								
									
									jobFactory.addChoiceProcessing("xml", "XML", false);
								
									
									jobFactory.addChoiceProcessing("epub3", "EPUB 3", false);
								
									
									jobFactory.addChoiceProcessing("data", "Data", false);
								
									
									jobFactory.addChoiceProcessing("archived", "Archivé", false);
								
									
									jobFactory.addChoiceProcessing("reopened", "Archivé - réouvert", false);
								
								
								resolve(jobFactory);
							})
						);
					
					
		
		reg.addToList("executor:jobs:factories",
		"md-remakeAllAsNewContent",
		21,
		new Promise(async (resolve)=>{
		const {ContentAsNewJobFactory} = await import("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/store/jobs.js");
		let jobFactory = new ContentAsNewJobFactory();
		const jobBuilder = jobFactory.getJobBuilder();
		
			jobFactory.addChoiceProcessing("folder", "Dossier sans accueil", false);
		
			jobFactory.addChoiceProcessing("home", "Dossier avec accueil personnalisé", false);
		
			jobFactory.addChoiceProcessing("xml", "XML", false);
		
			jobFactory.addChoiceProcessing("epub3", "EPUB 3", false);
		
			jobFactory.addChoiceProcessing("data", "Data", false);
		
			jobFactory.addChoiceProcessing("archived", "Archivé", false);
		
			jobFactory.addChoiceProcessing("reopened", "Archivé - réouvert", false);
		
		jobBuilder.addBaseJobDatas({cidMetas:{currentJobCode:"md-remakeAllAsNewContent",},});
		jobFactory.addChoiceRebuildVersions(true);
		resolve(jobFactory);
		})
		);
	
		reg.addToList("executor:jobs:factories",
			"reImport2ChainJob",
			21,
			()=>{return new Promise(async (resolve)=>{
				
const {RelaunchCidTaskBaseJobFactory} = await import(reg.env.resolver.resolve(":lib:store/jobs.js").url);
const factory = new RelaunchCidTaskBaseJobFactory("reImport2ChainJob")
const jobBuilder = factory.getJobBuilder();
jobBuilder.addBaseJobDatas({stopAfterFailures: 50,});
factory.setLabel("Ré-importer les contenus dans chain")
						.setJobFactoryCode("reImport2ChainJob")
						.setUiJobSng(["reImport2ChainJob"])
						
resolve(factory)
			})}
		);
	
				
					reg.setPref("plg.code", 101, "import");
					reg.setPref("depot.web.front.url", 101, IO.absoluteUrl("https://studio-paon.edrlab.org/~~static/import/fr-FR/depot.xhtml"));
				
					let universe = new DepotUniverse(Object.assign({
						reg,
						id:"import",
						name:"Import",
						
							packs:null,
						
						
						authSrv:authReg.env.universe.auth,
						adminUsers:authReg.env.universe.config.adminUsers,
						useUsers:authReg.env.universe.config.useUsers,
						executor:{
							
						},
						storeAspects:[
							
							
						],
						
						
						
						urlTree:new AuthEndPoint("https://studio-paon.edrlab.org/~~import/"),
						universeUrl:new AuthEndPoint("https://studio-paon.edrlab.org/~~import/~~write/"),
						libUrl:new PublicEndPoint(IO.absoluteUrl("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wlb/6.1.10.202401191026/")),
						skinUrl:new PublicEndPoint(IO.absoluteUrl("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wsk/6.1.10.202401191026/")),
						backUrl:new PublicEndPoint(IO.absoluteUrl("https://studio-paon.edrlab.org/~~static/scCore/fr-FR/-wbk/6.1.10.202401191026/")),
						frontUrl:new PublicEndPoint(IO.absoluteUrl("https://studio-paon.edrlab.org/~~static/import/fr-FR/")),
						
						wsFrames:{
								ws:{
									keepAlive:"userActive",
								},
						},
					}, ovrUnivConf));
				
let resType
resType = universe.resTypes.setDefaultFolderType(new ResType(reg,"folder",).override("prcLabel","Dossier sans accueil",).override("prcIsFolder",true,).override("prcIsNoContent",true,),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResTabsArea().setTabs(new RES_VIEW_AREAS.ResChildrenArea().setLabel("Contenu",),new RES_VIEW_AREAS.ResFrameArea().setLabel("Rendu",).setActionsLists(["md:viewmain:folder:acts","md:contentres:folder:acts",],),),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,null,)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new RES_ACTIONS.OpenViewRes("",null,"1-open",),)
resType.reg.addToList("md:contentres:folder:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("md:contentres:folder:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Importer un accueil de dossier personnalisé",).setPrcTarget("home",),)
resType = universe.resTypes.addPrcResType(new ResType(reg,"home",).override("prcLabel","Dossier avec accueil personnalisé",).override("prcNoCreator",true,).override("prcIsFolder",true,),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResTabsArea().setTabs(new RES_VIEW_AREAS.ResChildrenArea().setLabel("Contenu",),new RES_VIEW_AREAS.ResFrameArea(".",).setActionsLists(["md:viewmain:home:acts","md:contentres:home:acts",],).setLabel("Rendu",),),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,new RES_ACTIONS.DownloadRes("?V=src","src-dwn",).setLabel(LANG.formatStr("Télécharger \'%s\'",["Sources",],),),)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new RES_ACTIONS.OpenViewRes("",null,"home-open",),)
resType.addShortView("preview",new RES_VIEW_AREAS.ResFrameArea(".",),)
resType.reg.addToList("md:contentres:home:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("actions:depot:resMainView:edit","importRes",21,null,)
resType.reg.addToList("md:contentres:home:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Supprimer l\'accueil de ce dossier",).setPrcTarget("folder",),)
resType = universe.resTypes.addPrcResType(new ResType(reg,"xml",).override("prcLabel","XML",),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResNoContentArea().setActionsLists(["md:viewmain:xml:acts","md:contentres:xml:acts",],),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("isbn",).setArea(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(true,).setPattern(".+",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("uid",).setArea(new AREAS.StringInputArea("uid","text",).setLabel("UID",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("sourceXMLDoctype",).setArea(new AREAS.StringInputArea("sourceXMLDoctype","text",).setLabel("Source",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("title",).setArea(new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("author",).setArea(new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("publisher",).setArea(new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("comment",).setArea(new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("pages",).setArea(new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("source",).setArea(new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statut",).setArea(new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutAud",).setArea(new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutBrl",).setArea(new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("illustrations",).setArea(new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("collection",).setArea(new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalFilename",).setArea(new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalLanguage",).setArea(new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("typeOuvrage",).setArea(new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorAud",).setArea(new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorBrl",).setArea(new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorPivot",).setArea(new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutEmb",).setArea(new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("fileName",).setArea(new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dtdDetail",).setArea(new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateEnd",).setArea(new AREAS.InputArea("dateEnd","time",).setLabel("Date de publication en médiathèque",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateParution",).setArea(new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleAbrege",).setArea(new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleIntegral",).setArea(new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("timestampStatut",).setArea(new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,new ACTIONS.ActionMenuDep().setLabel("Télécharger",).setIcon(resType.reg.env.resolver.resolvePath(":skin:store/views/resViews/downloadRes.svg"),).setActions([new RES_ACTIONS.DownloadRes("","xml-dwn",).setLabel(LANG.formatStr("Télécharger \'%s\'",["Source",],),),new RES_ACTIONS.DownloadRes("?V=dtbook","-freeView-\\portal\\import\\prc\\xml\\xml.processing;114-dwn",).setLabel(LANG.formatStr("Télécharger \'%s\'",["DTBook",],),),new RES_ACTIONS.DownloadRes("?V=dtmodel","-freeView-\\portal\\import\\prc\\xml\\xml.processing;115-dwn",).setLabel(LANG.formatStr("Télécharger \'%s\'",["DTModel",],),),],),)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new ACTIONS.ActionMenuDep().setLabel("Ouvrir",).setDescription(Desk.electron ? "Ouvrir dans votre navigateur" : "Ouvrir dans un onglet",).setIcon(resType.reg.env.resolver.resolvePath(":skin:store/views/resViews/openInNewTab.svg"),).setActions([new RES_ACTIONS.OpenViewRes("",null,"xml-open",).setLabel(LANG.formatStr("Ouvrir \'%s\'",["Source",],),),new RES_ACTIONS.OpenViewRes("?V=dtbook",null,"-freeView-\\portal\\import\\prc\\xml\\xml.processing;114-open",).setLabel(LANG.formatStr("Ouvrir \'%s\'",["DTBook",],),),new RES_ACTIONS.OpenViewRes("?V=dtmodel",null,"-freeView-\\portal\\import\\prc\\xml\\xml.processing;115-open",).setLabel(LANG.formatStr("Ouvrir \'%s\'",["DTModel",],),),],),)
resType.addEditView("editMetas",new RES_VIEW_AREAS.ResFormMetasArea("editMetas",).setBody(new AREAS.StringInputArea("sourceXMLDoctype","text",).setLabel("Source",).setRequired(false,),new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,),new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,),new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,),new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,),new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,),new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,),new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",),new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,),new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,),new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,),new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,),new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,),new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,),new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,),new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,),new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,),new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,),new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,),new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,),new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,),new AREAS.InputArea("dateEnd","date",).setLabel("Date de publication en médiathèque",).setRequired(false,),new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",),new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",),),)
resType.addEditView("editIdent",new RES_VIEW_AREAS.ResIdentFieldSetArea().setCustomFields([new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(true,).setPattern(".+",),],
(metasInOut, resIdentFields)=>{

try{metasInOut.path =`/FR-AVH-${metasInOut.isbn}`}catch(e){}
											}
,true,true,),)
resType.reg.addToList("md:contentres:xml:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("actions:depot:resMainView:edit","importRes",21,null,)
resType.reg.addToList("md:contentres:xml:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Archiver",).setPrcTarget("archived",),)
resType = universe.resTypes.addPrcResType(new ResType(reg,"epub3",).override("prcLabel","EPUB 3",),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResNoContentArea().setActionsLists(["md:viewmain:epub3:acts","md:contentres:epub3:acts",],),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("isbn",).setArea(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(true,).setPattern(".+",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("uid",).setArea(new AREAS.StringInputArea("uid","text",).setLabel("UID",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("title",).setArea(new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("author",).setArea(new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("publisher",).setArea(new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("comment",).setArea(new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("pages",).setArea(new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("source",).setArea(new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statut",).setArea(new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutAud",).setArea(new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutBrl",).setArea(new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("illustrations",).setArea(new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("collection",).setArea(new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalFilename",).setArea(new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalLanguage",).setArea(new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("typeOuvrage",).setArea(new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorAud",).setArea(new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorBrl",).setArea(new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorPivot",).setArea(new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutEmb",).setArea(new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("fileName",).setArea(new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dtdDetail",).setArea(new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateEnd",).setArea(new AREAS.InputArea("dateEnd","time",).setLabel("Date de publication en médiathèque",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateParution",).setArea(new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleAbrege",).setArea(new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleIntegral",).setArea(new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("timestampStatut",).setArea(new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,new ACTIONS.ActionMenuDep().setLabel("Télécharger",).setIcon(resType.reg.env.resolver.resolvePath(":skin:store/views/resViews/downloadRes.svg"),).setActions([new RES_ACTIONS.DownloadRes("","xml-dwn",).setLabel(LANG.formatStr("Télécharger \'%s\'",["Source",],),),new RES_ACTIONS.DownloadRes("?V=dtmodel","-freeView-\\portal\\import\\prc\\epub3\\epub3.processing;110-dwn",).setLabel(LANG.formatStr("Télécharger \'%s\'",["DTModel",],),),],),)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new ACTIONS.ActionMenuDep().setLabel("Ouvrir",).setDescription(Desk.electron ? "Ouvrir dans votre navigateur" : "Ouvrir dans un onglet",).setIcon(resType.reg.env.resolver.resolvePath(":skin:store/views/resViews/openInNewTab.svg"),).setActions([new RES_ACTIONS.OpenViewRes("",null,"xml-open",).setLabel(LANG.formatStr("Ouvrir \'%s\'",["Source",],),),new RES_ACTIONS.OpenViewRes("?V=dtmodel",null,"-freeView-\\portal\\import\\prc\\epub3\\epub3.processing;110-open",).setLabel(LANG.formatStr("Ouvrir \'%s\'",["DTModel",],),),],),)
resType.addEditView("editMetas",new RES_VIEW_AREAS.ResFormMetasArea("editMetas",).setBody(new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,),new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,),new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,),new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,),new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,),new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,),new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",),new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,),new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,),new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,),new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,),new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,),new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,),new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,),new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,),new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,),new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,),new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,),new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,),new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,),new AREAS.InputArea("dateEnd","date",).setLabel("Date de publication en médiathèque",).setRequired(false,),new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",),new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",),),)
resType.addEditView("editIdent",new RES_VIEW_AREAS.ResIdentFieldSetArea().setCustomFields([new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(true,).setPattern(".+",),],
(metasInOut, resIdentFields)=>{

try{metasInOut.path =`/FR-AVH-${metasInOut.isbn}`}catch(e){}
											}
,true,true,),)
resType.reg.addToList("md:contentres:epub3:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("actions:depot:resMainView:edit","importRes",21,null,)
resType.reg.addToList("md:contentres:epub3:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Archiver",).setPrcTarget("archived",),)
resType = universe.resTypes.addPrcResType(new ResType(reg,"data",).override("prcLabel","Data",).override("prcIsNoContent",true,),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResNoContentArea().setActionsLists(["md:viewmain:data:acts","md:contentres:data:acts",],),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("isbn",).setArea(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(false,).setPattern(".+",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("uid",).setArea(new AREAS.StringInputArea("uid","text",).setLabel("UID",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("title",).setArea(new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("author",).setArea(new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("publisher",).setArea(new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("comment",).setArea(new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("pages",).setArea(new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("source",).setArea(new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("collection",).setArea(new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("illustrations",).setArea(new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statut",).setArea(new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutAud",).setArea(new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutBrl",).setArea(new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutEmb",).setArea(new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalFilename",).setArea(new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalLanguage",).setArea(new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("typeOuvrage",).setArea(new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorAud",).setArea(new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorBrl",).setArea(new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorPivot",).setArea(new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("fileName",).setArea(new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dtdDetail",).setArea(new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateEnd",).setArea(new AREAS.InputArea("dateEnd","time",).setLabel("Date de publication en médiathèque",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateParution",).setArea(new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleAbrege",).setArea(new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleIntegral",).setArea(new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("timestampStatut",).setArea(new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,null,)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new RES_ACTIONS.OpenViewRes("",null,"1-open",),)
resType.addEditView("editMetas",new RES_VIEW_AREAS.ResFormMetasArea("editMetas",).setBody(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(false,).setPattern(".+",),new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,),new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,),new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,),new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,),new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,),new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,),new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,),new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,),new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",),new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,),new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,),new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,),new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,),new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,),new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,),new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,),new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,),new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,),new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,),new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,),new AREAS.InputArea("dateEnd","date",).setLabel("Date de publication en médiathèque",).setRequired(false,),new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",),new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",),),)
resType.addEditView("editIdent",new RES_VIEW_AREAS.ResIdentFieldSetArea().setCustomFields([],
(metasInOut, resIdentFields)=>{

try{metasInOut.path =`/${metasInOut.uid}`}catch(e){}
											}
,true,true,),)
resType.reg.addToList("md:contentres:data:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("actions:depot:resMainView:edit","importRes",21,null,)
resType.reg.addToList("md:contentres:data:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Importer un fichier XML",).setPrcTarget("xml",),)
resType = universe.resTypes.addPrcResType(new ResType(reg,"archived",).override("prcLabel","Archivé",).override("prcNoCreator",true,).override("prcIsNoContent",true,),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResNoContentArea().setActionsLists(["md:viewmain:archived:acts","md:contentres:archived:acts",],),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("isbn",).setArea(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(false,).setPattern(".+",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("uid",).setArea(new AREAS.StringInputArea("uid","text",).setLabel("UID",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("title",).setArea(new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("author",).setArea(new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("publisher",).setArea(new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("comment",).setArea(new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("pages",).setArea(new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("source",).setArea(new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("collection",).setArea(new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("illustrations",).setArea(new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statut",).setArea(new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutAud",).setArea(new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutBrl",).setArea(new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutEmb",).setArea(new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalFilename",).setArea(new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalLanguage",).setArea(new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("typeOuvrage",).setArea(new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorAud",).setArea(new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorBrl",).setArea(new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorPivot",).setArea(new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("fileName",).setArea(new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dtdDetail",).setArea(new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateEnd",).setArea(new AREAS.InputArea("dateEnd","time",).setLabel("Date de publication en médiathèque",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateParution",).setArea(new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleAbrege",).setArea(new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleIntegral",).setArea(new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("timestampStatut",).setArea(new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dureeAud",).setArea(new AREAS.StringInputArea("dureeAud","text",).setLabel("Durée Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,null,)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new RES_ACTIONS.OpenViewRes("",null,"1-open",),)
resType.addEditView("editMetas",new RES_VIEW_AREAS.ResFormMetasArea("editMetas",).setBody(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(false,).setPattern(".+",),new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,),new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,),new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,),new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,),new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,),new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,),new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,),new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,),new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",),new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,),new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,),new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,),new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,),new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,),new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,),new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,),new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,),new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,),new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,),new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,),new AREAS.InputArea("dateEnd","date",).setLabel("Date de publication en médiathèque",).setRequired(false,),new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",),new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",),new AREAS.StringInputArea("dureeAud","text",).setLabel("Durée Audio",).setRequired(false,),),)
resType.addEditView("editIdent",new RES_VIEW_AREAS.ResIdentFieldSetArea().setCustomFields([],
(metasInOut, resIdentFields)=>{

try{metasInOut.path =`/${metasInOut.uid}`}catch(e){}
											}
,true,true,),)
resType.reg.addToList("md:contentres:archived:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("actions:depot:resMainView:edit","importRes",21,null,)
resType.reg.addToList("md:contentres:archived:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Ré-ouvrir l\'ouvrage archivé",).setPrcTarget("reopened",),)
resType = universe.resTypes.addPrcResType(new ResType(reg,"reopened",).override("prcLabel","Archivé - réouvert",).override("prcNoCreator",true,).override("prcIsNoContent",true,),)
resType.addView("main",new RES_VIEW_AREAS.ResMainArea(reg,).setContent(new RES_VIEW_AREAS.ResNoContentArea().setActionsLists(["md:viewmain:reopened:acts","md:contentres:reopened:acts",],),),)
resType.addView("infos",new RES_VIEW_AREAS.ResInfoArea().addDefaultLines().addLines(new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("isbn",).setArea(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(false,).setPattern(".+",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("uid",).setArea(new AREAS.StringInputArea("uid","text",).setLabel("UID",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("title",).setArea(new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("author",).setArea(new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("publisher",).setArea(new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("comment",).setArea(new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("pages",).setArea(new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("source",).setArea(new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("collection",).setArea(new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("illustrations",).setArea(new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statut",).setArea(new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutAud",).setArea(new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutBrl",).setArea(new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("statutEmb",).setArea(new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalFilename",).setArea(new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("originalLanguage",).setArea(new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("typeOuvrage",).setArea(new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorAud",).setArea(new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorBrl",).setArea(new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("authorPivot",).setArea(new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("fileName",).setArea(new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dtdDetail",).setArea(new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateEnd",).setArea(new AREAS.InputArea("dateEnd","time",).setLabel("Date de publication en médiathèque",).setRequired(false,).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("dateParution",).setArea(new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleAbrege",).setArea(new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("nbPagesBrailleIntegral",).setArea(new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),new RES_VIEW_AREAS.RESINFO.ResFormAreaLine("timestampStatut",).setArea(new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",).setReadOnly(true,).setEnabled(false,),),),)
resType.reg.addToList("actions:depot:resMainView:infos","download",21,null,)
resType.reg.addToList("actions:depot:resMainView:infos","openViewRes",21,new RES_ACTIONS.OpenViewRes("",null,"1-open",),)
resType.addEditView("editMetas",new RES_VIEW_AREAS.ResFormMetasArea("editMetas",).setBody(new AREAS.StringInputArea("isbn","text",).setLabel("ISBN",).setRequired(false,).setPattern(".+",),new AREAS.StringInputArea("title","text",).setLabel("Titre",).setRequired(false,),new AREAS.StringInputArea("author","text",).setLabel("Auteur",).setRequired(false,),new AREAS.StringInputArea("publisher","text",).setLabel("Éditeur",).setRequired(false,),new AREAS.StringInputArea("comment","text",).setLabel("Commentaire",).setRequired(false,),new AREAS.StringInputArea("pages","text",).setLabel("Nombre de pages",).setRequired(false,),new AREAS.StringInputArea("source","text",).setLabel("Format d\'origine",).setRequired(false,),new AREAS.StringInputArea("collection","text",).setLabel("Collection",).setRequired(false,),new AREAS.StringInputArea("illustrations","text",).setLabel("Illustration",).setRequired(false,),new AREAS.SelectArea("statut","time",).setMultiple(false,).setDataset({PLATON_PENDING:{label:"A demander à Platon",},PLATON_AWAITING:{label:"En attente de Platon",},TO_CONVERT:{label:"A convertir",},PROCESSING:{label:"En cours",},EXPORTED:{label:"Exporté",},DONE:{label:"OK Médiathèque",},STAND_BY:{label:"En attente",},ARCHIVED:{label:"Archivé",},REOPENED:{label:"Réouvert",},},).setLabel("Statut de production",).setDescription("Statut du titre dans la chaine de production",).setRequired(false,).setDefaultValue("PLATON_PENDING",),new AREAS.StringInputArea("statutAud","text",).setLabel("Statut Audio",).setRequired(false,),new AREAS.StringInputArea("statutBrl","text",).setLabel("Statut Braille",).setRequired(false,),new AREAS.StringInputArea("statutEmb","text",).setLabel("Statut Embossage",).setRequired(false,),new AREAS.StringInputArea("originalFilename","text",).setLabel("Nom du fichier source",).setRequired(false,),new AREAS.StringInputArea("originalLanguage","text",).setLabel("Langue d\'origine",).setRequired(false,),new AREAS.StringInputArea("typeOuvrage","text",).setLabel("Type d\'ouvrage",).setRequired(false,),new AREAS.StringInputArea("authorAud","text",).setLabel("Auteur Audio",).setRequired(false,),new AREAS.StringInputArea("authorBrl","text",).setLabel("Auteur Braille",).setRequired(false,),new AREAS.StringInputArea("authorPivot","text",).setLabel("Auteur Pivot",).setRequired(false,),new AREAS.StringInputArea("fileName","text",).setLabel("Nom de fichier",).setRequired(false,),new AREAS.StringInputArea("dtdDetail","text",).setLabel("Détail DTD (Doctype)",).setRequired(false,),new AREAS.InputArea("dateEnd","date",).setLabel("Date de publication en médiathèque",).setRequired(false,),new AREAS.StringInputArea("dateParution","text",).setLabel("Date de parution",).setRequired(false,).setPattern("(\\d\\d\\d\\d(-\\d\\d)?)?",),new AREAS.InputArea("nbPagesBrailleAbrege","number",).setLabel("Nombre de pages - Braille abrégé",).setDescription("Nombre de pages pour le braille abrégé",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("nbPagesBrailleIntegral","number",).setLabel("Nombre de pages - Braille intégral",).setDescription("Nombre de pages pour le braille intégral",).setRequired(false,).setDefaultValue("0",),new AREAS.InputArea("timestampStatut","number",).setLabel("Horodatage de statut",).setDescription("Horodatage du changement de statut de l\'entrée",).setRequired(false,).setDefaultValue("0",),),)
resType.addEditView("editIdent",new RES_VIEW_AREAS.ResIdentFieldSetArea().setCustomFields([],
(metasInOut, resIdentFields)=>{

try{metasInOut.path =`/${metasInOut.uid}`}catch(e){}
											}
,true,true,),)
resType.reg.addToList("md:contentres:reopened:acts","importRes",21,new RES_ACTIONS.ImportRes(),)
resType.reg.addToList("actions:depot:resMainView:edit","importRes",21,null,)
resType.reg.addToList("md:contentres:reopened:acts","transforms",21,new RES_ACTIONS.SwitchProcessing().setLabel("Archiver",).setPrcTarget("archived",),)
universe.resTypes.initDefaults(reg,)
					authReg.addToList("plg:packs:universes", "import", 101, universe);
				
					authReg.addToList("plg:jobs:universes", "import", 101, universe);
				
					authReg.addToList("plg:logs:entries", "scenari", 101,
						{
							universe:universe,
							name:"Studio Paon 1 : Studio Paon",
						});
				}
